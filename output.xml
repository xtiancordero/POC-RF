<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2.1 (Python 3.7.3 on win32)" generated="20210408 19:04:27.567" rpa="false">
<suite id="s1" name="Transform Arr" source="C:\Git_Evergreen\transform_arr">
<suite id="s1-s1" name="TestSuite" source="C:\Git_Evergreen\transform_arr\TestSuite">
<suite id="s1-s1-s1" name="01 EndToEnd" source="C:\Git_Evergreen\transform_arr\TestSuite\01_EndToEnd">
<suite id="s1-s1-s1-s1" name="ARR" source="C:\Git_Evergreen\transform_arr\TestSuite\01_EndToEnd\ARR">
<suite id="s1-s1-s1-s1-s1" name="SC03 ARR LiborConversion" source="C:\Git_Evergreen\transform_arr\TestSuite\01_EndToEnd\ARR\SC03_ARR_LiborConversion.robot">
<test id="s1-s1-s1-s1-s1-t1" name="TC01 - Validate ARR Pricing Option at Deal Level and Add Libor Option">
<kw name="Set Automation Suite" library="ReportMaker_Keywords" type="setup">
<doc>This keyword is used to setup test execution document directory, test name and test summary.
@author: cmcordero 15MAR2021 - initial create</doc>
<kw name="Set Report Header" library="ReportMaker">
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:04:35.397" endtime="20210408 19:04:35.416"></status>
</kw>
<kw name="Set Test summary" library="ReportMaker_Keywords">
<doc>This keyword is used to add test case [Documentation] as test summary into test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>${TEST DOCUMENTATION}</arg>
</arguments>
<kw name="Put Text" library="ReportMaker">
<arguments>
<arg>${TEST DOCUMENTATION}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:04:35.549" endtime="20210408 19:04:35.550"></status>
</kw>
<status status="PASS" starttime="20210408 19:04:35.492" endtime="20210408 19:04:35.550"></status>
</kw>
<kw name="Set Directory" library="ReportMaker_Keywords">
<doc>This keyword is used to set directory of test execution document and screenshots.
@author: cmcordero 15MAR2021 - initial create</doc>
<kw name="Convert date to timestamp" library="ReportMaker_Keywords">
<doc>This keyword is used to convert the current date and time into usable timestamp.
@author: cmcordero 15MAR2021 - initial create</doc>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210408 19:04:35.729" level="INFO">${date} = 2021-04-08 19:04:35.729</msg>
<status status="PASS" starttime="20210408 19:04:35.728" endtime="20210408 19:04:35.729"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${date}</arg>
<arg>:</arg>
<arg>-</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<msg timestamp="20210408 19:04:35.784" level="INFO">${timestamp} = 2021-04-08 19-04-35.729</msg>
<status status="PASS" starttime="20210408 19:04:35.784" endtime="20210408 19:04:35.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${timestamp}</arg>
</arguments>
<msg timestamp="20210408 19:04:35.844" level="INFO">${timestamp} = 2021-04-08 19-04-35.729</msg>
<status status="PASS" starttime="20210408 19:04:35.843" endtime="20210408 19:04:35.844"></status>
</kw>
<status status="PASS" starttime="20210408 19:04:35.672" endtime="20210408 19:04:35.844"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${screenshot_Path}\\${Application}\\${TESTNAME}___${timestamp}</arg>
</arguments>
<assign>
<var>${filePath}</var>
</assign>
<msg timestamp="20210408 19:04:35.900" level="INFO">${filePath} = C:\Git_Evergreen\transform_arr\Results\LoanIQ\TC01 - Validate ARR Pricing Option at Deal Level and Add Libor Option___2021-04-08 19-04-35.729</msg>
<status status="PASS" starttime="20210408 19:04:35.899" endtime="20210408 19:04:35.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${getFilePath}</arg>
<arg>${filePath}</arg>
</arguments>
<msg timestamp="20210408 19:04:36.024" level="INFO">${getFilePath} = C:\Git_Evergreen\transform_arr\Results\LoanIQ\TC01 - Validate ARR Pricing Option at Deal Level and Add Libor Option___2021-04-08 19-04-35.729</msg>
<status status="PASS" starttime="20210408 19:04:35.963" endtime="20210408 19:04:36.025"></status>
</kw>
<kw name="Create Directory" library="OperatingSystem">
<doc>Creates the specified directory.</doc>
<arguments>
<arg>${getFilePath}</arg>
</arguments>
<msg timestamp="20210408 19:04:36.081" level="INFO" html="yes">Created directory '&lt;a href="file://C:\Git_Evergreen\transform_arr\Results\LoanIQ\TC01 - Validate ARR Pricing Option at Deal Level and Add Libor Option___2021-04-08 19-04-35.729"&gt;C:\Git_Evergreen\transform_arr\Results\LoanIQ\TC01 - Validate ARR Pricing Option at Deal Level and Add Libor Option___2021-04-08 19-04-35.729&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20210408 19:04:36.078" endtime="20210408 19:04:36.082"></status>
</kw>
<kw name="Set Screenshot Directory" library="Screenshot">
<doc>Sets the directory where screenshots are saved.</doc>
<arguments>
<arg>${getFilePath}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:04:36.138" endtime="20210408 19:04:36.189"></status>
</kw>
<status status="PASS" starttime="20210408 19:04:35.613" endtime="20210408 19:04:36.189"></status>
</kw>
<status status="PASS" starttime="20210408 19:04:35.194" endtime="20210408 19:04:36.189"></status>
</kw>
<kw name="Mx Execute Template With Multiple Data" library="GenericLib">
<doc>| Usage |
 This keyword is used to run template with multiple data.</doc>
<arguments>
<arg>Create a Deal</arg>
<arg>${ExcelPath}</arg>
<arg>${Deal_1}</arg>
<arg>CRED01_DealSetup</arg>
</arguments>
<kw name="Create a Deal" library="CRED01_DealSetUpWithoutOrigination">
<doc>This keyword is used to Create a Deal
@author: jloretiz 03NOV2021 - initial create</doc>
<arguments>
<arg>OrderedDict([('rowid', '1'), ('Test_Case', 'ARR_Scenario3'), ('Deal_NamePrefix', 'ARR_LIBORSC3'), ('Deal_AliasPrefix', 'SC3'), ('Deal_Name', 'ARR_LIBORSC308042021184457AIJ'), ('Deal_Alias', 'SC308042021184500NLW'), ('Deal_EffectiveDate', '17-Oct-2016'), ('Deal_AgreementDate', '17-Oct-2016'), ('Deal_AdjustmentSettings', 'Present'), ('Deal_AgreementDateAdjustment', '30'), ('Deal_EffectiveDateAdjustment', '30'), ('Deal_Currency', 'USD'), ('Deal_DepartmentCode', 'NAM'), ('Deal_Department', 'North America'), ('Deal_SalesGroup', 'Sales Group 1'), ('Deal_AternateID', ''), ('Deal_ANSIID', ''), ('Deal_IsSoleLender', 'OFF'), ('Deal_ClassificationCode', 'GCP'), ('Deal_ClassificationDesc', 'General Corp Purpose'), ('Deal_AdminAgent', 'BNS CANADA CORPORATE BANKING'), ('Deal_AdminAgentLocation', 'Toronto, Canada'), ('DealAdminAgent_SGAlias', 'BC'), ('DealAdminAgent_PreferredRI', ''), ('DealAdminAgent_ServicingGroup', 'CANADA CORPORATE BANKING'), ('Deal_ProposedCmt', '100,000,000.00'), ('Deal_EarlyDiscussion', 'OFF'), ('Deal_ExpenseCode', '0394703947'), ('Deal_HolidayCalendarRemove', 'Canadian'), ('Deal_HolidayCalendarAdd', 'US Holiday Calendar (New York)'), ('Deal_IsPricingOptionARR', 'TRUE'), ('Deal_PricingOption_CCY', ''), ('Deal_PricingOption', 'SOFR Daily Compounding W OPS Not Overridable'), ('PricingOption_IsARR', 'False'), ('PricingOption_InitialFractionRate', 'Actual'), ('PricingOption_RoundingDecimal', 'Actual'), ('PricingOption_NonBusinessDayRule', 'Modified Following Business Day'), ('PricingOption_BillNoOfDays', '0'), ('PricingOption_MatrixChangeAppMthd', 'Effective date of change'), ('PricingOption_RateChangeAppMthd', 'Effective date of change'), ('PricingOption_RACInitialFractionRate', ''), ('PricingOption_RACRoundingDecimal', ''), ('PricingOption_RACRoundingMethod', ''), ('PricingOption_PercentOfRateFormulaUsage', '(Base + Spread + RAC) * PCT'), ('PricingOption_RepricingNonBusinessDayRule', 'Modified Following Business Day'), ('PricingOption_FeeOnLenderShareFunding', ''), ('PricingOption_InterestDueUponPrincipalPayment', 'OFF'), ('PricingOption_InterestDueUponRepricing', ''), ('PricingOption_ReferenceBanksApply', 'OFF'), ('PricingOption_IntentNoticeDaysInAdvance', '3'), ('PricingOption_IntentNoticeTime', '12'), ('PricingOption_12HrPeriodOption', ''), ('PricingOption_MaximumDrawAmount', ''), ('PricingOption_MinimumDrawAmount', ''), ('PricingOption_MinimumPaymentAmount', ''), ('PricingOption_MinimumAmountMultiples', ''), ('PricingOption_BillBorrower', 'YES'), ('PricingOption_ARRObservationPeriod', 'ON'), ('PricingOption_LookbackDays', '5'), ('PricingOption_LockoutDays', '0'), ('PricingOption_RateBasis', 'Actual/360'), ('PricingOption_CalculationMethod', 'Daily Rate With Compounding')])</arg>
</arguments>
<kw name="Report Sub Header" library="ReportMaker_Keywords">
<doc>This keyword is used to add given argument as sub header in test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Create a New Deal</arg>
</arguments>
<kw name="Set Report Sub Header" library="ReportMaker">
<arguments>
<arg>${SubHeader}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:04:36.392" endtime="20210408 19:04:36.395"></status>
</kw>
<status status="PASS" starttime="20210408 19:04:36.338" endtime="20210408 19:04:36.395"></status>
</kw>
<kw name="Generate Deal Name and Alias" library="GenericKeywords">
<doc>This keyword generates deal name and alias on LIQ.
@author: fmamaril
@update: hstone Updated rowid argument to be optional</doc>
<arguments>
<arg>&amp;{ExcelPath}[Deal_NamePrefix]</arg>
<arg>&amp;{ExcelPath}[Deal_AliasPrefix]</arg>
<arg>&amp;{ExcelPath}[rowid]</arg>
</arguments>
<assign>
<var>${Deal_Name}</var>
<var>${Deal_Alias}</var>
</assign>
<kw name="Auto Generate Name Test Data" library="GenericKeywords">
<doc>This keywod concatenates current date with given name as a uniques test data.
@author: fmamaril
@update: ritragel 30APR2019 Updated logging of the generated dataname
@update: sahalder 25JUN2020 Added keyword pre-processing steps
@update: clanding 30JUL2020 Fix tabbing on FOR loop</doc>
<arguments>
<arg>${Deal_NamePrefix}</arg>
</arguments>
<assign>
<var>${Deal_Name}</var>
</assign>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sNameTestData}</arg>
</arguments>
<assign>
<var>${NameTestData}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:04:36.776" endtime="20210408 19:04:36.777"></status>
</kw>
<msg timestamp="20210408 19:04:36.777" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:04:36.774" endtime="20210408 19:04:36.777"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:04:37.105" level="INFO">${List_Argument_Excel_Value} = ['ARR_LIBORSC3']</msg>
<status status="PASS" starttime="20210408 19:04:37.104" endtime="20210408 19:04:37.105"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:04:37.162" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:04:37.162" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:04:37.161" endtime="20210408 19:04:37.162"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:04:37.217" level="INFO">${Arg_User_Input} = ARR_LIBORSC3</msg>
<status status="PASS" starttime="20210408 19:04:37.216" endtime="20210408 19:04:37.217"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:04:37.271" level="INFO">${Arg_User_Input} = ARR_LIBORSC3</msg>
<status status="PASS" starttime="20210408 19:04:37.271" endtime="20210408 19:04:37.272"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:04:37.334" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:04:37.334" endtime="20210408 19:04:37.334"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:04:37.394" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:04:37.393" endtime="20210408 19:04:37.394"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:04:37.460" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:04:37.459" endtime="20210408 19:04:37.460"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:04:37.531" endtime="20210408 19:04:37.532"></status>
</kw>
<msg timestamp="20210408 19:04:37.532" level="INFO">${Extracted_Argument_Value} = ARR_LIBORSC3</msg>
<status status="PASS" starttime="20210408 19:04:37.529" endtime="20210408 19:04:37.532"></status>
</kw>
<status status="PASS" starttime="20210408 19:04:37.021" endtime="20210408 19:04:37.532"></status>
</kw>
<msg timestamp="20210408 19:04:37.533" level="INFO">${Extracted_Argument_Value} = ARR_LIBORSC3</msg>
<status status="PASS" starttime="20210408 19:04:36.861" endtime="20210408 19:04:37.533"></status>
</kw>
<msg timestamp="20210408 19:04:37.533" level="INFO">${NameTestData} = ARR_LIBORSC3</msg>
<status status="PASS" starttime="20210408 19:04:36.695" endtime="20210408 19:04:37.533"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sTotalNumberToBeGenerated}</arg>
</arguments>
<assign>
<var>${TotalNumberToBeGenerated}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:04:37.768" endtime="20210408 19:04:37.768"></status>
</kw>
<msg timestamp="20210408 19:04:37.769" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:04:37.766" endtime="20210408 19:04:37.769"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:04:38.001" level="INFO">${List_Argument_Excel_Value} = ['1']</msg>
<status status="PASS" starttime="20210408 19:04:38.000" endtime="20210408 19:04:38.001"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:04:38.057" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:04:38.057" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:04:38.056" endtime="20210408 19:04:38.057"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:04:38.111" level="INFO">${Arg_User_Input} = 1</msg>
<status status="PASS" starttime="20210408 19:04:38.111" endtime="20210408 19:04:38.112"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:04:38.166" level="INFO">${Arg_User_Input} = 1</msg>
<status status="PASS" starttime="20210408 19:04:38.166" endtime="20210408 19:04:38.167"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:04:38.221" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:04:38.220" endtime="20210408 19:04:38.221"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:04:38.273" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:04:38.272" endtime="20210408 19:04:38.273"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:04:38.331" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:04:38.331" endtime="20210408 19:04:38.332"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:04:38.392" endtime="20210408 19:04:38.393"></status>
</kw>
<msg timestamp="20210408 19:04:38.393" level="INFO">${Extracted_Argument_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:04:38.390" endtime="20210408 19:04:38.393"></status>
</kw>
<status status="PASS" starttime="20210408 19:04:37.946" endtime="20210408 19:04:38.393"></status>
</kw>
<msg timestamp="20210408 19:04:38.393" level="INFO">${Extracted_Argument_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:04:37.824" endtime="20210408 19:04:38.394"></status>
</kw>
<msg timestamp="20210408 19:04:38.394" level="INFO">${TotalNumberToBeGenerated} = 1</msg>
<status status="PASS" starttime="20210408 19:04:37.708" endtime="20210408 19:04:38.394"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${GeneratedNames}</var>
</assign>
<msg timestamp="20210408 19:04:38.570" level="INFO">${GeneratedNames} = []</msg>
<status status="PASS" starttime="20210408 19:04:38.569" endtime="20210408 19:04:38.570"></status>
</kw>
<kw name="${INDEX} IN RANGE [ ${TotalNumberToBeGenerated} ]" type="for">
<kw name="${INDEX} = 0" type="foritem">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>3</arg>
<arg>[UPPER]</arg>
</arguments>
<assign>
<var>${random_string}</var>
</assign>
<msg timestamp="20210408 19:04:38.684" level="INFO">${random_string} = PNT</msg>
<status status="PASS" starttime="20210408 19:04:38.683" endtime="20210408 19:04:38.684"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=%d%m%Y%H%M%S</arg>
</arguments>
<assign>
<var>${datetime.microsecond}</var>
</assign>
<msg timestamp="20210408 19:04:38.795" level="INFO">${datetime.microsecond} = 08042021190438</msg>
<status status="PASS" starttime="20210408 19:04:38.741" endtime="20210408 19:04:38.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${datetime.microsecond}</arg>
</arguments>
<msg timestamp="20210408 19:04:38.851" level="INFO">08042021190438</msg>
<status status="PASS" starttime="20210408 19:04:38.850" endtime="20210408 19:04:38.851"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${NameTestData}</arg>
<arg>${datetime.microsecond}${random_string}</arg>
</arguments>
<assign>
<var>${GeneratedName}</var>
</assign>
<msg timestamp="20210408 19:04:38.906" level="INFO">${GeneratedName} = ARR_LIBORSC308042021190438PNT</msg>
<status status="PASS" starttime="20210408 19:04:38.906" endtime="20210408 19:04:38.907"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${GeneratedNames}</arg>
<arg>${GeneratedName}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:04:38.967" endtime="20210408 19:04:38.967"></status>
</kw>
<status status="PASS" starttime="20210408 19:04:38.626" endtime="20210408 19:04:38.967"></status>
</kw>
<status status="PASS" starttime="20210408 19:04:38.625" endtime="20210408 19:04:38.968"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${GeneratedNames}</arg>
</arguments>
<assign>
<var>${GeneratedName}</var>
</assign>
<msg timestamp="20210408 19:04:39.028" level="INFO">${GeneratedName} = ['ARR_LIBORSC308042021190438PNT']</msg>
<status status="PASS" starttime="20210408 19:04:39.027" endtime="20210408 19:04:39.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${GeneratedName}</arg>
</arguments>
<msg timestamp="20210408 19:04:39.081" level="INFO">['ARR_LIBORSC308042021190438PNT']</msg>
<status status="PASS" starttime="20210408 19:04:39.081" endtime="20210408 19:04:39.081"></status>
</kw>
<msg timestamp="20210408 19:04:39.082" level="INFO">${Deal_Name} = ARR_LIBORSC308042021190438PNT</msg>
<status status="PASS" starttime="20210408 19:04:36.504" endtime="20210408 19:04:39.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Deal Name: ${Deal_Name}</arg>
</arguments>
<msg timestamp="20210408 19:04:39.145" level="INFO">Deal Name: ARR_LIBORSC308042021190438PNT</msg>
<status status="PASS" starttime="20210408 19:04:39.145" endtime="20210408 19:04:39.146"></status>
</kw>
<kw name="Auto Generate Name Test Data" library="GenericKeywords">
<doc>This keywod concatenates current date with given name as a uniques test data.
@author: fmamaril
@update: ritragel 30APR2019 Updated logging of the generated dataname
@update: sahalder 25JUN2020 Added keyword pre-processing steps
@update: clanding 30JUL2020 Fix tabbing on FOR loop</doc>
<arguments>
<arg>${Deal_AliasPrefix}</arg>
</arguments>
<assign>
<var>${Deal_Alias}</var>
</assign>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sNameTestData}</arg>
</arguments>
<assign>
<var>${NameTestData}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:04:39.422" endtime="20210408 19:04:39.422"></status>
</kw>
<msg timestamp="20210408 19:04:39.423" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:04:39.420" endtime="20210408 19:04:39.423"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:04:39.655" level="INFO">${List_Argument_Excel_Value} = ['SC3']</msg>
<status status="PASS" starttime="20210408 19:04:39.654" endtime="20210408 19:04:39.655"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:04:39.713" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:04:39.714" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:04:39.713" endtime="20210408 19:04:39.714"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:04:39.787" level="INFO">${Arg_User_Input} = SC3</msg>
<status status="PASS" starttime="20210408 19:04:39.786" endtime="20210408 19:04:39.787"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:04:39.864" level="INFO">${Arg_User_Input} = SC3</msg>
<status status="PASS" starttime="20210408 19:04:39.863" endtime="20210408 19:04:39.864"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:04:39.948" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:04:39.948" endtime="20210408 19:04:39.949"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:04:40.029" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:04:40.029" endtime="20210408 19:04:40.030"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:04:40.107" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:04:40.106" endtime="20210408 19:04:40.107"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:04:40.185" endtime="20210408 19:04:40.186"></status>
</kw>
<msg timestamp="20210408 19:04:40.186" level="INFO">${Extracted_Argument_Value} = SC3</msg>
<status status="PASS" starttime="20210408 19:04:40.184" endtime="20210408 19:04:40.186"></status>
</kw>
<status status="PASS" starttime="20210408 19:04:39.596" endtime="20210408 19:04:40.187"></status>
</kw>
<msg timestamp="20210408 19:04:40.187" level="INFO">${Extracted_Argument_Value} = SC3</msg>
<status status="PASS" starttime="20210408 19:04:39.483" endtime="20210408 19:04:40.187"></status>
</kw>
<msg timestamp="20210408 19:04:40.187" level="INFO">${NameTestData} = SC3</msg>
<status status="PASS" starttime="20210408 19:04:39.365" endtime="20210408 19:04:40.187"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sTotalNumberToBeGenerated}</arg>
</arguments>
<assign>
<var>${TotalNumberToBeGenerated}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:04:40.429" endtime="20210408 19:04:40.429"></status>
</kw>
<msg timestamp="20210408 19:04:40.430" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:04:40.427" endtime="20210408 19:04:40.430"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:04:40.655" level="INFO">${List_Argument_Excel_Value} = ['1']</msg>
<status status="PASS" starttime="20210408 19:04:40.655" endtime="20210408 19:04:40.655"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:04:40.710" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:04:40.710" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:04:40.709" endtime="20210408 19:04:40.710"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:04:40.776" level="INFO">${Arg_User_Input} = 1</msg>
<status status="PASS" starttime="20210408 19:04:40.776" endtime="20210408 19:04:40.776"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:04:40.843" level="INFO">${Arg_User_Input} = 1</msg>
<status status="PASS" starttime="20210408 19:04:40.842" endtime="20210408 19:04:40.844"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:04:40.906" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:04:40.905" endtime="20210408 19:04:40.906"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:04:40.984" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:04:40.983" endtime="20210408 19:04:40.984"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:04:41.063" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:04:41.063" endtime="20210408 19:04:41.064"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:04:41.240" endtime="20210408 19:04:41.241"></status>
</kw>
<msg timestamp="20210408 19:04:41.241" level="INFO">${Extracted_Argument_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:04:41.238" endtime="20210408 19:04:41.241"></status>
</kw>
<status status="PASS" starttime="20210408 19:04:40.595" endtime="20210408 19:04:41.242"></status>
</kw>
<msg timestamp="20210408 19:04:41.242" level="INFO">${Extracted_Argument_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:04:40.486" endtime="20210408 19:04:41.242"></status>
</kw>
<msg timestamp="20210408 19:04:41.242" level="INFO">${TotalNumberToBeGenerated} = 1</msg>
<status status="PASS" starttime="20210408 19:04:40.370" endtime="20210408 19:04:41.242"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${GeneratedNames}</var>
</assign>
<msg timestamp="20210408 19:04:41.306" level="INFO">${GeneratedNames} = []</msg>
<status status="PASS" starttime="20210408 19:04:41.306" endtime="20210408 19:04:41.307"></status>
</kw>
<kw name="${INDEX} IN RANGE [ ${TotalNumberToBeGenerated} ]" type="for">
<kw name="${INDEX} = 0" type="foritem">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>3</arg>
<arg>[UPPER]</arg>
</arguments>
<assign>
<var>${random_string}</var>
</assign>
<msg timestamp="20210408 19:04:41.413" level="INFO">${random_string} = XJG</msg>
<status status="PASS" starttime="20210408 19:04:41.412" endtime="20210408 19:04:41.413"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=%d%m%Y%H%M%S</arg>
</arguments>
<assign>
<var>${datetime.microsecond}</var>
</assign>
<msg timestamp="20210408 19:04:41.531" level="INFO">${datetime.microsecond} = 08042021190441</msg>
<status status="PASS" starttime="20210408 19:04:41.467" endtime="20210408 19:04:41.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${datetime.microsecond}</arg>
</arguments>
<msg timestamp="20210408 19:04:41.600" level="INFO">08042021190441</msg>
<status status="PASS" starttime="20210408 19:04:41.599" endtime="20210408 19:04:41.600"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${NameTestData}</arg>
<arg>${datetime.microsecond}${random_string}</arg>
</arguments>
<assign>
<var>${GeneratedName}</var>
</assign>
<msg timestamp="20210408 19:04:41.669" level="INFO">${GeneratedName} = SC308042021190441XJG</msg>
<status status="PASS" starttime="20210408 19:04:41.668" endtime="20210408 19:04:41.670"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${GeneratedNames}</arg>
<arg>${GeneratedName}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:04:41.743" endtime="20210408 19:04:41.744"></status>
</kw>
<status status="PASS" starttime="20210408 19:04:41.359" endtime="20210408 19:04:41.744"></status>
</kw>
<status status="PASS" starttime="20210408 19:04:41.358" endtime="20210408 19:04:41.744"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${GeneratedNames}</arg>
</arguments>
<assign>
<var>${GeneratedName}</var>
</assign>
<msg timestamp="20210408 19:04:41.808" level="INFO">${GeneratedName} = ['SC308042021190441XJG']</msg>
<status status="PASS" starttime="20210408 19:04:41.807" endtime="20210408 19:04:41.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${GeneratedName}</arg>
</arguments>
<msg timestamp="20210408 19:04:41.861" level="INFO">['SC308042021190441XJG']</msg>
<status status="PASS" starttime="20210408 19:04:41.861" endtime="20210408 19:04:41.861"></status>
</kw>
<msg timestamp="20210408 19:04:41.861" level="INFO">${Deal_Alias} = SC308042021190441XJG</msg>
<status status="PASS" starttime="20210408 19:04:39.199" endtime="20210408 19:04:41.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Deal Alias: ${Deal_Alias}</arg>
</arguments>
<msg timestamp="20210408 19:04:41.915" level="INFO">Deal Alias: SC308042021190441XJG</msg>
<status status="PASS" starttime="20210408 19:04:41.914" endtime="20210408 19:04:41.915"></status>
</kw>
<msg timestamp="20210408 19:04:41.915" level="INFO">${Deal_Name} = ARR_LIBORSC308042021190438PNT</msg>
<msg timestamp="20210408 19:04:41.915" level="INFO">${Deal_Alias} = SC308042021190441XJG</msg>
<status status="PASS" starttime="20210408 19:04:36.448" endtime="20210408 19:04:41.915"></status>
</kw>
<kw name="Write Data To Excel" library="GenericKeywords">
<doc>This keyword is used to Write Data To Excel.
@author: hstone 21FEB2020 - Initial Create
@update: hstone 17MAR2020 - Updated 'Run Keyword If '${multipleValue}'=='N'' to '... ELSE IF '${multipleValue}'=='N''
@update: jloretiz 15JUN2020 - add argument for column reference choice</doc>
<arguments>
<arg>CRED01_DealSetup</arg>
<arg>Deal_Name</arg>
<arg>&amp;{ExcelPath}[rowid]</arg>
<arg>${Deal_Name}</arg>
<arg>sColumnReference=rowid</arg>
</arguments>
<kw name="Open Excel Document" library="ExcelLibrary">
<doc>Opens xlsx document file.</doc>
<arguments>
<arg>${sFilePath}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20210408 19:04:42.122" endtime="20210408 19:04:42.164"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${multipleValue}'=='Y'</arg>
<arg>Write Data To All Column Rows</arg>
<arg>${sSheetName}</arg>
<arg>${sColumnName}</arg>
<arg>${newValue}</arg>
<arg>ELSE IF</arg>
<arg>'${multipleValue}'=='N'</arg>
<arg>Write Data To Cell</arg>
<arg>${sSheetName}</arg>
<arg>${sColumnName}</arg>
<arg>${rowid}</arg>
<arg>${newValue}</arg>
<arg>${bTestCaseColumn}</arg>
<arg>${sColumnReference}</arg>
</arguments>
<kw name="Write Data To Cell" library="GenericKeywords">
<doc>This keyword will be used for writing data to single excel cell.
@author: hstone 20FEB2020 Initial Create
@update: jloretiz 15JUN2020 - add argument for column reference choice</doc>
<arguments>
<arg>${sSheetName}</arg>
<arg>${sColumnName}</arg>
<arg>${rowid}</arg>
<arg>${newValue}</arg>
<arg>${bTestCaseColumn}</arg>
<arg>${sColumnReference}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${sColumnReference}</arg>
</arguments>
<msg timestamp="20210408 19:04:42.269" level="INFO">rowid</msg>
<status status="PASS" starttime="20210408 19:04:42.269" endtime="20210408 19:04:42.269"></status>
</kw>
<kw name="Get Column Header Index" library="GenericKeywords">
<doc>This keyword is used to get the Column Header Index of Test_Case and given Column Name at the Excel Sheet.
@author: hstone 19FEB2020 Initial Create</doc>
<arguments>
<arg>${sSheetName}</arg>
<arg>${sColumnName}</arg>
<arg>${bTestCaseColumn}</arg>
<arg>${sColumnReference}</arg>
</arguments>
<assign>
<var>${TestCaseHeader_Index}</var>
<var>${ColumnHeader_Index}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>(Get Column Header Index) sTestCaseColReference = '${sTestCaseColReference}'</arg>
</arguments>
<msg timestamp="20210408 19:04:42.380" level="INFO">(Get Column Header Index) sTestCaseColReference = 'rowid'</msg>
<status status="PASS" starttime="20210408 19:04:42.380" endtime="20210408 19:04:42.380"></status>
</kw>
<kw name="Read Excel Row" library="ExcelLibrary">
<doc>Returns content of a row from the current sheet of the document.</doc>
<arguments>
<arg>1</arg>
<arg>sheet_name=${sSheetName}</arg>
</arguments>
<assign>
<var>${DataColumn_List}</var>
</assign>
<msg timestamp="20210408 19:04:42.430" level="INFO">${DataColumn_List} = ['rowid', 'Test_Case', 'Deal_NamePrefix', 'Deal_AliasPrefix', 'Deal_Name', 'Deal_Alias', 'Deal_EffectiveDate', 'Deal_AgreementDate', 'Deal_AdjustmentSettings', 'Deal_AgreementDateAdjustment', 'Deal_Ef...</msg>
<status status="PASS" starttime="20210408 19:04:42.429" endtime="20210408 19:04:42.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Data Set Sheet Name: '${sSheetName}'</arg>
</arguments>
<msg timestamp="20210408 19:04:42.483" level="INFO">Data Set Sheet Name: 'CRED01_DealSetup'</msg>
<status status="PASS" starttime="20210408 19:04:42.482" endtime="20210408 19:04:42.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Data Set Sheet Column Names: '${DataColumn_List}'</arg>
</arguments>
<msg timestamp="20210408 19:04:42.533" level="INFO">Data Set Sheet Column Names: '['rowid', 'Test_Case', 'Deal_NamePrefix', 'Deal_AliasPrefix', 'Deal_Name', 'Deal_Alias', 'Deal_EffectiveDate', 'Deal_AgreementDate', 'Deal_AdjustmentSettings', 'Deal_AgreementDateAdjustment', 'Deal_EffectiveDateAdjustment', 'Deal_Currency', 'Deal_DepartmentCode', 'Deal_Department', 'Deal_SalesGroup', 'Deal_AternateID', 'Deal_ANSIID', 'Deal_IsSoleLender', 'Deal_ClassificationCode', 'Deal_ClassificationDesc', 'Deal_AdminAgent', 'Deal_AdminAgentLocation', 'DealAdminAgent_SGAlias', 'DealAdminAgent_PreferredRI', 'DealAdminAgent_ServicingGroup', 'Deal_ProposedCmt', 'Deal_EarlyDiscussion', 'Deal_ExpenseCode', 'Deal_HolidayCalendarRemove', 'Deal_HolidayCalendarAdd', 'Deal_IsPricingOptionARR', 'Deal_PricingOption_CCY', 'Deal_PricingOption', 'PricingOption_IsARR', 'PricingOption_InitialFractionRate', 'PricingOption_RoundingDecimal', 'PricingOption_NonBusinessDayRule', 'PricingOption_BillNoOfDays', 'PricingOption_MatrixChangeAppMthd', 'PricingOption_RateChangeAppMthd', 'PricingOption_RACInitialFractionRate', 'PricingOption_RACRoundingDecimal', 'PricingOption_RACRoundingMethod', 'PricingOption_PercentOfRateFormulaUsage', 'PricingOption_RepricingNonBusinessDayRule', 'PricingOption_FeeOnLenderShareFunding', 'PricingOption_InterestDueUponPrincipalPayment', 'PricingOption_InterestDueUponRepricing', 'PricingOption_ReferenceBanksApply', 'PricingOption_IntentNoticeDaysInAdvance', 'PricingOption_IntentNoticeTime', 'PricingOption_12HrPeriodOption', 'PricingOption_MaximumDrawAmount', 'PricingOption_MinimumDrawAmount', 'PricingOption_MinimumPaymentAmount', 'PricingOption_MinimumAmountMultiples', 'PricingOption_BillBorrower', 'PricingOption_ARRObservationPeriod', 'PricingOption_LookbackDays', 'PricingOption_LockoutDays', 'PricingOption_RateBasis', 'PricingOption_CalculationMethod']'</msg>
<status status="PASS" starttime="20210408 19:04:42.533" endtime="20210408 19:04:42.533"></status>
</kw>
<kw name="Get Index From List" library="Collections">
<doc>Returns the index of the first occurrence of the ``value`` on the list.</doc>
<arguments>
<arg>${DataColumn_List}</arg>
<arg>${sTestCaseColReference}</arg>
</arguments>
<assign>
<var>${TestCaseHeaderName_Index}</var>
</assign>
<msg timestamp="20210408 19:04:42.585" level="INFO">${TestCaseHeaderName_Index} = 0</msg>
<status status="PASS" starttime="20210408 19:04:42.585" endtime="20210408 19:04:42.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Fetched Test Case Column Index : '${TestCaseHeaderName_Index}'</arg>
</arguments>
<msg timestamp="20210408 19:04:42.636" level="INFO">Fetched Test Case Column Index : '0'</msg>
<status status="PASS" starttime="20210408 19:04:42.636" endtime="20210408 19:04:42.636"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${TestCaseHeaderName_Index}&lt;0 and '${bTestCaseColumn}'=='False'</arg>
<arg>Set Variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>Evaluate</arg>
<arg>${TestCaseHeaderName_Index}+1</arg>
</arguments>
<assign>
<var>${TestCaseHeaderName_Index}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${TestCaseHeaderName_Index}+1</arg>
</arguments>
<status status="PASS" starttime="20210408 19:04:42.690" endtime="20210408 19:04:42.690"></status>
</kw>
<msg timestamp="20210408 19:04:42.690" level="INFO">${TestCaseHeaderName_Index} = 1</msg>
<status status="PASS" starttime="20210408 19:04:42.688" endtime="20210408 19:04:42.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Evaluated Test Case Column Index : '${TestCaseHeaderName_Index}'</arg>
</arguments>
<msg timestamp="20210408 19:04:42.742" level="INFO">Evaluated Test Case Column Index : '1'</msg>
<status status="PASS" starttime="20210408 19:04:42.741" endtime="20210408 19:04:42.742"></status>
</kw>
<kw name="Get Index From List" library="Collections">
<doc>Returns the index of the first occurrence of the ``value`` on the list.</doc>
<arguments>
<arg>${DataColumn_List}</arg>
<arg>${sColumnName}</arg>
</arguments>
<assign>
<var>${ColumnName_Index}</var>
</assign>
<msg timestamp="20210408 19:04:42.793" level="INFO">${ColumnName_Index} = 4</msg>
<status status="PASS" starttime="20210408 19:04:42.793" endtime="20210408 19:04:42.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Column Name Index : '${ColumnName_Index}'</arg>
</arguments>
<msg timestamp="20210408 19:04:42.843" level="INFO">Column Name Index : '4'</msg>
<status status="PASS" starttime="20210408 19:04:42.843" endtime="20210408 19:04:42.844"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${ColumnName_Index}&lt;0</arg>
<arg>Fail</arg>
<arg>'${sColumnName}' is not found at '${DataColumn_List}' Data Column Values.</arg>
</arguments>
<status status="PASS" starttime="20210408 19:04:42.895" endtime="20210408 19:04:42.895"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ColumnName_Index}+1</arg>
</arguments>
<assign>
<var>${ColumnName_Index}</var>
</assign>
<msg timestamp="20210408 19:04:42.946" level="INFO">${ColumnName_Index} = 5</msg>
<status status="PASS" starttime="20210408 19:04:42.945" endtime="20210408 19:04:42.946"></status>
</kw>
<msg timestamp="20210408 19:04:42.946" level="INFO">${TestCaseHeader_Index} = 1</msg>
<msg timestamp="20210408 19:04:42.946" level="INFO">${ColumnHeader_Index} = 5</msg>
<status status="PASS" starttime="20210408 19:04:42.329" endtime="20210408 19:04:42.946"></status>
</kw>
<kw name="Get Index of a Row Value using a Reference Header Index" library="GenericKeywords">
<doc>This keyword is used to get index of a row value using a reference header index
@author: hstone 19FEB2020 Initial Create</doc>
<arguments>
<arg>${sSheetName}</arg>
<arg>${rowid}</arg>
<arg>${TestCaseHeader_Index}</arg>
</arguments>
<assign>
<var>${RowId_Index}</var>
</assign>
<kw name="Read Excel Column" library="ExcelLibrary">
<doc>Returns content of a column from the current sheet of the document.</doc>
<arguments>
<arg>${sReferenceHeader_Index}</arg>
<arg>sheet_name=${sSheetName}</arg>
</arguments>
<assign>
<var>${DataRow_List}</var>
</assign>
<msg timestamp="20210408 19:04:43.050" level="INFO">${DataRow_List} = ['rowid', '1', '2']</msg>
<status status="PASS" starttime="20210408 19:04:43.049" endtime="20210408 19:04:43.050"></status>
</kw>
<kw name="Read Excel Column" library="ExcelLibrary">
<doc>Returns content of a column from the current sheet of the document.</doc>
<arguments>
<arg>1</arg>
<arg>sheet_name=${sSheetName}</arg>
</arguments>
<assign>
<var>${DataRowId_List}</var>
</assign>
<msg timestamp="20210408 19:04:43.102" level="INFO">${DataRowId_List} = ['rowid', '1', '2']</msg>
<status status="PASS" starttime="20210408 19:04:43.101" endtime="20210408 19:04:43.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Row Names Under Reference Header with Index '${sReferenceHeader_Index}' : '${DataRow_List}'</arg>
</arguments>
<msg timestamp="20210408 19:04:43.153" level="INFO">Row Names Under Reference Header with Index '1' : '['rowid', '1', '2']'</msg>
<status status="PASS" starttime="20210408 19:04:43.153" endtime="20210408 19:04:43.153"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>List Should Contain Value</arg>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<assign>
<var>${IsPresentInList}</var>
</assign>
<kw name="List Should Contain Value" library="Collections">
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<arguments>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:04:43.204" endtime="20210408 19:04:43.205"></status>
</kw>
<msg timestamp="20210408 19:04:43.205" level="INFO">${IsPresentInList} = True</msg>
<status status="PASS" starttime="20210408 19:04:43.203" endtime="20210408 19:04:43.205"></status>
</kw>
<kw name="Check if Row Value Exists on List as Int" library="GenericKeywords">
<doc>This keyword is used to check if value exists on a list as a string
@author: hstone 13APR2020 Initial Create</doc>
<arguments>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<assign>
<var>${IsPresentInList_As_Int}</var>
<var>${RowValue_Int}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${False}</arg>
</arguments>
<assign>
<var>${IsPresentInList}</var>
</assign>
<msg timestamp="20210408 19:04:43.309" level="INFO">${IsPresentInList} = False</msg>
<status status="PASS" starttime="20210408 19:04:43.309" endtime="20210408 19:04:43.309"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Convert To Integer</arg>
<arg>${sValue}</arg>
</arguments>
<assign>
<var>${IsIntConvPassed}</var>
</assign>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${sValue}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:04:43.361" endtime="20210408 19:04:43.361"></status>
</kw>
<msg timestamp="20210408 19:04:43.361" level="INFO">${IsIntConvPassed} = True</msg>
<status status="PASS" starttime="20210408 19:04:43.359" endtime="20210408 19:04:43.362"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${IsIntConvPassed}==${True}</arg>
<arg>Check if a String Exists as Int on a List</arg>
<arg>${lTarget_List}</arg>
<arg>${sValue}</arg>
</arguments>
<assign>
<var>${IsPresentInList}</var>
<var>${RowValue_Int}</var>
</assign>
<kw name="Check if a String Exists as Int on a List" library="GenericKeywords">
<doc>This keyword is used to check if a string exists as an integer on a list.
@author: hstone 13APR2020 Initial Create</doc>
<arguments>
<arg>${lTarget_List}</arg>
<arg>${sValue}</arg>
</arguments>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${sValue}</arg>
</arguments>
<assign>
<var>${Value_Int}</var>
</assign>
<msg timestamp="20210408 19:04:43.486" level="INFO">${Value_Int} = 1</msg>
<status status="PASS" starttime="20210408 19:04:43.486" endtime="20210408 19:04:43.486"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>List Should Contain Value</arg>
<arg>${lTarget_List}</arg>
<arg>${Value_Int}</arg>
</arguments>
<assign>
<var>${IsPresentInList}</var>
</assign>
<kw name="List Should Contain Value" library="Collections">
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<arguments>
<arg>${lTarget_List}</arg>
<arg>${Value_Int}</arg>
</arguments>
<msg timestamp="20210408 19:04:43.562" level="FAIL">[ rowid | 1 | 2 ] does not contain value '1'.</msg>
<status status="FAIL" starttime="20210408 19:04:43.562" endtime="20210408 19:04:43.632"></status>
</kw>
<msg timestamp="20210408 19:04:43.633" level="INFO">${IsPresentInList} = False</msg>
<status status="PASS" starttime="20210408 19:04:43.560" endtime="20210408 19:04:43.633"></status>
</kw>
<status status="PASS" starttime="20210408 19:04:43.413" endtime="20210408 19:04:43.633"></status>
</kw>
<msg timestamp="20210408 19:04:43.633" level="INFO">${IsPresentInList} = False</msg>
<msg timestamp="20210408 19:04:43.634" level="INFO">${RowValue_Int} = 1</msg>
<status status="PASS" starttime="20210408 19:04:43.411" endtime="20210408 19:04:43.634"></status>
</kw>
<msg timestamp="20210408 19:04:43.634" level="INFO">${IsPresentInList_As_Int} = False</msg>
<msg timestamp="20210408 19:04:43.634" level="INFO">${RowValue_Int} = 1</msg>
<status status="PASS" starttime="20210408 19:04:43.255" endtime="20210408 19:04:43.634"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${IsPresentInList}==${True}</arg>
<arg>Get Index From List</arg>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
<arg>ELSE IF</arg>
<arg>${IsPresentInList_As_Int}==${True}</arg>
<arg>Get Index From List</arg>
<arg>${DataRow_List}</arg>
<arg>${RowValue_Int}</arg>
<arg>ELSE</arg>
<arg>Get Index From List</arg>
<arg>${DataRowId_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<assign>
<var>${DataRowName_Index}</var>
</assign>
<kw name="Get Index From List" library="Collections">
<doc>Returns the index of the first occurrence of the ``value`` on the list.</doc>
<arguments>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:04:43.708" endtime="20210408 19:04:43.709"></status>
</kw>
<msg timestamp="20210408 19:04:43.709" level="INFO">${DataRowName_Index} = 1</msg>
<status status="PASS" starttime="20210408 19:04:43.706" endtime="20210408 19:04:43.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Row Name Index for '${sRowValue}' : '${DataRowName_Index}'</arg>
</arguments>
<msg timestamp="20210408 19:04:43.782" level="INFO">Row Name Index for '1' : '1'</msg>
<status status="PASS" starttime="20210408 19:04:43.781" endtime="20210408 19:04:43.782"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${DataRowName_Index}&lt;0</arg>
<arg>Fail</arg>
<arg>'${sRowValue}' is not found at '${DataRow_List}' Data Row Values.</arg>
</arguments>
<status status="PASS" starttime="20210408 19:04:43.855" endtime="20210408 19:04:43.855"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${DataRowName_Index}+1</arg>
</arguments>
<assign>
<var>${DataRowValue_Index}</var>
</assign>
<msg timestamp="20210408 19:04:43.925" level="INFO">${DataRowValue_Index} = 2</msg>
<status status="PASS" starttime="20210408 19:04:43.924" endtime="20210408 19:04:43.925"></status>
</kw>
<msg timestamp="20210408 19:04:43.925" level="INFO">${RowId_Index} = 2</msg>
<status status="PASS" starttime="20210408 19:04:42.997" endtime="20210408 19:04:43.925"></status>
</kw>
<kw name="Write Excel Cell" library="ExcelLibrary">
<doc>Writes value to the cell.</doc>
<arguments>
<arg>${RowId_Index}</arg>
<arg>${ColumnHeader_Index}</arg>
<arg>${sData}</arg>
<arg>${sSheetName}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:04:43.999" endtime="20210408 19:04:44.000"></status>
</kw>
<status status="PASS" starttime="20210408 19:04:42.217" endtime="20210408 19:04:44.001"></status>
</kw>
<status status="PASS" starttime="20210408 19:04:42.215" endtime="20210408 19:04:44.001"></status>
</kw>
<kw name="Save Excel Document" library="ExcelLibrary">
<doc>Saves the current document to disk.</doc>
<arguments>
<arg>${sFilePath}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:04:44.071" endtime="20210408 19:04:44.106"></status>
</kw>
<kw name="Close Current Excel Document" library="ExcelLibrary">
<doc>Closes current document.</doc>
<status status="PASS" starttime="20210408 19:04:44.162" endtime="20210408 19:04:44.162"></status>
</kw>
<status status="PASS" starttime="20210408 19:04:42.070" endtime="20210408 19:04:44.163"></status>
</kw>
<kw name="Write Data To Excel" library="GenericKeywords">
<doc>This keyword is used to Write Data To Excel.
@author: hstone 21FEB2020 - Initial Create
@update: hstone 17MAR2020 - Updated 'Run Keyword If '${multipleValue}'=='N'' to '... ELSE IF '${multipleValue}'=='N''
@update: jloretiz 15JUN2020 - add argument for column reference choice</doc>
<arguments>
<arg>CRED01_DealSetup</arg>
<arg>Deal_Alias</arg>
<arg>&amp;{ExcelPath}[rowid]</arg>
<arg>${Deal_Alias}</arg>
<arg>sColumnReference=rowid</arg>
</arguments>
<kw name="Open Excel Document" library="ExcelLibrary">
<doc>Opens xlsx document file.</doc>
<arguments>
<arg>${sFilePath}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20210408 19:04:44.375" endtime="20210408 19:04:44.425"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${multipleValue}'=='Y'</arg>
<arg>Write Data To All Column Rows</arg>
<arg>${sSheetName}</arg>
<arg>${sColumnName}</arg>
<arg>${newValue}</arg>
<arg>ELSE IF</arg>
<arg>'${multipleValue}'=='N'</arg>
<arg>Write Data To Cell</arg>
<arg>${sSheetName}</arg>
<arg>${sColumnName}</arg>
<arg>${rowid}</arg>
<arg>${newValue}</arg>
<arg>${bTestCaseColumn}</arg>
<arg>${sColumnReference}</arg>
</arguments>
<kw name="Write Data To Cell" library="GenericKeywords">
<doc>This keyword will be used for writing data to single excel cell.
@author: hstone 20FEB2020 Initial Create
@update: jloretiz 15JUN2020 - add argument for column reference choice</doc>
<arguments>
<arg>${sSheetName}</arg>
<arg>${sColumnName}</arg>
<arg>${rowid}</arg>
<arg>${newValue}</arg>
<arg>${bTestCaseColumn}</arg>
<arg>${sColumnReference}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${sColumnReference}</arg>
</arguments>
<msg timestamp="20210408 19:04:44.654" level="INFO">rowid</msg>
<status status="PASS" starttime="20210408 19:04:44.654" endtime="20210408 19:04:44.654"></status>
</kw>
<kw name="Get Column Header Index" library="GenericKeywords">
<doc>This keyword is used to get the Column Header Index of Test_Case and given Column Name at the Excel Sheet.
@author: hstone 19FEB2020 Initial Create</doc>
<arguments>
<arg>${sSheetName}</arg>
<arg>${sColumnName}</arg>
<arg>${bTestCaseColumn}</arg>
<arg>${sColumnReference}</arg>
</arguments>
<assign>
<var>${TestCaseHeader_Index}</var>
<var>${ColumnHeader_Index}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>(Get Column Header Index) sTestCaseColReference = '${sTestCaseColReference}'</arg>
</arguments>
<msg timestamp="20210408 19:04:44.762" level="INFO">(Get Column Header Index) sTestCaseColReference = 'rowid'</msg>
<status status="PASS" starttime="20210408 19:04:44.761" endtime="20210408 19:04:44.762"></status>
</kw>
<kw name="Read Excel Row" library="ExcelLibrary">
<doc>Returns content of a row from the current sheet of the document.</doc>
<arguments>
<arg>1</arg>
<arg>sheet_name=${sSheetName}</arg>
</arguments>
<assign>
<var>${DataColumn_List}</var>
</assign>
<msg timestamp="20210408 19:04:44.840" level="INFO">${DataColumn_List} = ['rowid', 'Test_Case', 'Deal_NamePrefix', 'Deal_AliasPrefix', 'Deal_Name', 'Deal_Alias', 'Deal_EffectiveDate', 'Deal_AgreementDate', 'Deal_AdjustmentSettings', 'Deal_AgreementDateAdjustment', 'Deal_Ef...</msg>
<status status="PASS" starttime="20210408 19:04:44.840" endtime="20210408 19:04:44.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Data Set Sheet Name: '${sSheetName}'</arg>
</arguments>
<msg timestamp="20210408 19:04:44.913" level="INFO">Data Set Sheet Name: 'CRED01_DealSetup'</msg>
<status status="PASS" starttime="20210408 19:04:44.912" endtime="20210408 19:04:44.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Data Set Sheet Column Names: '${DataColumn_List}'</arg>
</arguments>
<msg timestamp="20210408 19:04:44.989" level="INFO">Data Set Sheet Column Names: '['rowid', 'Test_Case', 'Deal_NamePrefix', 'Deal_AliasPrefix', 'Deal_Name', 'Deal_Alias', 'Deal_EffectiveDate', 'Deal_AgreementDate', 'Deal_AdjustmentSettings', 'Deal_AgreementDateAdjustment', 'Deal_EffectiveDateAdjustment', 'Deal_Currency', 'Deal_DepartmentCode', 'Deal_Department', 'Deal_SalesGroup', 'Deal_AternateID', 'Deal_ANSIID', 'Deal_IsSoleLender', 'Deal_ClassificationCode', 'Deal_ClassificationDesc', 'Deal_AdminAgent', 'Deal_AdminAgentLocation', 'DealAdminAgent_SGAlias', 'DealAdminAgent_PreferredRI', 'DealAdminAgent_ServicingGroup', 'Deal_ProposedCmt', 'Deal_EarlyDiscussion', 'Deal_ExpenseCode', 'Deal_HolidayCalendarRemove', 'Deal_HolidayCalendarAdd', 'Deal_IsPricingOptionARR', 'Deal_PricingOption_CCY', 'Deal_PricingOption', 'PricingOption_IsARR', 'PricingOption_InitialFractionRate', 'PricingOption_RoundingDecimal', 'PricingOption_NonBusinessDayRule', 'PricingOption_BillNoOfDays', 'PricingOption_MatrixChangeAppMthd', 'PricingOption_RateChangeAppMthd', 'PricingOption_RACInitialFractionRate', 'PricingOption_RACRoundingDecimal', 'PricingOption_RACRoundingMethod', 'PricingOption_PercentOfRateFormulaUsage', 'PricingOption_RepricingNonBusinessDayRule', 'PricingOption_FeeOnLenderShareFunding', 'PricingOption_InterestDueUponPrincipalPayment', 'PricingOption_InterestDueUponRepricing', 'PricingOption_ReferenceBanksApply', 'PricingOption_IntentNoticeDaysInAdvance', 'PricingOption_IntentNoticeTime', 'PricingOption_12HrPeriodOption', 'PricingOption_MaximumDrawAmount', 'PricingOption_MinimumDrawAmount', 'PricingOption_MinimumPaymentAmount', 'PricingOption_MinimumAmountMultiples', 'PricingOption_BillBorrower', 'PricingOption_ARRObservationPeriod', 'PricingOption_LookbackDays', 'PricingOption_LockoutDays', 'PricingOption_RateBasis', 'PricingOption_CalculationMethod']'</msg>
<status status="PASS" starttime="20210408 19:04:44.988" endtime="20210408 19:04:44.989"></status>
</kw>
<kw name="Get Index From List" library="Collections">
<doc>Returns the index of the first occurrence of the ``value`` on the list.</doc>
<arguments>
<arg>${DataColumn_List}</arg>
<arg>${sTestCaseColReference}</arg>
</arguments>
<assign>
<var>${TestCaseHeaderName_Index}</var>
</assign>
<msg timestamp="20210408 19:04:45.061" level="INFO">${TestCaseHeaderName_Index} = 0</msg>
<status status="PASS" starttime="20210408 19:04:45.060" endtime="20210408 19:04:45.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Fetched Test Case Column Index : '${TestCaseHeaderName_Index}'</arg>
</arguments>
<msg timestamp="20210408 19:04:45.125" level="INFO">Fetched Test Case Column Index : '0'</msg>
<status status="PASS" starttime="20210408 19:04:45.124" endtime="20210408 19:04:45.125"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${TestCaseHeaderName_Index}&lt;0 and '${bTestCaseColumn}'=='False'</arg>
<arg>Set Variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>Evaluate</arg>
<arg>${TestCaseHeaderName_Index}+1</arg>
</arguments>
<assign>
<var>${TestCaseHeaderName_Index}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${TestCaseHeaderName_Index}+1</arg>
</arguments>
<status status="PASS" starttime="20210408 19:04:45.176" endtime="20210408 19:04:45.177"></status>
</kw>
<msg timestamp="20210408 19:04:45.177" level="INFO">${TestCaseHeaderName_Index} = 1</msg>
<status status="PASS" starttime="20210408 19:04:45.175" endtime="20210408 19:04:45.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Evaluated Test Case Column Index : '${TestCaseHeaderName_Index}'</arg>
</arguments>
<msg timestamp="20210408 19:04:45.228" level="INFO">Evaluated Test Case Column Index : '1'</msg>
<status status="PASS" starttime="20210408 19:04:45.227" endtime="20210408 19:04:45.228"></status>
</kw>
<kw name="Get Index From List" library="Collections">
<doc>Returns the index of the first occurrence of the ``value`` on the list.</doc>
<arguments>
<arg>${DataColumn_List}</arg>
<arg>${sColumnName}</arg>
</arguments>
<assign>
<var>${ColumnName_Index}</var>
</assign>
<msg timestamp="20210408 19:04:45.280" level="INFO">${ColumnName_Index} = 5</msg>
<status status="PASS" starttime="20210408 19:04:45.279" endtime="20210408 19:04:45.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Column Name Index : '${ColumnName_Index}'</arg>
</arguments>
<msg timestamp="20210408 19:04:45.330" level="INFO">Column Name Index : '5'</msg>
<status status="PASS" starttime="20210408 19:04:45.330" endtime="20210408 19:04:45.330"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${ColumnName_Index}&lt;0</arg>
<arg>Fail</arg>
<arg>'${sColumnName}' is not found at '${DataColumn_List}' Data Column Values.</arg>
</arguments>
<status status="PASS" starttime="20210408 19:04:45.383" endtime="20210408 19:04:45.384"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ColumnName_Index}+1</arg>
</arguments>
<assign>
<var>${ColumnName_Index}</var>
</assign>
<msg timestamp="20210408 19:04:45.441" level="INFO">${ColumnName_Index} = 6</msg>
<status status="PASS" starttime="20210408 19:04:45.440" endtime="20210408 19:04:45.441"></status>
</kw>
<msg timestamp="20210408 19:04:45.442" level="INFO">${TestCaseHeader_Index} = 1</msg>
<msg timestamp="20210408 19:04:45.442" level="INFO">${ColumnHeader_Index} = 6</msg>
<status status="PASS" starttime="20210408 19:04:44.704" endtime="20210408 19:04:45.442"></status>
</kw>
<kw name="Get Index of a Row Value using a Reference Header Index" library="GenericKeywords">
<doc>This keyword is used to get index of a row value using a reference header index
@author: hstone 19FEB2020 Initial Create</doc>
<arguments>
<arg>${sSheetName}</arg>
<arg>${rowid}</arg>
<arg>${TestCaseHeader_Index}</arg>
</arguments>
<assign>
<var>${RowId_Index}</var>
</assign>
<kw name="Read Excel Column" library="ExcelLibrary">
<doc>Returns content of a column from the current sheet of the document.</doc>
<arguments>
<arg>${sReferenceHeader_Index}</arg>
<arg>sheet_name=${sSheetName}</arg>
</arguments>
<assign>
<var>${DataRow_List}</var>
</assign>
<msg timestamp="20210408 19:04:45.555" level="INFO">${DataRow_List} = ['rowid', '1', '2']</msg>
<status status="PASS" starttime="20210408 19:04:45.554" endtime="20210408 19:04:45.555"></status>
</kw>
<kw name="Read Excel Column" library="ExcelLibrary">
<doc>Returns content of a column from the current sheet of the document.</doc>
<arguments>
<arg>1</arg>
<arg>sheet_name=${sSheetName}</arg>
</arguments>
<assign>
<var>${DataRowId_List}</var>
</assign>
<msg timestamp="20210408 19:04:45.612" level="INFO">${DataRowId_List} = ['rowid', '1', '2']</msg>
<status status="PASS" starttime="20210408 19:04:45.612" endtime="20210408 19:04:45.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Row Names Under Reference Header with Index '${sReferenceHeader_Index}' : '${DataRow_List}'</arg>
</arguments>
<msg timestamp="20210408 19:04:45.665" level="INFO">Row Names Under Reference Header with Index '1' : '['rowid', '1', '2']'</msg>
<status status="PASS" starttime="20210408 19:04:45.664" endtime="20210408 19:04:45.665"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>List Should Contain Value</arg>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<assign>
<var>${IsPresentInList}</var>
</assign>
<kw name="List Should Contain Value" library="Collections">
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<arguments>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:04:45.718" endtime="20210408 19:04:45.719"></status>
</kw>
<msg timestamp="20210408 19:04:45.719" level="INFO">${IsPresentInList} = True</msg>
<status status="PASS" starttime="20210408 19:04:45.716" endtime="20210408 19:04:45.719"></status>
</kw>
<kw name="Check if Row Value Exists on List as Int" library="GenericKeywords">
<doc>This keyword is used to check if value exists on a list as a string
@author: hstone 13APR2020 Initial Create</doc>
<arguments>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<assign>
<var>${IsPresentInList_As_Int}</var>
<var>${RowValue_Int}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${False}</arg>
</arguments>
<assign>
<var>${IsPresentInList}</var>
</assign>
<msg timestamp="20210408 19:04:45.819" level="INFO">${IsPresentInList} = False</msg>
<status status="PASS" starttime="20210408 19:04:45.819" endtime="20210408 19:04:45.820"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Convert To Integer</arg>
<arg>${sValue}</arg>
</arguments>
<assign>
<var>${IsIntConvPassed}</var>
</assign>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${sValue}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:04:45.872" endtime="20210408 19:04:45.872"></status>
</kw>
<msg timestamp="20210408 19:04:45.872" level="INFO">${IsIntConvPassed} = True</msg>
<status status="PASS" starttime="20210408 19:04:45.870" endtime="20210408 19:04:45.872"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${IsIntConvPassed}==${True}</arg>
<arg>Check if a String Exists as Int on a List</arg>
<arg>${lTarget_List}</arg>
<arg>${sValue}</arg>
</arguments>
<assign>
<var>${IsPresentInList}</var>
<var>${RowValue_Int}</var>
</assign>
<kw name="Check if a String Exists as Int on a List" library="GenericKeywords">
<doc>This keyword is used to check if a string exists as an integer on a list.
@author: hstone 13APR2020 Initial Create</doc>
<arguments>
<arg>${lTarget_List}</arg>
<arg>${sValue}</arg>
</arguments>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${sValue}</arg>
</arguments>
<assign>
<var>${Value_Int}</var>
</assign>
<msg timestamp="20210408 19:04:45.979" level="INFO">${Value_Int} = 1</msg>
<status status="PASS" starttime="20210408 19:04:45.978" endtime="20210408 19:04:45.979"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>List Should Contain Value</arg>
<arg>${lTarget_List}</arg>
<arg>${Value_Int}</arg>
</arguments>
<assign>
<var>${IsPresentInList}</var>
</assign>
<kw name="List Should Contain Value" library="Collections">
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<arguments>
<arg>${lTarget_List}</arg>
<arg>${Value_Int}</arg>
</arguments>
<msg timestamp="20210408 19:04:46.040" level="FAIL">[ rowid | 1 | 2 ] does not contain value '1'.</msg>
<status status="FAIL" starttime="20210408 19:04:46.040" endtime="20210408 19:04:46.094"></status>
</kw>
<msg timestamp="20210408 19:04:46.095" level="INFO">${IsPresentInList} = False</msg>
<status status="PASS" starttime="20210408 19:04:46.038" endtime="20210408 19:04:46.095"></status>
</kw>
<status status="PASS" starttime="20210408 19:04:45.924" endtime="20210408 19:04:46.095"></status>
</kw>
<msg timestamp="20210408 19:04:46.096" level="INFO">${IsPresentInList} = False</msg>
<msg timestamp="20210408 19:04:46.096" level="INFO">${RowValue_Int} = 1</msg>
<status status="PASS" starttime="20210408 19:04:45.922" endtime="20210408 19:04:46.096"></status>
</kw>
<msg timestamp="20210408 19:04:46.096" level="INFO">${IsPresentInList_As_Int} = False</msg>
<msg timestamp="20210408 19:04:46.096" level="INFO">${RowValue_Int} = 1</msg>
<status status="PASS" starttime="20210408 19:04:45.768" endtime="20210408 19:04:46.096"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${IsPresentInList}==${True}</arg>
<arg>Get Index From List</arg>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
<arg>ELSE IF</arg>
<arg>${IsPresentInList_As_Int}==${True}</arg>
<arg>Get Index From List</arg>
<arg>${DataRow_List}</arg>
<arg>${RowValue_Int}</arg>
<arg>ELSE</arg>
<arg>Get Index From List</arg>
<arg>${DataRowId_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<assign>
<var>${DataRowName_Index}</var>
</assign>
<kw name="Get Index From List" library="Collections">
<doc>Returns the index of the first occurrence of the ``value`` on the list.</doc>
<arguments>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:04:46.169" endtime="20210408 19:04:46.170"></status>
</kw>
<msg timestamp="20210408 19:04:46.170" level="INFO">${DataRowName_Index} = 1</msg>
<status status="PASS" starttime="20210408 19:04:46.168" endtime="20210408 19:04:46.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Row Name Index for '${sRowValue}' : '${DataRowName_Index}'</arg>
</arguments>
<msg timestamp="20210408 19:04:46.246" level="INFO">Row Name Index for '1' : '1'</msg>
<status status="PASS" starttime="20210408 19:04:46.245" endtime="20210408 19:04:46.246"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${DataRowName_Index}&lt;0</arg>
<arg>Fail</arg>
<arg>'${sRowValue}' is not found at '${DataRow_List}' Data Row Values.</arg>
</arguments>
<status status="PASS" starttime="20210408 19:04:46.320" endtime="20210408 19:04:46.321"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${DataRowName_Index}+1</arg>
</arguments>
<assign>
<var>${DataRowValue_Index}</var>
</assign>
<msg timestamp="20210408 19:04:46.394" level="INFO">${DataRowValue_Index} = 2</msg>
<status status="PASS" starttime="20210408 19:04:46.394" endtime="20210408 19:04:46.394"></status>
</kw>
<msg timestamp="20210408 19:04:46.395" level="INFO">${RowId_Index} = 2</msg>
<status status="PASS" starttime="20210408 19:04:45.500" endtime="20210408 19:04:46.395"></status>
</kw>
<kw name="Write Excel Cell" library="ExcelLibrary">
<doc>Writes value to the cell.</doc>
<arguments>
<arg>${RowId_Index}</arg>
<arg>${ColumnHeader_Index}</arg>
<arg>${sData}</arg>
<arg>${sSheetName}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:04:46.459" endtime="20210408 19:04:46.460"></status>
</kw>
<status status="PASS" starttime="20210408 19:04:44.594" endtime="20210408 19:04:46.460"></status>
</kw>
<status status="PASS" starttime="20210408 19:04:44.593" endtime="20210408 19:04:46.460"></status>
</kw>
<kw name="Save Excel Document" library="ExcelLibrary">
<doc>Saves the current document to disk.</doc>
<arguments>
<arg>${sFilePath}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:04:46.510" endtime="20210408 19:04:46.545"></status>
</kw>
<kw name="Close Current Excel Document" library="ExcelLibrary">
<doc>Closes current document.</doc>
<status status="PASS" starttime="20210408 19:04:46.601" endtime="20210408 19:04:46.602"></status>
</kw>
<status status="PASS" starttime="20210408 19:04:44.321" endtime="20210408 19:04:46.602"></status>
</kw>
<kw name="Create Deal" library="Deal_Notebook">
<doc>This keywod creates new deal.
@author: jloretiz 03FEB2021 - initial create
@update: jloretiz 11FEB2021 - added condition for empty data</doc>
<arguments>
<arg>${Deal_Name}</arg>
<arg>${Deal_Alias}</arg>
<arg>&amp;{ExcelPath}[Deal_Currency]</arg>
<arg>&amp;{ExcelPath}[Deal_Department]</arg>
<arg>&amp;{ExcelPath}[Deal_SalesGroup]</arg>
<arg>&amp;{ExcelPath}[Deal_AternateID]</arg>
<arg>&amp;{ExcelPath}[Deal_ANSIID]</arg>
</arguments>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sDeal_Name}</arg>
<arg>${ARG_TYPE_UNIQUE_NAME_VALUE}</arg>
</arguments>
<assign>
<var>${Deal_Name}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:04:46.899" endtime="20210408 19:04:46.899"></status>
</kw>
<msg timestamp="20210408 19:04:46.899" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:04:46.895" endtime="20210408 19:04:46.900"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:04:47.257" level="INFO">${List_Argument_Excel_Value} = ['ARR_LIBORSC308042021190438PNT']</msg>
<status status="PASS" starttime="20210408 19:04:47.257" endtime="20210408 19:04:47.257"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:04:47.316" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:04:47.316" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:04:47.316" endtime="20210408 19:04:47.317"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:04:47.368" level="INFO">${Arg_User_Input} = ARR_LIBORSC308042021190438PNT</msg>
<status status="PASS" starttime="20210408 19:04:47.368" endtime="20210408 19:04:47.369"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:04:47.420" level="INFO">${Arg_User_Input} = ARR_LIBORSC308042021190438PNT</msg>
<status status="PASS" starttime="20210408 19:04:47.419" endtime="20210408 19:04:47.420"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:04:47.474" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:04:47.473" endtime="20210408 19:04:47.474"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:04:47.530" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:04:47.530" endtime="20210408 19:04:47.531"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:04:47.584" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:04:47.584" endtime="20210408 19:04:47.584"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:04:47.639" endtime="20210408 19:04:47.639"></status>
</kw>
<msg timestamp="20210408 19:04:47.640" level="INFO">${Extracted_Argument_Value} = ARR_LIBORSC308042021190438PNT</msg>
<status status="PASS" starttime="20210408 19:04:47.636" endtime="20210408 19:04:47.640"></status>
</kw>
<status status="PASS" starttime="20210408 19:04:47.203" endtime="20210408 19:04:47.640"></status>
</kw>
<msg timestamp="20210408 19:04:47.641" level="INFO">${Extracted_Argument_Value} = ARR_LIBORSC308042021190438PNT</msg>
<status status="PASS" starttime="20210408 19:04:47.072" endtime="20210408 19:04:47.641"></status>
</kw>
<msg timestamp="20210408 19:04:47.641" level="INFO">${Deal_Name} = ARR_LIBORSC308042021190438PNT</msg>
<status status="PASS" starttime="20210408 19:04:46.837" endtime="20210408 19:04:47.641"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sDeal_Alias}</arg>
<arg>${ARG_TYPE_UNIQUE_NAME_VALUE}</arg>
</arguments>
<assign>
<var>${Deal_Alias}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:04:47.849" endtime="20210408 19:04:47.849"></status>
</kw>
<msg timestamp="20210408 19:04:47.850" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:04:47.847" endtime="20210408 19:04:47.850"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:04:48.058" level="INFO">${List_Argument_Excel_Value} = ['SC308042021190441XJG']</msg>
<status status="PASS" starttime="20210408 19:04:48.057" endtime="20210408 19:04:48.058"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:04:48.110" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:04:48.110" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:04:48.109" endtime="20210408 19:04:48.110"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:04:48.161" level="INFO">${Arg_User_Input} = SC308042021190441XJG</msg>
<status status="PASS" starttime="20210408 19:04:48.160" endtime="20210408 19:04:48.161"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:04:48.214" level="INFO">${Arg_User_Input} = SC308042021190441XJG</msg>
<status status="PASS" starttime="20210408 19:04:48.213" endtime="20210408 19:04:48.214"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:04:48.266" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:04:48.266" endtime="20210408 19:04:48.266"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:04:48.319" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:04:48.319" endtime="20210408 19:04:48.320"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:04:48.372" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:04:48.372" endtime="20210408 19:04:48.373"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:04:48.450" endtime="20210408 19:04:48.450"></status>
</kw>
<msg timestamp="20210408 19:04:48.451" level="INFO">${Extracted_Argument_Value} = SC308042021190441XJG</msg>
<status status="PASS" starttime="20210408 19:04:48.448" endtime="20210408 19:04:48.451"></status>
</kw>
<status status="PASS" starttime="20210408 19:04:48.005" endtime="20210408 19:04:48.451"></status>
</kw>
<msg timestamp="20210408 19:04:48.451" level="INFO">${Extracted_Argument_Value} = SC308042021190441XJG</msg>
<status status="PASS" starttime="20210408 19:04:47.904" endtime="20210408 19:04:48.451"></status>
</kw>
<msg timestamp="20210408 19:04:48.452" level="INFO">${Deal_Alias} = SC308042021190441XJG</msg>
<status status="PASS" starttime="20210408 19:04:47.793" endtime="20210408 19:04:48.452"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sDeal_Currency}</arg>
</arguments>
<assign>
<var>${Deal_Currency}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:04:48.765" endtime="20210408 19:04:48.766"></status>
</kw>
<msg timestamp="20210408 19:04:48.766" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:04:48.763" endtime="20210408 19:04:48.766"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:04:49.075" level="INFO">${List_Argument_Excel_Value} = ['USD']</msg>
<status status="PASS" starttime="20210408 19:04:49.074" endtime="20210408 19:04:49.075"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:04:49.151" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:04:49.151" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:04:49.151" endtime="20210408 19:04:49.152"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:04:49.226" level="INFO">${Arg_User_Input} = USD</msg>
<status status="PASS" starttime="20210408 19:04:49.225" endtime="20210408 19:04:49.226"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:04:49.300" level="INFO">${Arg_User_Input} = USD</msg>
<status status="PASS" starttime="20210408 19:04:49.299" endtime="20210408 19:04:49.300"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:04:49.358" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:04:49.357" endtime="20210408 19:04:49.358"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:04:49.411" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:04:49.410" endtime="20210408 19:04:49.411"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:04:49.467" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:04:49.466" endtime="20210408 19:04:49.467"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:04:49.534" endtime="20210408 19:04:49.534"></status>
</kw>
<msg timestamp="20210408 19:04:49.534" level="INFO">${Extracted_Argument_Value} = USD</msg>
<status status="PASS" starttime="20210408 19:04:49.532" endtime="20210408 19:04:49.534"></status>
</kw>
<status status="PASS" starttime="20210408 19:04:48.996" endtime="20210408 19:04:49.534"></status>
</kw>
<msg timestamp="20210408 19:04:49.535" level="INFO">${Extracted_Argument_Value} = USD</msg>
<status status="PASS" starttime="20210408 19:04:48.842" endtime="20210408 19:04:49.535"></status>
</kw>
<msg timestamp="20210408 19:04:49.535" level="INFO">${Deal_Currency} = USD</msg>
<status status="PASS" starttime="20210408 19:04:48.685" endtime="20210408 19:04:49.535"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sDeal_Department}</arg>
</arguments>
<assign>
<var>${Deal_Department}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:04:49.748" endtime="20210408 19:04:49.749"></status>
</kw>
<msg timestamp="20210408 19:04:49.749" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:04:49.746" endtime="20210408 19:04:49.749"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:04:50.006" level="INFO">${List_Argument_Excel_Value} = ['North America']</msg>
<status status="PASS" starttime="20210408 19:04:50.006" endtime="20210408 19:04:50.007"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:04:50.084" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:04:50.084" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:04:50.083" endtime="20210408 19:04:50.084"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:04:50.161" level="INFO">${Arg_User_Input} = NORTH AMERICA</msg>
<status status="PASS" starttime="20210408 19:04:50.161" endtime="20210408 19:04:50.161"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:04:50.237" level="INFO">${Arg_User_Input} = NORTH AMERICA</msg>
<status status="PASS" starttime="20210408 19:04:50.236" endtime="20210408 19:04:50.237"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:04:50.314" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:04:50.314" endtime="20210408 19:04:50.314"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:04:50.392" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:04:50.391" endtime="20210408 19:04:50.392"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:04:50.468" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:04:50.467" endtime="20210408 19:04:50.468"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:04:50.548" endtime="20210408 19:04:50.548"></status>
</kw>
<msg timestamp="20210408 19:04:50.549" level="INFO">${Extracted_Argument_Value} = North America</msg>
<status status="PASS" starttime="20210408 19:04:50.545" endtime="20210408 19:04:50.549"></status>
</kw>
<status status="PASS" starttime="20210408 19:04:49.926" endtime="20210408 19:04:50.549"></status>
</kw>
<msg timestamp="20210408 19:04:50.549" level="INFO">${Extracted_Argument_Value} = North America</msg>
<status status="PASS" starttime="20210408 19:04:49.801" endtime="20210408 19:04:50.549"></status>
</kw>
<msg timestamp="20210408 19:04:50.550" level="INFO">${Deal_Department} = North America</msg>
<status status="PASS" starttime="20210408 19:04:49.692" endtime="20210408 19:04:50.550"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sDeal_SalesGroup}</arg>
</arguments>
<assign>
<var>${Deal_SalesGroup}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:04:50.969" endtime="20210408 19:04:50.969"></status>
</kw>
<msg timestamp="20210408 19:04:50.970" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:04:50.967" endtime="20210408 19:04:50.970"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:04:51.188" level="INFO">${List_Argument_Excel_Value} = ['Sales Group 1']</msg>
<status status="PASS" starttime="20210408 19:04:51.187" endtime="20210408 19:04:51.188"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:04:51.239" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:04:51.239" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:04:51.238" endtime="20210408 19:04:51.239"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:04:51.289" level="INFO">${Arg_User_Input} = SALES GROUP 1</msg>
<status status="PASS" starttime="20210408 19:04:51.289" endtime="20210408 19:04:51.290"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:04:51.366" level="INFO">${Arg_User_Input} = SALES GROUP 1</msg>
<status status="PASS" starttime="20210408 19:04:51.366" endtime="20210408 19:04:51.366"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:04:51.438" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:04:51.438" endtime="20210408 19:04:51.438"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:04:51.491" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:04:51.490" endtime="20210408 19:04:51.491"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:04:51.543" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:04:51.542" endtime="20210408 19:04:51.543"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:04:51.597" endtime="20210408 19:04:51.598"></status>
</kw>
<msg timestamp="20210408 19:04:51.598" level="INFO">${Extracted_Argument_Value} = Sales Group 1</msg>
<status status="PASS" starttime="20210408 19:04:51.595" endtime="20210408 19:04:51.598"></status>
</kw>
<status status="PASS" starttime="20210408 19:04:51.134" endtime="20210408 19:04:51.598"></status>
</kw>
<msg timestamp="20210408 19:04:51.598" level="INFO">${Extracted_Argument_Value} = Sales Group 1</msg>
<status status="PASS" starttime="20210408 19:04:51.033" endtime="20210408 19:04:51.599"></status>
</kw>
<msg timestamp="20210408 19:04:51.599" level="INFO">${Deal_SalesGroup} = Sales Group 1</msg>
<status status="PASS" starttime="20210408 19:04:50.889" endtime="20210408 19:04:51.599"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sDeal_AternateID}</arg>
</arguments>
<assign>
<var>${Deal_AternateID}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:04:51.801" endtime="20210408 19:04:51.802"></status>
</kw>
<msg timestamp="20210408 19:04:51.802" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:04:51.800" endtime="20210408 19:04:51.802"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:04:52.011" level="INFO">${List_Argument_Excel_Value} = ['']</msg>
<status status="PASS" starttime="20210408 19:04:52.010" endtime="20210408 19:04:52.011"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:04:52.065" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:04:52.066" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:04:52.065" endtime="20210408 19:04:52.066"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:04:52.117" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:04:52.116" endtime="20210408 19:04:52.117"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:04:52.167" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:04:52.165" endtime="20210408 19:04:52.167"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:04:52.217" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:04:52.216" endtime="20210408 19:04:52.217"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:04:52.278" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:04:52.277" endtime="20210408 19:04:52.278"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:04:52.330" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:04:52.329" endtime="20210408 19:04:52.330"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:04:52.382" endtime="20210408 19:04:52.382"></status>
</kw>
<msg timestamp="20210408 19:04:52.383" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:04:52.380" endtime="20210408 19:04:52.383"></status>
</kw>
<status status="PASS" starttime="20210408 19:04:51.950" endtime="20210408 19:04:52.383"></status>
</kw>
<msg timestamp="20210408 19:04:52.383" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:04:51.851" endtime="20210408 19:04:52.383"></status>
</kw>
<msg timestamp="20210408 19:04:52.384" level="INFO">${Deal_AternateID} = </msg>
<status status="PASS" starttime="20210408 19:04:51.751" endtime="20210408 19:04:52.384"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sDeal_ANSIID}</arg>
</arguments>
<assign>
<var>${Deal_ANSIID}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:04:52.589" endtime="20210408 19:04:52.589"></status>
</kw>
<msg timestamp="20210408 19:04:52.590" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:04:52.587" endtime="20210408 19:04:52.590"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:04:52.821" level="INFO">${List_Argument_Excel_Value} = ['']</msg>
<status status="PASS" starttime="20210408 19:04:52.820" endtime="20210408 19:04:52.821"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:04:52.897" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:04:52.897" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:04:52.896" endtime="20210408 19:04:52.897"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:04:52.973" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:04:52.972" endtime="20210408 19:04:52.973"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:04:53.051" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:04:53.051" endtime="20210408 19:04:53.051"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:04:53.128" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:04:53.127" endtime="20210408 19:04:53.128"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:04:53.181" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:04:53.181" endtime="20210408 19:04:53.181"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:04:53.232" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:04:53.231" endtime="20210408 19:04:53.232"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:04:53.283" endtime="20210408 19:04:53.283"></status>
</kw>
<msg timestamp="20210408 19:04:53.283" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:04:53.282" endtime="20210408 19:04:53.284"></status>
</kw>
<status status="PASS" starttime="20210408 19:04:52.744" endtime="20210408 19:04:53.284"></status>
</kw>
<msg timestamp="20210408 19:04:53.284" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:04:52.640" endtime="20210408 19:04:53.284"></status>
</kw>
<msg timestamp="20210408 19:04:53.285" level="INFO">${Deal_ANSIID} = </msg>
<status status="PASS" starttime="20210408 19:04:52.535" endtime="20210408 19:04:53.285"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sTicketMode}</arg>
</arguments>
<assign>
<var>${TicketMode}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:04:53.603" endtime="20210408 19:04:53.604"></status>
</kw>
<msg timestamp="20210408 19:04:53.604" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:04:53.601" endtime="20210408 19:04:53.604"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:04:53.807" level="INFO">${List_Argument_Excel_Value} = ['OFF']</msg>
<status status="PASS" starttime="20210408 19:04:53.807" endtime="20210408 19:04:53.807"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:04:53.860" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:04:53.860" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:04:53.859" endtime="20210408 19:04:53.860"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:04:53.911" level="INFO">${Arg_User_Input} = OFF</msg>
<status status="PASS" starttime="20210408 19:04:53.911" endtime="20210408 19:04:53.911"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:04:53.964" level="INFO">${Arg_User_Input} = OFF</msg>
<status status="PASS" starttime="20210408 19:04:53.964" endtime="20210408 19:04:53.964"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:04:54.018" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:04:54.017" endtime="20210408 19:04:54.018"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:04:54.067" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:04:54.067" endtime="20210408 19:04:54.067"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:04:54.119" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:04:54.118" endtime="20210408 19:04:54.119"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:04:54.175" endtime="20210408 19:04:54.175"></status>
</kw>
<msg timestamp="20210408 19:04:54.175" level="INFO">${Extracted_Argument_Value} = OFF</msg>
<status status="PASS" starttime="20210408 19:04:54.173" endtime="20210408 19:04:54.176"></status>
</kw>
<status status="PASS" starttime="20210408 19:04:53.754" endtime="20210408 19:04:54.176"></status>
</kw>
<msg timestamp="20210408 19:04:54.176" level="INFO">${Extracted_Argument_Value} = OFF</msg>
<status status="PASS" starttime="20210408 19:04:53.654" endtime="20210408 19:04:54.176"></status>
</kw>
<msg timestamp="20210408 19:04:54.176" level="INFO">${TicketMode} = OFF</msg>
<status status="PASS" starttime="20210408 19:04:53.544" endtime="20210408 19:04:54.176"></status>
</kw>
<kw name="Select Actions" library="GenericKeywords">
<doc>This keyword selects specific Action in LIQ tree.
e.g. Select Actions [Actions];Deal
@author: fmamaril
&lt;update&gt; bernchua 11/21/2018: added mx activate before click.
&lt;update&gt; ritragel 12/06/2018: added maximize after activating window
@update: ehugo 30JUN2020 - added keyword pre-processingl added screenshot
@update: hstone 16SEP2020 - Moved Argument tag after the Documentation tag
- Added '${ActionSelect} Set Variable [Actions];${ActionName}'
@update: hstone 18SEP2020 - Added conditinal ActionSelect Value if "[Actions];" is existing on the ActionName String</doc>
<arguments>
<arg>${ACTIONS};${ACTION_DEAL}</arg>
</arguments>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sActionName}</arg>
</arguments>
<assign>
<var>${ActionName}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:04:54.539" endtime="20210408 19:04:54.539"></status>
</kw>
<msg timestamp="20210408 19:04:54.540" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:04:54.538" endtime="20210408 19:04:54.540"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:04:54.755" level="INFO">${List_Argument_Excel_Value} = ['[Actions];Deal']</msg>
<status status="PASS" starttime="20210408 19:04:54.754" endtime="20210408 19:04:54.755"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:04:54.831" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:04:54.831" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:04:54.830" endtime="20210408 19:04:54.831"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:04:54.910" level="INFO">${Arg_User_Input} = [ACTIONS];DEAL</msg>
<status status="PASS" starttime="20210408 19:04:54.909" endtime="20210408 19:04:54.910"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:04:54.993" level="INFO">${Arg_User_Input} = [ACTIONS];DEAL</msg>
<status status="PASS" starttime="20210408 19:04:54.992" endtime="20210408 19:04:54.993"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:04:55.071" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:04:55.070" endtime="20210408 19:04:55.071"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:04:55.148" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:04:55.148" endtime="20210408 19:04:55.150"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:04:55.225" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:04:55.224" endtime="20210408 19:04:55.225"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:04:55.307" endtime="20210408 19:04:55.307"></status>
</kw>
<msg timestamp="20210408 19:04:55.307" level="INFO">${Extracted_Argument_Value} = [Actions];Deal</msg>
<status status="PASS" starttime="20210408 19:04:55.304" endtime="20210408 19:04:55.307"></status>
</kw>
<status status="PASS" starttime="20210408 19:04:54.695" endtime="20210408 19:04:55.308"></status>
</kw>
<msg timestamp="20210408 19:04:55.308" level="INFO">${Extracted_Argument_Value} = [Actions];Deal</msg>
<status status="PASS" starttime="20210408 19:04:54.591" endtime="20210408 19:04:55.308"></status>
</kw>
<msg timestamp="20210408 19:04:55.308" level="INFO">${ActionName} = [Actions];Deal</msg>
<status status="PASS" starttime="20210408 19:04:54.486" endtime="20210408 19:04:55.308"></status>
</kw>
<kw name="Mx LoanIQ Activate Window" library="LoanIQ">
<doc>| Usage |
To activate existing window if present.</doc>
<arguments>
<arg>${LIQ_Window}</arg>
</arguments>
<msg timestamp="20210408 19:04:55.581" level="INFO">Window : JavaWindow("title:=Fusion Loan IQ.*Business Date.*") is activated</msg>
<status status="PASS" starttime="20210408 19:04:55.376" endtime="20210408 19:04:55.582"></status>
</kw>
<kw name="Mx LoanIQ Maximize" library="LoanIQ">
<doc>| Usage |
To maximize the existing window.</doc>
<arguments>
<arg>${LIQ_Window}</arg>
</arguments>
<msg timestamp="20210408 19:04:55.844" level="INFO">JavaWindow("title:=Fusion Loan IQ.*Business Date.*") Window is maximized.</msg>
<status status="PASS" starttime="20210408 19:04:55.633" endtime="20210408 19:04:55.844"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_Actions_Button}</arg>
</arguments>
<msg timestamp="20210408 19:04:56.327" level="INFO">JavaWindow("title:=Fusion Loan IQ.*").JavaButton("Index:=3") is clicked.</msg>
<status status="PASS" starttime="20210408 19:04:55.923" endtime="20210408 19:04:56.327"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"[Actions];" in """${ActionName}"""</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20210408 19:04:56.380" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20210408 19:04:56.380" endtime="20210408 19:04:56.380"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${status}'=='True'</arg>
<arg>Set Variable</arg>
<arg>${ActionName}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>[Actions];${ActionName}</arg>
</arguments>
<assign>
<var>${ActionSelect}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${ActionName}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:04:56.441" endtime="20210408 19:04:56.441"></status>
</kw>
<msg timestamp="20210408 19:04:56.442" level="INFO">${ActionSelect} = [Actions];Deal</msg>
<status status="PASS" starttime="20210408 19:04:56.439" endtime="20210408 19:04:56.442"></status>
</kw>
<kw name="Mx LoanIQ Active Javatree Item" library="LoanIQ">
<doc>| Usage |
Used to activate/select the tree item in JavaTree</doc>
<arguments>
<arg>${LIQ_Tree}</arg>
<arg>${ActionSelect}</arg>
</arguments>
<msg timestamp="20210408 19:04:56.787" level="INFO">Selected item : '[Actions];Deal' present in 'JavaWindow("title:=Fusion Loan IQ.*").JavaTree("tagname:=Tree","index:=0")' object.</msg>
<status status="PASS" starttime="20210408 19:04:56.492" endtime="20210408 19:04:56.787"></status>
</kw>
<kw name="Take Screenshot with text into Test Document" library="ReportMaker_Keywords">
<doc>This keyword is used to add screenshot with image filename as description into test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Select Actions</arg>
</arguments>
<kw name="Take Screenshot" library="Screenshot">
<doc>Takes a screenshot in JPEG format and embeds it into the log file.</doc>
<arguments>
<arg>${imageName}</arg>
</arguments>
<msg timestamp="20210408 19:04:57.034" level="INFO" html="yes">&lt;a href="Results/LoanIQ/TC01%20-%20Validate%20ARR%20Pricing%20Option%20at%20Deal%20Level%20and%20Add%20Libor%20Option___2021-04-08%2019-04-35.729/Select%20Actions_1.jpg"&gt;&lt;img src="Results/LoanIQ/TC01%20-%20Validate%20ARR%20Pricing%20Option%20at%20Deal%20Level%20and%20Add%20Libor%20Option___2021-04-08%2019-04-35.729/Select%20Actions_1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210408 19:04:56.917" endtime="20210408 19:04:57.034"></status>
</kw>
<kw name="Get Latest File" library="ReportMaker">
<arguments>
<arg>${getfilePath}</arg>
</arguments>
<assign>
<var>${imagePath}</var>
</assign>
<msg timestamp="20210408 19:04:57.220" level="INFO">${imagePath} = C:\Git_Evergreen\transform_arr\Results\LoanIQ\TC01 - Validate ARR Pricing Option at Deal Level and Add Libor Option___2021-04-08 19-04-35.729\Select Actions_1.jpg</msg>
<status status="PASS" starttime="20210408 19:04:57.219" endtime="20210408 19:04:57.221"></status>
</kw>
<kw name="Put Screenshot With Text" library="ReportMaker">
<arguments>
<arg>${imagePath}</arg>
<arg>${imageName}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:04:57.282" endtime="20210408 19:04:57.291"></status>
</kw>
<status status="PASS" starttime="20210408 19:04:56.845" endtime="20210408 19:04:57.292"></status>
</kw>
<status status="PASS" starttime="20210408 19:04:54.328" endtime="20210408 19:04:57.292"></status>
</kw>
<kw name="Validate Fields on Deal Select Screen" library="Deal_Notebook">
<tags>
<tag>Validation</tag>
</tags>
<doc>This keywod validates the availability of objects in Deal Select Screen.
@author: fmamaril
@update: jloretiz 05SEP2020 - use wizard is not available in BNS .3</doc>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_DelectSelect_NewDeal_RadioButton}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_DelectSelect_NewDeal_RadioButton}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:04:58.252" level="INFO">Locator = 'JavaWindow("title:=Deal Select.*").JavaRadioButton("attached text:=New")' exists.</msg>
<status status="PASS" starttime="20210408 19:04:57.411" endtime="20210408 19:04:58.252"></status>
</kw>
<status status="PASS" starttime="20210408 19:04:57.408" endtime="20210408 19:04:58.253"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_DelectSelect_Existing_RadioButton}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_DelectSelect_Existing_RadioButton}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:04:58.380" level="INFO">Locator = 'JavaWindow("title:=Deal Select.*").JavaRadioButton("attached text:=Existing")' exists.</msg>
<status status="PASS" starttime="20210408 19:04:58.315" endtime="20210408 19:04:58.381"></status>
</kw>
<status status="PASS" starttime="20210408 19:04:58.313" endtime="20210408 19:04:58.381"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_DelectSelect_MassSale_RadioButton}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_DelectSelect_MassSale_RadioButton}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:04:58.499" level="INFO">Locator = 'JavaWindow("title:=Deal Select.*").JavaRadioButton("attached text:=Mass Sale")' exists.</msg>
<status status="PASS" starttime="20210408 19:04:58.441" endtime="20210408 19:04:58.499"></status>
</kw>
<status status="PASS" starttime="20210408 19:04:58.440" endtime="20210408 19:04:58.500"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_DelectSelect_Active_RadioButton}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_DelectSelect_Active_RadioButton}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:04:58.618" level="INFO">Locator = 'JavaWindow("title:=Deal Select.*").JavaRadioButton("attached text:=Active")' exists.</msg>
<status status="PASS" starttime="20210408 19:04:58.561" endtime="20210408 19:04:58.618"></status>
</kw>
<status status="PASS" starttime="20210408 19:04:58.558" endtime="20210408 19:04:58.619"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_DelectSelect_Inactive_RadioButton}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_DelectSelect_Inactive_RadioButton}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:04:58.745" level="INFO">Locator = 'JavaWindow("title:=Deal Select.*").JavaRadioButton("attached text:=Inactive")' exists.</msg>
<status status="PASS" starttime="20210408 19:04:58.688" endtime="20210408 19:04:58.745"></status>
</kw>
<status status="PASS" starttime="20210408 19:04:58.687" endtime="20210408 19:04:58.746"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_DelectSelect_Both_RadioButton}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_DelectSelect_Both_RadioButton}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:04:58.862" level="INFO">Locator = 'JavaWindow("title:=Deal Select.*").JavaRadioButton("attached text:=Both")' exists.</msg>
<status status="PASS" starttime="20210408 19:04:58.805" endtime="20210408 19:04:58.863"></status>
</kw>
<status status="PASS" starttime="20210408 19:04:58.803" endtime="20210408 19:04:58.863"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_DealSelect_Ok_Button}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_DealSelect_Ok_Button}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:04:58.999" level="INFO">Locator = 'JavaWindow("title:=Deal Select").JavaButton("label:=OK.*")' exists.</msg>
<status status="PASS" starttime="20210408 19:04:58.920" endtime="20210408 19:04:58.999"></status>
</kw>
<status status="PASS" starttime="20210408 19:04:58.919" endtime="20210408 19:04:59.000"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_DealSelect_Search_Button}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_DealSelect_Search_Button}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:04:59.126" level="INFO">Locator = 'JavaWindow("label:=Deal Select").JavaButton("label:=Search")' exists.</msg>
<status status="PASS" starttime="20210408 19:04:59.054" endtime="20210408 19:04:59.126"></status>
</kw>
<status status="PASS" starttime="20210408 19:04:59.052" endtime="20210408 19:04:59.126"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_DealSelect_Cancel_Button}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_DealSelect_Cancel_Button}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:04:59.245" level="INFO">Locator = 'JavaWindow("title:=Deal Select").JavaButton("label:=Cancel.*")' exists.</msg>
<status status="PASS" starttime="20210408 19:04:59.187" endtime="20210408 19:04:59.246"></status>
</kw>
<status status="PASS" starttime="20210408 19:04:59.186" endtime="20210408 19:04:59.246"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_DealSelect_IdentifyBy_Text}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_DealSelect_IdentifyBy_Text}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:04:59.409" level="INFO">Locator = 'JavaWindow("title:=Deal Select").JavaStaticText("attached text:=Identify By:")' exists.</msg>
<status status="PASS" starttime="20210408 19:04:59.301" endtime="20210408 19:04:59.409"></status>
</kw>
<status status="PASS" starttime="20210408 19:04:59.299" endtime="20210408 19:04:59.410"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_DealSelect_IdentifyBy_List}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_DealSelect_IdentifyBy_List}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:04:59.557" level="INFO">Locator = 'JavaWindow("title:=Deal Select").JavaList("value:=Name")' exists.</msg>
<status status="PASS" starttime="20210408 19:04:59.499" endtime="20210408 19:04:59.557"></status>
</kw>
<status status="PASS" starttime="20210408 19:04:59.497" endtime="20210408 19:04:59.558"></status>
</kw>
<status status="PASS" starttime="20210408 19:04:57.346" endtime="20210408 19:04:59.558"></status>
</kw>
<kw name="Mx LoanIQ Set" library="LoanIQ">
<doc>|Usage|</doc>
<arguments>
<arg>${LIQ_DelectSelect_NewDeal_RadioButton}</arg>
<arg>${ON}</arg>
</arguments>
<msg timestamp="20210408 19:05:00.343" level="INFO">Object = 'JavaWindow("title:=Deal Select.*").JavaRadioButton("attached text:=New")' is set.</msg>
<status status="PASS" starttime="20210408 19:04:59.619" endtime="20210408 19:05:00.344"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Validate Fields on Deal Select Screen for New Deal</arg>
<arg>${Deal_Currency}</arg>
</arguments>
<kw name="Validate Fields on Deal Select Screen for New Deal" library="Deal_Notebook">
<tags>
<tag>Validation</tag>
</tags>
<doc>This keywod validates the availability of objects after selecting New Radio button in Deal Select Screen.
@author: fmamaril
@update: jloretiz 05SEP2020 - use wizard is not available in BNS .3</doc>
<arguments>
<arg>${Deal_Currency}</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_DelectSelect_NewDeal_RadioButton}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_DelectSelect_NewDeal_RadioButton}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:05:00.529" level="INFO">Locator = 'JavaWindow("title:=Deal Select.*").JavaRadioButton("attached text:=New")' exists.</msg>
<status status="PASS" starttime="20210408 19:05:00.462" endtime="20210408 19:05:00.529"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:00.460" endtime="20210408 19:05:00.530"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_DelectSelect_Existing_RadioButton}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_DelectSelect_Existing_RadioButton}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:05:00.661" level="INFO">Locator = 'JavaWindow("title:=Deal Select.*").JavaRadioButton("attached text:=Existing")' exists.</msg>
<status status="PASS" starttime="20210408 19:05:00.600" endtime="20210408 19:05:00.661"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:00.598" endtime="20210408 19:05:00.661"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_DelectSelect_MassSale_RadioButton}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_DelectSelect_MassSale_RadioButton}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:05:00.789" level="INFO">Locator = 'JavaWindow("title:=Deal Select.*").JavaRadioButton("attached text:=Mass Sale")' exists.</msg>
<status status="PASS" starttime="20210408 19:05:00.726" endtime="20210408 19:05:00.789"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:00.724" endtime="20210408 19:05:00.790"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_DealSelect_DropInFolder_Checkbox}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_DealSelect_DropInFolder_Checkbox}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:05:00.921" level="INFO">Locator = 'JavaWindow("title:=Deal Select").JavaCheckBox("attached text:=Drop in Folder.*")' exists.</msg>
<status status="PASS" starttime="20210408 19:05:00.851" endtime="20210408 19:05:00.921"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:00.850" endtime="20210408 19:05:00.921"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_DealSelect_TicketMode_Checkbox}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_DealSelect_TicketMode_Checkbox}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:05:01.048" level="INFO">Locator = 'JavaWindow("title:=Deal Select").JavaCheckBox("attached text:=Ticket Mode.*")' exists.</msg>
<status status="PASS" starttime="20210408 19:05:00.984" endtime="20210408 19:05:01.048"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:00.982" endtime="20210408 19:05:01.049"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_DealSelect_Name_TextField}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_DealSelect_Name_TextField}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:05:01.176" level="INFO">Locator = 'JavaWindow("title:=Deal Select.*").JavaEdit("attached text:=Name:")' exists.</msg>
<status status="PASS" starttime="20210408 19:05:01.104" endtime="20210408 19:05:01.176"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:01.102" endtime="20210408 19:05:01.177"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_DealSelect_Alias_TextField}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_DealSelect_Alias_TextField}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:05:01.302" level="INFO">Locator = 'JavaWindow("title:=Deal Select.*").JavaEdit("attached text:=Alias:")' exists.</msg>
<status status="PASS" starttime="20210408 19:05:01.230" endtime="20210408 19:05:01.302"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:01.228" endtime="20210408 19:05:01.302"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_DealSelect_Department_SelectBox}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_DealSelect_Department_SelectBox}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:05:01.421" level="INFO">Locator = 'JavaWindow("title:=Deal Select.*").JavaList("attached text:=Department:")' exists.</msg>
<status status="PASS" starttime="20210408 19:05:01.361" endtime="20210408 19:05:01.421"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:01.360" endtime="20210408 19:05:01.422"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_DealSelect_Tracking_TextField}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_DealSelect_Tracking_TextField}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:05:01.552" level="INFO">Locator = 'JavaWindow("title:=Deal Select.*").JavaEdit("attached text:=Tracking.*")' exists.</msg>
<status status="PASS" starttime="20210408 19:05:01.479" endtime="20210408 19:05:01.553"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:01.477" endtime="20210408 19:05:01.553"></status>
</kw>
<kw name="Mx LoanIQ Get Data" library="LoanIQ">
<doc>| Usage |
Used to returns the text of object identified by `locator'</doc>
<arguments>
<arg>${LIQ_DealSelect_Tracking_TextField}</arg>
<arg>value%IDvalue</arg>
</arguments>
<assign>
<var>${IDvalue}</var>
</assign>
<msg timestamp="20210408 19:05:01.684" level="INFO">Fetching value from object: JavaWindow("title:=Deal Select.*").JavaEdit("attached text:=Tracking.*") 
 Value = : 1766</msg>
<msg timestamp="20210408 19:05:01.736" level="INFO">${IDvalue} = 1766</msg>
<msg timestamp="20210408 19:05:01.736" level="INFO">${IDvalue} = 1766</msg>
<status status="PASS" starttime="20210408 19:05:01.611" endtime="20210408 19:05:01.736"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be Equal</arg>
<arg>${IDvalue}</arg>
<arg>${null}</arg>
</arguments>
<kw name="Should Not Be Equal" library="BuiltIn">
<doc>Fails if the given objects are equal.</doc>
<arguments>
<arg>${IDvalue}</arg>
<arg>${null}</arg>
</arguments>
<msg timestamp="20210408 19:05:01.789" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;class 'NoneType'&gt;</msg>
<status status="PASS" starttime="20210408 19:05:01.789" endtime="20210408 19:05:01.789"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:01.787" endtime="20210408 19:05:01.789"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_DealSelect_AlternateID_TextField}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_DealSelect_AlternateID_TextField}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:05:01.909" level="INFO">Locator = 'JavaWindow("title:=Deal Select.*").JavaEdit("attached text:=Alternate ID:")' exists.</msg>
<status status="PASS" starttime="20210408 19:05:01.840" endtime="20210408 19:05:01.909"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:01.838" endtime="20210408 19:05:01.909"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_DealSelect_ANSIID_TextField}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_DealSelect_ANSIID_TextField}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:05:02.045" level="INFO">Locator = 'JavaWindow("title:=Deal Select.*").JavaEdit("attached text:=ANSI ID:")' exists.</msg>
<status status="PASS" starttime="20210408 19:05:01.982" endtime="20210408 19:05:02.045"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:01.980" endtime="20210408 19:05:02.046"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_DealSelect_Ok_Button}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_DealSelect_Ok_Button}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:05:02.167" level="INFO">Locator = 'JavaWindow("title:=Deal Select").JavaButton("label:=OK.*")' exists.</msg>
<status status="PASS" starttime="20210408 19:05:02.099" endtime="20210408 19:05:02.168"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:02.098" endtime="20210408 19:05:02.168"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_DealSelect_Search_Button}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_DealSelect_Search_Button}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:05:02.284" level="INFO">Locator = 'JavaWindow("label:=Deal Select").JavaButton("label:=Search")' exists.</msg>
<status status="PASS" starttime="20210408 19:05:02.220" endtime="20210408 19:05:02.285"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:02.219" endtime="20210408 19:05:02.285"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_DealSelect_Cancel_Button}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_DealSelect_Cancel_Button}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:05:02.408" level="INFO">Locator = 'JavaWindow("title:=Deal Select").JavaButton("label:=Cancel.*")' exists.</msg>
<status status="PASS" starttime="20210408 19:05:02.346" endtime="20210408 19:05:02.409"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:02.344" endtime="20210408 19:05:02.409"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_DealSelect_SalesGroups_Button}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_DealSelect_SalesGroups_Button}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:05:02.535" level="INFO">Locator = 'JavaWindow("title:=Deal Select").JavaButton("label:=Sales Groups.*")' exists.</msg>
<status status="PASS" starttime="20210408 19:05:02.464" endtime="20210408 19:05:02.535"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:02.462" endtime="20210408 19:05:02.535"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Validate if Element is Disabled</arg>
<arg>${LIQ_DealSelect_Search_Button}</arg>
<arg>Search</arg>
</arguments>
<kw name="Validate if Element is Disabled" library="GenericKeywords">
<doc>This keyword validates if Element is disabled
@author: ghabal</doc>
<arguments>
<arg>${LIQ_DealSelect_Search_Button}</arg>
<arg>Search</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%0</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>enabled%0</arg>
</arguments>
<msg timestamp="20210408 19:05:02.766" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:05:02.649" endtime="20210408 19:05:02.766"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:02.648" endtime="20210408 19:05:02.766"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%0</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>enabled%0</arg>
</arguments>
<msg timestamp="20210408 19:05:02.940" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:05:02.819" endtime="20210408 19:05:02.941"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:02.818" endtime="20210408 19:05:02.941"></status>
</kw>
<msg timestamp="20210408 19:05:02.941" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:05:02.817" endtime="20210408 19:05:02.941"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed disabled</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed enabled</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>'${Field_Label}' element is confirmed disabled</arg>
</arguments>
<msg timestamp="20210408 19:05:02.995" level="INFO">'Search' element is confirmed disabled</msg>
<status status="PASS" starttime="20210408 19:05:02.994" endtime="20210408 19:05:02.995"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:02.992" endtime="20210408 19:05:02.995"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:02.592" endtime="20210408 19:05:02.996"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:02.590" endtime="20210408 19:05:02.996"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:00.401" endtime="20210408 19:05:02.996"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:00.398" endtime="20210408 19:05:02.996"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${TicketMode}'=='${OFF}'</arg>
<arg>Mx LoanIQ Set</arg>
<arg>${LIQ_DealSelect_TicketMode_Checkbox}</arg>
<arg>${OFF}</arg>
<arg>ELSE</arg>
<arg>Mx LoanIQ Set</arg>
<arg>${LIQ_DealSelect_TicketMode_Checkbox}</arg>
<arg>${ON}</arg>
</arguments>
<kw name="Mx LoanIQ Set" library="LoanIQ">
<doc>|Usage|</doc>
<arguments>
<arg>${LIQ_DealSelect_TicketMode_Checkbox}</arg>
<arg>${OFF}</arg>
</arguments>
<msg timestamp="20210408 19:05:03.121" level="INFO">Object = 'JavaWindow("title:=Deal Select").JavaCheckBox("attached text:=Ticket Mode.*")' is unset.</msg>
<status status="PASS" starttime="20210408 19:05:03.048" endtime="20210408 19:05:03.122"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:03.047" endtime="20210408 19:05:03.122"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Deal_Name}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Enter</arg>
<arg>${LIQ_DealSelect_Name_TextField}</arg>
<arg>${Deal_Name}</arg>
</arguments>
<kw name="Mx LoanIQ Enter" library="LoanIQ">
<doc>| Usage |
To enter the data to the element specified by 'locator'.</doc>
<arguments>
<arg>${LIQ_DealSelect_Name_TextField}</arg>
<arg>${Deal_Name}</arg>
</arguments>
<msg timestamp="20210408 19:05:03.331" level="INFO">Input= ARR_LIBORSC308042021190438PNT is entered in element= JavaWindow("title:=Deal Select.*").JavaEdit("attached text:=Name:")</msg>
<status status="PASS" starttime="20210408 19:05:03.179" endtime="20210408 19:05:03.331"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:03.177" endtime="20210408 19:05:03.332"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Deal_Alias}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Enter</arg>
<arg>${LIQ_DealSelect_Alias_TextField}</arg>
<arg>${Deal_Alias}</arg>
</arguments>
<kw name="Mx LoanIQ Enter" library="LoanIQ">
<doc>| Usage |
To enter the data to the element specified by 'locator'.</doc>
<arguments>
<arg>${LIQ_DealSelect_Alias_TextField}</arg>
<arg>${Deal_Alias}</arg>
</arguments>
<msg timestamp="20210408 19:05:03.553" level="INFO">Input= SC308042021190441XJG is entered in element= JavaWindow("title:=Deal Select.*").JavaEdit("attached text:=Alias:")</msg>
<status status="PASS" starttime="20210408 19:05:03.393" endtime="20210408 19:05:03.553"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:03.391" endtime="20210408 19:05:03.553"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Deal_AternateID}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Enter</arg>
<arg>${LIQ_DealSelect_AlternateID_TextField}</arg>
<arg>${Deal_AternateID}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:05:03.607" endtime="20210408 19:05:03.608"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Deal_ANSIID}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Enter</arg>
<arg>${LIQ_DealSelect_ANSIID_TextField}</arg>
<arg>${Deal_ANSIID}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:05:03.661" endtime="20210408 19:05:03.661"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Deal_Currency}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Select Combo Box Value</arg>
<arg>${LIQ_DealSelect_Currenrcy_SelectBox}</arg>
<arg>${Deal_Currency}</arg>
</arguments>
<kw name="Mx LoanIQ Select Combo Box Value" library="LoanIQ">
<doc>| Usage |
Used to select data in JavaList</doc>
<arguments>
<arg>${LIQ_DealSelect_Currenrcy_SelectBox}</arg>
<arg>${Deal_Currency}</arg>
</arguments>
<msg timestamp="20210408 19:05:03.802" level="INFO">Selected value = 'USD' from Combo box object = 'JavaWindow("title:=Deal Select.*").JavaList("attached text:=Currency:")'.</msg>
<status status="PASS" starttime="20210408 19:05:03.715" endtime="20210408 19:05:03.803"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:03.713" endtime="20210408 19:05:03.803"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Deal_Department}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Select Combo Box Value</arg>
<arg>${LIQ_DealSelect_Department_SelectBox}</arg>
<arg>${Deal_Department}</arg>
</arguments>
<kw name="Mx LoanIQ Select Combo Box Value" library="LoanIQ">
<doc>| Usage |
Used to select data in JavaList</doc>
<arguments>
<arg>${LIQ_DealSelect_Department_SelectBox}</arg>
<arg>${Deal_Department}</arg>
</arguments>
<msg timestamp="20210408 19:05:03.960" level="INFO">Selected value = 'North America' from Combo box object = 'JavaWindow("title:=Deal Select.*").JavaList("attached text:=Department:")'.</msg>
<status status="PASS" starttime="20210408 19:05:03.859" endtime="20210408 19:05:03.961"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:03.857" endtime="20210408 19:05:03.961"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Validate Input on Create New Deal</arg>
<arg>${Deal_Name}</arg>
<arg>${Deal_Department}</arg>
<arg>${Deal_Currency}</arg>
<arg>${Deal_Alias}</arg>
</arguments>
<kw name="Validate Input on Create New Deal" library="Deal_Notebook">
<tags>
<tag>Validation</tag>
</tags>
<doc>This keywod selects New radio button and popuate fields for Deal Select Window.
@author: fmamaril
@update: anandan0 11JAN2021 Getting Substring of Deal for Validating</doc>
<arguments>
<arg>${Deal_Name}</arg>
<arg>${Deal_Department}</arg>
<arg>${Deal_Currency}</arg>
<arg>${Deal_Alias}</arg>
</arguments>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sDeal_Name}</arg>
</arguments>
<assign>
<var>${Deal_Name}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:05:04.240" endtime="20210408 19:05:04.240"></status>
</kw>
<msg timestamp="20210408 19:05:04.240" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:05:04.238" endtime="20210408 19:05:04.241"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:05:04.455" level="INFO">${List_Argument_Excel_Value} = ['ARR_LIBORSC308042021190438PNT']</msg>
<status status="PASS" starttime="20210408 19:05:04.454" endtime="20210408 19:05:04.455"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:05:04.507" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:05:04.508" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:05:04.507" endtime="20210408 19:05:04.508"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:05:04.560" level="INFO">${Arg_User_Input} = ARR_LIBORSC308042021190438PNT</msg>
<status status="PASS" starttime="20210408 19:05:04.560" endtime="20210408 19:05:04.560"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:05:04.612" level="INFO">${Arg_User_Input} = ARR_LIBORSC308042021190438PNT</msg>
<status status="PASS" starttime="20210408 19:05:04.612" endtime="20210408 19:05:04.613"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:05:04.662" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:05:04.662" endtime="20210408 19:05:04.662"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:05:04.715" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:05:04.714" endtime="20210408 19:05:04.715"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:05:04.877" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:05:04.877" endtime="20210408 19:05:04.877"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:05:04.930" endtime="20210408 19:05:04.931"></status>
</kw>
<msg timestamp="20210408 19:05:04.931" level="INFO">${Extracted_Argument_Value} = ARR_LIBORSC308042021190438PNT</msg>
<status status="PASS" starttime="20210408 19:05:04.928" endtime="20210408 19:05:04.931"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:04.399" endtime="20210408 19:05:04.932"></status>
</kw>
<msg timestamp="20210408 19:05:04.932" level="INFO">${Extracted_Argument_Value} = ARR_LIBORSC308042021190438PNT</msg>
<status status="PASS" starttime="20210408 19:05:04.292" endtime="20210408 19:05:04.932"></status>
</kw>
<msg timestamp="20210408 19:05:04.932" level="INFO">${Deal_Name} = ARR_LIBORSC308042021190438PNT</msg>
<status status="PASS" starttime="20210408 19:05:04.184" endtime="20210408 19:05:04.932"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sDeal_Department}</arg>
</arguments>
<assign>
<var>${Deal_Department}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:05:05.160" endtime="20210408 19:05:05.161"></status>
</kw>
<msg timestamp="20210408 19:05:05.161" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:05:05.158" endtime="20210408 19:05:05.161"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:05:05.368" level="INFO">${List_Argument_Excel_Value} = ['North America']</msg>
<status status="PASS" starttime="20210408 19:05:05.367" endtime="20210408 19:05:05.368"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:05:05.417" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:05:05.418" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:05:05.417" endtime="20210408 19:05:05.418"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:05:05.470" level="INFO">${Arg_User_Input} = NORTH AMERICA</msg>
<status status="PASS" starttime="20210408 19:05:05.469" endtime="20210408 19:05:05.470"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:05:05.520" level="INFO">${Arg_User_Input} = NORTH AMERICA</msg>
<status status="PASS" starttime="20210408 19:05:05.519" endtime="20210408 19:05:05.520"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:05:05.571" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:05:05.570" endtime="20210408 19:05:05.571"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:05:05.628" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:05:05.627" endtime="20210408 19:05:05.628"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:05:05.691" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:05:05.690" endtime="20210408 19:05:05.691"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:05:05.766" endtime="20210408 19:05:05.766"></status>
</kw>
<msg timestamp="20210408 19:05:05.767" level="INFO">${Extracted_Argument_Value} = North America</msg>
<status status="PASS" starttime="20210408 19:05:05.764" endtime="20210408 19:05:05.767"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:05.316" endtime="20210408 19:05:05.767"></status>
</kw>
<msg timestamp="20210408 19:05:05.767" level="INFO">${Extracted_Argument_Value} = North America</msg>
<status status="PASS" starttime="20210408 19:05:05.213" endtime="20210408 19:05:05.767"></status>
</kw>
<msg timestamp="20210408 19:05:05.768" level="INFO">${Deal_Department} = North America</msg>
<status status="PASS" starttime="20210408 19:05:05.094" endtime="20210408 19:05:05.768"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sDeal_Currency}</arg>
</arguments>
<assign>
<var>${Deal_Currency}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:05:06.077" endtime="20210408 19:05:06.077"></status>
</kw>
<msg timestamp="20210408 19:05:06.077" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:05:06.075" endtime="20210408 19:05:06.077"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:05:06.344" level="INFO">${List_Argument_Excel_Value} = ['USD']</msg>
<status status="PASS" starttime="20210408 19:05:06.344" endtime="20210408 19:05:06.345"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:05:06.395" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:05:06.395" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:05:06.395" endtime="20210408 19:05:06.395"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:05:06.445" level="INFO">${Arg_User_Input} = USD</msg>
<status status="PASS" starttime="20210408 19:05:06.445" endtime="20210408 19:05:06.445"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:05:06.496" level="INFO">${Arg_User_Input} = USD</msg>
<status status="PASS" starttime="20210408 19:05:06.495" endtime="20210408 19:05:06.496"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:05:06.547" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:05:06.546" endtime="20210408 19:05:06.547"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:05:06.602" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:05:06.601" endtime="20210408 19:05:06.602"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:05:06.652" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:05:06.651" endtime="20210408 19:05:06.652"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:05:06.705" endtime="20210408 19:05:06.705"></status>
</kw>
<msg timestamp="20210408 19:05:06.705" level="INFO">${Extracted_Argument_Value} = USD</msg>
<status status="PASS" starttime="20210408 19:05:06.702" endtime="20210408 19:05:06.705"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:06.293" endtime="20210408 19:05:06.706"></status>
</kw>
<msg timestamp="20210408 19:05:06.706" level="INFO">${Extracted_Argument_Value} = USD</msg>
<status status="PASS" starttime="20210408 19:05:06.152" endtime="20210408 19:05:06.706"></status>
</kw>
<msg timestamp="20210408 19:05:06.706" level="INFO">${Deal_Currency} = USD</msg>
<status status="PASS" starttime="20210408 19:05:05.998" endtime="20210408 19:05:06.706"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sDeal_Alias}</arg>
</arguments>
<assign>
<var>${Deal_Alias}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:05:06.928" endtime="20210408 19:05:06.928"></status>
</kw>
<msg timestamp="20210408 19:05:06.928" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:05:06.926" endtime="20210408 19:05:06.929"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:05:07.138" level="INFO">${List_Argument_Excel_Value} = ['SC308042021190441XJG']</msg>
<status status="PASS" starttime="20210408 19:05:07.137" endtime="20210408 19:05:07.138"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:05:07.189" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:05:07.189" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:05:07.188" endtime="20210408 19:05:07.190"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:05:07.242" level="INFO">${Arg_User_Input} = SC308042021190441XJG</msg>
<status status="PASS" starttime="20210408 19:05:07.241" endtime="20210408 19:05:07.242"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:05:07.293" level="INFO">${Arg_User_Input} = SC308042021190441XJG</msg>
<status status="PASS" starttime="20210408 19:05:07.293" endtime="20210408 19:05:07.293"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:05:07.346" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:05:07.345" endtime="20210408 19:05:07.346"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:05:07.398" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:05:07.397" endtime="20210408 19:05:07.398"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:05:07.558" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:05:07.558" endtime="20210408 19:05:07.559"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:05:07.615" endtime="20210408 19:05:07.616"></status>
</kw>
<msg timestamp="20210408 19:05:07.616" level="INFO">${Extracted_Argument_Value} = SC308042021190441XJG</msg>
<status status="PASS" starttime="20210408 19:05:07.613" endtime="20210408 19:05:07.616"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:07.083" endtime="20210408 19:05:07.616"></status>
</kw>
<msg timestamp="20210408 19:05:07.617" level="INFO">${Extracted_Argument_Value} = SC308042021190441XJG</msg>
<status status="PASS" starttime="20210408 19:05:06.979" endtime="20210408 19:05:07.617"></status>
</kw>
<msg timestamp="20210408 19:05:07.617" level="INFO">${Deal_Alias} = SC308042021190441XJG</msg>
<status status="PASS" starttime="20210408 19:05:06.871" endtime="20210408 19:05:07.617"></status>
</kw>
<kw name="Validate Loan IQ Details" library="GenericKeywords">
<doc>This keyword validates the displayed Loan IQ details in the application vs the data in excel
@author: jcdelacruz/ghabal
@update: bernchua Added property 'value' in Mx LoanIQ Get Data keyword.
@update: jdelacru 13DEC2019 - Changed the argument in getting value for UI</doc>
<arguments>
<arg>${Deal_Name}</arg>
<arg>${LIQ_DealSelect_Name_TextField}</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Get Data</arg>
<arg>${Value_fromUI}</arg>
<arg>value%Value_fromUI</arg>
</arguments>
<assign>
<var>${Value_fromUI}</var>
</assign>
<kw name="Mx LoanIQ Get Data" library="LoanIQ">
<doc>| Usage |
Used to returns the text of object identified by `locator'</doc>
<arguments>
<arg>${Value_fromUI}</arg>
<arg>value%Value_fromUI</arg>
</arguments>
<msg timestamp="20210408 19:05:07.798" level="INFO">Fetching value from object: JavaWindow("title:=Deal Select.*").JavaEdit("attached text:=Name:") 
 Value = : ARR_LIBORSC308042021190438PNT</msg>
<msg timestamp="20210408 19:05:07.798" level="INFO">${Value_fromUI} = ARR_LIBORSC308042021190438PNT</msg>
<status status="PASS" starttime="20210408 19:05:07.722" endtime="20210408 19:05:07.798"></status>
</kw>
<msg timestamp="20210408 19:05:07.799" level="INFO">${Value_fromUI} = ARR_LIBORSC308042021190438PNT</msg>
<status status="PASS" starttime="20210408 19:05:07.720" endtime="20210408 19:05:07.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Value_fromExcel} - This is the data retrieved from Excel Sheet</arg>
</arguments>
<msg timestamp="20210408 19:05:07.852" level="INFO">ARR_LIBORSC308042021190438PNT - This is the data retrieved from Excel Sheet</msg>
<status status="PASS" starttime="20210408 19:05:07.851" endtime="20210408 19:05:07.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Value_fromUI} - This is the data displayed in the UI/application</arg>
</arguments>
<msg timestamp="20210408 19:05:07.907" level="INFO">ARR_LIBORSC308042021190438PNT - This is the data displayed in the UI/application</msg>
<status status="PASS" starttime="20210408 19:05:07.906" endtime="20210408 19:05:07.907"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:05:07.960" endtime="20210408 19:05:07.960"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:07.958" endtime="20210408 19:05:07.961"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Should Be Equal</arg>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:05:08.016" endtime="20210408 19:05:08.017"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:08.015" endtime="20210408 19:05:08.017"></status>
</kw>
<msg timestamp="20210408 19:05:08.017" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:05:08.013" endtime="20210408 19:05:08.017"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>"${Value_fromExcel}" - data retrieved from Excel Sheet MATCHES "${Value_fromUI}" - the data displayed in the UI/application</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>"${Value_fromExcel}" - data retrieved from Excel Sheet DOES NOT MATCH "${Value_fromUI}" - the data displayed in the UI/application</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"${Value_fromExcel}" - data retrieved from Excel Sheet MATCHES "${Value_fromUI}" - the data displayed in the UI/application</arg>
</arguments>
<msg timestamp="20210408 19:05:08.073" level="INFO">"ARR_LIBORSC308042021190438PNT" - data retrieved from Excel Sheet MATCHES "ARR_LIBORSC308042021190438PNT" - the data displayed in the UI/application</msg>
<status status="PASS" starttime="20210408 19:05:08.072" endtime="20210408 19:05:08.073"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:08.070" endtime="20210408 19:05:08.073"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:07.667" endtime="20210408 19:05:08.074"></status>
</kw>
<kw name="Validate Loan IQ Details" library="GenericKeywords">
<doc>This keyword validates the displayed Loan IQ details in the application vs the data in excel
@author: jcdelacruz/ghabal
@update: bernchua Added property 'value' in Mx LoanIQ Get Data keyword.
@update: jdelacru 13DEC2019 - Changed the argument in getting value for UI</doc>
<arguments>
<arg>${Deal_Department}</arg>
<arg>${LIQ_DealSelect_Department_SelectBox}</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Get Data</arg>
<arg>${Value_fromUI}</arg>
<arg>value%Value_fromUI</arg>
</arguments>
<assign>
<var>${Value_fromUI}</var>
</assign>
<kw name="Mx LoanIQ Get Data" library="LoanIQ">
<doc>| Usage |
Used to returns the text of object identified by `locator'</doc>
<arguments>
<arg>${Value_fromUI}</arg>
<arg>value%Value_fromUI</arg>
</arguments>
<msg timestamp="20210408 19:05:08.243" level="INFO">Fetching value from object: JavaWindow("title:=Deal Select.*").JavaList("attached text:=Department:") 
 Value = : North America</msg>
<msg timestamp="20210408 19:05:08.243" level="INFO">${Value_fromUI} = North America</msg>
<status status="PASS" starttime="20210408 19:05:08.179" endtime="20210408 19:05:08.244"></status>
</kw>
<msg timestamp="20210408 19:05:08.244" level="INFO">${Value_fromUI} = North America</msg>
<status status="PASS" starttime="20210408 19:05:08.177" endtime="20210408 19:05:08.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Value_fromExcel} - This is the data retrieved from Excel Sheet</arg>
</arguments>
<msg timestamp="20210408 19:05:08.299" level="INFO">North America - This is the data retrieved from Excel Sheet</msg>
<status status="PASS" starttime="20210408 19:05:08.299" endtime="20210408 19:05:08.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Value_fromUI} - This is the data displayed in the UI/application</arg>
</arguments>
<msg timestamp="20210408 19:05:08.353" level="INFO">North America - This is the data displayed in the UI/application</msg>
<status status="PASS" starttime="20210408 19:05:08.352" endtime="20210408 19:05:08.353"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:05:08.405" endtime="20210408 19:05:08.406"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:08.403" endtime="20210408 19:05:08.406"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Should Be Equal</arg>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:05:08.458" endtime="20210408 19:05:08.459"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:08.457" endtime="20210408 19:05:08.459"></status>
</kw>
<msg timestamp="20210408 19:05:08.459" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:05:08.455" endtime="20210408 19:05:08.459"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>"${Value_fromExcel}" - data retrieved from Excel Sheet MATCHES "${Value_fromUI}" - the data displayed in the UI/application</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>"${Value_fromExcel}" - data retrieved from Excel Sheet DOES NOT MATCH "${Value_fromUI}" - the data displayed in the UI/application</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"${Value_fromExcel}" - data retrieved from Excel Sheet MATCHES "${Value_fromUI}" - the data displayed in the UI/application</arg>
</arguments>
<msg timestamp="20210408 19:05:08.512" level="INFO">"North America" - data retrieved from Excel Sheet MATCHES "North America" - the data displayed in the UI/application</msg>
<status status="PASS" starttime="20210408 19:05:08.512" endtime="20210408 19:05:08.513"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:08.510" endtime="20210408 19:05:08.513"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:08.124" endtime="20210408 19:05:08.513"></status>
</kw>
<kw name="Validate Loan IQ Details" library="GenericKeywords">
<doc>This keyword validates the displayed Loan IQ details in the application vs the data in excel
@author: jcdelacruz/ghabal
@update: bernchua Added property 'value' in Mx LoanIQ Get Data keyword.
@update: jdelacru 13DEC2019 - Changed the argument in getting value for UI</doc>
<arguments>
<arg>${Deal_Currency}</arg>
<arg>${LIQ_DealSelect_Currenrcy_SelectBox}</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Get Data</arg>
<arg>${Value_fromUI}</arg>
<arg>value%Value_fromUI</arg>
</arguments>
<assign>
<var>${Value_fromUI}</var>
</assign>
<kw name="Mx LoanIQ Get Data" library="LoanIQ">
<doc>| Usage |
Used to returns the text of object identified by `locator'</doc>
<arguments>
<arg>${Value_fromUI}</arg>
<arg>value%Value_fromUI</arg>
</arguments>
<msg timestamp="20210408 19:05:08.683" level="INFO">Fetching value from object: JavaWindow("title:=Deal Select.*").JavaList("attached text:=Currency:") 
 Value = : USD</msg>
<msg timestamp="20210408 19:05:08.683" level="INFO">${Value_fromUI} = USD</msg>
<status status="PASS" starttime="20210408 19:05:08.616" endtime="20210408 19:05:08.683"></status>
</kw>
<msg timestamp="20210408 19:05:08.684" level="INFO">${Value_fromUI} = USD</msg>
<status status="PASS" starttime="20210408 19:05:08.614" endtime="20210408 19:05:08.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Value_fromExcel} - This is the data retrieved from Excel Sheet</arg>
</arguments>
<msg timestamp="20210408 19:05:08.746" level="INFO">USD - This is the data retrieved from Excel Sheet</msg>
<status status="PASS" starttime="20210408 19:05:08.746" endtime="20210408 19:05:08.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Value_fromUI} - This is the data displayed in the UI/application</arg>
</arguments>
<msg timestamp="20210408 19:05:08.801" level="INFO">USD - This is the data displayed in the UI/application</msg>
<status status="PASS" starttime="20210408 19:05:08.800" endtime="20210408 19:05:08.801"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:05:08.854" endtime="20210408 19:05:08.854"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:08.852" endtime="20210408 19:05:08.854"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Should Be Equal</arg>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:05:08.908" endtime="20210408 19:05:08.908"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:08.907" endtime="20210408 19:05:08.909"></status>
</kw>
<msg timestamp="20210408 19:05:08.909" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:05:08.905" endtime="20210408 19:05:08.909"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>"${Value_fromExcel}" - data retrieved from Excel Sheet MATCHES "${Value_fromUI}" - the data displayed in the UI/application</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>"${Value_fromExcel}" - data retrieved from Excel Sheet DOES NOT MATCH "${Value_fromUI}" - the data displayed in the UI/application</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"${Value_fromExcel}" - data retrieved from Excel Sheet MATCHES "${Value_fromUI}" - the data displayed in the UI/application</arg>
</arguments>
<msg timestamp="20210408 19:05:08.966" level="INFO">"USD" - data retrieved from Excel Sheet MATCHES "USD" - the data displayed in the UI/application</msg>
<status status="PASS" starttime="20210408 19:05:08.965" endtime="20210408 19:05:08.966"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:08.964" endtime="20210408 19:05:08.966"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:08.562" endtime="20210408 19:05:08.966"></status>
</kw>
<kw name="Validate Loan IQ Details" library="GenericKeywords">
<doc>This keyword validates the displayed Loan IQ details in the application vs the data in excel
@author: jcdelacruz/ghabal
@update: bernchua Added property 'value' in Mx LoanIQ Get Data keyword.
@update: jdelacru 13DEC2019 - Changed the argument in getting value for UI</doc>
<arguments>
<arg>${Deal_Alias}</arg>
<arg>${LIQ_DealSelect_Alias_TextField}</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Get Data</arg>
<arg>${Value_fromUI}</arg>
<arg>value%Value_fromUI</arg>
</arguments>
<assign>
<var>${Value_fromUI}</var>
</assign>
<kw name="Mx LoanIQ Get Data" library="LoanIQ">
<doc>| Usage |
Used to returns the text of object identified by `locator'</doc>
<arguments>
<arg>${Value_fromUI}</arg>
<arg>value%Value_fromUI</arg>
</arguments>
<msg timestamp="20210408 19:05:09.140" level="INFO">Fetching value from object: JavaWindow("title:=Deal Select.*").JavaEdit("attached text:=Alias:") 
 Value = : SC308042021190441XJG</msg>
<msg timestamp="20210408 19:05:09.141" level="INFO">${Value_fromUI} = SC308042021190441XJG</msg>
<status status="PASS" starttime="20210408 19:05:09.074" endtime="20210408 19:05:09.141"></status>
</kw>
<msg timestamp="20210408 19:05:09.141" level="INFO">${Value_fromUI} = SC308042021190441XJG</msg>
<status status="PASS" starttime="20210408 19:05:09.072" endtime="20210408 19:05:09.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Value_fromExcel} - This is the data retrieved from Excel Sheet</arg>
</arguments>
<msg timestamp="20210408 19:05:09.213" level="INFO">SC308042021190441XJG - This is the data retrieved from Excel Sheet</msg>
<status status="PASS" starttime="20210408 19:05:09.212" endtime="20210408 19:05:09.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Value_fromUI} - This is the data displayed in the UI/application</arg>
</arguments>
<msg timestamp="20210408 19:05:09.266" level="INFO">SC308042021190441XJG - This is the data displayed in the UI/application</msg>
<status status="PASS" starttime="20210408 19:05:09.266" endtime="20210408 19:05:09.267"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:05:09.330" endtime="20210408 19:05:09.330"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:09.328" endtime="20210408 19:05:09.330"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Should Be Equal</arg>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:05:09.408" endtime="20210408 19:05:09.408"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:09.406" endtime="20210408 19:05:09.409"></status>
</kw>
<msg timestamp="20210408 19:05:09.409" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:05:09.404" endtime="20210408 19:05:09.409"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>"${Value_fromExcel}" - data retrieved from Excel Sheet MATCHES "${Value_fromUI}" - the data displayed in the UI/application</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>"${Value_fromExcel}" - data retrieved from Excel Sheet DOES NOT MATCH "${Value_fromUI}" - the data displayed in the UI/application</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"${Value_fromExcel}" - data retrieved from Excel Sheet MATCHES "${Value_fromUI}" - the data displayed in the UI/application</arg>
</arguments>
<msg timestamp="20210408 19:05:09.485" level="INFO">"SC308042021190441XJG" - data retrieved from Excel Sheet MATCHES "SC308042021190441XJG" - the data displayed in the UI/application</msg>
<status status="PASS" starttime="20210408 19:05:09.484" endtime="20210408 19:05:09.485"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:09.482" endtime="20210408 19:05:09.485"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:09.020" endtime="20210408 19:05:09.485"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:04.026" endtime="20210408 19:05:09.485"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:04.024" endtime="20210408 19:05:09.486"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_DealSelect_SalesGroups_Button}</arg>
</arguments>
<msg timestamp="20210408 19:05:09.914" level="INFO">JavaWindow("title:=Deal Select").JavaButton("label:=Sales Groups.*") is clicked.</msg>
<status status="PASS" starttime="20210408 19:05:09.561" endtime="20210408 19:05:09.915"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Deal_SalesGroup}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Select String</arg>
<arg>${LIQ_SalesGroup_Available_JavaTree}</arg>
<arg>${Deal_SalesGroup}</arg>
</arguments>
<kw name="Mx LoanIQ Select String" library="LoanIQ">
<doc>| Usage |
Used to select the given string in JavaTree</doc>
<arguments>
<arg>${LIQ_SalesGroup_Available_JavaTree}</arg>
<arg>${Deal_SalesGroup}</arg>
</arguments>
<msg timestamp="20210408 19:05:12.471" level="INFO">Selected 'Sales Group 1' from 'JavaWindow("title:=Sales Groups Selection.*").JavaTree("attached text:=Available")' object.</msg>
<status status="PASS" starttime="20210408 19:05:09.999" endtime="20210408 19:05:12.471"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:09.997" endtime="20210408 19:05:12.471"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_SalesGroup_OK_Button}</arg>
</arguments>
<msg timestamp="20210408 19:05:12.792" level="INFO">JavaWindow("title:=Sales Groups Selection.*").JavaButton("label:=OK") is clicked.</msg>
<status status="PASS" starttime="20210408 19:05:12.526" endtime="20210408 19:05:12.793"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Select String</arg>
<arg>${LIQ_DealSelect_SalesGroups_JavaTree}</arg>
<arg>${Deal_SalesGroup}</arg>
</arguments>
<kw name="Mx LoanIQ Select String" library="LoanIQ">
<doc>| Usage |
Used to select the given string in JavaTree</doc>
<arguments>
<arg>${LIQ_DealSelect_SalesGroups_JavaTree}</arg>
<arg>${Deal_SalesGroup}</arg>
</arguments>
<msg timestamp="20210408 19:05:15.346" level="INFO">Selected 'Sales Group 1' from 'JavaWindow("title:=Deal Select").JavaTree("tagname:=Drill down to assign primary.*")' object.</msg>
<status status="PASS" starttime="20210408 19:05:12.903" endtime="20210408 19:05:15.346"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:12.901" endtime="20210408 19:05:15.346"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Select String</arg>
<arg>${LIQ_DealSelect_SalesGroups_JavaTree}</arg>
<arg>${YES}</arg>
</arguments>
<kw name="Mx LoanIQ Select String" library="LoanIQ">
<doc>| Usage |
Used to select the given string in JavaTree</doc>
<arguments>
<arg>${LIQ_DealSelect_SalesGroups_JavaTree}</arg>
<arg>${YES}</arg>
</arguments>
<msg timestamp="20210408 19:05:18.466" level="INFO">Selected 'YES' from 'JavaWindow("title:=Deal Select").JavaTree("tagname:=Drill down to assign primary.*")' object.</msg>
<status status="PASS" starttime="20210408 19:05:15.406" endtime="20210408 19:05:18.466"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:15.404" endtime="20210408 19:05:18.467"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${LIQ_DealSelect_DropInFolder_Checkbox}</arg>
<arg>value%1</arg>
</arguments>
<assign>
<var>${Status}</var>
</assign>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${LIQ_DealSelect_DropInFolder_Checkbox}</arg>
<arg>value%1</arg>
</arguments>
<msg timestamp="20210408 19:05:18.667" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:05:18.534" endtime="20210408 19:05:18.668"></status>
</kw>
<msg timestamp="20210408 19:05:18.668" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20210408 19:05:18.532" endtime="20210408 19:05:18.668"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Status}'=='${FALSE}'</arg>
<arg>Mx LoanIQ Set</arg>
<arg>${LIQ_DealSelect_DropInFolder_Checkbox}</arg>
<arg>${ON}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:05:18.728" endtime="20210408 19:05:18.729"></status>
</kw>
<kw name="Take Screenshot with text into Test Document" library="ReportMaker_Keywords">
<doc>This keyword is used to add screenshot with image filename as description into test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Deal Select</arg>
</arguments>
<kw name="Take Screenshot" library="Screenshot">
<doc>Takes a screenshot in JPEG format and embeds it into the log file.</doc>
<arguments>
<arg>${imageName}</arg>
</arguments>
<msg timestamp="20210408 19:05:18.928" level="INFO" html="yes">&lt;a href="Results/LoanIQ/TC01%20-%20Validate%20ARR%20Pricing%20Option%20at%20Deal%20Level%20and%20Add%20Libor%20Option___2021-04-08%2019-04-35.729/Deal%20Select_1.jpg"&gt;&lt;img src="Results/LoanIQ/TC01%20-%20Validate%20ARR%20Pricing%20Option%20at%20Deal%20Level%20and%20Add%20Libor%20Option___2021-04-08%2019-04-35.729/Deal%20Select_1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210408 19:05:18.834" endtime="20210408 19:05:18.928"></status>
</kw>
<kw name="Get Latest File" library="ReportMaker">
<arguments>
<arg>${getfilePath}</arg>
</arguments>
<assign>
<var>${imagePath}</var>
</assign>
<msg timestamp="20210408 19:05:18.992" level="INFO">${imagePath} = C:\Git_Evergreen\transform_arr\Results\LoanIQ\TC01 - Validate ARR Pricing Option at Deal Level and Add Libor Option___2021-04-08 19-04-35.729\Deal Select_1.jpg</msg>
<status status="PASS" starttime="20210408 19:05:18.991" endtime="20210408 19:05:18.992"></status>
</kw>
<kw name="Put Screenshot With Text" library="ReportMaker">
<arguments>
<arg>${imagePath}</arg>
<arg>${imageName}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:05:19.047" endtime="20210408 19:05:19.054"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:18.780" endtime="20210408 19:05:19.055"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_DealSelect_Ok_Button}</arg>
</arguments>
<msg timestamp="20210408 19:05:19.987" level="INFO">JavaWindow("title:=Deal Select").JavaButton("label:=OK.*") is clicked.</msg>
<status status="PASS" starttime="20210408 19:05:19.215" endtime="20210408 19:05:19.988"></status>
</kw>
<kw name="Verify If Warning Is Displayed" library="GenericKeywords">
<doc>This keyword checks if a warning message is displayed, and clicks the 'Yes' button.
@author: bernchua
@update: hstone 06AUG2020 - update loop max count</doc>
<kw name="${i} IN RANGE [ 99999 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_Warning_Yes_Button}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_Warning_Yes_Button}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:05:21.275" level="INFO">Locator = 'JavaWindow("title:=Warning.*", "displayed:=1").JavaButton("label:=Yes")' exists.</msg>
<status status="PASS" starttime="20210408 19:05:20.223" endtime="20210408 19:05:21.276"></status>
</kw>
<msg timestamp="20210408 19:05:21.276" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20210408 19:05:20.220" endtime="20210408 19:05:21.276"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==True</arg>
<arg>mx LoanIQ click</arg>
<arg>${LIQ_Warning_Yes_Button}</arg>
</arguments>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_Warning_Yes_Button}</arg>
</arguments>
<msg timestamp="20210408 19:05:27.011" level="INFO">JavaWindow("title:=Warning.*", "displayed:=1").JavaButton("label:=Yes") is clicked.</msg>
<status status="PASS" starttime="20210408 19:05:21.341" endtime="20210408 19:05:27.011"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:21.339" endtime="20210408 19:05:27.012"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
</arguments>
<status status="PASS" starttime="20210408 19:05:27.091" endtime="20210408 19:05:27.092"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:20.134" endtime="20210408 19:05:27.093"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_Warning_Yes_Button}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_Warning_Yes_Button}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:05:34.373" level="INFO" html="yes">&lt;a href="screenshot_28.jpg"&gt;&lt;img src="screenshot_28.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20210408 19:05:34.373" level="INFO">Keyword Details-------------------------------------------------
Action = VERIFYOBJECTEXIST
Input = None
Object = JavaWindow("title:=Warning.*", "displayed:=1").JavaButton("label:=Yes")
Verification Data = Y</msg>
<msg timestamp="20210408 19:05:34.375" level="FAIL">Error Number: -110037 Error Description: Object doesnot Exist. JavaVerifyObjectExist. Retried for:  0 times. </msg>
<status status="FAIL" starttime="20210408 19:05:27.163" endtime="20210408 19:05:34.439"></status>
</kw>
<msg timestamp="20210408 19:05:34.440" level="INFO">${status} = False</msg>
<status status="PASS" starttime="20210408 19:05:27.161" endtime="20210408 19:05:34.440"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==True</arg>
<arg>mx LoanIQ click</arg>
<arg>${LIQ_Warning_Yes_Button}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:05:34.505" endtime="20210408 19:05:34.505"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
</arguments>
<msg timestamp="20210408 19:05:34.566" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210408 19:05:34.565" endtime="20210408 19:05:34.632"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:27.093" endtime="20210408 19:05:34.681"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:20.131" endtime="20210408 19:05:34.683"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:20.070" endtime="20210408 19:05:34.684"></status>
</kw>
<kw name="Mx LoanIQ Activate Window" library="LoanIQ">
<doc>| Usage |
To activate existing window if present.</doc>
<arguments>
<arg>${LIQ_DealNotebook_Window}</arg>
</arguments>
<msg timestamp="20210408 19:05:34.809" level="INFO">Window : JavaWindow("title:=Deal Notebook -.*","displayed:=1") is activated</msg>
<status status="PASS" starttime="20210408 19:05:34.737" endtime="20210408 19:05:34.809"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Validate Deal Window after creation</arg>
<arg>${Deal_Name}</arg>
</arguments>
<kw name="Validate Deal Window after creation" library="Deal_Notebook">
<tags>
<tag>Validation</tag>
</tags>
<doc>This keywod selects New radio button and popuate fields for Deal Select Window.
@author: fmamaril</doc>
<arguments>
<arg>${Deal_Name}</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>JavaWindow("title:=Deal Notebook - Pending Deal - ${Deal_Name}")</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>JavaWindow("title:=Deal Notebook - Pending Deal - ${Deal_Name}")</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:05:34.970" level="INFO">Locator = 'JavaWindow("title:=Deal Notebook - Pending Deal - ARR_LIBORSC308042021190438PNT")' exists.</msg>
<status status="PASS" starttime="20210408 19:05:34.925" endtime="20210408 19:05:34.971"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:34.923" endtime="20210408 19:05:34.971"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_DealNotebook_Restrict_Label}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_DealNotebook_Restrict_Label}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:05:35.224" level="INFO">Locator = 'JavaWindow("title:=Deal Notebook.*").JavaStaticText("text:=Restricted Deal")' exists.</msg>
<status status="PASS" starttime="20210408 19:05:35.032" endtime="20210408 19:05:35.225"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:35.030" endtime="20210408 19:05:35.225"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:34.870" endtime="20210408 19:05:35.225"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:34.869" endtime="20210408 19:05:35.226"></status>
</kw>
<kw name="Take Screenshot with text into Test Document" library="ReportMaker_Keywords">
<doc>This keyword is used to add screenshot with image filename as description into test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Deal Window</arg>
</arguments>
<kw name="Take Screenshot" library="Screenshot">
<doc>Takes a screenshot in JPEG format and embeds it into the log file.</doc>
<arguments>
<arg>${imageName}</arg>
</arguments>
<msg timestamp="20210408 19:05:35.456" level="INFO" html="yes">&lt;a href="Results/LoanIQ/TC01%20-%20Validate%20ARR%20Pricing%20Option%20at%20Deal%20Level%20and%20Add%20Libor%20Option___2021-04-08%2019-04-35.729/Deal%20Window_1.jpg"&gt;&lt;img src="Results/LoanIQ/TC01%20-%20Validate%20ARR%20Pricing%20Option%20at%20Deal%20Level%20and%20Add%20Libor%20Option___2021-04-08%2019-04-35.729/Deal%20Window_1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210408 19:05:35.355" endtime="20210408 19:05:35.456"></status>
</kw>
<kw name="Get Latest File" library="ReportMaker">
<arguments>
<arg>${getfilePath}</arg>
</arguments>
<assign>
<var>${imagePath}</var>
</assign>
<msg timestamp="20210408 19:05:35.511" level="INFO">${imagePath} = C:\Git_Evergreen\transform_arr\Results\LoanIQ\TC01 - Validate ARR Pricing Option at Deal Level and Add Libor Option___2021-04-08 19-04-35.729\Deal Window_1.jpg</msg>
<status status="PASS" starttime="20210408 19:05:35.510" endtime="20210408 19:05:35.511"></status>
</kw>
<kw name="Put Screenshot With Text" library="ReportMaker">
<arguments>
<arg>${imagePath}</arg>
<arg>${imageName}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:05:35.566" endtime="20210408 19:05:35.577"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:35.279" endtime="20210408 19:05:35.577"></status>
</kw>
<status status="PASS" starttime="20210408 19:04:46.661" endtime="20210408 19:05:35.577"></status>
</kw>
<status status="PASS" starttime="20210408 19:04:36.281" endtime="20210408 19:05:35.577"></status>
</kw>
<msg timestamp="20210408 19:05:35.578" level="INFO">Mx Execute Template With Multiple Data keyword passed for all the data</msg>
<status status="PASS" starttime="20210408 19:04:36.245" endtime="20210408 19:05:35.578"></status>
</kw>
<kw name="Mx Execute Template With Multiple Data" library="GenericLib">
<doc>| Usage |
 This keyword is used to run template with multiple data.</doc>
<arguments>
<arg>Input a Deal Borrower</arg>
<arg>${ExcelPath}</arg>
<arg>${Deal_1}</arg>
<arg>ORIG02_Customer</arg>
</arguments>
<kw name="Input a Deal Borrower" library="CRED01_DealSetUpWithoutOrigination">
<doc>This keyword is used to Setup Deal Borrower
@author: jloretiz 03FEB2021 - initial create</doc>
<arguments>
<arg>OrderedDict([('rowid', '1'), ('Test_Case', 'ARR_Scenario3'), ('LIQCustomerShortName_Prefix', 'BNS06_USB_'), ('LIQCustomerLegalName_Prefix', 'BNS06_USB_'), ('Remittance_Instruction', 'IMT'), ('RemittanceInstruction_DDADescriptionPrefix', 'DDAUSD1-'), ('RemittanceInstruction_IMTDescriptionPrefix', 'IMTUSD1-'), ('RemittanceInstruction_RTGSDescriptionPrefix', 'RTGSUSD1-'), ('Customer_Search', 'Search by Customer Short Name'), ('Customer_ShortName', 'BNS06_USB_31152'), ('LIQCustomer_LegalName', 'BNS06_USB_31152'), ('LIQCustomer_ID', ''), ('RemittanceInstruction_DDADescription', 'DDAUSD1-3516'), ('RemittanceInstruction_IMTDescription', 'IMTUSD1-3516'), ('RemittanceInstruction_RTGSDescription', 'RTGSUSD1-3517'), ('RemittanceInstruction_RTGSMethod', 'Real Time Gross Settlement'), ('RemittanceInstruction_RTGSCurrencyAUD', 'USD'), ('RemittanceInstruction_SIMTDescriptionAUD', 'SIMT1-AUD3750'), ('RemittanceInstruction_SIMTDescriptionUSD', 'SIMT2-USD4504'), ('Address_Line1', 'USB-0002'), ('Address_Line2', 'Baker Street'), ('Address_City', 'Ontarionto'), ('Address_Country', 'Canada'), ('Address_TRA', 'Canada'), ('Address_DefaultPhone', '9980645123'), ('Address_State', ''), ('Address_ZipPostalCode', '231456'), ('Primary_SICCode', '08.99'), ('PrimarySICCode_Description', 'CA / Other mining and quarrying n.e.c.'), ('Profile_Type', 'Borrower'), ('Expense_Code', '0394703947'), ('ExpenseCode_Description', 'US_Automotive'), ('Deparment_Code', 'NAM'), ('DepartmentCode_Description', 'North America'), ('Classification_Code', 'BANK'), ('ClassificationCode_Description', 'Bank'), ('Taxpayer_ID', '&lt;This is randomly generated in the script&gt;'), ('CreditReview_Date', '16-Feb-2017'), ('Customer_Location', 'Ajax, Canada'), ('Customer_Alias', 'KH'), ('External_ID', '&lt;This is randomly generated in the script&gt;'), ('Preferred_Language', 'English'), ('MEI_Code', 'CBA'), ('Address_Code', 'LEGAL ADDRESS'), ('Fax_Number', '2112317472'), ('Fax_Number2', '2112317472'), ('Fax_Description', 'Work Fax'), ('Fax_Description2', 'Work Fax 2'), ('Contact_FirstName', 'K'), ('Contact_FirstName2', ''), ('Customer_Name', 'HOLMES'), ('Contact_PreferredLanguage', 'English'), ('Contact_PrimaryPhone', '1928727188'), ('Contact_PrimaryPhone2', '1928143143'), ('Contact_ProductSelected', 'SBLC, Loan'), ('Contact_BalanceTypeSelected', 'Principal, Interest, Fees'), ('Contact_PurposeType', 'Borrower Credit'), ('Contact_PurposeTypeArea', 'ORIG'), ('ContactNotice_Method', 'Email'), ('Contact_Email', 'kjholmes@holmes.com'), ('Contact_Email2', ''), ('Customer_GroupMember', 'Holmes,  K'), ('Customer_Method', 'DDA'), ('Group_Contact2', 'Baker'), ('RemittanceInstruction_MethodType', 'Standard'), ('RemittanceInstruction_DDAMethod', 'DDA(Demand Deposit Acct)'), ('RemittanceInstruction_DDAAccountName', 'CBA Domestic Account'), ('RemittanceInstruction_DDAAccountNumber', '1020188515'), ('RemittanceInstruction_DDACurrencyAUD', 'USD'), ('RemittanceInstruction_DDACurrencyUSD', 'USD'), ('RemittanceInstruction_DirectionSelected', 'From Cust'), ('RemittanceInstructionDDA_AutoDoIt', '&lt;Selected&gt;'), ('RemittanceInstruction_SIMTMethodType', 'Simplified'), ('RemittanceInstruction_IMTMethod', 'International Money Transfer'), ('RemittanceInstruction_IMTDescriptionUSD', 'IMTCAD1-3123'), ('RemittanceInstruction_IMTDescriptionUSD2', 'IMT-USD2519'), ('RemittanceInstruction_IMTCurrencyUSD', 'USD'), ('IMT_MessageCode', 'MT103'), ('BOC_Level', 'Credit transfer - Service Level: None'), ('RemittanceInstruction_SIMTCurrencyAUD', 'USD'), ('RemittanceInstruction_SIMTCurrencyUSD', 'USD'), ('RemittanceInstruction_SIMTSwiftID', 'CTBAAU2S600'), ('RemittanceInstruction_SIMTSwiftIDBank', ''), ('RemittanceInstructionSIMT_\nProductSelected', 'All Loan Types, SBLC/BA'), ('RemittanceInstructionSIMT_\nBalanceTypeSelected', 'Principal, Interest, Fees'), ('RemittanceInstructionSIMT_AutoDoIt', '&lt;Selected&gt;'), ('GST_ID', '02568049389'), ('InternalRiskRating_Type', 'Internal Rating'), ('InternalRisk_Rating', 'D1 Good'), ('InternalRisk_Percent', '100'), ('ExternalRiskRating_Type1', 'Standard &amp; Poors'), ('ExternalRisk_Rating1', 'BBB+'), ('ExternalRiskRating_Type2', "Moody's Investor Services Inc"), ('ExternalRisk_Rating2', 'Aa2'), ('ExternalRiskRating_Type3', 'Fitch'), ('ExternalRisk_Rating3', 'A+'), ('MailingAddress_Code', 'LEGAL ADDRESS'), ('MailingAddress_Line1', 'PO Box 861'), ('MailingAddress_Line2', 'Almond, Victoria 3211'), ('MailingAddress_DefaultPhone', '03 5029 9445'), ('BorrowerContact_Phone', '03 5029 9445'), ('SwiftRole_BC', 'Beneficiary Customer'), ('SwiftRole_OC', 'Ordering Customer'), ('SwiftRole_AWI', 'Account With Institution'), ('AWI_SwiftID', 'CITIUS33XXX'), ('AWI_Description', ''), ('AWI_AccountNumber', ''), ('DOC_Type', 'Beneficiary Customer'), ('IMT_MessageCode2', 'MT202'), ('SwiftRole_BI', 'Beneficiary Institution'), ('BC_Description', 'XYZ 1234'), ('BC_AccountNumber', '4561234789'), ('OC_Description', 'XYZ 1234 PARTNERS'), ('OC_AccountNumber', '5558882223'), ('InternalRiskRating_EffectiveDate', '03-Jan-2019'), ('InternalRiskRating_ExpiryDate', 'None'), ('ExternalRiskRating_StartDate', '03-Jan-2019'), ('ProductSBLC_Checkbox', 'ON'), ('ProductLoan_Checkbox', 'ON'), ('BalanceType_Principal_Checkbox', 'ON'), ('BalanceType_Interest_Checkbox', 'ON'), ('BalanceType_Fees_Checkbox', 'ON'), ('RI_ProductLoan_Checkbox', 'ON'), ('RI_ProductSBLC_Checkbox', 'ON'), ('RI_FromCust_Checkbox', 'ON'), ('RI_ToCust_Checkbox', 'ON'), ('RI_BalanceType_Principal_Checkbox', 'ON'), ('RI_BalanceType_Interest_Checkbox', 'ON'), ('RI_BalanceType_Fees_Checkbox', 'ON'), ('RI_AutoDoIt_Checkbox', 'ON'), ('RI_SendersCorrespondent_Checkbox', 'ON'), ('CustomerNotice_TypeMethod', 'External Message'), ('Role_5_Debtor', 'True'), ('Entity', 'BNS'), ('CustomerSourceApp', 'LIQ')])</arg>
</arguments>
<kw name="Report Sub Header" library="ReportMaker_Keywords">
<doc>This keyword is used to add given argument as sub header in test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Setup Deal Borrower</arg>
</arguments>
<kw name="Set Report Sub Header" library="ReportMaker">
<arguments>
<arg>${SubHeader}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:05:35.773" endtime="20210408 19:05:35.776"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:35.721" endtime="20210408 19:05:35.776"></status>
</kw>
<kw name="Read Data From Excel" library="GenericKeywords">
<doc>This keyword will be used for dynamically reading of Excel File supported by Python 3
@author: ritragel 25OCT2019 Initial Create
@update: hstone 16MAR2020 Code Optimization: Replaced Keyw</doc>
<arguments>
<arg>CRED01_DealSetup</arg>
<arg>Deal_Name</arg>
<arg>&amp;{ExcelPath}[rowid]</arg>
</arguments>
<assign>
<var>${Deal_Name}</var>
</assign>
<kw name="Open Excel Document" library="ExcelLibrary">
<doc>Opens xlsx document file.</doc>
<arguments>
<arg>${sFilePath}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20210408 19:05:35.882" endtime="20210408 19:05:35.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>(Read Data From Excel) sTestCaseColReference = '${sTestCaseColReference}'</arg>
</arguments>
<msg timestamp="20210408 19:05:35.979" level="INFO">(Read Data From Excel) sTestCaseColReference = 'rowid'</msg>
<status status="PASS" starttime="20210408 19:05:35.978" endtime="20210408 19:05:35.979"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${readAllData}'=='Y'</arg>
<arg>Read Data From All Column Rows</arg>
<arg>${sSheetName}</arg>
<arg>${sColumnName}</arg>
<arg>ELSE IF</arg>
<arg>'${readAllData}'=='N'</arg>
<arg>Read Data From Cell</arg>
<arg>${sSheetName}</arg>
<arg>${sColumnName}</arg>
<arg>${rowid}</arg>
<arg>${bTestCaseColumn}</arg>
<arg>${sTestCaseColReference}</arg>
</arguments>
<assign>
<var>${sData}</var>
</assign>
<kw name="Read Data From Cell" library="GenericKeywords">
<doc>This keyword will be used for reading data from single excel cell.
@author: hstone 16MAR2020 Initial Create</doc>
<arguments>
<arg>${sSheetName}</arg>
<arg>${sColumnName}</arg>
<arg>${rowid}</arg>
<arg>${bTestCaseColumn}</arg>
<arg>${sTestCaseColReference}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>(Read Data From Cell) sTestCaseColReference = '${sTestCaseColReference}'</arg>
</arguments>
<msg timestamp="20210408 19:05:36.097" level="INFO">(Read Data From Cell) sTestCaseColReference = 'rowid'</msg>
<status status="PASS" starttime="20210408 19:05:36.096" endtime="20210408 19:05:36.097"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${sTestCaseColReference}'=='None'</arg>
<arg>Get Column Header Index</arg>
<arg>${sSheetName}</arg>
<arg>${sColumnName}</arg>
<arg>${bTestCaseColumn}</arg>
<arg>ELSE</arg>
<arg>Get Column Header Index</arg>
<arg>${sSheetName}</arg>
<arg>${sColumnName}</arg>
<arg>${bTestCaseColumn}</arg>
<arg>${sTestCaseColReference}</arg>
</arguments>
<assign>
<var>${TestCaseHeader_Index}</var>
<var>${ColumnHeader_Index}</var>
</assign>
<kw name="Get Column Header Index" library="GenericKeywords">
<doc>This keyword is used to get the Column Header Index of Test_Case and given Column Name at the Excel Sheet.
@author: hstone 19FEB2020 Initial Create</doc>
<arguments>
<arg>${sSheetName}</arg>
<arg>${sColumnName}</arg>
<arg>${bTestCaseColumn}</arg>
<arg>${sTestCaseColReference}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>(Get Column Header Index) sTestCaseColReference = '${sTestCaseColReference}'</arg>
</arguments>
<msg timestamp="20210408 19:05:36.204" level="INFO">(Get Column Header Index) sTestCaseColReference = 'rowid'</msg>
<status status="PASS" starttime="20210408 19:05:36.203" endtime="20210408 19:05:36.204"></status>
</kw>
<kw name="Read Excel Row" library="ExcelLibrary">
<doc>Returns content of a row from the current sheet of the document.</doc>
<arguments>
<arg>1</arg>
<arg>sheet_name=${sSheetName}</arg>
</arguments>
<assign>
<var>${DataColumn_List}</var>
</assign>
<msg timestamp="20210408 19:05:36.255" level="INFO">${DataColumn_List} = ['rowid', 'Test_Case', 'Deal_NamePrefix', 'Deal_AliasPrefix', 'Deal_Name', 'Deal_Alias', 'Deal_EffectiveDate', 'Deal_AgreementDate', 'Deal_AdjustmentSettings', 'Deal_AgreementDateAdjustment', 'Deal_Ef...</msg>
<status status="PASS" starttime="20210408 19:05:36.254" endtime="20210408 19:05:36.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Data Set Sheet Name: '${sSheetName}'</arg>
</arguments>
<msg timestamp="20210408 19:05:36.306" level="INFO">Data Set Sheet Name: 'CRED01_DealSetup'</msg>
<status status="PASS" starttime="20210408 19:05:36.305" endtime="20210408 19:05:36.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Data Set Sheet Column Names: '${DataColumn_List}'</arg>
</arguments>
<msg timestamp="20210408 19:05:36.360" level="INFO">Data Set Sheet Column Names: '['rowid', 'Test_Case', 'Deal_NamePrefix', 'Deal_AliasPrefix', 'Deal_Name', 'Deal_Alias', 'Deal_EffectiveDate', 'Deal_AgreementDate', 'Deal_AdjustmentSettings', 'Deal_AgreementDateAdjustment', 'Deal_EffectiveDateAdjustment', 'Deal_Currency', 'Deal_DepartmentCode', 'Deal_Department', 'Deal_SalesGroup', 'Deal_AternateID', 'Deal_ANSIID', 'Deal_IsSoleLender', 'Deal_ClassificationCode', 'Deal_ClassificationDesc', 'Deal_AdminAgent', 'Deal_AdminAgentLocation', 'DealAdminAgent_SGAlias', 'DealAdminAgent_PreferredRI', 'DealAdminAgent_ServicingGroup', 'Deal_ProposedCmt', 'Deal_EarlyDiscussion', 'Deal_ExpenseCode', 'Deal_HolidayCalendarRemove', 'Deal_HolidayCalendarAdd', 'Deal_IsPricingOptionARR', 'Deal_PricingOption_CCY', 'Deal_PricingOption', 'PricingOption_IsARR', 'PricingOption_InitialFractionRate', 'PricingOption_RoundingDecimal', 'PricingOption_NonBusinessDayRule', 'PricingOption_BillNoOfDays', 'PricingOption_MatrixChangeAppMthd', 'PricingOption_RateChangeAppMthd', 'PricingOption_RACInitialFractionRate', 'PricingOption_RACRoundingDecimal', 'PricingOption_RACRoundingMethod', 'PricingOption_PercentOfRateFormulaUsage', 'PricingOption_RepricingNonBusinessDayRule', 'PricingOption_FeeOnLenderShareFunding', 'PricingOption_InterestDueUponPrincipalPayment', 'PricingOption_InterestDueUponRepricing', 'PricingOption_ReferenceBanksApply', 'PricingOption_IntentNoticeDaysInAdvance', 'PricingOption_IntentNoticeTime', 'PricingOption_12HrPeriodOption', 'PricingOption_MaximumDrawAmount', 'PricingOption_MinimumDrawAmount', 'PricingOption_MinimumPaymentAmount', 'PricingOption_MinimumAmountMultiples', 'PricingOption_BillBorrower', 'PricingOption_ARRObservationPeriod', 'PricingOption_LookbackDays', 'PricingOption_LockoutDays', 'PricingOption_RateBasis', 'PricingOption_CalculationMethod']'</msg>
<status status="PASS" starttime="20210408 19:05:36.360" endtime="20210408 19:05:36.361"></status>
</kw>
<kw name="Get Index From List" library="Collections">
<doc>Returns the index of the first occurrence of the ``value`` on the list.</doc>
<arguments>
<arg>${DataColumn_List}</arg>
<arg>${sTestCaseColReference}</arg>
</arguments>
<assign>
<var>${TestCaseHeaderName_Index}</var>
</assign>
<msg timestamp="20210408 19:05:36.412" level="INFO">${TestCaseHeaderName_Index} = 0</msg>
<status status="PASS" starttime="20210408 19:05:36.412" endtime="20210408 19:05:36.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Fetched Test Case Column Index : '${TestCaseHeaderName_Index}'</arg>
</arguments>
<msg timestamp="20210408 19:05:36.464" level="INFO">Fetched Test Case Column Index : '0'</msg>
<status status="PASS" starttime="20210408 19:05:36.463" endtime="20210408 19:05:36.464"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${TestCaseHeaderName_Index}&lt;0 and '${bTestCaseColumn}'=='False'</arg>
<arg>Set Variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>Evaluate</arg>
<arg>${TestCaseHeaderName_Index}+1</arg>
</arguments>
<assign>
<var>${TestCaseHeaderName_Index}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${TestCaseHeaderName_Index}+1</arg>
</arguments>
<status status="PASS" starttime="20210408 19:05:36.521" endtime="20210408 19:05:36.522"></status>
</kw>
<msg timestamp="20210408 19:05:36.522" level="INFO">${TestCaseHeaderName_Index} = 1</msg>
<status status="PASS" starttime="20210408 19:05:36.519" endtime="20210408 19:05:36.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Evaluated Test Case Column Index : '${TestCaseHeaderName_Index}'</arg>
</arguments>
<msg timestamp="20210408 19:05:36.574" level="INFO">Evaluated Test Case Column Index : '1'</msg>
<status status="PASS" starttime="20210408 19:05:36.573" endtime="20210408 19:05:36.574"></status>
</kw>
<kw name="Get Index From List" library="Collections">
<doc>Returns the index of the first occurrence of the ``value`` on the list.</doc>
<arguments>
<arg>${DataColumn_List}</arg>
<arg>${sColumnName}</arg>
</arguments>
<assign>
<var>${ColumnName_Index}</var>
</assign>
<msg timestamp="20210408 19:05:36.626" level="INFO">${ColumnName_Index} = 4</msg>
<status status="PASS" starttime="20210408 19:05:36.626" endtime="20210408 19:05:36.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Column Name Index : '${ColumnName_Index}'</arg>
</arguments>
<msg timestamp="20210408 19:05:36.677" level="INFO">Column Name Index : '4'</msg>
<status status="PASS" starttime="20210408 19:05:36.677" endtime="20210408 19:05:36.678"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${ColumnName_Index}&lt;0</arg>
<arg>Fail</arg>
<arg>'${sColumnName}' is not found at '${DataColumn_List}' Data Column Values.</arg>
</arguments>
<status status="PASS" starttime="20210408 19:05:36.727" endtime="20210408 19:05:36.728"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ColumnName_Index}+1</arg>
</arguments>
<assign>
<var>${ColumnName_Index}</var>
</assign>
<msg timestamp="20210408 19:05:36.780" level="INFO">${ColumnName_Index} = 5</msg>
<status status="PASS" starttime="20210408 19:05:36.779" endtime="20210408 19:05:36.780"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:36.150" endtime="20210408 19:05:36.781"></status>
</kw>
<msg timestamp="20210408 19:05:36.781" level="INFO">${TestCaseHeader_Index} = 1</msg>
<msg timestamp="20210408 19:05:36.781" level="INFO">${ColumnHeader_Index} = 5</msg>
<status status="PASS" starttime="20210408 19:05:36.148" endtime="20210408 19:05:36.781"></status>
</kw>
<kw name="Get Index of a Row Value using a Reference Header Index" library="GenericKeywords">
<doc>This keyword is used to get index of a row value using a reference header index
@author: hstone 19FEB2020 Initial Create</doc>
<arguments>
<arg>${sSheetName}</arg>
<arg>${rowid}</arg>
<arg>${TestCaseHeader_Index}</arg>
</arguments>
<assign>
<var>${RowId_Index}</var>
</assign>
<kw name="Read Excel Column" library="ExcelLibrary">
<doc>Returns content of a column from the current sheet of the document.</doc>
<arguments>
<arg>${sReferenceHeader_Index}</arg>
<arg>sheet_name=${sSheetName}</arg>
</arguments>
<assign>
<var>${DataRow_List}</var>
</assign>
<msg timestamp="20210408 19:05:36.887" level="INFO">${DataRow_List} = ['rowid', '1', '2']</msg>
<status status="PASS" starttime="20210408 19:05:36.887" endtime="20210408 19:05:36.888"></status>
</kw>
<kw name="Read Excel Column" library="ExcelLibrary">
<doc>Returns content of a column from the current sheet of the document.</doc>
<arguments>
<arg>1</arg>
<arg>sheet_name=${sSheetName}</arg>
</arguments>
<assign>
<var>${DataRowId_List}</var>
</assign>
<msg timestamp="20210408 19:05:36.940" level="INFO">${DataRowId_List} = ['rowid', '1', '2']</msg>
<status status="PASS" starttime="20210408 19:05:36.939" endtime="20210408 19:05:36.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Row Names Under Reference Header with Index '${sReferenceHeader_Index}' : '${DataRow_List}'</arg>
</arguments>
<msg timestamp="20210408 19:05:36.994" level="INFO">Row Names Under Reference Header with Index '1' : '['rowid', '1', '2']'</msg>
<status status="PASS" starttime="20210408 19:05:36.994" endtime="20210408 19:05:36.994"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>List Should Contain Value</arg>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<assign>
<var>${IsPresentInList}</var>
</assign>
<kw name="List Should Contain Value" library="Collections">
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<arguments>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:05:37.047" endtime="20210408 19:05:37.048"></status>
</kw>
<msg timestamp="20210408 19:05:37.048" level="INFO">${IsPresentInList} = True</msg>
<status status="PASS" starttime="20210408 19:05:37.046" endtime="20210408 19:05:37.048"></status>
</kw>
<kw name="Check if Row Value Exists on List as Int" library="GenericKeywords">
<doc>This keyword is used to check if value exists on a list as a string
@author: hstone 13APR2020 Initial Create</doc>
<arguments>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<assign>
<var>${IsPresentInList_As_Int}</var>
<var>${RowValue_Int}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${False}</arg>
</arguments>
<assign>
<var>${IsPresentInList}</var>
</assign>
<msg timestamp="20210408 19:05:37.159" level="INFO">${IsPresentInList} = False</msg>
<status status="PASS" starttime="20210408 19:05:37.158" endtime="20210408 19:05:37.159"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Convert To Integer</arg>
<arg>${sValue}</arg>
</arguments>
<assign>
<var>${IsIntConvPassed}</var>
</assign>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${sValue}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:05:37.319" endtime="20210408 19:05:37.320"></status>
</kw>
<msg timestamp="20210408 19:05:37.320" level="INFO">${IsIntConvPassed} = True</msg>
<status status="PASS" starttime="20210408 19:05:37.318" endtime="20210408 19:05:37.320"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${IsIntConvPassed}==${True}</arg>
<arg>Check if a String Exists as Int on a List</arg>
<arg>${lTarget_List}</arg>
<arg>${sValue}</arg>
</arguments>
<assign>
<var>${IsPresentInList}</var>
<var>${RowValue_Int}</var>
</assign>
<kw name="Check if a String Exists as Int on a List" library="GenericKeywords">
<doc>This keyword is used to check if a string exists as an integer on a list.
@author: hstone 13APR2020 Initial Create</doc>
<arguments>
<arg>${lTarget_List}</arg>
<arg>${sValue}</arg>
</arguments>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${sValue}</arg>
</arguments>
<assign>
<var>${Value_Int}</var>
</assign>
<msg timestamp="20210408 19:05:37.428" level="INFO">${Value_Int} = 1</msg>
<status status="PASS" starttime="20210408 19:05:37.428" endtime="20210408 19:05:37.429"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>List Should Contain Value</arg>
<arg>${lTarget_List}</arg>
<arg>${Value_Int}</arg>
</arguments>
<assign>
<var>${IsPresentInList}</var>
</assign>
<kw name="List Should Contain Value" library="Collections">
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<arguments>
<arg>${lTarget_List}</arg>
<arg>${Value_Int}</arg>
</arguments>
<msg timestamp="20210408 19:05:37.482" level="FAIL">[ rowid | 1 | 2 ] does not contain value '1'.</msg>
<status status="FAIL" starttime="20210408 19:05:37.481" endtime="20210408 19:05:37.532"></status>
</kw>
<msg timestamp="20210408 19:05:37.533" level="INFO">${IsPresentInList} = False</msg>
<status status="PASS" starttime="20210408 19:05:37.480" endtime="20210408 19:05:37.533"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:37.375" endtime="20210408 19:05:37.533"></status>
</kw>
<msg timestamp="20210408 19:05:37.533" level="INFO">${IsPresentInList} = False</msg>
<msg timestamp="20210408 19:05:37.534" level="INFO">${RowValue_Int} = 1</msg>
<status status="PASS" starttime="20210408 19:05:37.374" endtime="20210408 19:05:37.534"></status>
</kw>
<msg timestamp="20210408 19:05:37.534" level="INFO">${IsPresentInList_As_Int} = False</msg>
<msg timestamp="20210408 19:05:37.534" level="INFO">${RowValue_Int} = 1</msg>
<status status="PASS" starttime="20210408 19:05:37.100" endtime="20210408 19:05:37.534"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${IsPresentInList}==${True}</arg>
<arg>Get Index From List</arg>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
<arg>ELSE IF</arg>
<arg>${IsPresentInList_As_Int}==${True}</arg>
<arg>Get Index From List</arg>
<arg>${DataRow_List}</arg>
<arg>${RowValue_Int}</arg>
<arg>ELSE</arg>
<arg>Get Index From List</arg>
<arg>${DataRowId_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<assign>
<var>${DataRowName_Index}</var>
</assign>
<kw name="Get Index From List" library="Collections">
<doc>Returns the index of the first occurrence of the ``value`` on the list.</doc>
<arguments>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:05:37.592" endtime="20210408 19:05:37.593"></status>
</kw>
<msg timestamp="20210408 19:05:37.593" level="INFO">${DataRowName_Index} = 1</msg>
<status status="PASS" starttime="20210408 19:05:37.590" endtime="20210408 19:05:37.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Row Name Index for '${sRowValue}' : '${DataRowName_Index}'</arg>
</arguments>
<msg timestamp="20210408 19:05:37.645" level="INFO">Row Name Index for '1' : '1'</msg>
<status status="PASS" starttime="20210408 19:05:37.645" endtime="20210408 19:05:37.645"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${DataRowName_Index}&lt;0</arg>
<arg>Fail</arg>
<arg>'${sRowValue}' is not found at '${DataRow_List}' Data Row Values.</arg>
</arguments>
<status status="PASS" starttime="20210408 19:05:37.697" endtime="20210408 19:05:37.697"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${DataRowName_Index}+1</arg>
</arguments>
<assign>
<var>${DataRowValue_Index}</var>
</assign>
<msg timestamp="20210408 19:05:37.749" level="INFO">${DataRowValue_Index} = 2</msg>
<status status="PASS" starttime="20210408 19:05:37.748" endtime="20210408 19:05:37.749"></status>
</kw>
<msg timestamp="20210408 19:05:37.749" level="INFO">${RowId_Index} = 2</msg>
<status status="PASS" starttime="20210408 19:05:36.832" endtime="20210408 19:05:37.749"></status>
</kw>
<kw name="Read Excel Cell" library="ExcelLibrary">
<doc>Returns content of a cell.</doc>
<arguments>
<arg>${RowId_Index}</arg>
<arg>${ColumnHeader_Index}</arg>
<arg>${sSheetName}</arg>
</arguments>
<assign>
<var>${Cell_Data}</var>
</assign>
<msg timestamp="20210408 19:05:37.802" level="INFO">${Cell_Data} = ARR_LIBORSC308042021190438PNT</msg>
<status status="PASS" starttime="20210408 19:05:37.801" endtime="20210408 19:05:37.802"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:36.045" endtime="20210408 19:05:37.802"></status>
</kw>
<msg timestamp="20210408 19:05:37.802" level="INFO">${sData} = ARR_LIBORSC308042021190438PNT</msg>
<status status="PASS" starttime="20210408 19:05:36.043" endtime="20210408 19:05:37.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Excel Date Read from Excel : '${sData}'</arg>
</arguments>
<msg timestamp="20210408 19:05:37.854" level="INFO">Excel Date Read from Excel : 'ARR_LIBORSC308042021190438PNT'</msg>
<status status="PASS" starttime="20210408 19:05:37.853" endtime="20210408 19:05:37.854"></status>
</kw>
<kw name="Close Current Excel Document" library="ExcelLibrary">
<doc>Closes current document.</doc>
<status status="PASS" starttime="20210408 19:05:37.904" endtime="20210408 19:05:37.904"></status>
</kw>
<msg timestamp="20210408 19:05:37.905" level="INFO">${Deal_Name} = ARR_LIBORSC308042021190438PNT</msg>
<status status="PASS" starttime="20210408 19:05:35.827" endtime="20210408 19:05:37.905"></status>
</kw>
<kw name="Add Deal Borrower" library="Deal_Notebook">
<doc>It adds the borrower name in a deal
@author: fmamaril
@update: amansuet 23APR2020 - Updated to align with automation standards and added keyword pre-processing
@update: ehugo 28MAY2020 - added screenshot
@update: hstone 23NOV2020 - Revised to be able to handle multiple borrower input</doc>
<arguments>
<arg>&amp;{ExcelPath}[Customer_ShortName]</arg>
</arguments>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sDeal_Borrower}</arg>
</arguments>
<assign>
<var>${Deal_Borrower}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:05:38.167" endtime="20210408 19:05:38.168"></status>
</kw>
<msg timestamp="20210408 19:05:38.168" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:05:38.166" endtime="20210408 19:05:38.168"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:05:38.381" level="INFO">${List_Argument_Excel_Value} = ['BNS06_USB_31152']</msg>
<status status="PASS" starttime="20210408 19:05:38.380" endtime="20210408 19:05:38.381"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:05:38.456" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:05:38.456" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:05:38.455" endtime="20210408 19:05:38.456"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:05:38.531" level="INFO">${Arg_User_Input} = BNS06_USB_31152</msg>
<status status="PASS" starttime="20210408 19:05:38.530" endtime="20210408 19:05:38.531"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:05:38.583" level="INFO">${Arg_User_Input} = BNS06_USB_31152</msg>
<status status="PASS" starttime="20210408 19:05:38.582" endtime="20210408 19:05:38.583"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:05:38.636" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:05:38.635" endtime="20210408 19:05:38.636"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:05:38.689" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:05:38.688" endtime="20210408 19:05:38.689"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:05:38.741" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:05:38.741" endtime="20210408 19:05:38.741"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:05:38.796" endtime="20210408 19:05:38.796"></status>
</kw>
<msg timestamp="20210408 19:05:38.796" level="INFO">${Extracted_Argument_Value} = BNS06_USB_31152</msg>
<status status="PASS" starttime="20210408 19:05:38.794" endtime="20210408 19:05:38.797"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:38.324" endtime="20210408 19:05:38.797"></status>
</kw>
<msg timestamp="20210408 19:05:38.797" level="INFO">${Extracted_Argument_Value} = BNS06_USB_31152</msg>
<status status="PASS" starttime="20210408 19:05:38.219" endtime="20210408 19:05:38.797"></status>
</kw>
<msg timestamp="20210408 19:05:38.797" level="INFO">${Deal_Borrower} = BNS06_USB_31152</msg>
<status status="PASS" starttime="20210408 19:05:38.114" endtime="20210408 19:05:38.798"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${Deal_Borrower}</arg>
<arg>|</arg>
</arguments>
<assign>
<var>${aDeal_Borrower}</var>
</assign>
<msg timestamp="20210408 19:05:38.848" level="INFO">${aDeal_Borrower} = ['BNS06_USB_31152']</msg>
<status status="PASS" starttime="20210408 19:05:38.847" endtime="20210408 19:05:38.848"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${aDeal_Borrower}</arg>
</arguments>
<assign>
<var>${Deal_Borrower_Count}</var>
</assign>
<msg timestamp="20210408 19:05:38.900" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:05:38.900" level="INFO">${Deal_Borrower_Count} = 1</msg>
<status status="PASS" starttime="20210408 19:05:38.899" endtime="20210408 19:05:38.900"></status>
</kw>
<kw name="${Borrower} IN RANGE [ ${Deal_Borrower_Count} ]" type="for">
<kw name="${Borrower} = 0" type="foritem">
<kw name="Mx LoanIQ Select Window Tab" library="LoanIQ">
<doc>| Usage |
Used to select the Java window tab</doc>
<arguments>
<arg>${LIQ_DealNotebook_Tab}</arg>
<arg>${TAB_SUMMARY}</arg>
</arguments>
<msg timestamp="20210408 19:05:43.775" level="INFO">Window Tab = 'Summary' is selected from the element = 'JavaWindow("title:=Deal Notebook -.*","displayed:=1").JavaTab("tagname:=TabFolder")'</msg>
<status status="PASS" starttime="20210408 19:05:39.002" endtime="20210408 19:05:43.776"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Click Element If Present</arg>
<arg>${LIQ_InquiryMode_Button}</arg>
</arguments>
<kw name="Mx LoanIQ Click Element If Present" library="LoanIQ">
<doc>| Usage |
Click on element identified by `locator` only if that element is present.
It passes if the element is not present.</doc>
<arguments>
<arg>${LIQ_InquiryMode_Button}</arg>
</arguments>
<msg timestamp="20210408 19:05:52.219" level="INFO">JavaWindow("title:=Deal.*").JavaButton("attached text:=Notebook in Inquiry Mode.*"): is clicked, or skipped if not present.</msg>
<status status="PASS" starttime="20210408 19:05:43.833" endtime="20210408 19:05:52.220"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:43.831" endtime="20210408 19:05:52.220"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_DealSummary_Add_Button}</arg>
</arguments>
<msg timestamp="20210408 19:05:53.044" level="INFO">JavaWindow("title:=Deal Notebook -.*").JavaTab("text:=Summary").JavaButton("text:=Add...") is clicked.</msg>
<status status="PASS" starttime="20210408 19:05:52.272" endtime="20210408 19:05:53.044"></status>
</kw>
<kw name="Validate Add Deal Borrower Select" library="Deal_Notebook">
<tags>
<tag>Validation</tag>
</tags>
<doc>This keyword validates add deal borrower window
@author: fmamaril</doc>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_DealBorrowerSelect_Window}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_DealBorrowerSelect_Window}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:05:53.244" level="INFO">Locator = 'JavaWindow("title:=Borrower Select.*")' exists.</msg>
<status status="PASS" starttime="20210408 19:05:53.192" endtime="20210408 19:05:53.245"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:53.190" endtime="20210408 19:05:53.245"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Validate if Element is Enabled</arg>
<arg>${LIQ_DealBorrowerSelect_Search_Button}</arg>
<arg>Search</arg>
</arguments>
<kw name="Validate if Element is Enabled" library="GenericKeywords">
<doc>This keyword validates if Element is enabled
@author: ghabal</doc>
<arguments>
<arg>${LIQ_DealBorrowerSelect_Search_Button}</arg>
<arg>Search</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<msg timestamp="20210408 19:05:53.478" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:05:53.373" endtime="20210408 19:05:53.479"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:53.372" endtime="20210408 19:05:53.479"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<msg timestamp="20210408 19:05:53.628" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:05:53.539" endtime="20210408 19:05:53.628"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:53.538" endtime="20210408 19:05:53.629"></status>
</kw>
<msg timestamp="20210408 19:05:53.629" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:05:53.537" endtime="20210408 19:05:53.629"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed enabled</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed disabled</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>'${Field_Label}' element is confirmed enabled</arg>
</arguments>
<msg timestamp="20210408 19:05:53.807" level="INFO">'Search' element is confirmed enabled</msg>
<status status="PASS" starttime="20210408 19:05:53.807" endtime="20210408 19:05:53.807"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:53.805" endtime="20210408 19:05:53.807"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:53.316" endtime="20210408 19:05:53.808"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:53.314" endtime="20210408 19:05:53.808"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Validate if Element is Enabled</arg>
<arg>${LIQ_DealBorrowerSelect_Ok_Button}</arg>
<arg>OK</arg>
</arguments>
<kw name="Validate if Element is Enabled" library="GenericKeywords">
<doc>This keyword validates if Element is enabled
@author: ghabal</doc>
<arguments>
<arg>${LIQ_DealBorrowerSelect_Ok_Button}</arg>
<arg>OK</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<msg timestamp="20210408 19:05:54.039" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:05:53.920" endtime="20210408 19:05:54.039"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:53.918" endtime="20210408 19:05:54.039"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<msg timestamp="20210408 19:05:54.175" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:05:54.093" endtime="20210408 19:05:54.176"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:54.092" endtime="20210408 19:05:54.176"></status>
</kw>
<msg timestamp="20210408 19:05:54.176" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:05:54.091" endtime="20210408 19:05:54.176"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed enabled</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed disabled</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>'${Field_Label}' element is confirmed enabled</arg>
</arguments>
<msg timestamp="20210408 19:05:54.271" level="INFO">'OK' element is confirmed enabled</msg>
<status status="PASS" starttime="20210408 19:05:54.270" endtime="20210408 19:05:54.271"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:54.269" endtime="20210408 19:05:54.271"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:53.863" endtime="20210408 19:05:54.271"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:53.861" endtime="20210408 19:05:54.272"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Validate if Element is Enabled</arg>
<arg>${LIQ_DealBorrowerSelect_Cancel_Button}</arg>
<arg>Cancel</arg>
</arguments>
<kw name="Validate if Element is Enabled" library="GenericKeywords">
<doc>This keyword validates if Element is enabled
@author: ghabal</doc>
<arguments>
<arg>${LIQ_DealBorrowerSelect_Cancel_Button}</arg>
<arg>Cancel</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<msg timestamp="20210408 19:05:54.506" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:05:54.397" endtime="20210408 19:05:54.507"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:54.395" endtime="20210408 19:05:54.507"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<msg timestamp="20210408 19:05:54.641" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:05:54.560" endtime="20210408 19:05:54.641"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:54.559" endtime="20210408 19:05:54.641"></status>
</kw>
<msg timestamp="20210408 19:05:54.641" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:05:54.557" endtime="20210408 19:05:54.642"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed enabled</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed disabled</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>'${Field_Label}' element is confirmed enabled</arg>
</arguments>
<msg timestamp="20210408 19:05:54.695" level="INFO">'Cancel' element is confirmed enabled</msg>
<status status="PASS" starttime="20210408 19:05:54.695" endtime="20210408 19:05:54.696"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:54.693" endtime="20210408 19:05:54.696"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:54.339" endtime="20210408 19:05:54.696"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:54.337" endtime="20210408 19:05:54.696"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:53.133" endtime="20210408 19:05:54.696"></status>
</kw>
<kw name="Mx LoanIQ Enter" library="LoanIQ">
<doc>| Usage |
To enter the data to the element specified by 'locator'.</doc>
<arguments>
<arg>${LIQ_DealBorrowerSelect_ShortName_TextField}</arg>
<arg>@{aDeal_Borrower}[${Borrower}]</arg>
</arguments>
<msg timestamp="20210408 19:05:54.888" level="INFO">Input= BNS06_USB_31152 is entered in element= JavaWindow("title:=Borrower Select.*").JavaEdit("tagname:=Text","x:=300","y:=90")</msg>
<status status="PASS" starttime="20210408 19:05:54.750" endtime="20210408 19:05:54.888"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_DealBorrowerSelect_Search_Button}</arg>
</arguments>
<msg timestamp="20210408 19:05:55.200" level="INFO">JavaWindow("title:=Borrower Select.*").JavaButton("attached text:=Search") is clicked.</msg>
<status status="PASS" starttime="20210408 19:05:54.945" endtime="20210408 19:05:55.200"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Select String</arg>
<arg>${LIQ_DealBorrowerListByShortName_Tree}</arg>
<arg>@{aDeal_Borrower}[${Borrower}]</arg>
</arguments>
<kw name="Mx LoanIQ Select String" library="LoanIQ">
<doc>| Usage |
Used to select the given string in JavaTree</doc>
<arguments>
<arg>${LIQ_DealBorrowerListByShortName_Tree}</arg>
<arg>@{aDeal_Borrower}[${Borrower}]</arg>
</arguments>
<msg timestamp="20210408 19:05:57.881" level="INFO">Selected 'BNS06_USB_31152' from 'JavaWindow("title:=Borrower Select.*").JavaWindow("title:=Borrower List By Short.*").JavaTree("attached text:=Search:")' object.</msg>
<status status="PASS" starttime="20210408 19:05:55.261" endtime="20210408 19:05:57.881"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:55.259" endtime="20210408 19:05:57.882"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_DealBorrowerListByShortName_OK_Button}</arg>
</arguments>
<msg timestamp="20210408 19:05:58.166" level="INFO">JavaWindow("title:=Borrower Select.*").JavaWindow("title:=Borrower List By Short.*").JavaButton("attached text:=OK") is clicked.</msg>
<status status="PASS" starttime="20210408 19:05:57.933" endtime="20210408 19:05:58.166"></status>
</kw>
<kw name="Mx LoanIQ Activate Window" library="LoanIQ">
<doc>| Usage |
To activate existing window if present.</doc>
<arguments>
<arg>${LIQ_DealBorrower_Window}</arg>
</arguments>
<msg timestamp="20210408 19:05:59.571" level="INFO">Window : JavaWindow("title:=Deal Borrower.*") is activated</msg>
<status status="PASS" starttime="20210408 19:05:58.251" endtime="20210408 19:05:59.572"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>JavaWindow("title:=Deal Borrower.*").JavaStaticText("text:=@{aDeal_Borrower}[${Borrower}]")</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>JavaWindow("title:=Deal Borrower.*").JavaStaticText("text:=@{aDeal_Borrower}[${Borrower}]")</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:05:59.740" level="INFO">Locator = 'JavaWindow("title:=Deal Borrower.*").JavaStaticText("text:=BNS06_USB_31152")' exists.</msg>
<status status="PASS" starttime="20210408 19:05:59.648" endtime="20210408 19:05:59.740"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:59.645" endtime="20210408 19:05:59.740"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:38.950" endtime="20210408 19:05:59.741"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:38.950" endtime="20210408 19:05:59.741"></status>
</kw>
<kw name="Take Screenshot with text into Test Document" library="ReportMaker_Keywords">
<doc>This keyword is used to add screenshot with image filename as description into test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Deal Notebook - Borrower</arg>
</arguments>
<kw name="Take Screenshot" library="Screenshot">
<doc>Takes a screenshot in JPEG format and embeds it into the log file.</doc>
<arguments>
<arg>${imageName}</arg>
</arguments>
<msg timestamp="20210408 19:05:59.952" level="INFO" html="yes">&lt;a href="Results/LoanIQ/TC01%20-%20Validate%20ARR%20Pricing%20Option%20at%20Deal%20Level%20and%20Add%20Libor%20Option___2021-04-08%2019-04-35.729/Deal%20Notebook%20-%20Borrower_1.jpg"&gt;&lt;img src="Results/LoanIQ/TC01%20-%20Validate%20ARR%20Pricing%20Option%20at%20Deal%20Level%20and%20Add%20Libor%20Option___2021-04-08%2019-04-35.729/Deal%20Notebook%20-%20Borrower_1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210408 19:05:59.847" endtime="20210408 19:05:59.952"></status>
</kw>
<kw name="Get Latest File" library="ReportMaker">
<arguments>
<arg>${getfilePath}</arg>
</arguments>
<assign>
<var>${imagePath}</var>
</assign>
<msg timestamp="20210408 19:06:00.012" level="INFO">${imagePath} = C:\Git_Evergreen\transform_arr\Results\LoanIQ\TC01 - Validate ARR Pricing Option at Deal Level and Add Libor Option___2021-04-08 19-04-35.729\Deal Notebook - Borrower_1.jpg</msg>
<status status="PASS" starttime="20210408 19:06:00.009" endtime="20210408 19:06:00.012"></status>
</kw>
<kw name="Put Screenshot With Text" library="ReportMaker">
<arguments>
<arg>${imagePath}</arg>
<arg>${imageName}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:00.073" endtime="20210408 19:06:00.082"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:59.796" endtime="20210408 19:06:00.083"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:37.957" endtime="20210408 19:06:00.083"></status>
</kw>
<kw name="Select Deal Borrower Location and Servicing Group" library="Deal_Notebook">
<doc>This keyword selects a borrower location and servicing group.
@author: fmamaril DDMMMYYYY - initial create
@update: amansuet 02APR2020 - Updated to align with automation standards and added keyword pre-processing
@update: ehugo 28MAY2020 - added keyword pre-processing for other arguments; added screenshot
@update: jloretiz 11FEB2021 - added condition for empty data</doc>
<arguments>
<arg>&amp;{ExcelPath}[Customer_Location]</arg>
<arg>&amp;{ExcelPath}[Customer_Alias]</arg>
<arg>&amp;{ExcelPath}[Customer_GroupMember]</arg>
<arg>&amp;{ExcelPath}[Customer_Method]</arg>
<arg>&amp;{ExcelPath}[Customer_ShortName]</arg>
<arg>&amp;{ExcelPath}[Customer_Name]</arg>
</arguments>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sBorrower_Location}</arg>
</arguments>
<assign>
<var>${Borrower_Location}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:00.415" endtime="20210408 19:06:00.415"></status>
</kw>
<msg timestamp="20210408 19:06:00.416" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:06:00.414" endtime="20210408 19:06:00.416"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:06:00.634" level="INFO">${List_Argument_Excel_Value} = ['Ajax, Canada']</msg>
<status status="PASS" starttime="20210408 19:06:00.633" endtime="20210408 19:06:00.634"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:06:00.684" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:06:00.684" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:06:00.683" endtime="20210408 19:06:00.684"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:06:00.735" level="INFO">${Arg_User_Input} = AJAX, CANADA</msg>
<status status="PASS" starttime="20210408 19:06:00.735" endtime="20210408 19:06:00.735"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:06:00.785" level="INFO">${Arg_User_Input} = AJAX, CANADA</msg>
<status status="PASS" starttime="20210408 19:06:00.785" endtime="20210408 19:06:00.785"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:06:00.836" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:06:00.835" endtime="20210408 19:06:00.836"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:06:00.885" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:06:00.884" endtime="20210408 19:06:00.885"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:06:00.940" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:06:00.939" endtime="20210408 19:06:00.940"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:00.995" endtime="20210408 19:06:00.995"></status>
</kw>
<msg timestamp="20210408 19:06:00.995" level="INFO">${Extracted_Argument_Value} = Ajax, Canada</msg>
<status status="PASS" starttime="20210408 19:06:00.993" endtime="20210408 19:06:00.996"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:00.581" endtime="20210408 19:06:00.996"></status>
</kw>
<msg timestamp="20210408 19:06:00.996" level="INFO">${Extracted_Argument_Value} = Ajax, Canada</msg>
<status status="PASS" starttime="20210408 19:06:00.469" endtime="20210408 19:06:00.996"></status>
</kw>
<msg timestamp="20210408 19:06:00.996" level="INFO">${Borrower_Location} = Ajax, Canada</msg>
<status status="PASS" starttime="20210408 19:06:00.360" endtime="20210408 19:06:00.996"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sBorrower_SGAlias}</arg>
</arguments>
<assign>
<var>${Borrower_SGAlias}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:01.205" endtime="20210408 19:06:01.205"></status>
</kw>
<msg timestamp="20210408 19:06:01.206" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:06:01.203" endtime="20210408 19:06:01.206"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:06:01.482" level="INFO">${List_Argument_Excel_Value} = ['KH']</msg>
<status status="PASS" starttime="20210408 19:06:01.482" endtime="20210408 19:06:01.483"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:06:01.551" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:06:01.551" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:06:01.550" endtime="20210408 19:06:01.551"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:06:01.604" level="INFO">${Arg_User_Input} = KH</msg>
<status status="PASS" starttime="20210408 19:06:01.603" endtime="20210408 19:06:01.604"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:06:01.654" level="INFO">${Arg_User_Input} = KH</msg>
<status status="PASS" starttime="20210408 19:06:01.653" endtime="20210408 19:06:01.654"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:06:01.708" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:06:01.708" endtime="20210408 19:06:01.708"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:06:01.760" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:06:01.759" endtime="20210408 19:06:01.760"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:06:01.814" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:06:01.813" endtime="20210408 19:06:01.814"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:01.866" endtime="20210408 19:06:01.866"></status>
</kw>
<msg timestamp="20210408 19:06:01.866" level="INFO">${Extracted_Argument_Value} = KH</msg>
<status status="PASS" starttime="20210408 19:06:01.864" endtime="20210408 19:06:01.867"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:01.402" endtime="20210408 19:06:01.867"></status>
</kw>
<msg timestamp="20210408 19:06:01.867" level="INFO">${Extracted_Argument_Value} = KH</msg>
<status status="PASS" starttime="20210408 19:06:01.256" endtime="20210408 19:06:01.867"></status>
</kw>
<msg timestamp="20210408 19:06:01.867" level="INFO">${Borrower_SGAlias} = KH</msg>
<status status="PASS" starttime="20210408 19:06:01.149" endtime="20210408 19:06:01.867"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sBorrower_SGGroupMembers}</arg>
</arguments>
<assign>
<var>${Borrower_SGGroupMembers}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:02.084" endtime="20210408 19:06:02.084"></status>
</kw>
<msg timestamp="20210408 19:06:02.084" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:06:02.081" endtime="20210408 19:06:02.084"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:06:02.399" level="INFO">${List_Argument_Excel_Value} = ['Holmes,  K']</msg>
<status status="PASS" starttime="20210408 19:06:02.398" endtime="20210408 19:06:02.399"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:06:02.451" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:06:02.451" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:06:02.450" endtime="20210408 19:06:02.451"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:06:02.504" level="INFO">${Arg_User_Input} = HOLMES,  K</msg>
<status status="PASS" starttime="20210408 19:06:02.503" endtime="20210408 19:06:02.504"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:06:02.556" level="INFO">${Arg_User_Input} = HOLMES,  K</msg>
<status status="PASS" starttime="20210408 19:06:02.556" endtime="20210408 19:06:02.556"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:06:02.608" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:06:02.608" endtime="20210408 19:06:02.609"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:06:02.661" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:06:02.660" endtime="20210408 19:06:02.661"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:06:02.713" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:06:02.712" endtime="20210408 19:06:02.713"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:02.765" endtime="20210408 19:06:02.766"></status>
</kw>
<msg timestamp="20210408 19:06:02.766" level="INFO">${Extracted_Argument_Value} = Holmes,  K</msg>
<status status="PASS" starttime="20210408 19:06:02.763" endtime="20210408 19:06:02.766"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:02.238" endtime="20210408 19:06:02.766"></status>
</kw>
<msg timestamp="20210408 19:06:02.766" level="INFO">${Extracted_Argument_Value} = Holmes,  K</msg>
<status status="PASS" starttime="20210408 19:06:02.137" endtime="20210408 19:06:02.766"></status>
</kw>
<msg timestamp="20210408 19:06:02.767" level="INFO">${Borrower_SGGroupMembers} = Holmes,  K</msg>
<status status="PASS" starttime="20210408 19:06:02.028" endtime="20210408 19:06:02.767"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sBorrower_SGMethod}</arg>
</arguments>
<assign>
<var>${Borrower_SGMethod}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:02.980" endtime="20210408 19:06:02.981"></status>
</kw>
<msg timestamp="20210408 19:06:02.981" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:06:02.978" endtime="20210408 19:06:02.981"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:06:03.187" level="INFO">${List_Argument_Excel_Value} = ['DDA']</msg>
<status status="PASS" starttime="20210408 19:06:03.186" endtime="20210408 19:06:03.187"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:06:03.247" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:06:03.247" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:06:03.246" endtime="20210408 19:06:03.247"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:06:03.298" level="INFO">${Arg_User_Input} = DDA</msg>
<status status="PASS" starttime="20210408 19:06:03.297" endtime="20210408 19:06:03.298"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:06:03.348" level="INFO">${Arg_User_Input} = DDA</msg>
<status status="PASS" starttime="20210408 19:06:03.347" endtime="20210408 19:06:03.348"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:06:03.399" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:06:03.398" endtime="20210408 19:06:03.399"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:06:03.450" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:06:03.450" endtime="20210408 19:06:03.451"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:06:03.501" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:06:03.500" endtime="20210408 19:06:03.501"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:03.552" endtime="20210408 19:06:03.552"></status>
</kw>
<msg timestamp="20210408 19:06:03.553" level="INFO">${Extracted_Argument_Value} = DDA</msg>
<status status="PASS" starttime="20210408 19:06:03.550" endtime="20210408 19:06:03.553"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:03.135" endtime="20210408 19:06:03.553"></status>
</kw>
<msg timestamp="20210408 19:06:03.553" level="INFO">${Extracted_Argument_Value} = DDA</msg>
<status status="PASS" starttime="20210408 19:06:03.033" endtime="20210408 19:06:03.553"></status>
</kw>
<msg timestamp="20210408 19:06:03.553" level="INFO">${Borrower_SGMethod} = DDA</msg>
<status status="PASS" starttime="20210408 19:06:02.927" endtime="20210408 19:06:03.554"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sDeal_Borrower}</arg>
</arguments>
<assign>
<var>${Deal_Borrower}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:03.757" endtime="20210408 19:06:03.758"></status>
</kw>
<msg timestamp="20210408 19:06:03.758" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:06:03.756" endtime="20210408 19:06:03.758"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:06:03.959" level="INFO">${List_Argument_Excel_Value} = ['BNS06_USB_31152']</msg>
<status status="PASS" starttime="20210408 19:06:03.959" endtime="20210408 19:06:03.960"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:06:04.011" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:06:04.011" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:06:04.011" endtime="20210408 19:06:04.012"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:06:04.063" level="INFO">${Arg_User_Input} = BNS06_USB_31152</msg>
<status status="PASS" starttime="20210408 19:06:04.062" endtime="20210408 19:06:04.063"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:06:04.115" level="INFO">${Arg_User_Input} = BNS06_USB_31152</msg>
<status status="PASS" starttime="20210408 19:06:04.114" endtime="20210408 19:06:04.115"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:06:04.164" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:06:04.163" endtime="20210408 19:06:04.164"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:06:04.217" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:06:04.216" endtime="20210408 19:06:04.217"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:06:04.274" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:06:04.273" endtime="20210408 19:06:04.275"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:04.331" endtime="20210408 19:06:04.331"></status>
</kw>
<msg timestamp="20210408 19:06:04.331" level="INFO">${Extracted_Argument_Value} = BNS06_USB_31152</msg>
<status status="PASS" starttime="20210408 19:06:04.329" endtime="20210408 19:06:04.331"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:03.908" endtime="20210408 19:06:04.332"></status>
</kw>
<msg timestamp="20210408 19:06:04.332" level="INFO">${Extracted_Argument_Value} = BNS06_USB_31152</msg>
<status status="PASS" starttime="20210408 19:06:03.810" endtime="20210408 19:06:04.332"></status>
</kw>
<msg timestamp="20210408 19:06:04.332" level="INFO">${Deal_Borrower} = BNS06_USB_31152</msg>
<status status="PASS" starttime="20210408 19:06:03.705" endtime="20210408 19:06:04.332"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sBorrower_SGName}</arg>
</arguments>
<assign>
<var>${Borrower_SGName}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:04.580" endtime="20210408 19:06:04.580"></status>
</kw>
<msg timestamp="20210408 19:06:04.581" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:06:04.578" endtime="20210408 19:06:04.581"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:06:04.897" level="INFO">${List_Argument_Excel_Value} = ['HOLMES']</msg>
<status status="PASS" starttime="20210408 19:06:04.897" endtime="20210408 19:06:04.897"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:06:04.948" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:06:04.948" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:06:04.947" endtime="20210408 19:06:04.948"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:06:04.998" level="INFO">${Arg_User_Input} = HOLMES</msg>
<status status="PASS" starttime="20210408 19:06:04.997" endtime="20210408 19:06:04.998"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:06:05.050" level="INFO">${Arg_User_Input} = HOLMES</msg>
<status status="PASS" starttime="20210408 19:06:05.049" endtime="20210408 19:06:05.050"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:06:05.101" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:06:05.100" endtime="20210408 19:06:05.101"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:06:05.153" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:06:05.153" endtime="20210408 19:06:05.153"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:06:05.205" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:06:05.204" endtime="20210408 19:06:05.205"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:05.257" endtime="20210408 19:06:05.257"></status>
</kw>
<msg timestamp="20210408 19:06:05.257" level="INFO">${Extracted_Argument_Value} = HOLMES</msg>
<status status="PASS" starttime="20210408 19:06:05.255" endtime="20210408 19:06:05.258"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:04.736" endtime="20210408 19:06:05.258"></status>
</kw>
<msg timestamp="20210408 19:06:05.258" level="INFO">${Extracted_Argument_Value} = HOLMES</msg>
<status status="PASS" starttime="20210408 19:06:04.634" endtime="20210408 19:06:05.259"></status>
</kw>
<msg timestamp="20210408 19:06:05.259" level="INFO">${Borrower_SGName} = HOLMES</msg>
<status status="PASS" starttime="20210408 19:06:04.500" endtime="20210408 19:06:05.259"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Borrower_Location}'=='${EMPTY}'</arg>
<arg>Mx LoanIQ Select Combo Box Value</arg>
<arg>${LIQ_DealBorrower_Location_List}</arg>
<arg>${Borrower_Location}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:05.310" endtime="20210408 19:06:05.311"></status>
</kw>
<kw name="Validate Loan IQ Details" library="GenericKeywords">
<doc>This keyword validates the displayed Loan IQ details in the application vs the data in excel
@author: jcdelacruz/ghabal
@update: bernchua Added property 'value' in Mx LoanIQ Get Data keyword.
@update: jdelacru 13DEC2019 - Changed the argument in getting value for UI</doc>
<arguments>
<arg>${Borrower_Location}</arg>
<arg>${LIQ_DealBorrower_Location_List}</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Get Data</arg>
<arg>${Value_fromUI}</arg>
<arg>value%Value_fromUI</arg>
</arguments>
<assign>
<var>${Value_fromUI}</var>
</assign>
<kw name="Mx LoanIQ Get Data" library="LoanIQ">
<doc>| Usage |
Used to returns the text of object identified by `locator'</doc>
<arguments>
<arg>${Value_fromUI}</arg>
<arg>value%Value_fromUI</arg>
</arguments>
<msg timestamp="20210408 19:06:05.490" level="INFO">Fetching value from object: JavaWindow("title:=Deal Borrower.*").JavaList("tagname:=Location:") 
 Value = : Ajax, Canada</msg>
<msg timestamp="20210408 19:06:05.490" level="INFO">${Value_fromUI} = Ajax, Canada</msg>
<status status="PASS" starttime="20210408 19:06:05.415" endtime="20210408 19:06:05.490"></status>
</kw>
<msg timestamp="20210408 19:06:05.491" level="INFO">${Value_fromUI} = Ajax, Canada</msg>
<status status="PASS" starttime="20210408 19:06:05.414" endtime="20210408 19:06:05.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Value_fromExcel} - This is the data retrieved from Excel Sheet</arg>
</arguments>
<msg timestamp="20210408 19:06:05.545" level="INFO">Ajax, Canada - This is the data retrieved from Excel Sheet</msg>
<status status="PASS" starttime="20210408 19:06:05.545" endtime="20210408 19:06:05.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Value_fromUI} - This is the data displayed in the UI/application</arg>
</arguments>
<msg timestamp="20210408 19:06:05.596" level="INFO">Ajax, Canada - This is the data displayed in the UI/application</msg>
<status status="PASS" starttime="20210408 19:06:05.595" endtime="20210408 19:06:05.596"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:05.649" endtime="20210408 19:06:05.650"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:05.647" endtime="20210408 19:06:05.650"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Should Be Equal</arg>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:05.702" endtime="20210408 19:06:05.702"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:05.700" endtime="20210408 19:06:05.703"></status>
</kw>
<msg timestamp="20210408 19:06:05.703" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:06:05.699" endtime="20210408 19:06:05.703"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>"${Value_fromExcel}" - data retrieved from Excel Sheet MATCHES "${Value_fromUI}" - the data displayed in the UI/application</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>"${Value_fromExcel}" - data retrieved from Excel Sheet DOES NOT MATCH "${Value_fromUI}" - the data displayed in the UI/application</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"${Value_fromExcel}" - data retrieved from Excel Sheet MATCHES "${Value_fromUI}" - the data displayed in the UI/application</arg>
</arguments>
<msg timestamp="20210408 19:06:05.754" level="INFO">"Ajax, Canada" - data retrieved from Excel Sheet MATCHES "Ajax, Canada" - the data displayed in the UI/application</msg>
<status status="PASS" starttime="20210408 19:06:05.753" endtime="20210408 19:06:05.754"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:05.751" endtime="20210408 19:06:05.754"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:05.363" endtime="20210408 19:06:05.754"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_DealBorrower_ServicingGroup_Button}</arg>
</arguments>
<msg timestamp="20210408 19:06:06.739" level="INFO">JavaWindow("title:=Deal Borrower.*").JavaButton("attached text:=Servicing Group") is clicked.</msg>
<status status="PASS" starttime="20210408 19:06:05.804" endtime="20210408 19:06:06.739"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_ServicingGroup_Window}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_ServicingGroup_Window}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:06:10.741" level="INFO">Locator = 'JavaWindow("title:=Servicing Groups For:.*","displayed:=1")' exists.</msg>
<status status="PASS" starttime="20210408 19:06:06.815" endtime="20210408 19:06:10.742"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:06.811" endtime="20210408 19:06:10.742"></status>
</kw>
<kw name="Mx LoanIQ Activate Window" library="LoanIQ">
<doc>| Usage |
To activate existing window if present.</doc>
<arguments>
<arg>${LIQ_ServicingGroup_Window}</arg>
</arguments>
<msg timestamp="20210408 19:06:10.895" level="INFO">Window : JavaWindow("title:=Servicing Groups For:.*","displayed:=1") is activated</msg>
<status status="PASS" starttime="20210408 19:06:10.804" endtime="20210408 19:06:10.896"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Borrower_SGAlias}'=='${EMPTY}'</arg>
<arg>Mx LoanIQ Select String</arg>
<arg>${LIQ_ServicingGroups_JavaTree}</arg>
<arg>${Borrower_SGAlias}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:10.949" endtime="20210408 19:06:10.950"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Borrower_SGGroupMembers}'=='${EMPTY}'</arg>
<arg>Mx LoanIQ Select String</arg>
<arg>${LIQ_ServicingGroups_GroupMembers_JavaTree}</arg>
<arg>${Borrower_SGGroupMembers}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:11.002" endtime="20210408 19:06:11.002"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Borrower_SGMethod}'=='${EMPTY}'</arg>
<arg>Mx LoanIQ Select String</arg>
<arg>${LIQ_ServicingGroups_RemittanceInctructions_JavaTree}</arg>
<arg>${Borrower_SGMethod}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:11.057" endtime="20210408 19:06:11.058"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_ServicingGroup_OK_Button}</arg>
</arguments>
<msg timestamp="20210408 19:06:11.404" level="INFO">JavaWindow("title:=Servicing Groups For:.*").JavaButton("attached text:=OK") is clicked.</msg>
<status status="PASS" starttime="20210408 19:06:11.129" endtime="20210408 19:06:11.404"></status>
</kw>
<kw name="Mx LoanIQ Activate Window" library="LoanIQ">
<doc>| Usage |
To activate existing window if present.</doc>
<arguments>
<arg>${LIQ_DealBorrower_Window}</arg>
</arguments>
<msg timestamp="20210408 19:06:11.950" level="INFO">Window : JavaWindow("title:=Deal Borrower.*") is activated</msg>
<status status="PASS" starttime="20210408 19:06:11.491" endtime="20210408 19:06:11.950"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>JavaWindow("title:=.*${Deal_Borrower}.*").JavaStaticText("label:=${Borrower_SGName}")</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>JavaWindow("title:=.*${Deal_Borrower}.*").JavaStaticText("label:=${Borrower_SGName}")</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:06:12.152" level="INFO">Locator = 'JavaWindow("title:=.*BNS06_USB_31152.*").JavaStaticText("label:=HOLMES")' exists.</msg>
<status status="PASS" starttime="20210408 19:06:12.058" endtime="20210408 19:06:12.152"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:12.055" endtime="20210408 19:06:12.153"></status>
</kw>
<kw name="Take Screenshot with text into Test Document" library="ReportMaker_Keywords">
<doc>This keyword is used to add screenshot with image filename as description into test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Deal Notebook - Borrower Location</arg>
</arguments>
<kw name="Take Screenshot" library="Screenshot">
<doc>Takes a screenshot in JPEG format and embeds it into the log file.</doc>
<arguments>
<arg>${imageName}</arg>
</arguments>
<msg timestamp="20210408 19:06:12.387" level="INFO" html="yes">&lt;a href="Results/LoanIQ/TC01%20-%20Validate%20ARR%20Pricing%20Option%20at%20Deal%20Level%20and%20Add%20Libor%20Option___2021-04-08%2019-04-35.729/Deal%20Notebook%20-%20Borrower%20Location_1.jpg"&gt;&lt;img src="Results/LoanIQ/TC01%20-%20Validate%20ARR%20Pricing%20Option%20at%20Deal%20Level%20and%20Add%20Libor%20Option___2021-04-08%2019-04-35.729/Deal%20Notebook%20-%20Borrower%20Location_1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210408 19:06:12.294" endtime="20210408 19:06:12.388"></status>
</kw>
<kw name="Get Latest File" library="ReportMaker">
<arguments>
<arg>${getfilePath}</arg>
</arguments>
<assign>
<var>${imagePath}</var>
</assign>
<msg timestamp="20210408 19:06:12.445" level="INFO">${imagePath} = C:\Git_Evergreen\transform_arr\Results\LoanIQ\TC01 - Validate ARR Pricing Option at Deal Level and Add Libor Option___2021-04-08 19-04-35.729\Deal Notebook - Borrower Location_1.jpg</msg>
<status status="PASS" starttime="20210408 19:06:12.444" endtime="20210408 19:06:12.445"></status>
</kw>
<kw name="Put Screenshot With Text" library="ReportMaker">
<arguments>
<arg>${imagePath}</arg>
<arg>${imageName}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:12.499" endtime="20210408 19:06:12.509"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:12.237" endtime="20210408 19:06:12.509"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:00.154" endtime="20210408 19:06:12.509"></status>
</kw>
<kw name="Select Deal Borrower Remmitance Instruction" library="Deal_Notebook">
<doc>This keyword selects a remitance instruction.
@author: fmamaril DDMMMYYYY - initial create
@update: amansuet 02APR2020 - Updated to align with automation standards and added keyword pre-processing
@update: ehugo 28MAY2020 - added keyword pre-processing for other arguments; added screenshot</doc>
<arguments>
<arg>&amp;{ExcelPath}[Customer_ShortName]</arg>
<arg>${Deal_Name}</arg>
<arg>&amp;{ExcelPath}[Customer_Location]</arg>
<arg>${ON}</arg>
<arg>${OFF}</arg>
</arguments>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sDeal_Borrower}</arg>
</arguments>
<assign>
<var>${Deal_Borrower}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:12.788" endtime="20210408 19:06:12.788"></status>
</kw>
<msg timestamp="20210408 19:06:12.789" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:06:12.786" endtime="20210408 19:06:12.789"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:06:13.001" level="INFO">${List_Argument_Excel_Value} = ['BNS06_USB_31152']</msg>
<status status="PASS" starttime="20210408 19:06:13.000" endtime="20210408 19:06:13.001"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:06:13.053" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:06:13.053" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:06:13.053" endtime="20210408 19:06:13.053"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:06:13.106" level="INFO">${Arg_User_Input} = BNS06_USB_31152</msg>
<status status="PASS" starttime="20210408 19:06:13.105" endtime="20210408 19:06:13.106"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:06:13.162" level="INFO">${Arg_User_Input} = BNS06_USB_31152</msg>
<status status="PASS" starttime="20210408 19:06:13.162" endtime="20210408 19:06:13.162"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:06:13.322" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:06:13.321" endtime="20210408 19:06:13.322"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:06:13.373" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:06:13.372" endtime="20210408 19:06:13.373"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:06:13.423" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:06:13.422" endtime="20210408 19:06:13.423"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:13.475" endtime="20210408 19:06:13.475"></status>
</kw>
<msg timestamp="20210408 19:06:13.475" level="INFO">${Extracted_Argument_Value} = BNS06_USB_31152</msg>
<status status="PASS" starttime="20210408 19:06:13.473" endtime="20210408 19:06:13.475"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:12.948" endtime="20210408 19:06:13.475"></status>
</kw>
<msg timestamp="20210408 19:06:13.475" level="INFO">${Extracted_Argument_Value} = BNS06_USB_31152</msg>
<status status="PASS" starttime="20210408 19:06:12.845" endtime="20210408 19:06:13.475"></status>
</kw>
<msg timestamp="20210408 19:06:13.475" level="INFO">${Deal_Borrower} = BNS06_USB_31152</msg>
<status status="PASS" starttime="20210408 19:06:12.732" endtime="20210408 19:06:13.476"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sDeal_Name}</arg>
</arguments>
<assign>
<var>${Deal_Name}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:13.690" endtime="20210408 19:06:13.691"></status>
</kw>
<msg timestamp="20210408 19:06:13.691" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:06:13.689" endtime="20210408 19:06:13.691"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:06:13.890" level="INFO">${List_Argument_Excel_Value} = ['ARR_LIBORSC308042021190438PNT']</msg>
<status status="PASS" starttime="20210408 19:06:13.890" endtime="20210408 19:06:13.890"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:06:13.942" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:06:13.942" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:06:13.941" endtime="20210408 19:06:13.942"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:06:13.993" level="INFO">${Arg_User_Input} = ARR_LIBORSC308042021190438PNT</msg>
<status status="PASS" starttime="20210408 19:06:13.992" endtime="20210408 19:06:13.993"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:06:14.044" level="INFO">${Arg_User_Input} = ARR_LIBORSC308042021190438PNT</msg>
<status status="PASS" starttime="20210408 19:06:14.044" endtime="20210408 19:06:14.044"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:06:14.096" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:06:14.095" endtime="20210408 19:06:14.096"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:06:14.147" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:06:14.147" endtime="20210408 19:06:14.148"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:06:14.201" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:06:14.200" endtime="20210408 19:06:14.201"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:14.256" endtime="20210408 19:06:14.256"></status>
</kw>
<msg timestamp="20210408 19:06:14.257" level="INFO">${Extracted_Argument_Value} = ARR_LIBORSC308042021190438PNT</msg>
<status status="PASS" starttime="20210408 19:06:14.254" endtime="20210408 19:06:14.257"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:13.840" endtime="20210408 19:06:14.257"></status>
</kw>
<msg timestamp="20210408 19:06:14.257" level="INFO">${Extracted_Argument_Value} = ARR_LIBORSC308042021190438PNT</msg>
<status status="PASS" starttime="20210408 19:06:13.741" endtime="20210408 19:06:14.257"></status>
</kw>
<msg timestamp="20210408 19:06:14.258" level="INFO">${Deal_Name} = ARR_LIBORSC308042021190438PNT</msg>
<status status="PASS" starttime="20210408 19:06:13.637" endtime="20210408 19:06:14.258"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sBorrower_Location}</arg>
</arguments>
<assign>
<var>${Borrower_Location}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:14.467" endtime="20210408 19:06:14.467"></status>
</kw>
<msg timestamp="20210408 19:06:14.467" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:06:14.465" endtime="20210408 19:06:14.467"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:06:14.670" level="INFO">${List_Argument_Excel_Value} = ['Ajax, Canada']</msg>
<status status="PASS" starttime="20210408 19:06:14.670" endtime="20210408 19:06:14.670"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:06:14.721" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:06:14.721" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:06:14.720" endtime="20210408 19:06:14.721"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:06:14.772" level="INFO">${Arg_User_Input} = AJAX, CANADA</msg>
<status status="PASS" starttime="20210408 19:06:14.772" endtime="20210408 19:06:14.772"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:06:14.824" level="INFO">${Arg_User_Input} = AJAX, CANADA</msg>
<status status="PASS" starttime="20210408 19:06:14.823" endtime="20210408 19:06:14.824"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:06:14.875" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:06:14.874" endtime="20210408 19:06:14.875"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:06:14.927" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:06:14.926" endtime="20210408 19:06:14.927"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:06:14.981" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:06:14.980" endtime="20210408 19:06:14.981"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:15.035" endtime="20210408 19:06:15.036"></status>
</kw>
<msg timestamp="20210408 19:06:15.036" level="INFO">${Extracted_Argument_Value} = Ajax, Canada</msg>
<status status="PASS" starttime="20210408 19:06:15.033" endtime="20210408 19:06:15.036"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:14.618" endtime="20210408 19:06:15.036"></status>
</kw>
<msg timestamp="20210408 19:06:15.037" level="INFO">${Extracted_Argument_Value} = Ajax, Canada</msg>
<status status="PASS" starttime="20210408 19:06:14.518" endtime="20210408 19:06:15.037"></status>
</kw>
<msg timestamp="20210408 19:06:15.037" level="INFO">${Borrower_Location} = Ajax, Canada</msg>
<status status="PASS" starttime="20210408 19:06:14.413" endtime="20210408 19:06:15.037"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sIsBorrower}</arg>
</arguments>
<assign>
<var>${IsBorrower}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:15.254" endtime="20210408 19:06:15.255"></status>
</kw>
<msg timestamp="20210408 19:06:15.255" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:06:15.252" endtime="20210408 19:06:15.255"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:06:15.481" level="INFO">${List_Argument_Excel_Value} = ['ON']</msg>
<status status="PASS" starttime="20210408 19:06:15.480" endtime="20210408 19:06:15.481"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:06:15.532" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:06:15.532" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:06:15.531" endtime="20210408 19:06:15.532"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:06:15.590" level="INFO">${Arg_User_Input} = ON</msg>
<status status="PASS" starttime="20210408 19:06:15.589" endtime="20210408 19:06:15.590"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:06:15.641" level="INFO">${Arg_User_Input} = ON</msg>
<status status="PASS" starttime="20210408 19:06:15.640" endtime="20210408 19:06:15.641"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:06:15.694" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:06:15.694" endtime="20210408 19:06:15.695"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:06:15.746" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:06:15.745" endtime="20210408 19:06:15.746"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:06:15.796" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:06:15.796" endtime="20210408 19:06:15.796"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:15.850" endtime="20210408 19:06:15.850"></status>
</kw>
<msg timestamp="20210408 19:06:15.850" level="INFO">${Extracted_Argument_Value} = ON</msg>
<status status="PASS" starttime="20210408 19:06:15.848" endtime="20210408 19:06:15.850"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:15.428" endtime="20210408 19:06:15.851"></status>
</kw>
<msg timestamp="20210408 19:06:15.851" level="INFO">${Extracted_Argument_Value} = ON</msg>
<status status="PASS" starttime="20210408 19:06:15.307" endtime="20210408 19:06:15.851"></status>
</kw>
<msg timestamp="20210408 19:06:15.851" level="INFO">${IsBorrower} = ON</msg>
<status status="PASS" starttime="20210408 19:06:15.199" endtime="20210408 19:06:15.851"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sIsDepositor}</arg>
</arguments>
<assign>
<var>${IsDepositor}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:16.064" endtime="20210408 19:06:16.064"></status>
</kw>
<msg timestamp="20210408 19:06:16.065" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:06:16.063" endtime="20210408 19:06:16.065"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:06:16.271" level="INFO">${List_Argument_Excel_Value} = ['OFF']</msg>
<status status="PASS" starttime="20210408 19:06:16.270" endtime="20210408 19:06:16.271"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:06:16.434" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:06:16.434" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:06:16.433" endtime="20210408 19:06:16.434"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:06:16.485" level="INFO">${Arg_User_Input} = OFF</msg>
<status status="PASS" starttime="20210408 19:06:16.484" endtime="20210408 19:06:16.485"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:06:16.536" level="INFO">${Arg_User_Input} = OFF</msg>
<status status="PASS" starttime="20210408 19:06:16.536" endtime="20210408 19:06:16.536"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:06:16.588" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:06:16.587" endtime="20210408 19:06:16.588"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:06:16.639" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:06:16.638" endtime="20210408 19:06:16.639"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:06:16.695" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:06:16.694" endtime="20210408 19:06:16.695"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:16.749" endtime="20210408 19:06:16.749"></status>
</kw>
<msg timestamp="20210408 19:06:16.750" level="INFO">${Extracted_Argument_Value} = OFF</msg>
<status status="PASS" starttime="20210408 19:06:16.747" endtime="20210408 19:06:16.750"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:16.218" endtime="20210408 19:06:16.750"></status>
</kw>
<msg timestamp="20210408 19:06:16.750" level="INFO">${Extracted_Argument_Value} = OFF</msg>
<status status="PASS" starttime="20210408 19:06:16.114" endtime="20210408 19:06:16.750"></status>
</kw>
<msg timestamp="20210408 19:06:16.751" level="INFO">${IsDepositor} = OFF</msg>
<status status="PASS" starttime="20210408 19:06:16.011" endtime="20210408 19:06:16.751"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_DealBorrower_PreferredRemittanceInstructions_Button}</arg>
</arguments>
<msg timestamp="20210408 19:06:17.047" level="INFO">JavaWindow("title:=Deal Borrower.*").JavaButton("attached text:=Preferred Remittance Instructions") is clicked.</msg>
<status status="PASS" starttime="20210408 19:06:16.804" endtime="20210408 19:06:17.047"></status>
</kw>
<kw name="Validate Warning Message Box" library="GenericKeywords">
<tags>
<tag>Validation</tag>
</tags>
<doc>This keyword validates warning message box
@author: fmamaril
@update: fmamaril 18MAR2019 Add Handling for Warning Yes Button</doc>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_Warning_MessageBox}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_Warning_MessageBox}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:06:17.271" level="INFO">Locator = 'JavaWindow("title:=Warning.*","displayed:=1").JavaEdit("displayed:=1.*")' exists.</msg>
<status status="PASS" starttime="20210408 19:06:17.208" endtime="20210408 19:06:17.271"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:17.206" endtime="20210408 19:06:17.272"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>30s</arg>
<arg>3s</arg>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_Warning_Yes_Button}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_Warning_Yes_Button}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:06:17.393" level="INFO">Locator = 'JavaWindow("title:=Warning.*", "displayed:=1").JavaButton("label:=Yes")' exists.</msg>
<status status="PASS" starttime="20210408 19:06:17.341" endtime="20210408 19:06:17.394"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:17.339" endtime="20210408 19:06:17.394"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_Warning_No_Button}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_Warning_No_Button}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:06:17.524" level="INFO">Locator = 'JavaWindow("title:=Warning.*","displayed:=1").JavaButton("label:=No")' exists.</msg>
<status status="PASS" starttime="20210408 19:06:17.459" endtime="20210408 19:06:17.524"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:17.457" endtime="20210408 19:06:17.525"></status>
</kw>
<kw name="Mx LoanIQ Click Element If Present" library="LoanIQ">
<doc>| Usage |
Click on element identified by `locator` only if that element is present.
It passes if the element is not present.</doc>
<arguments>
<arg>${LIQ_Warning_Yes_Button}</arg>
</arguments>
<msg timestamp="20210408 19:06:22.331" level="INFO">JavaWindow("title:=Warning.*", "displayed:=1").JavaButton("label:=Yes"): is clicked, or skipped if not present.</msg>
<status status="PASS" starttime="20210408 19:06:17.589" endtime="20210408 19:06:22.331"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:17.148" endtime="20210408 19:06:22.332"></status>
</kw>
<kw name="Mx LoanIQ Click Element If Present" library="LoanIQ">
<doc>| Usage |
Click on element identified by `locator` only if that element is present.
It passes if the element is not present.</doc>
<arguments>
<arg>${LIQ_Warning_Yes_Button}</arg>
</arguments>
<msg timestamp="20210408 19:06:30.656" level="INFO">JavaWindow("title:=Warning.*", "displayed:=1").JavaButton("label:=Yes"): is clicked, or skipped if not present.</msg>
<status status="PASS" starttime="20210408 19:06:22.386" endtime="20210408 19:06:30.656"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Click Button On Window</arg>
<arg>Deal Borrower.*;Warning;Yes</arg>
<arg>strProcessingObj="JavaWindow(\"title:=Processing.*\")"</arg>
<arg>WaitForProcessing=500</arg>
</arguments>
<kw name="Mx LoanIQ Click Button On Window" library="LoanIQ">
<doc>| Usage |
 This keyword clicks on any button on warning,information,question windows</doc>
<arguments>
<arg>Deal Borrower.*;Warning;Yes</arg>
<arg>strProcessingObj="JavaWindow(\"title:=Processing.*\")"</arg>
<arg>WaitForProcessing=500</arg>
</arguments>
<msg timestamp="20210408 19:06:33.979" level="INFO">'Deal Borrower.*;Warning;Yes' clicked if present.</msg>
<status status="PASS" starttime="20210408 19:06:30.713" endtime="20210408 19:06:33.980"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:30.710" endtime="20210408 19:06:33.980"></status>
</kw>
<kw name="Validate Deal Servicing Group" library="Deal_Notebook">
<tags>
<tag>Validation</tag>
</tags>
<doc>This keyword validates deal servicing group
@author: fmamaril</doc>
<arguments>
<arg>${Deal_Borrower}</arg>
<arg>${Deal_Name}</arg>
<arg>${Borrower_Location}</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify If Text Value Exist as Static Text on Page</arg>
<arg>Deal Servicing Group</arg>
<arg>${Deal_Borrower}</arg>
</arguments>
<kw name="Verify If Text Value Exist as Static Text on Page" library="GenericKeywords">
<doc>This keyword verifies if static object exist in page
@author: fmamaril
@update: bernchua Added wildcard before and after validated static text.
@update: bernchua Added "displayed:=1" property in JavaWindow locator.
@update: hstone 04AUG2020 - Else Routine Update: Replaced 'Log' with 'Run Keyword And Continue On Failure Fail "${Text to Validate}" is not displayed on ${WindowName} window.'</doc>
<arguments>
<arg>Deal Servicing Group</arg>
<arg>${Deal_Borrower}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${sContaining_Flag}'=='Y'</arg>
<arg>Run Keyword And Return Status</arg>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>JavaWindow("title:=.*${WindowName}.*","displayed:=1").JavaStaticText("attached text:=.*${Text to Validate}.*")</arg>
<arg>VerificationData="Yes"</arg>
<arg>Processtimeout=5</arg>
<arg>ELSE IF</arg>
<arg>'${sContaining_Flag}'=='N'</arg>
<arg>Run Keyword And Return Status</arg>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>JavaWindow("title:=.*${WindowName}.*","displayed:=1").JavaStaticText("attached text:=${Text to Validate}")</arg>
<arg>VerificationData="Yes"</arg>
<arg>Processtimeout=5</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>sContaining_Flag Value is not accepted. Valid Values: 'Y', 'N'. Please see 'Verify If Text Value Exist as Static Text on Page' keyword.</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>JavaWindow("title:=.*${WindowName}.*","displayed:=1").JavaStaticText("attached text:=.*${Text to Validate}.*")</arg>
<arg>VerificationData="Yes"</arg>
<arg>Processtimeout=5</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>JavaWindow("title:=.*${WindowName}.*","displayed:=1").JavaStaticText("attached text:=.*${Text to Validate}.*")</arg>
<arg>VerificationData="Yes"</arg>
<arg>Processtimeout=5</arg>
</arguments>
<msg timestamp="20210408 19:06:34.338" level="INFO">Locator = 'JavaWindow("title:=.*Deal Servicing Group.*","displayed:=1").JavaStaticText("attached text:=.*BNS06_USB_31152.*")' exists.</msg>
<status status="PASS" starttime="20210408 19:06:34.256" endtime="20210408 19:06:34.339"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:34.255" endtime="20210408 19:06:34.339"></status>
</kw>
<msg timestamp="20210408 19:06:34.339" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:06:34.253" endtime="20210408 19:06:34.339"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>"${Text to Validate}" is displayed on ${WindowName} window.</arg>
<arg>ELSE</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Fail</arg>
<arg>"${Text to Validate}" is not displayed on ${WindowName} window.</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"${Text to Validate}" is displayed on ${WindowName} window.</arg>
</arguments>
<msg timestamp="20210408 19:06:34.398" level="INFO">"BNS06_USB_31152" is displayed on Deal Servicing Group window.</msg>
<status status="PASS" starttime="20210408 19:06:34.397" endtime="20210408 19:06:34.398"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:34.396" endtime="20210408 19:06:34.398"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:34.201" endtime="20210408 19:06:34.398"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:34.100" endtime="20210408 19:06:34.399"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify If Text Value Exist as Static Text on Page</arg>
<arg>Deal Servicing Group</arg>
<arg>${Deal_Name}</arg>
</arguments>
<kw name="Verify If Text Value Exist as Static Text on Page" library="GenericKeywords">
<doc>This keyword verifies if static object exist in page
@author: fmamaril
@update: bernchua Added wildcard before and after validated static text.
@update: bernchua Added "displayed:=1" property in JavaWindow locator.
@update: hstone 04AUG2020 - Else Routine Update: Replaced 'Log' with 'Run Keyword And Continue On Failure Fail "${Text to Validate}" is not displayed on ${WindowName} window.'</doc>
<arguments>
<arg>Deal Servicing Group</arg>
<arg>${Deal_Name}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${sContaining_Flag}'=='Y'</arg>
<arg>Run Keyword And Return Status</arg>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>JavaWindow("title:=.*${WindowName}.*","displayed:=1").JavaStaticText("attached text:=.*${Text to Validate}.*")</arg>
<arg>VerificationData="Yes"</arg>
<arg>Processtimeout=5</arg>
<arg>ELSE IF</arg>
<arg>'${sContaining_Flag}'=='N'</arg>
<arg>Run Keyword And Return Status</arg>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>JavaWindow("title:=.*${WindowName}.*","displayed:=1").JavaStaticText("attached text:=${Text to Validate}")</arg>
<arg>VerificationData="Yes"</arg>
<arg>Processtimeout=5</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>sContaining_Flag Value is not accepted. Valid Values: 'Y', 'N'. Please see 'Verify If Text Value Exist as Static Text on Page' keyword.</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>JavaWindow("title:=.*${WindowName}.*","displayed:=1").JavaStaticText("attached text:=.*${Text to Validate}.*")</arg>
<arg>VerificationData="Yes"</arg>
<arg>Processtimeout=5</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>JavaWindow("title:=.*${WindowName}.*","displayed:=1").JavaStaticText("attached text:=.*${Text to Validate}.*")</arg>
<arg>VerificationData="Yes"</arg>
<arg>Processtimeout=5</arg>
</arguments>
<msg timestamp="20210408 19:06:34.745" level="INFO">Locator = 'JavaWindow("title:=.*Deal Servicing Group.*","displayed:=1").JavaStaticText("attached text:=.*ARR_LIBORSC308042021190438PNT.*")' exists.</msg>
<status status="PASS" starttime="20210408 19:06:34.662" endtime="20210408 19:06:34.745"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:34.661" endtime="20210408 19:06:34.745"></status>
</kw>
<msg timestamp="20210408 19:06:34.746" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:06:34.659" endtime="20210408 19:06:34.746"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>"${Text to Validate}" is displayed on ${WindowName} window.</arg>
<arg>ELSE</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Fail</arg>
<arg>"${Text to Validate}" is not displayed on ${WindowName} window.</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"${Text to Validate}" is displayed on ${WindowName} window.</arg>
</arguments>
<msg timestamp="20210408 19:06:34.802" level="INFO">"ARR_LIBORSC308042021190438PNT" is displayed on Deal Servicing Group window.</msg>
<status status="PASS" starttime="20210408 19:06:34.801" endtime="20210408 19:06:34.802"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:34.799" endtime="20210408 19:06:34.802"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:34.606" endtime="20210408 19:06:34.803"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:34.472" endtime="20210408 19:06:34.803"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify If Text Value Exist as Static Text on Page</arg>
<arg>Deal Servicing Group</arg>
<arg>${Borrower_Location}</arg>
</arguments>
<kw name="Verify If Text Value Exist as Static Text on Page" library="GenericKeywords">
<doc>This keyword verifies if static object exist in page
@author: fmamaril
@update: bernchua Added wildcard before and after validated static text.
@update: bernchua Added "displayed:=1" property in JavaWindow locator.
@update: hstone 04AUG2020 - Else Routine Update: Replaced 'Log' with 'Run Keyword And Continue On Failure Fail "${Text to Validate}" is not displayed on ${WindowName} window.'</doc>
<arguments>
<arg>Deal Servicing Group</arg>
<arg>${Borrower_Location}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${sContaining_Flag}'=='Y'</arg>
<arg>Run Keyword And Return Status</arg>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>JavaWindow("title:=.*${WindowName}.*","displayed:=1").JavaStaticText("attached text:=.*${Text to Validate}.*")</arg>
<arg>VerificationData="Yes"</arg>
<arg>Processtimeout=5</arg>
<arg>ELSE IF</arg>
<arg>'${sContaining_Flag}'=='N'</arg>
<arg>Run Keyword And Return Status</arg>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>JavaWindow("title:=.*${WindowName}.*","displayed:=1").JavaStaticText("attached text:=${Text to Validate}")</arg>
<arg>VerificationData="Yes"</arg>
<arg>Processtimeout=5</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>sContaining_Flag Value is not accepted. Valid Values: 'Y', 'N'. Please see 'Verify If Text Value Exist as Static Text on Page' keyword.</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>JavaWindow("title:=.*${WindowName}.*","displayed:=1").JavaStaticText("attached text:=.*${Text to Validate}.*")</arg>
<arg>VerificationData="Yes"</arg>
<arg>Processtimeout=5</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>JavaWindow("title:=.*${WindowName}.*","displayed:=1").JavaStaticText("attached text:=.*${Text to Validate}.*")</arg>
<arg>VerificationData="Yes"</arg>
<arg>Processtimeout=5</arg>
</arguments>
<msg timestamp="20210408 19:06:35.086" level="INFO">Locator = 'JavaWindow("title:=.*Deal Servicing Group.*","displayed:=1").JavaStaticText("attached text:=.*Ajax, Canada.*")' exists.</msg>
<status status="PASS" starttime="20210408 19:06:35.007" endtime="20210408 19:06:35.086"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:35.005" endtime="20210408 19:06:35.086"></status>
</kw>
<msg timestamp="20210408 19:06:35.087" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:06:35.003" endtime="20210408 19:06:35.087"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>"${Text to Validate}" is displayed on ${WindowName} window.</arg>
<arg>ELSE</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Fail</arg>
<arg>"${Text to Validate}" is not displayed on ${WindowName} window.</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"${Text to Validate}" is displayed on ${WindowName} window.</arg>
</arguments>
<msg timestamp="20210408 19:06:35.141" level="INFO">"Ajax, Canada" is displayed on Deal Servicing Group window.</msg>
<status status="PASS" starttime="20210408 19:06:35.140" endtime="20210408 19:06:35.141"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:35.139" endtime="20210408 19:06:35.141"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:34.952" endtime="20210408 19:06:35.141"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:34.852" endtime="20210408 19:06:35.141"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_ServicingGroupDetails_Add_Button}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_ServicingGroupDetails_Add_Button}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:06:35.276" level="INFO">Locator = 'JavaWindow("title:=Deal Servicing Group Details.*").JavaButton("attached text:=Add")' exists.</msg>
<status status="PASS" starttime="20210408 19:06:35.194" endtime="20210408 19:06:35.277"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:35.193" endtime="20210408 19:06:35.277"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_ServicingGroupDetails_Delete_Button}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_ServicingGroupDetails_Delete_Button}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:06:35.417" level="INFO">Locator = 'JavaWindow("title:=Deal Servicing Group Details.*").JavaButton("attached text:=Delete")' exists.</msg>
<status status="PASS" starttime="20210408 19:06:35.339" endtime="20210408 19:06:35.417"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:35.338" endtime="20210408 19:06:35.418"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Validate if Element is Enabled</arg>
<arg>${LIQ_ServicingGroupDetails_Ok_Button}</arg>
<arg>OK</arg>
</arguments>
<kw name="Validate if Element is Enabled" library="GenericKeywords">
<doc>This keyword validates if Element is enabled
@author: ghabal</doc>
<arguments>
<arg>${LIQ_ServicingGroupDetails_Ok_Button}</arg>
<arg>OK</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<msg timestamp="20210408 19:06:35.665" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:06:35.537" endtime="20210408 19:06:35.665"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:35.535" endtime="20210408 19:06:35.666"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<msg timestamp="20210408 19:06:35.846" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:06:35.736" endtime="20210408 19:06:35.846"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:35.734" endtime="20210408 19:06:35.847"></status>
</kw>
<msg timestamp="20210408 19:06:35.847" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:06:35.733" endtime="20210408 19:06:35.847"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed enabled</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed disabled</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>'${Field_Label}' element is confirmed enabled</arg>
</arguments>
<msg timestamp="20210408 19:06:35.905" level="INFO">'OK' element is confirmed enabled</msg>
<status status="PASS" starttime="20210408 19:06:35.905" endtime="20210408 19:06:35.905"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:35.903" endtime="20210408 19:06:35.905"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:35.479" endtime="20210408 19:06:35.905"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:35.477" endtime="20210408 19:06:35.906"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Validate if Element is Enabled</arg>
<arg>${LIQ_ServicingGroupDetails_Cancel_Button}</arg>
<arg>Cancel</arg>
</arguments>
<kw name="Validate if Element is Enabled" library="GenericKeywords">
<doc>This keyword validates if Element is enabled
@author: ghabal</doc>
<arguments>
<arg>${LIQ_ServicingGroupDetails_Cancel_Button}</arg>
<arg>Cancel</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<msg timestamp="20210408 19:06:36.186" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:06:36.047" endtime="20210408 19:06:36.186"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:36.046" endtime="20210408 19:06:36.187"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<msg timestamp="20210408 19:06:36.351" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:06:36.241" endtime="20210408 19:06:36.351"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:36.240" endtime="20210408 19:06:36.351"></status>
</kw>
<msg timestamp="20210408 19:06:36.352" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:06:36.238" endtime="20210408 19:06:36.352"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed enabled</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed disabled</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>'${Field_Label}' element is confirmed enabled</arg>
</arguments>
<msg timestamp="20210408 19:06:36.409" level="INFO">'Cancel' element is confirmed enabled</msg>
<status status="PASS" starttime="20210408 19:06:36.408" endtime="20210408 19:06:36.409"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:36.406" endtime="20210408 19:06:36.409"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:35.978" endtime="20210408 19:06:36.409"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:35.976" endtime="20210408 19:06:36.409"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:34.047" endtime="20210408 19:06:36.410"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_ServicingGroupDetails_Add_Button}</arg>
</arguments>
<msg timestamp="20210408 19:06:37.163" level="INFO">JavaWindow("title:=Deal Servicing Group Details.*").JavaButton("attached text:=Add") is clicked.</msg>
<status status="PASS" starttime="20210408 19:06:36.484" endtime="20210408 19:06:37.163"></status>
</kw>
<kw name="Mx LoanIQ Set" library="LoanIQ">
<doc>|Usage|</doc>
<arguments>
<arg>${LIQ_PreferredRemittanceInstructions_All_Checkbox}</arg>
<arg>${ON}</arg>
</arguments>
<msg timestamp="20210408 19:06:37.405" level="INFO">Object = 'JavaWindow("title:=Choose Preferred Remittance Instructions.*").JavaCheckBox("Index:=1")' is set.</msg>
<status status="PASS" starttime="20210408 19:06:37.218" endtime="20210408 19:06:37.405"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_PreferredRemittanceInstructions_Ok_Button}</arg>
</arguments>
<msg timestamp="20210408 19:06:37.759" level="INFO">JavaWindow("title:=Choose Preferred Remittance Instructions.*").JavaButton("attached text:=OK") is clicked.</msg>
<status status="PASS" starttime="20210408 19:06:37.485" endtime="20210408 19:06:37.760"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_ServicingGroupDetails_Ok_Button}</arg>
</arguments>
<msg timestamp="20210408 19:06:38.293" level="INFO">JavaWindow("title:=Deal Servicing Group Details.*").JavaButton("attached text:=OK") is clicked.</msg>
<status status="PASS" starttime="20210408 19:06:37.871" endtime="20210408 19:06:38.294"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_DealBorrower_Window}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_DealBorrower_Window}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:06:40.199" level="INFO">Locator = 'JavaWindow("title:=Deal Borrower.*")' exists.</msg>
<status status="PASS" starttime="20210408 19:06:38.469" endtime="20210408 19:06:40.200"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:38.468" endtime="20210408 19:06:40.200"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${IsDepositor}'=='${ON}'</arg>
<arg>Mx LoanIQ Set</arg>
<arg>${LIQ_DealBorrower_DepositorIndicator_Checkbox}</arg>
<arg>${ON}</arg>
<arg>ELSE</arg>
<arg>Mx LoanIQ Set</arg>
<arg>${LIQ_DealBorrower_DepositorIndicator_Checkbox}</arg>
<arg>${OFF}</arg>
</arguments>
<kw name="Mx LoanIQ Set" library="LoanIQ">
<doc>|Usage|</doc>
<arguments>
<arg>${LIQ_DealBorrower_DepositorIndicator_Checkbox}</arg>
<arg>${OFF}</arg>
</arguments>
<msg timestamp="20210408 19:06:40.374" level="INFO">Object = 'JavaWindow("title:=Deal Borrower.*").JavaCheckBox("attached text:=Depositor Indicator.*")' is unset.</msg>
<status status="PASS" starttime="20210408 19:06:40.263" endtime="20210408 19:06:40.374"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:40.261" endtime="20210408 19:06:40.375"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${IsBorrower}'=='${ON}'</arg>
<arg>Mx LoanIQ Set</arg>
<arg>${LIQ_DealBorrower_BorrowerIndicator_Checkbox}</arg>
<arg>${ON}</arg>
<arg>ELSE</arg>
<arg>Mx LoanIQ Set</arg>
<arg>${LIQ_DealBorrower_BorrowerIndicator_Checkbox}</arg>
<arg>${OFF}</arg>
</arguments>
<kw name="Mx LoanIQ Set" library="LoanIQ">
<doc>|Usage|</doc>
<arguments>
<arg>${LIQ_DealBorrower_BorrowerIndicator_Checkbox}</arg>
<arg>${ON}</arg>
</arguments>
<msg timestamp="20210408 19:06:40.524" level="INFO">Object = 'JavaWindow("title:=Deal Borrower.*").JavaCheckBox("attached text:=Borrower Indicator.*")' is set.</msg>
<status status="PASS" starttime="20210408 19:06:40.427" endtime="20210408 19:06:40.524"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:40.425" endtime="20210408 19:06:40.525"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${IsDepositor}'=='${ON}'</arg>
<arg>Validate if Element is Checked</arg>
<arg>${LIQ_DealBorrower_DepositorIndicator_Checkbox}</arg>
<arg>Deal Borrower Indicator</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:40.591" endtime="20210408 19:06:40.592"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${IsBorrower}'=='${ON}'</arg>
<arg>Validate if Element is Checked</arg>
<arg>${LIQ_DealBorrower_BorrowerIndicator_Checkbox}</arg>
<arg>Deal Borrower Indicator</arg>
</arguments>
<kw name="Validate if Element is Checked" library="GenericKeywords">
<doc>This keyword validates if Element is checked
@author: ghabal
@update: hstone 02SEP2020 - Optimized Keyword
- Added Failure Log</doc>
<arguments>
<arg>${LIQ_DealBorrower_BorrowerIndicator_Checkbox}</arg>
<arg>Deal Borrower Indicator</arg>
</arguments>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>value%1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>value%1</arg>
</arguments>
<msg timestamp="20210408 19:06:40.846" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:06:40.704" endtime="20210408 19:06:40.847"></status>
</kw>
<msg timestamp="20210408 19:06:40.847" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:06:40.702" endtime="20210408 19:06:40.847"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed checked</arg>
<arg>ELSE</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Fail</arg>
<arg>${Field_Label}' element is confirmed unchecked</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>'${Field_Label}' element is confirmed checked</arg>
</arguments>
<msg timestamp="20210408 19:06:40.902" level="INFO">'Deal Borrower Indicator' element is confirmed checked</msg>
<status status="PASS" starttime="20210408 19:06:40.901" endtime="20210408 19:06:40.902"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:40.900" endtime="20210408 19:06:40.902"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:40.647" endtime="20210408 19:06:40.902"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:40.646" endtime="20210408 19:06:40.902"></status>
</kw>
<kw name="Take Screenshot with text into Test Document" library="ReportMaker_Keywords">
<doc>This keyword is used to add screenshot with image filename as description into test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Deal Notebook- Borrower - Remittance Instruction</arg>
</arguments>
<kw name="Take Screenshot" library="Screenshot">
<doc>Takes a screenshot in JPEG format and embeds it into the log file.</doc>
<arguments>
<arg>${imageName}</arg>
</arguments>
<msg timestamp="20210408 19:06:41.103" level="INFO" html="yes">&lt;a href="Results/LoanIQ/TC01%20-%20Validate%20ARR%20Pricing%20Option%20at%20Deal%20Level%20and%20Add%20Libor%20Option___2021-04-08%2019-04-35.729/Deal%20Notebook-%20Borrower%20-%20Remittance%20Instruction_1.jpg"&gt;&lt;img src="Results/LoanIQ/TC01%20-%20Validate%20ARR%20Pricing%20Option%20at%20Deal%20Level%20and%20Add%20Libor%20Option___2021-04-08%2019-04-35.729/Deal%20Notebook-%20Borrower%20-%20Remittance%20Instruction_1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210408 19:06:41.011" endtime="20210408 19:06:41.103"></status>
</kw>
<kw name="Get Latest File" library="ReportMaker">
<arguments>
<arg>${getfilePath}</arg>
</arguments>
<assign>
<var>${imagePath}</var>
</assign>
<msg timestamp="20210408 19:06:41.157" level="INFO">${imagePath} = C:\Git_Evergreen\transform_arr\Results\LoanIQ\TC01 - Validate ARR Pricing Option at Deal Level and Add Libor Option___2021-04-08 19-04-35.729\Deal Notebook- Borrower - Remittance Instruction_1.jpg</msg>
<status status="PASS" starttime="20210408 19:06:41.156" endtime="20210408 19:06:41.157"></status>
</kw>
<kw name="Put Screenshot With Text" library="ReportMaker">
<arguments>
<arg>${imagePath}</arg>
<arg>${imageName}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:41.229" endtime="20210408 19:06:41.239"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:40.955" endtime="20210408 19:06:41.239"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_DealBorrower_Ok_Button}</arg>
</arguments>
<msg timestamp="20210408 19:06:41.654" level="INFO">JavaWindow("title:=Deal Borrower.*").JavaButton("attached text:=OK") is clicked.</msg>
<status status="PASS" starttime="20210408 19:06:41.291" endtime="20210408 19:06:41.655"></status>
</kw>
<kw name="Mx LoanIQ Activate Window" library="LoanIQ">
<doc>| Usage |
To activate existing window if present.</doc>
<arguments>
<arg>${LIQ_DealNotebook_Window}</arg>
</arguments>
<msg timestamp="20210408 19:06:42.203" level="INFO">Window : JavaWindow("title:=Deal Notebook -.*","displayed:=1") is activated</msg>
<status status="PASS" starttime="20210408 19:06:41.757" endtime="20210408 19:06:42.204"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:12.565" endtime="20210408 19:06:42.204"></status>
</kw>
<status status="PASS" starttime="20210408 19:05:35.669" endtime="20210408 19:06:42.204"></status>
</kw>
<msg timestamp="20210408 19:06:42.205" level="INFO">Mx Execute Template With Multiple Data keyword passed for all the data</msg>
<status status="PASS" starttime="20210408 19:05:35.631" endtime="20210408 19:06:42.205"></status>
</kw>
<kw name="Mx Execute Template With Multiple Data" library="GenericLib">
<doc>| Usage |
 This keyword is used to run template with multiple data.</doc>
<arguments>
<arg>Input Deal Summary Tab Details</arg>
<arg>${ExcelPath}</arg>
<arg>${Deal_1}</arg>
<arg>CRED01_DealSetup</arg>
</arguments>
<kw name="Input Deal Summary Tab Details" library="CRED01_DealSetUpWithoutOrigination">
<doc>This keyword is used to Setup Deal Summary Tab Details
@author: jloretiz 03FEB2021 - initial create</doc>
<arguments>
<arg>OrderedDict([('rowid', '1'), ('Test_Case', 'ARR_Scenario3'), ('Deal_NamePrefix', 'ARR_LIBORSC3'), ('Deal_AliasPrefix', 'SC3'), ('Deal_Name', 'ARR_LIBORSC308042021190438PNT'), ('Deal_Alias', 'SC308042021190441XJG'), ('Deal_EffectiveDate', '17-Oct-2016'), ('Deal_AgreementDate', '17-Oct-2016'), ('Deal_AdjustmentSettings', 'Present'), ('Deal_AgreementDateAdjustment', '30'), ('Deal_EffectiveDateAdjustment', '30'), ('Deal_Currency', 'USD'), ('Deal_DepartmentCode', 'NAM'), ('Deal_Department', 'North America'), ('Deal_SalesGroup', 'Sales Group 1'), ('Deal_AternateID', ''), ('Deal_ANSIID', ''), ('Deal_IsSoleLender', 'OFF'), ('Deal_ClassificationCode', 'GCP'), ('Deal_ClassificationDesc', 'General Corp Purpose'), ('Deal_AdminAgent', 'BNS CANADA CORPORATE BANKING'), ('Deal_AdminAgentLocation', 'Toronto, Canada'), ('DealAdminAgent_SGAlias', 'BC'), ('DealAdminAgent_PreferredRI', ''), ('DealAdminAgent_ServicingGroup', 'CANADA CORPORATE BANKING'), ('Deal_ProposedCmt', '100,000,000.00'), ('Deal_EarlyDiscussion', 'OFF'), ('Deal_ExpenseCode', '0394703947'), ('Deal_HolidayCalendarRemove', 'Canadian'), ('Deal_HolidayCalendarAdd', 'US Holiday Calendar (New York)'), ('Deal_IsPricingOptionARR', 'TRUE'), ('Deal_PricingOption_CCY', ''), ('Deal_PricingOption', 'SOFR Daily Compounding W OPS Not Overridable'), ('PricingOption_IsARR', 'False'), ('PricingOption_InitialFractionRate', 'Actual'), ('PricingOption_RoundingDecimal', 'Actual'), ('PricingOption_NonBusinessDayRule', 'Modified Following Business Day'), ('PricingOption_BillNoOfDays', '0'), ('PricingOption_MatrixChangeAppMthd', 'Effective date of change'), ('PricingOption_RateChangeAppMthd', 'Effective date of change'), ('PricingOption_RACInitialFractionRate', ''), ('PricingOption_RACRoundingDecimal', ''), ('PricingOption_RACRoundingMethod', ''), ('PricingOption_PercentOfRateFormulaUsage', '(Base + Spread + RAC) * PCT'), ('PricingOption_RepricingNonBusinessDayRule', 'Modified Following Business Day'), ('PricingOption_FeeOnLenderShareFunding', ''), ('PricingOption_InterestDueUponPrincipalPayment', 'OFF'), ('PricingOption_InterestDueUponRepricing', ''), ('PricingOption_ReferenceBanksApply', 'OFF'), ('PricingOption_IntentNoticeDaysInAdvance', '3'), ('PricingOption_IntentNoticeTime', '12'), ('PricingOption_12HrPeriodOption', ''), ('PricingOption_MaximumDrawAmount', ''), ('PricingOption_MinimumDrawAmount', ''), ('PricingOption_MinimumPaymentAmount', ''), ('PricingOption_MinimumAmountMultiples', ''), ('PricingOption_BillBorrower', 'YES'), ('PricingOption_ARRObservationPeriod', 'ON'), ('PricingOption_LookbackDays', '5'), ('PricingOption_LockoutDays', '0'), ('PricingOption_RateBasis', 'Actual/360'), ('PricingOption_CalculationMethod', 'Daily Rate With Compounding')])</arg>
</arguments>
<kw name="Report Sub Header" library="ReportMaker_Keywords">
<doc>This keyword is used to add given argument as sub header in test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Setup Deal Summary Tab Details</arg>
</arguments>
<kw name="Set Report Sub Header" library="ReportMaker">
<arguments>
<arg>${SubHeader}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:42.438" endtime="20210408 19:06:42.440"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:42.386" endtime="20210408 19:06:42.440"></status>
</kw>
<kw name="Get System Date" library="GenericKeywords">
<doc>This keyword gets the LIQ System Date
@update: hstone 28APR2020 - Added Keyword Post-process: Save Runtime Value
- Added Optional Argument: ${sRunTimeVar_SystemDate}</doc>
<assign>
<var>${SystemDate}</var>
</assign>
<kw name="Mx LoanIQ Get Data" library="LoanIQ">
<doc>| Usage |
Used to returns the text of object identified by `locator'</doc>
<arguments>
<arg>${LIQ_Window}</arg>
<arg>title%temp</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20210408 19:06:42.645" level="INFO">Fetching value from object: JavaWindow("title:=Fusion Loan IQ.*Business Date.*") 
 Value = : Fusion Loan IQ - Nikita Inputter - Business Date: 26-Oct-2016</msg>
<msg timestamp="20210408 19:06:42.645" level="INFO">${temp} = Fusion Loan IQ - Nikita Inputter - Business Date: 26-Oct-2016</msg>
<msg timestamp="20210408 19:06:42.646" level="INFO">${temp} = Fusion Loan IQ - Nikita Inputter - Business Date: 26-Oct-2016</msg>
<status status="PASS" starttime="20210408 19:06:42.601" endtime="20210408 19:06:42.646"></status>
</kw>
<kw name="Fetch From Right" library="String">
<doc>Returns contents of the ``string`` after the last occurrence of ``marker``.</doc>
<arguments>
<arg>${temp}</arg>
<arg>:${SPACE}</arg>
</arguments>
<assign>
<var>${SystemDate}</var>
</assign>
<msg timestamp="20210408 19:06:42.709" level="INFO">${SystemDate} = 26-Oct-2016</msg>
<status status="PASS" starttime="20210408 19:06:42.708" endtime="20210408 19:06:42.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>System Date: ${SystemDate}</arg>
</arguments>
<msg timestamp="20210408 19:06:42.765" level="INFO">System Date: 26-Oct-2016</msg>
<status status="PASS" starttime="20210408 19:06:42.764" endtime="20210408 19:06:42.765"></status>
</kw>
<kw name="Save Values of Runtime Execution on Excel File" library="GenericKeywords">
<doc>This keyword is used to save the generated values of runtime to the excel file.
@author: amansuet 31MAR2020 - initial create</doc>
<arguments>
<arg>${sRunTimeVar_SystemDate}</arg>
<arg>${SystemDate}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:06:42.874" level="INFO">${List_Argument_Excel_Value} = ['None']</msg>
<status status="PASS" starttime="20210408 19:06:42.874" endtime="20210408 19:06:42.874"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:06:42.929" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:06:42.929" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:06:42.928" endtime="20210408 19:06:42.929"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:06:42.981" level="INFO">${Arg_User_Input} = NONE</msg>
<status status="PASS" starttime="20210408 19:06:42.981" endtime="20210408 19:06:42.982"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}&gt;=2</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:06:43.032" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:06:43.032" endtime="20210408 19:06:43.032"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}'</arg>
<arg>Log</arg>
<arg>User input non-runtime value.</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}&gt;=2 and '${Arg_User_Input}'=='${RUNTIME}' and '${Variable_Name_Input}'!=''</arg>
<arg>Write Data to Runtime Excel File</arg>
<arg>${SCENARIONAME_CURRENT}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>${sExtracted_Argument_Value}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Invalid Argument Value for Runtime. Runtime format should be = 'Runtime:&lt;VariableName&gt;' or 'Runtime:&lt;VariableName&gt;:&lt;Prefix&gt;'.</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>User input non-runtime value.</arg>
</arguments>
<msg timestamp="20210408 19:06:43.084" level="INFO">User input non-runtime value.</msg>
<status status="PASS" starttime="20210408 19:06:43.083" endtime="20210408 19:06:43.084"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:43.082" endtime="20210408 19:06:43.084"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:42.820" endtime="20210408 19:06:43.084"></status>
</kw>
<msg timestamp="20210408 19:06:43.084" level="INFO">${SystemDate} = 26-Oct-2016</msg>
<status status="PASS" starttime="20210408 19:06:42.549" endtime="20210408 19:06:43.084"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'&amp;{ExcelPath}[Deal_AdjustmentSettings]'=='${PAST}'</arg>
<arg>Subtract Days to Date</arg>
<arg>${SystemDate}</arg>
<arg>&amp;{ExcelPath}[Deal_AgreementDateAdjustment]</arg>
<arg>ELSE IF</arg>
<arg>'&amp;{ExcelPath}[Deal_AdjustmentSettings]'=='${FUTURE}'</arg>
<arg>Add Days to Date</arg>
<arg>${SystemDate}</arg>
<arg>&amp;{ExcelPath}[Deal_AgreementDateAdjustment]</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${SystemDate}</arg>
</arguments>
<assign>
<var>${Deal_AgreementDate}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${SystemDate}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:43.138" endtime="20210408 19:06:43.139"></status>
</kw>
<msg timestamp="20210408 19:06:43.140" level="INFO">${Deal_AgreementDate} = 26-Oct-2016</msg>
<status status="PASS" starttime="20210408 19:06:43.136" endtime="20210408 19:06:43.140"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'&amp;{ExcelPath}[Deal_AdjustmentSettings]'=='${PAST}'</arg>
<arg>Subtract Days to Date</arg>
<arg>${SystemDate}</arg>
<arg>&amp;{ExcelPath}[Deal_EffectiveDateAdjustment]</arg>
<arg>ELSE IF</arg>
<arg>'&amp;{ExcelPath}[Deal_AdjustmentSettings]'=='${FUTURE}'</arg>
<arg>Add Days to Date</arg>
<arg>${SystemDate}</arg>
<arg>&amp;{ExcelPath}[Deal_EffectiveDateAdjustment]</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${SystemDate}</arg>
</arguments>
<assign>
<var>${Deal_EffectiveDate}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${SystemDate}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:43.192" endtime="20210408 19:06:43.193"></status>
</kw>
<msg timestamp="20210408 19:06:43.193" level="INFO">${Deal_EffectiveDate} = 26-Oct-2016</msg>
<status status="PASS" starttime="20210408 19:06:43.190" endtime="20210408 19:06:43.193"></status>
</kw>
<kw name="Write Data To Excel" library="GenericKeywords">
<doc>This keyword is used to Write Data To Excel.
@author: hstone 21FEB2020 - Initial Create
@update: hstone 17MAR2020 - Updated 'Run Keyword If '${multipleValue}'=='N'' to '... ELSE IF '${multipleValue}'=='N''
@update: jloretiz 15JUN2020 - add argument for column reference choice</doc>
<arguments>
<arg>CRED01_DealSetup</arg>
<arg>Deal_EffectiveDate</arg>
<arg>&amp;{ExcelPath}[rowid]</arg>
<arg>${Deal_EffectiveDate}</arg>
<arg>sColumnReference=rowid</arg>
</arguments>
<kw name="Open Excel Document" library="ExcelLibrary">
<doc>Opens xlsx document file.</doc>
<arguments>
<arg>${sFilePath}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:43.398" endtime="20210408 19:06:43.443"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${multipleValue}'=='Y'</arg>
<arg>Write Data To All Column Rows</arg>
<arg>${sSheetName}</arg>
<arg>${sColumnName}</arg>
<arg>${newValue}</arg>
<arg>ELSE IF</arg>
<arg>'${multipleValue}'=='N'</arg>
<arg>Write Data To Cell</arg>
<arg>${sSheetName}</arg>
<arg>${sColumnName}</arg>
<arg>${rowid}</arg>
<arg>${newValue}</arg>
<arg>${bTestCaseColumn}</arg>
<arg>${sColumnReference}</arg>
</arguments>
<kw name="Write Data To Cell" library="GenericKeywords">
<doc>This keyword will be used for writing data to single excel cell.
@author: hstone 20FEB2020 Initial Create
@update: jloretiz 15JUN2020 - add argument for column reference choice</doc>
<arguments>
<arg>${sSheetName}</arg>
<arg>${sColumnName}</arg>
<arg>${rowid}</arg>
<arg>${newValue}</arg>
<arg>${bTestCaseColumn}</arg>
<arg>${sColumnReference}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${sColumnReference}</arg>
</arguments>
<msg timestamp="20210408 19:06:43.548" level="INFO">rowid</msg>
<status status="PASS" starttime="20210408 19:06:43.547" endtime="20210408 19:06:43.548"></status>
</kw>
<kw name="Get Column Header Index" library="GenericKeywords">
<doc>This keyword is used to get the Column Header Index of Test_Case and given Column Name at the Excel Sheet.
@author: hstone 19FEB2020 Initial Create</doc>
<arguments>
<arg>${sSheetName}</arg>
<arg>${sColumnName}</arg>
<arg>${bTestCaseColumn}</arg>
<arg>${sColumnReference}</arg>
</arguments>
<assign>
<var>${TestCaseHeader_Index}</var>
<var>${ColumnHeader_Index}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>(Get Column Header Index) sTestCaseColReference = '${sTestCaseColReference}'</arg>
</arguments>
<msg timestamp="20210408 19:06:43.650" level="INFO">(Get Column Header Index) sTestCaseColReference = 'rowid'</msg>
<status status="PASS" starttime="20210408 19:06:43.649" endtime="20210408 19:06:43.650"></status>
</kw>
<kw name="Read Excel Row" library="ExcelLibrary">
<doc>Returns content of a row from the current sheet of the document.</doc>
<arguments>
<arg>1</arg>
<arg>sheet_name=${sSheetName}</arg>
</arguments>
<assign>
<var>${DataColumn_List}</var>
</assign>
<msg timestamp="20210408 19:06:43.705" level="INFO">${DataColumn_List} = ['rowid', 'Test_Case', 'Deal_NamePrefix', 'Deal_AliasPrefix', 'Deal_Name', 'Deal_Alias', 'Deal_EffectiveDate', 'Deal_AgreementDate', 'Deal_AdjustmentSettings', 'Deal_AgreementDateAdjustment', 'Deal_Ef...</msg>
<status status="PASS" starttime="20210408 19:06:43.704" endtime="20210408 19:06:43.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Data Set Sheet Name: '${sSheetName}'</arg>
</arguments>
<msg timestamp="20210408 19:06:43.756" level="INFO">Data Set Sheet Name: 'CRED01_DealSetup'</msg>
<status status="PASS" starttime="20210408 19:06:43.755" endtime="20210408 19:06:43.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Data Set Sheet Column Names: '${DataColumn_List}'</arg>
</arguments>
<msg timestamp="20210408 19:06:43.809" level="INFO">Data Set Sheet Column Names: '['rowid', 'Test_Case', 'Deal_NamePrefix', 'Deal_AliasPrefix', 'Deal_Name', 'Deal_Alias', 'Deal_EffectiveDate', 'Deal_AgreementDate', 'Deal_AdjustmentSettings', 'Deal_AgreementDateAdjustment', 'Deal_EffectiveDateAdjustment', 'Deal_Currency', 'Deal_DepartmentCode', 'Deal_Department', 'Deal_SalesGroup', 'Deal_AternateID', 'Deal_ANSIID', 'Deal_IsSoleLender', 'Deal_ClassificationCode', 'Deal_ClassificationDesc', 'Deal_AdminAgent', 'Deal_AdminAgentLocation', 'DealAdminAgent_SGAlias', 'DealAdminAgent_PreferredRI', 'DealAdminAgent_ServicingGroup', 'Deal_ProposedCmt', 'Deal_EarlyDiscussion', 'Deal_ExpenseCode', 'Deal_HolidayCalendarRemove', 'Deal_HolidayCalendarAdd', 'Deal_IsPricingOptionARR', 'Deal_PricingOption_CCY', 'Deal_PricingOption', 'PricingOption_IsARR', 'PricingOption_InitialFractionRate', 'PricingOption_RoundingDecimal', 'PricingOption_NonBusinessDayRule', 'PricingOption_BillNoOfDays', 'PricingOption_MatrixChangeAppMthd', 'PricingOption_RateChangeAppMthd', 'PricingOption_RACInitialFractionRate', 'PricingOption_RACRoundingDecimal', 'PricingOption_RACRoundingMethod', 'PricingOption_PercentOfRateFormulaUsage', 'PricingOption_RepricingNonBusinessDayRule', 'PricingOption_FeeOnLenderShareFunding', 'PricingOption_InterestDueUponPrincipalPayment', 'PricingOption_InterestDueUponRepricing', 'PricingOption_ReferenceBanksApply', 'PricingOption_IntentNoticeDaysInAdvance', 'PricingOption_IntentNoticeTime', 'PricingOption_12HrPeriodOption', 'PricingOption_MaximumDrawAmount', 'PricingOption_MinimumDrawAmount', 'PricingOption_MinimumPaymentAmount', 'PricingOption_MinimumAmountMultiples', 'PricingOption_BillBorrower', 'PricingOption_ARRObservationPeriod', 'PricingOption_LookbackDays', 'PricingOption_LockoutDays', 'PricingOption_RateBasis', 'PricingOption_CalculationMethod']'</msg>
<status status="PASS" starttime="20210408 19:06:43.808" endtime="20210408 19:06:43.809"></status>
</kw>
<kw name="Get Index From List" library="Collections">
<doc>Returns the index of the first occurrence of the ``value`` on the list.</doc>
<arguments>
<arg>${DataColumn_List}</arg>
<arg>${sTestCaseColReference}</arg>
</arguments>
<assign>
<var>${TestCaseHeaderName_Index}</var>
</assign>
<msg timestamp="20210408 19:06:43.864" level="INFO">${TestCaseHeaderName_Index} = 0</msg>
<status status="PASS" starttime="20210408 19:06:43.864" endtime="20210408 19:06:43.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Fetched Test Case Column Index : '${TestCaseHeaderName_Index}'</arg>
</arguments>
<msg timestamp="20210408 19:06:43.915" level="INFO">Fetched Test Case Column Index : '0'</msg>
<status status="PASS" starttime="20210408 19:06:43.914" endtime="20210408 19:06:43.915"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${TestCaseHeaderName_Index}&lt;0 and '${bTestCaseColumn}'=='False'</arg>
<arg>Set Variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>Evaluate</arg>
<arg>${TestCaseHeaderName_Index}+1</arg>
</arguments>
<assign>
<var>${TestCaseHeaderName_Index}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${TestCaseHeaderName_Index}+1</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:43.969" endtime="20210408 19:06:43.970"></status>
</kw>
<msg timestamp="20210408 19:06:43.970" level="INFO">${TestCaseHeaderName_Index} = 1</msg>
<status status="PASS" starttime="20210408 19:06:43.967" endtime="20210408 19:06:43.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Evaluated Test Case Column Index : '${TestCaseHeaderName_Index}'</arg>
</arguments>
<msg timestamp="20210408 19:06:44.024" level="INFO">Evaluated Test Case Column Index : '1'</msg>
<status status="PASS" starttime="20210408 19:06:44.023" endtime="20210408 19:06:44.024"></status>
</kw>
<kw name="Get Index From List" library="Collections">
<doc>Returns the index of the first occurrence of the ``value`` on the list.</doc>
<arguments>
<arg>${DataColumn_List}</arg>
<arg>${sColumnName}</arg>
</arguments>
<assign>
<var>${ColumnName_Index}</var>
</assign>
<msg timestamp="20210408 19:06:44.077" level="INFO">${ColumnName_Index} = 6</msg>
<status status="PASS" starttime="20210408 19:06:44.076" endtime="20210408 19:06:44.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Column Name Index : '${ColumnName_Index}'</arg>
</arguments>
<msg timestamp="20210408 19:06:44.130" level="INFO">Column Name Index : '6'</msg>
<status status="PASS" starttime="20210408 19:06:44.129" endtime="20210408 19:06:44.130"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${ColumnName_Index}&lt;0</arg>
<arg>Fail</arg>
<arg>'${sColumnName}' is not found at '${DataColumn_List}' Data Column Values.</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:44.181" endtime="20210408 19:06:44.182"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ColumnName_Index}+1</arg>
</arguments>
<assign>
<var>${ColumnName_Index}</var>
</assign>
<msg timestamp="20210408 19:06:44.342" level="INFO">${ColumnName_Index} = 7</msg>
<status status="PASS" starttime="20210408 19:06:44.342" endtime="20210408 19:06:44.342"></status>
</kw>
<msg timestamp="20210408 19:06:44.343" level="INFO">${TestCaseHeader_Index} = 1</msg>
<msg timestamp="20210408 19:06:44.343" level="INFO">${ColumnHeader_Index} = 7</msg>
<status status="PASS" starttime="20210408 19:06:43.597" endtime="20210408 19:06:44.343"></status>
</kw>
<kw name="Get Index of a Row Value using a Reference Header Index" library="GenericKeywords">
<doc>This keyword is used to get index of a row value using a reference header index
@author: hstone 19FEB2020 Initial Create</doc>
<arguments>
<arg>${sSheetName}</arg>
<arg>${rowid}</arg>
<arg>${TestCaseHeader_Index}</arg>
</arguments>
<assign>
<var>${RowId_Index}</var>
</assign>
<kw name="Read Excel Column" library="ExcelLibrary">
<doc>Returns content of a column from the current sheet of the document.</doc>
<arguments>
<arg>${sReferenceHeader_Index}</arg>
<arg>sheet_name=${sSheetName}</arg>
</arguments>
<assign>
<var>${DataRow_List}</var>
</assign>
<msg timestamp="20210408 19:06:44.458" level="INFO">${DataRow_List} = ['rowid', '1', '2']</msg>
<status status="PASS" starttime="20210408 19:06:44.457" endtime="20210408 19:06:44.458"></status>
</kw>
<kw name="Read Excel Column" library="ExcelLibrary">
<doc>Returns content of a column from the current sheet of the document.</doc>
<arguments>
<arg>1</arg>
<arg>sheet_name=${sSheetName}</arg>
</arguments>
<assign>
<var>${DataRowId_List}</var>
</assign>
<msg timestamp="20210408 19:06:44.511" level="INFO">${DataRowId_List} = ['rowid', '1', '2']</msg>
<status status="PASS" starttime="20210408 19:06:44.510" endtime="20210408 19:06:44.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Row Names Under Reference Header with Index '${sReferenceHeader_Index}' : '${DataRow_List}'</arg>
</arguments>
<msg timestamp="20210408 19:06:44.562" level="INFO">Row Names Under Reference Header with Index '1' : '['rowid', '1', '2']'</msg>
<status status="PASS" starttime="20210408 19:06:44.562" endtime="20210408 19:06:44.563"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>List Should Contain Value</arg>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<assign>
<var>${IsPresentInList}</var>
</assign>
<kw name="List Should Contain Value" library="Collections">
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<arguments>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:44.614" endtime="20210408 19:06:44.614"></status>
</kw>
<msg timestamp="20210408 19:06:44.614" level="INFO">${IsPresentInList} = True</msg>
<status status="PASS" starttime="20210408 19:06:44.612" endtime="20210408 19:06:44.614"></status>
</kw>
<kw name="Check if Row Value Exists on List as Int" library="GenericKeywords">
<doc>This keyword is used to check if value exists on a list as a string
@author: hstone 13APR2020 Initial Create</doc>
<arguments>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<assign>
<var>${IsPresentInList_As_Int}</var>
<var>${RowValue_Int}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${False}</arg>
</arguments>
<assign>
<var>${IsPresentInList}</var>
</assign>
<msg timestamp="20210408 19:06:44.719" level="INFO">${IsPresentInList} = False</msg>
<status status="PASS" starttime="20210408 19:06:44.718" endtime="20210408 19:06:44.719"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Convert To Integer</arg>
<arg>${sValue}</arg>
</arguments>
<assign>
<var>${IsIntConvPassed}</var>
</assign>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${sValue}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:44.777" endtime="20210408 19:06:44.778"></status>
</kw>
<msg timestamp="20210408 19:06:44.778" level="INFO">${IsIntConvPassed} = True</msg>
<status status="PASS" starttime="20210408 19:06:44.775" endtime="20210408 19:06:44.778"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${IsIntConvPassed}==${True}</arg>
<arg>Check if a String Exists as Int on a List</arg>
<arg>${lTarget_List}</arg>
<arg>${sValue}</arg>
</arguments>
<assign>
<var>${IsPresentInList}</var>
<var>${RowValue_Int}</var>
</assign>
<kw name="Check if a String Exists as Int on a List" library="GenericKeywords">
<doc>This keyword is used to check if a string exists as an integer on a list.
@author: hstone 13APR2020 Initial Create</doc>
<arguments>
<arg>${lTarget_List}</arg>
<arg>${sValue}</arg>
</arguments>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${sValue}</arg>
</arguments>
<assign>
<var>${Value_Int}</var>
</assign>
<msg timestamp="20210408 19:06:44.889" level="INFO">${Value_Int} = 1</msg>
<status status="PASS" starttime="20210408 19:06:44.888" endtime="20210408 19:06:44.889"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>List Should Contain Value</arg>
<arg>${lTarget_List}</arg>
<arg>${Value_Int}</arg>
</arguments>
<assign>
<var>${IsPresentInList}</var>
</assign>
<kw name="List Should Contain Value" library="Collections">
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<arguments>
<arg>${lTarget_List}</arg>
<arg>${Value_Int}</arg>
</arguments>
<msg timestamp="20210408 19:06:44.944" level="FAIL">[ rowid | 1 | 2 ] does not contain value '1'.</msg>
<status status="FAIL" starttime="20210408 19:06:44.943" endtime="20210408 19:06:44.995"></status>
</kw>
<msg timestamp="20210408 19:06:44.996" level="INFO">${IsPresentInList} = False</msg>
<status status="PASS" starttime="20210408 19:06:44.942" endtime="20210408 19:06:44.996"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:44.832" endtime="20210408 19:06:44.996"></status>
</kw>
<msg timestamp="20210408 19:06:44.997" level="INFO">${IsPresentInList} = False</msg>
<msg timestamp="20210408 19:06:44.997" level="INFO">${RowValue_Int} = 1</msg>
<status status="PASS" starttime="20210408 19:06:44.831" endtime="20210408 19:06:44.997"></status>
</kw>
<msg timestamp="20210408 19:06:44.997" level="INFO">${IsPresentInList_As_Int} = False</msg>
<msg timestamp="20210408 19:06:44.997" level="INFO">${RowValue_Int} = 1</msg>
<status status="PASS" starttime="20210408 19:06:44.666" endtime="20210408 19:06:44.997"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${IsPresentInList}==${True}</arg>
<arg>Get Index From List</arg>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
<arg>ELSE IF</arg>
<arg>${IsPresentInList_As_Int}==${True}</arg>
<arg>Get Index From List</arg>
<arg>${DataRow_List}</arg>
<arg>${RowValue_Int}</arg>
<arg>ELSE</arg>
<arg>Get Index From List</arg>
<arg>${DataRowId_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<assign>
<var>${DataRowName_Index}</var>
</assign>
<kw name="Get Index From List" library="Collections">
<doc>Returns the index of the first occurrence of the ``value`` on the list.</doc>
<arguments>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:45.056" endtime="20210408 19:06:45.056"></status>
</kw>
<msg timestamp="20210408 19:06:45.057" level="INFO">${DataRowName_Index} = 1</msg>
<status status="PASS" starttime="20210408 19:06:45.054" endtime="20210408 19:06:45.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Row Name Index for '${sRowValue}' : '${DataRowName_Index}'</arg>
</arguments>
<msg timestamp="20210408 19:06:45.108" level="INFO">Row Name Index for '1' : '1'</msg>
<status status="PASS" starttime="20210408 19:06:45.107" endtime="20210408 19:06:45.108"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${DataRowName_Index}&lt;0</arg>
<arg>Fail</arg>
<arg>'${sRowValue}' is not found at '${DataRow_List}' Data Row Values.</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:45.161" endtime="20210408 19:06:45.162"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${DataRowName_Index}+1</arg>
</arguments>
<assign>
<var>${DataRowValue_Index}</var>
</assign>
<msg timestamp="20210408 19:06:45.214" level="INFO">${DataRowValue_Index} = 2</msg>
<status status="PASS" starttime="20210408 19:06:45.214" endtime="20210408 19:06:45.214"></status>
</kw>
<msg timestamp="20210408 19:06:45.215" level="INFO">${RowId_Index} = 2</msg>
<status status="PASS" starttime="20210408 19:06:44.395" endtime="20210408 19:06:45.215"></status>
</kw>
<kw name="Write Excel Cell" library="ExcelLibrary">
<doc>Writes value to the cell.</doc>
<arguments>
<arg>${RowId_Index}</arg>
<arg>${ColumnHeader_Index}</arg>
<arg>${sData}</arg>
<arg>${sSheetName}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:45.275" endtime="20210408 19:06:45.276"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:43.496" endtime="20210408 19:06:45.276"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:43.494" endtime="20210408 19:06:45.276"></status>
</kw>
<kw name="Save Excel Document" library="ExcelLibrary">
<doc>Saves the current document to disk.</doc>
<arguments>
<arg>${sFilePath}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:45.366" endtime="20210408 19:06:45.437"></status>
</kw>
<kw name="Close Current Excel Document" library="ExcelLibrary">
<doc>Closes current document.</doc>
<status status="PASS" starttime="20210408 19:06:45.531" endtime="20210408 19:06:45.532"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:43.346" endtime="20210408 19:06:45.532"></status>
</kw>
<kw name="Write Data To Excel" library="GenericKeywords">
<doc>This keyword is used to Write Data To Excel.
@author: hstone 21FEB2020 - Initial Create
@update: hstone 17MAR2020 - Updated 'Run Keyword If '${multipleValue}'=='N'' to '... ELSE IF '${multipleValue}'=='N''
@update: jloretiz 15JUN2020 - add argument for column reference choice</doc>
<arguments>
<arg>CRED01_DealSetup</arg>
<arg>Deal_AgreementDate</arg>
<arg>&amp;{ExcelPath}[rowid]</arg>
<arg>${Deal_AgreementDate}</arg>
<arg>sColumnReference=rowid</arg>
</arguments>
<kw name="Open Excel Document" library="ExcelLibrary">
<doc>Opens xlsx document file.</doc>
<arguments>
<arg>${sFilePath}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:45.740" endtime="20210408 19:06:45.790"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${multipleValue}'=='Y'</arg>
<arg>Write Data To All Column Rows</arg>
<arg>${sSheetName}</arg>
<arg>${sColumnName}</arg>
<arg>${newValue}</arg>
<arg>ELSE IF</arg>
<arg>'${multipleValue}'=='N'</arg>
<arg>Write Data To Cell</arg>
<arg>${sSheetName}</arg>
<arg>${sColumnName}</arg>
<arg>${rowid}</arg>
<arg>${newValue}</arg>
<arg>${bTestCaseColumn}</arg>
<arg>${sColumnReference}</arg>
</arguments>
<kw name="Write Data To Cell" library="GenericKeywords">
<doc>This keyword will be used for writing data to single excel cell.
@author: hstone 20FEB2020 Initial Create
@update: jloretiz 15JUN2020 - add argument for column reference choice</doc>
<arguments>
<arg>${sSheetName}</arg>
<arg>${sColumnName}</arg>
<arg>${rowid}</arg>
<arg>${newValue}</arg>
<arg>${bTestCaseColumn}</arg>
<arg>${sColumnReference}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${sColumnReference}</arg>
</arguments>
<msg timestamp="20210408 19:06:45.908" level="INFO">rowid</msg>
<status status="PASS" starttime="20210408 19:06:45.907" endtime="20210408 19:06:45.908"></status>
</kw>
<kw name="Get Column Header Index" library="GenericKeywords">
<doc>This keyword is used to get the Column Header Index of Test_Case and given Column Name at the Excel Sheet.
@author: hstone 19FEB2020 Initial Create</doc>
<arguments>
<arg>${sSheetName}</arg>
<arg>${sColumnName}</arg>
<arg>${bTestCaseColumn}</arg>
<arg>${sColumnReference}</arg>
</arguments>
<assign>
<var>${TestCaseHeader_Index}</var>
<var>${ColumnHeader_Index}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>(Get Column Header Index) sTestCaseColReference = '${sTestCaseColReference}'</arg>
</arguments>
<msg timestamp="20210408 19:06:46.031" level="INFO">(Get Column Header Index) sTestCaseColReference = 'rowid'</msg>
<status status="PASS" starttime="20210408 19:06:46.030" endtime="20210408 19:06:46.031"></status>
</kw>
<kw name="Read Excel Row" library="ExcelLibrary">
<doc>Returns content of a row from the current sheet of the document.</doc>
<arguments>
<arg>1</arg>
<arg>sheet_name=${sSheetName}</arg>
</arguments>
<assign>
<var>${DataColumn_List}</var>
</assign>
<msg timestamp="20210408 19:06:46.084" level="INFO">${DataColumn_List} = ['rowid', 'Test_Case', 'Deal_NamePrefix', 'Deal_AliasPrefix', 'Deal_Name', 'Deal_Alias', 'Deal_EffectiveDate', 'Deal_AgreementDate', 'Deal_AdjustmentSettings', 'Deal_AgreementDateAdjustment', 'Deal_Ef...</msg>
<status status="PASS" starttime="20210408 19:06:46.083" endtime="20210408 19:06:46.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Data Set Sheet Name: '${sSheetName}'</arg>
</arguments>
<msg timestamp="20210408 19:06:46.140" level="INFO">Data Set Sheet Name: 'CRED01_DealSetup'</msg>
<status status="PASS" starttime="20210408 19:06:46.140" endtime="20210408 19:06:46.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Data Set Sheet Column Names: '${DataColumn_List}'</arg>
</arguments>
<msg timestamp="20210408 19:06:46.196" level="INFO">Data Set Sheet Column Names: '['rowid', 'Test_Case', 'Deal_NamePrefix', 'Deal_AliasPrefix', 'Deal_Name', 'Deal_Alias', 'Deal_EffectiveDate', 'Deal_AgreementDate', 'Deal_AdjustmentSettings', 'Deal_AgreementDateAdjustment', 'Deal_EffectiveDateAdjustment', 'Deal_Currency', 'Deal_DepartmentCode', 'Deal_Department', 'Deal_SalesGroup', 'Deal_AternateID', 'Deal_ANSIID', 'Deal_IsSoleLender', 'Deal_ClassificationCode', 'Deal_ClassificationDesc', 'Deal_AdminAgent', 'Deal_AdminAgentLocation', 'DealAdminAgent_SGAlias', 'DealAdminAgent_PreferredRI', 'DealAdminAgent_ServicingGroup', 'Deal_ProposedCmt', 'Deal_EarlyDiscussion', 'Deal_ExpenseCode', 'Deal_HolidayCalendarRemove', 'Deal_HolidayCalendarAdd', 'Deal_IsPricingOptionARR', 'Deal_PricingOption_CCY', 'Deal_PricingOption', 'PricingOption_IsARR', 'PricingOption_InitialFractionRate', 'PricingOption_RoundingDecimal', 'PricingOption_NonBusinessDayRule', 'PricingOption_BillNoOfDays', 'PricingOption_MatrixChangeAppMthd', 'PricingOption_RateChangeAppMthd', 'PricingOption_RACInitialFractionRate', 'PricingOption_RACRoundingDecimal', 'PricingOption_RACRoundingMethod', 'PricingOption_PercentOfRateFormulaUsage', 'PricingOption_RepricingNonBusinessDayRule', 'PricingOption_FeeOnLenderShareFunding', 'PricingOption_InterestDueUponPrincipalPayment', 'PricingOption_InterestDueUponRepricing', 'PricingOption_ReferenceBanksApply', 'PricingOption_IntentNoticeDaysInAdvance', 'PricingOption_IntentNoticeTime', 'PricingOption_12HrPeriodOption', 'PricingOption_MaximumDrawAmount', 'PricingOption_MinimumDrawAmount', 'PricingOption_MinimumPaymentAmount', 'PricingOption_MinimumAmountMultiples', 'PricingOption_BillBorrower', 'PricingOption_ARRObservationPeriod', 'PricingOption_LookbackDays', 'PricingOption_LockoutDays', 'PricingOption_RateBasis', 'PricingOption_CalculationMethod']'</msg>
<status status="PASS" starttime="20210408 19:06:46.195" endtime="20210408 19:06:46.196"></status>
</kw>
<kw name="Get Index From List" library="Collections">
<doc>Returns the index of the first occurrence of the ``value`` on the list.</doc>
<arguments>
<arg>${DataColumn_List}</arg>
<arg>${sTestCaseColReference}</arg>
</arguments>
<assign>
<var>${TestCaseHeaderName_Index}</var>
</assign>
<msg timestamp="20210408 19:06:46.248" level="INFO">${TestCaseHeaderName_Index} = 0</msg>
<status status="PASS" starttime="20210408 19:06:46.247" endtime="20210408 19:06:46.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Fetched Test Case Column Index : '${TestCaseHeaderName_Index}'</arg>
</arguments>
<msg timestamp="20210408 19:06:46.301" level="INFO">Fetched Test Case Column Index : '0'</msg>
<status status="PASS" starttime="20210408 19:06:46.301" endtime="20210408 19:06:46.301"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${TestCaseHeaderName_Index}&lt;0 and '${bTestCaseColumn}'=='False'</arg>
<arg>Set Variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>Evaluate</arg>
<arg>${TestCaseHeaderName_Index}+1</arg>
</arguments>
<assign>
<var>${TestCaseHeaderName_Index}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${TestCaseHeaderName_Index}+1</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:46.354" endtime="20210408 19:06:46.354"></status>
</kw>
<msg timestamp="20210408 19:06:46.354" level="INFO">${TestCaseHeaderName_Index} = 1</msg>
<status status="PASS" starttime="20210408 19:06:46.352" endtime="20210408 19:06:46.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Evaluated Test Case Column Index : '${TestCaseHeaderName_Index}'</arg>
</arguments>
<msg timestamp="20210408 19:06:46.409" level="INFO">Evaluated Test Case Column Index : '1'</msg>
<status status="PASS" starttime="20210408 19:06:46.408" endtime="20210408 19:06:46.409"></status>
</kw>
<kw name="Get Index From List" library="Collections">
<doc>Returns the index of the first occurrence of the ``value`` on the list.</doc>
<arguments>
<arg>${DataColumn_List}</arg>
<arg>${sColumnName}</arg>
</arguments>
<assign>
<var>${ColumnName_Index}</var>
</assign>
<msg timestamp="20210408 19:06:46.462" level="INFO">${ColumnName_Index} = 7</msg>
<status status="PASS" starttime="20210408 19:06:46.461" endtime="20210408 19:06:46.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Column Name Index : '${ColumnName_Index}'</arg>
</arguments>
<msg timestamp="20210408 19:06:46.513" level="INFO">Column Name Index : '7'</msg>
<status status="PASS" starttime="20210408 19:06:46.513" endtime="20210408 19:06:46.513"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${ColumnName_Index}&lt;0</arg>
<arg>Fail</arg>
<arg>'${sColumnName}' is not found at '${DataColumn_List}' Data Column Values.</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:46.567" endtime="20210408 19:06:46.568"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ColumnName_Index}+1</arg>
</arguments>
<assign>
<var>${ColumnName_Index}</var>
</assign>
<msg timestamp="20210408 19:06:46.631" level="INFO">${ColumnName_Index} = 8</msg>
<status status="PASS" starttime="20210408 19:06:46.630" endtime="20210408 19:06:46.631"></status>
</kw>
<msg timestamp="20210408 19:06:46.632" level="INFO">${TestCaseHeader_Index} = 1</msg>
<msg timestamp="20210408 19:06:46.632" level="INFO">${ColumnHeader_Index} = 8</msg>
<status status="PASS" starttime="20210408 19:06:45.967" endtime="20210408 19:06:46.632"></status>
</kw>
<kw name="Get Index of a Row Value using a Reference Header Index" library="GenericKeywords">
<doc>This keyword is used to get index of a row value using a reference header index
@author: hstone 19FEB2020 Initial Create</doc>
<arguments>
<arg>${sSheetName}</arg>
<arg>${rowid}</arg>
<arg>${TestCaseHeader_Index}</arg>
</arguments>
<assign>
<var>${RowId_Index}</var>
</assign>
<kw name="Read Excel Column" library="ExcelLibrary">
<doc>Returns content of a column from the current sheet of the document.</doc>
<arguments>
<arg>${sReferenceHeader_Index}</arg>
<arg>sheet_name=${sSheetName}</arg>
</arguments>
<assign>
<var>${DataRow_List}</var>
</assign>
<msg timestamp="20210408 19:06:46.738" level="INFO">${DataRow_List} = ['rowid', '1', '2']</msg>
<status status="PASS" starttime="20210408 19:06:46.737" endtime="20210408 19:06:46.738"></status>
</kw>
<kw name="Read Excel Column" library="ExcelLibrary">
<doc>Returns content of a column from the current sheet of the document.</doc>
<arguments>
<arg>1</arg>
<arg>sheet_name=${sSheetName}</arg>
</arguments>
<assign>
<var>${DataRowId_List}</var>
</assign>
<msg timestamp="20210408 19:06:46.789" level="INFO">${DataRowId_List} = ['rowid', '1', '2']</msg>
<status status="PASS" starttime="20210408 19:06:46.788" endtime="20210408 19:06:46.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Row Names Under Reference Header with Index '${sReferenceHeader_Index}' : '${DataRow_List}'</arg>
</arguments>
<msg timestamp="20210408 19:06:46.839" level="INFO">Row Names Under Reference Header with Index '1' : '['rowid', '1', '2']'</msg>
<status status="PASS" starttime="20210408 19:06:46.838" endtime="20210408 19:06:46.839"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>List Should Contain Value</arg>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<assign>
<var>${IsPresentInList}</var>
</assign>
<kw name="List Should Contain Value" library="Collections">
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<arguments>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:46.891" endtime="20210408 19:06:46.891"></status>
</kw>
<msg timestamp="20210408 19:06:46.892" level="INFO">${IsPresentInList} = True</msg>
<status status="PASS" starttime="20210408 19:06:46.889" endtime="20210408 19:06:46.892"></status>
</kw>
<kw name="Check if Row Value Exists on List as Int" library="GenericKeywords">
<doc>This keyword is used to check if value exists on a list as a string
@author: hstone 13APR2020 Initial Create</doc>
<arguments>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<assign>
<var>${IsPresentInList_As_Int}</var>
<var>${RowValue_Int}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${False}</arg>
</arguments>
<assign>
<var>${IsPresentInList}</var>
</assign>
<msg timestamp="20210408 19:06:47.103" level="INFO">${IsPresentInList} = False</msg>
<status status="PASS" starttime="20210408 19:06:47.103" endtime="20210408 19:06:47.103"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Convert To Integer</arg>
<arg>${sValue}</arg>
</arguments>
<assign>
<var>${IsIntConvPassed}</var>
</assign>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${sValue}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:47.155" endtime="20210408 19:06:47.156"></status>
</kw>
<msg timestamp="20210408 19:06:47.156" level="INFO">${IsIntConvPassed} = True</msg>
<status status="PASS" starttime="20210408 19:06:47.154" endtime="20210408 19:06:47.156"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${IsIntConvPassed}==${True}</arg>
<arg>Check if a String Exists as Int on a List</arg>
<arg>${lTarget_List}</arg>
<arg>${sValue}</arg>
</arguments>
<assign>
<var>${IsPresentInList}</var>
<var>${RowValue_Int}</var>
</assign>
<kw name="Check if a String Exists as Int on a List" library="GenericKeywords">
<doc>This keyword is used to check if a string exists as an integer on a list.
@author: hstone 13APR2020 Initial Create</doc>
<arguments>
<arg>${lTarget_List}</arg>
<arg>${sValue}</arg>
</arguments>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${sValue}</arg>
</arguments>
<assign>
<var>${Value_Int}</var>
</assign>
<msg timestamp="20210408 19:06:47.261" level="INFO">${Value_Int} = 1</msg>
<status status="PASS" starttime="20210408 19:06:47.260" endtime="20210408 19:06:47.261"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>List Should Contain Value</arg>
<arg>${lTarget_List}</arg>
<arg>${Value_Int}</arg>
</arguments>
<assign>
<var>${IsPresentInList}</var>
</assign>
<kw name="List Should Contain Value" library="Collections">
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<arguments>
<arg>${lTarget_List}</arg>
<arg>${Value_Int}</arg>
</arguments>
<msg timestamp="20210408 19:06:47.315" level="FAIL">[ rowid | 1 | 2 ] does not contain value '1'.</msg>
<status status="FAIL" starttime="20210408 19:06:47.314" endtime="20210408 19:06:47.363"></status>
</kw>
<msg timestamp="20210408 19:06:47.364" level="INFO">${IsPresentInList} = False</msg>
<status status="PASS" starttime="20210408 19:06:47.313" endtime="20210408 19:06:47.364"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:47.207" endtime="20210408 19:06:47.364"></status>
</kw>
<msg timestamp="20210408 19:06:47.365" level="INFO">${IsPresentInList} = False</msg>
<msg timestamp="20210408 19:06:47.365" level="INFO">${RowValue_Int} = 1</msg>
<status status="PASS" starttime="20210408 19:06:47.205" endtime="20210408 19:06:47.365"></status>
</kw>
<msg timestamp="20210408 19:06:47.365" level="INFO">${IsPresentInList_As_Int} = False</msg>
<msg timestamp="20210408 19:06:47.365" level="INFO">${RowValue_Int} = 1</msg>
<status status="PASS" starttime="20210408 19:06:47.052" endtime="20210408 19:06:47.365"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${IsPresentInList}==${True}</arg>
<arg>Get Index From List</arg>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
<arg>ELSE IF</arg>
<arg>${IsPresentInList_As_Int}==${True}</arg>
<arg>Get Index From List</arg>
<arg>${DataRow_List}</arg>
<arg>${RowValue_Int}</arg>
<arg>ELSE</arg>
<arg>Get Index From List</arg>
<arg>${DataRowId_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<assign>
<var>${DataRowName_Index}</var>
</assign>
<kw name="Get Index From List" library="Collections">
<doc>Returns the index of the first occurrence of the ``value`` on the list.</doc>
<arguments>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:47.419" endtime="20210408 19:06:47.419"></status>
</kw>
<msg timestamp="20210408 19:06:47.419" level="INFO">${DataRowName_Index} = 1</msg>
<status status="PASS" starttime="20210408 19:06:47.417" endtime="20210408 19:06:47.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Row Name Index for '${sRowValue}' : '${DataRowName_Index}'</arg>
</arguments>
<msg timestamp="20210408 19:06:47.470" level="INFO">Row Name Index for '1' : '1'</msg>
<status status="PASS" starttime="20210408 19:06:47.469" endtime="20210408 19:06:47.470"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${DataRowName_Index}&lt;0</arg>
<arg>Fail</arg>
<arg>'${sRowValue}' is not found at '${DataRow_List}' Data Row Values.</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:47.520" endtime="20210408 19:06:47.521"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${DataRowName_Index}+1</arg>
</arguments>
<assign>
<var>${DataRowValue_Index}</var>
</assign>
<msg timestamp="20210408 19:06:47.570" level="INFO">${DataRowValue_Index} = 2</msg>
<status status="PASS" starttime="20210408 19:06:47.570" endtime="20210408 19:06:47.571"></status>
</kw>
<msg timestamp="20210408 19:06:47.571" level="INFO">${RowId_Index} = 2</msg>
<status status="PASS" starttime="20210408 19:06:46.685" endtime="20210408 19:06:47.571"></status>
</kw>
<kw name="Write Excel Cell" library="ExcelLibrary">
<doc>Writes value to the cell.</doc>
<arguments>
<arg>${RowId_Index}</arg>
<arg>${ColumnHeader_Index}</arg>
<arg>${sData}</arg>
<arg>${sSheetName}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:47.623" endtime="20210408 19:06:47.624"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:45.851" endtime="20210408 19:06:47.625"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:45.849" endtime="20210408 19:06:47.625"></status>
</kw>
<kw name="Save Excel Document" library="ExcelLibrary">
<doc>Saves the current document to disk.</doc>
<arguments>
<arg>${sFilePath}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:47.676" endtime="20210408 19:06:47.714"></status>
</kw>
<kw name="Close Current Excel Document" library="ExcelLibrary">
<doc>Closes current document.</doc>
<status status="PASS" starttime="20210408 19:06:47.772" endtime="20210408 19:06:47.772"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:45.686" endtime="20210408 19:06:47.773"></status>
</kw>
<kw name="Set Deal as Sole Lender" library="Deal_Notebook">
<doc>This keyword clicks the Sole Lender Checkbox and verifies it.
@author: fmamaril DDMMMYYYY - initial create
@update: ehugo 28MAY2020 - added screenshot
@update: jloretiz 04FEB2021 - make setting of sole lender dynamic</doc>
<arguments>
<arg>&amp;{ExcelPath}[Deal_IsSoleLender]</arg>
</arguments>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sIsSole_Lender}</arg>
</arguments>
<assign>
<var>${IsSole_Lender}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:48.096" endtime="20210408 19:06:48.097"></status>
</kw>
<msg timestamp="20210408 19:06:48.097" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:06:48.095" endtime="20210408 19:06:48.097"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:06:48.388" level="INFO">${List_Argument_Excel_Value} = ['OFF']</msg>
<status status="PASS" starttime="20210408 19:06:48.387" endtime="20210408 19:06:48.388"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:06:48.439" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:06:48.439" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:06:48.439" endtime="20210408 19:06:48.439"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:06:48.491" level="INFO">${Arg_User_Input} = OFF</msg>
<status status="PASS" starttime="20210408 19:06:48.490" endtime="20210408 19:06:48.491"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:06:48.544" level="INFO">${Arg_User_Input} = OFF</msg>
<status status="PASS" starttime="20210408 19:06:48.544" endtime="20210408 19:06:48.544"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:06:48.599" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:06:48.598" endtime="20210408 19:06:48.599"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:06:48.651" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:06:48.650" endtime="20210408 19:06:48.651"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:06:48.700" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:06:48.700" endtime="20210408 19:06:48.700"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:48.754" endtime="20210408 19:06:48.754"></status>
</kw>
<msg timestamp="20210408 19:06:48.754" level="INFO">${Extracted_Argument_Value} = OFF</msg>
<status status="PASS" starttime="20210408 19:06:48.751" endtime="20210408 19:06:48.755"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:48.325" endtime="20210408 19:06:48.755"></status>
</kw>
<msg timestamp="20210408 19:06:48.755" level="INFO">${Extracted_Argument_Value} = OFF</msg>
<status status="PASS" starttime="20210408 19:06:48.178" endtime="20210408 19:06:48.755"></status>
</kw>
<msg timestamp="20210408 19:06:48.755" level="INFO">${IsSole_Lender} = OFF</msg>
<status status="PASS" starttime="20210408 19:06:48.021" endtime="20210408 19:06:48.755"></status>
</kw>
<kw name="Mx LoanIQ Activate Window" library="LoanIQ">
<doc>| Usage |
To activate existing window if present.</doc>
<arguments>
<arg>${LIQ_DealNotebook_Window}</arg>
</arguments>
<msg timestamp="20210408 19:06:48.872" level="INFO">Window : JavaWindow("title:=Deal Notebook -.*","displayed:=1") is activated</msg>
<status status="PASS" starttime="20210408 19:06:48.805" endtime="20210408 19:06:48.872"></status>
</kw>
<kw name="Mx LoanIQ Select Window Tab" library="LoanIQ">
<doc>| Usage |
Used to select the Java window tab</doc>
<arguments>
<arg>${LIQ_DealNotebook_Tab}</arg>
<arg>${TAB_SUMMARY}</arg>
</arguments>
<msg timestamp="20210408 19:06:53.639" level="INFO">Window Tab = 'Summary' is selected from the element = 'JavaWindow("title:=Deal Notebook -.*","displayed:=1").JavaTab("tagname:=TabFolder")'</msg>
<status status="PASS" starttime="20210408 19:06:48.935" endtime="20210408 19:06:53.639"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${IsSole_Lender}'=='${ON}'</arg>
<arg>Mx LoanIQ Set</arg>
<arg>${LIQ_DealSummary_SoleLender_Checkbox}</arg>
<arg>${ON}</arg>
<arg>ELSE</arg>
<arg>Mx LoanIQ Set</arg>
<arg>${LIQ_DealSummary_SoleLender_Checkbox}</arg>
<arg>${OFF}</arg>
</arguments>
<kw name="Mx LoanIQ Set" library="LoanIQ">
<doc>|Usage|</doc>
<arguments>
<arg>${LIQ_DealSummary_SoleLender_Checkbox}</arg>
<arg>${OFF}</arg>
</arguments>
<msg timestamp="20210408 19:06:53.912" level="INFO">Object = 'JavaWindow("title:=Deal Notebook -.*").JavaCheckBox("attached text:=Sole Lender.*")' is unset.</msg>
<status status="PASS" starttime="20210408 19:06:53.699" endtime="20210408 19:06:53.912"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:53.697" endtime="20210408 19:06:53.912"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${IsSole_Lender}'=='${ON}'</arg>
<arg>Validate if Element is Checked</arg>
<arg>${LIQ_DealSummary_SoleLender_Checkbox}</arg>
<arg>Deal Summary Sole Lender</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:53.966" endtime="20210408 19:06:53.967"></status>
</kw>
<kw name="Take Screenshot with text into Test Document" library="ReportMaker_Keywords">
<doc>This keyword is used to add screenshot with image filename as description into test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Deal Notebook - Sole Lender</arg>
</arguments>
<kw name="Take Screenshot" library="Screenshot">
<doc>Takes a screenshot in JPEG format and embeds it into the log file.</doc>
<arguments>
<arg>${imageName}</arg>
</arguments>
<msg timestamp="20210408 19:06:54.193" level="INFO" html="yes">&lt;a href="Results/LoanIQ/TC01%20-%20Validate%20ARR%20Pricing%20Option%20at%20Deal%20Level%20and%20Add%20Libor%20Option___2021-04-08%2019-04-35.729/Deal%20Notebook%20-%20Sole%20Lender_1.jpg"&gt;&lt;img src="Results/LoanIQ/TC01%20-%20Validate%20ARR%20Pricing%20Option%20at%20Deal%20Level%20and%20Add%20Libor%20Option___2021-04-08%2019-04-35.729/Deal%20Notebook%20-%20Sole%20Lender_1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210408 19:06:54.102" endtime="20210408 19:06:54.193"></status>
</kw>
<kw name="Get Latest File" library="ReportMaker">
<arguments>
<arg>${getfilePath}</arg>
</arguments>
<assign>
<var>${imagePath}</var>
</assign>
<msg timestamp="20210408 19:06:54.247" level="INFO">${imagePath} = C:\Git_Evergreen\transform_arr\Results\LoanIQ\TC01 - Validate ARR Pricing Option at Deal Level and Add Libor Option___2021-04-08 19-04-35.729\Deal Notebook - Sole Lender_1.jpg</msg>
<status status="PASS" starttime="20210408 19:06:54.246" endtime="20210408 19:06:54.247"></status>
</kw>
<kw name="Put Screenshot With Text" library="ReportMaker">
<arguments>
<arg>${imagePath}</arg>
<arg>${imageName}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:54.302" endtime="20210408 19:06:54.312"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:54.031" endtime="20210408 19:06:54.313"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:47.825" endtime="20210408 19:06:54.313"></status>
</kw>
<kw name="Select Deal Classification" library="Deal_Notebook">
<doc>This keyword selects a Deal Classification.
@author: fmamaril DDMMMYYYY - initial create
@update: ehugo 28MAY2020 - added keyword pre-processing; added screenshot
@update: jloretiz 11FEB2021 - added condition for empty data</doc>
<arguments>
<arg>&amp;{ExcelPath}[Deal_ClassificationCode]</arg>
<arg>&amp;{ExcelPath}[Deal_ClassificationDesc]</arg>
</arguments>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sDeal_ClassificationCode}</arg>
</arguments>
<assign>
<var>${Deal_ClassificationCode}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:54.629" endtime="20210408 19:06:54.630"></status>
</kw>
<msg timestamp="20210408 19:06:54.630" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:06:54.628" endtime="20210408 19:06:54.630"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:06:54.851" level="INFO">${List_Argument_Excel_Value} = ['GCP']</msg>
<status status="PASS" starttime="20210408 19:06:54.851" endtime="20210408 19:06:54.852"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:06:54.904" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:06:54.904" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:06:54.904" endtime="20210408 19:06:54.905"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:06:54.955" level="INFO">${Arg_User_Input} = GCP</msg>
<status status="PASS" starttime="20210408 19:06:54.955" endtime="20210408 19:06:54.956"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:06:55.008" level="INFO">${Arg_User_Input} = GCP</msg>
<status status="PASS" starttime="20210408 19:06:55.008" endtime="20210408 19:06:55.008"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:06:55.061" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:06:55.061" endtime="20210408 19:06:55.062"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:06:55.111" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:06:55.111" endtime="20210408 19:06:55.112"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:06:55.163" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:06:55.162" endtime="20210408 19:06:55.163"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:55.216" endtime="20210408 19:06:55.216"></status>
</kw>
<msg timestamp="20210408 19:06:55.217" level="INFO">${Extracted_Argument_Value} = GCP</msg>
<status status="PASS" starttime="20210408 19:06:55.214" endtime="20210408 19:06:55.217"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:54.796" endtime="20210408 19:06:55.217"></status>
</kw>
<msg timestamp="20210408 19:06:55.218" level="INFO">${Extracted_Argument_Value} = GCP</msg>
<status status="PASS" starttime="20210408 19:06:54.692" endtime="20210408 19:06:55.218"></status>
</kw>
<msg timestamp="20210408 19:06:55.218" level="INFO">${Deal_ClassificationCode} = GCP</msg>
<status status="PASS" starttime="20210408 19:06:54.556" endtime="20210408 19:06:55.218"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sDeal_ClassificationDesc}</arg>
</arguments>
<assign>
<var>${Deal_ClassificationDesc}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:55.534" endtime="20210408 19:06:55.535"></status>
</kw>
<msg timestamp="20210408 19:06:55.535" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:06:55.533" endtime="20210408 19:06:55.535"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:06:55.740" level="INFO">${List_Argument_Excel_Value} = ['General Corp Purpose']</msg>
<status status="PASS" starttime="20210408 19:06:55.739" endtime="20210408 19:06:55.740"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:06:55.790" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:06:55.791" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:06:55.790" endtime="20210408 19:06:55.791"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:06:55.842" level="INFO">${Arg_User_Input} = GENERAL CORP PURPOSE</msg>
<status status="PASS" starttime="20210408 19:06:55.842" endtime="20210408 19:06:55.843"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:06:55.895" level="INFO">${Arg_User_Input} = GENERAL CORP PURPOSE</msg>
<status status="PASS" starttime="20210408 19:06:55.895" endtime="20210408 19:06:55.896"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:06:55.946" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:06:55.945" endtime="20210408 19:06:55.946"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:06:56.000" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:06:55.999" endtime="20210408 19:06:56.000"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:06:56.054" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:06:56.054" endtime="20210408 19:06:56.055"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:06:56.108" endtime="20210408 19:06:56.108"></status>
</kw>
<msg timestamp="20210408 19:06:56.108" level="INFO">${Extracted_Argument_Value} = General Corp Purpose</msg>
<status status="PASS" starttime="20210408 19:06:56.106" endtime="20210408 19:06:56.108"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:55.686" endtime="20210408 19:06:56.109"></status>
</kw>
<msg timestamp="20210408 19:06:56.109" level="INFO">${Extracted_Argument_Value} = General Corp Purpose</msg>
<status status="PASS" starttime="20210408 19:06:55.587" endtime="20210408 19:06:56.109"></status>
</kw>
<msg timestamp="20210408 19:06:56.109" level="INFO">${Deal_ClassificationDesc} = General Corp Purpose</msg>
<status status="PASS" starttime="20210408 19:06:55.373" endtime="20210408 19:06:56.109"></status>
</kw>
<kw name="Mx LoanIQ Select Window Tab" library="LoanIQ">
<doc>| Usage |
Used to select the Java window tab</doc>
<arguments>
<arg>${LIQ_DealNotebook_Tab}</arg>
<arg>${TAB_SUMMARY}</arg>
</arguments>
<msg timestamp="20210408 19:07:00.880" level="INFO">Window Tab = 'Summary' is selected from the element = 'JavaWindow("title:=Deal Notebook -.*","displayed:=1").JavaTab("tagname:=TabFolder")'</msg>
<status status="PASS" starttime="20210408 19:06:56.160" endtime="20210408 19:07:00.881"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_DealSummary_DealClassification_Button}</arg>
</arguments>
<msg timestamp="20210408 19:07:01.735" level="INFO">JavaWindow("title:=Deal Notebook -.*").JavaTab("text:=Summary").JavaButton("label:=Deal Classification") is clicked.</msg>
<status status="PASS" starttime="20210408 19:07:00.934" endtime="20210408 19:07:01.736"></status>
</kw>
<kw name="Validate Deal Classification elements" library="Deal_Notebook">
<tags>
<tag>Validation</tag>
</tags>
<doc>This keyword validates deal classification
@author: fmamaril</doc>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_DealClassification_Javatree}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_DealClassification_Javatree}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:07:01.958" level="INFO">Locator = 'JavaWindow("title:=Deal Classification").JavaTree("tagname:=Search by code:")' exists.</msg>
<status status="PASS" starttime="20210408 19:07:01.888" endtime="20210408 19:07:01.958"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:01.886" endtime="20210408 19:07:01.959"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Validate if Element is Enabled</arg>
<arg>${LIQ_DealClassification_OK_Button}</arg>
<arg>OK</arg>
</arguments>
<kw name="Validate if Element is Enabled" library="GenericKeywords">
<doc>This keyword validates if Element is enabled
@author: ghabal</doc>
<arguments>
<arg>${LIQ_DealClassification_OK_Button}</arg>
<arg>OK</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<msg timestamp="20210408 19:07:02.205" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:07:02.090" endtime="20210408 19:07:02.206"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:02.089" endtime="20210408 19:07:02.206"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<msg timestamp="20210408 19:07:02.359" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:07:02.263" endtime="20210408 19:07:02.360"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:02.262" endtime="20210408 19:07:02.360"></status>
</kw>
<msg timestamp="20210408 19:07:02.360" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:07:02.260" endtime="20210408 19:07:02.360"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed enabled</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed disabled</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>'${Field_Label}' element is confirmed enabled</arg>
</arguments>
<msg timestamp="20210408 19:07:02.421" level="INFO">'OK' element is confirmed enabled</msg>
<status status="PASS" starttime="20210408 19:07:02.421" endtime="20210408 19:07:02.421"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:02.419" endtime="20210408 19:07:02.422"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:02.037" endtime="20210408 19:07:02.422"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:02.036" endtime="20210408 19:07:02.422"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Validate if Element is Enabled</arg>
<arg>${LIQ_DealClassification_Cancel_Button}</arg>
<arg>Cancel</arg>
</arguments>
<kw name="Validate if Element is Enabled" library="GenericKeywords">
<doc>This keyword validates if Element is enabled
@author: ghabal</doc>
<arguments>
<arg>${LIQ_DealClassification_Cancel_Button}</arg>
<arg>Cancel</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<msg timestamp="20210408 19:07:02.650" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:07:02.536" endtime="20210408 19:07:02.651"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:02.534" endtime="20210408 19:07:02.651"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<msg timestamp="20210408 19:07:02.796" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:07:02.707" endtime="20210408 19:07:02.796"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:02.705" endtime="20210408 19:07:02.797"></status>
</kw>
<msg timestamp="20210408 19:07:02.797" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:07:02.703" endtime="20210408 19:07:02.797"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed enabled</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed disabled</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>'${Field_Label}' element is confirmed enabled</arg>
</arguments>
<msg timestamp="20210408 19:07:02.859" level="INFO">'Cancel' element is confirmed enabled</msg>
<status status="PASS" starttime="20210408 19:07:02.859" endtime="20210408 19:07:02.860"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:02.857" endtime="20210408 19:07:02.860"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:02.478" endtime="20210408 19:07:02.860"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:02.476" endtime="20210408 19:07:02.860"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:01.808" endtime="20210408 19:07:02.860"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Deal_ClassificationCode}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Enter</arg>
<arg>${LIQ_DealClassification_SearchByCode_Textfield}</arg>
<arg>${Deal_ClassificationCode}</arg>
</arguments>
<kw name="Mx LoanIQ Enter" library="LoanIQ">
<doc>| Usage |
To enter the data to the element specified by 'locator'.</doc>
<arguments>
<arg>${LIQ_DealClassification_SearchByCode_Textfield}</arg>
<arg>${Deal_ClassificationCode}</arg>
</arguments>
<msg timestamp="20210408 19:07:03.133" level="INFO">Input= GCP is entered in element= JavaWindow("title:=Deal Classification.*").JavaEdit("tagname:=Text")</msg>
<status status="PASS" starttime="20210408 19:07:02.912" endtime="20210408 19:07:03.134"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:02.911" endtime="20210408 19:07:03.134"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_DealClassification_OK_Button}</arg>
</arguments>
<msg timestamp="20210408 19:07:03.353" level="INFO">JavaWindow("title:=Deal Classification").JavaButton("attached text:=OK") is clicked.</msg>
<status status="PASS" starttime="20210408 19:07:03.189" endtime="20210408 19:07:03.354"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify If Text Value Exist in Textfield on Page</arg>
<arg>Deal Notebook</arg>
<arg>${Deal_ClassificationDesc}</arg>
</arguments>
<kw name="Verify If Text Value Exist in Textfield on Page" library="GenericKeywords">
<doc>This keyword verifies if static object exist in page
@author: fmamaril
&lt;update&gt; bernchua: Added "displayed:=1" property in JavaWindow locator.</doc>
<arguments>
<arg>Deal Notebook</arg>
<arg>${Deal_ClassificationDesc}</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>JavaWindow("title:=.*${WindowName}.*","displayed:=1").JavaEdit("value:=${Text to Validate}")</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>JavaWindow("title:=.*${WindowName}.*","displayed:=1").JavaEdit("value:=${Text to Validate}")</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:07:03.726" level="INFO">Locator = 'JavaWindow("title:=.*Deal Notebook.*","displayed:=1").JavaEdit("value:=General Corp Purpose")' exists.</msg>
<status status="PASS" starttime="20210408 19:07:03.549" endtime="20210408 19:07:03.726"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:03.548" endtime="20210408 19:07:03.726"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>JavaWindow("title:=.*${WindowName}.*","displayed:=1").JavaEdit("value:=${Text to Validate}")</arg>
<arg>Processtimeout=5</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>JavaWindow("title:=.*${WindowName}.*","displayed:=1").JavaEdit("value:=${Text to Validate}")</arg>
<arg>Processtimeout=5</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>JavaWindow("title:=.*${WindowName}.*","displayed:=1").JavaEdit("value:=${Text to Validate}")</arg>
<arg>Processtimeout=5</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:07:03.936" level="INFO">Locator = 'JavaWindow("title:=.*Deal Notebook.*","displayed:=1").JavaEdit("value:=General Corp Purpose")' exists.</msg>
<status status="PASS" starttime="20210408 19:07:03.782" endtime="20210408 19:07:03.936"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:03.780" endtime="20210408 19:07:03.937"></status>
</kw>
<msg timestamp="20210408 19:07:03.937" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:07:03.776" endtime="20210408 19:07:03.937"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>"${Text to Validate}" is displayed on ${WindowName} window.</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>"${Text to Validate}" is not displayed on ${WindowName} window.</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"${Text to Validate}" is displayed on ${WindowName} window.</arg>
</arguments>
<msg timestamp="20210408 19:07:03.993" level="INFO">"General Corp Purpose" is displayed on Deal Notebook window.</msg>
<status status="PASS" starttime="20210408 19:07:03.993" endtime="20210408 19:07:03.994"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:03.991" endtime="20210408 19:07:03.994"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:03.471" endtime="20210408 19:07:03.994"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:03.470" endtime="20210408 19:07:03.994"></status>
</kw>
<kw name="Take Screenshot with text into Test Document" library="ReportMaker_Keywords">
<doc>This keyword is used to add screenshot with image filename as description into test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Deal Notebook - Deal Classification</arg>
</arguments>
<kw name="Take Screenshot" library="Screenshot">
<doc>Takes a screenshot in JPEG format and embeds it into the log file.</doc>
<arguments>
<arg>${imageName}</arg>
</arguments>
<msg timestamp="20210408 19:07:04.207" level="INFO" html="yes">&lt;a href="Results/LoanIQ/TC01%20-%20Validate%20ARR%20Pricing%20Option%20at%20Deal%20Level%20and%20Add%20Libor%20Option___2021-04-08%2019-04-35.729/Deal%20Notebook%20-%20Deal%20Classification_1.jpg"&gt;&lt;img src="Results/LoanIQ/TC01%20-%20Validate%20ARR%20Pricing%20Option%20at%20Deal%20Level%20and%20Add%20Libor%20Option___2021-04-08%2019-04-35.729/Deal%20Notebook%20-%20Deal%20Classification_1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210408 19:07:04.099" endtime="20210408 19:07:04.207"></status>
</kw>
<kw name="Get Latest File" library="ReportMaker">
<arguments>
<arg>${getfilePath}</arg>
</arguments>
<assign>
<var>${imagePath}</var>
</assign>
<msg timestamp="20210408 19:07:04.264" level="INFO">${imagePath} = C:\Git_Evergreen\transform_arr\Results\LoanIQ\TC01 - Validate ARR Pricing Option at Deal Level and Add Libor Option___2021-04-08 19-04-35.729\Deal Notebook - Deal Classification_1.jpg</msg>
<status status="PASS" starttime="20210408 19:07:04.262" endtime="20210408 19:07:04.264"></status>
</kw>
<kw name="Put Screenshot With Text" library="ReportMaker">
<arguments>
<arg>${imagePath}</arg>
<arg>${imageName}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:07:04.323" endtime="20210408 19:07:04.333"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:04.047" endtime="20210408 19:07:04.334"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:54.364" endtime="20210408 19:07:04.334"></status>
</kw>
<kw name="Select Admin Agent" library="Deal_Notebook">
<doc>This keyword selects Admin Agent and it's location.
@author: fmamaril DDMMMYYYY - initial create
@update: ehugo 28MAY2020 - added keyword pre-processing; added screenshot
@update: jloretiz 11FEB2021 - added condition for empty data</doc>
<arguments>
<arg>&amp;{ExcelPath}[Deal_AdminAgent]</arg>
<arg>&amp;{ExcelPath}[Deal_AdminAgentLocation]</arg>
</arguments>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sDeal_AdminAgent}</arg>
</arguments>
<assign>
<var>${Deal_AdminAgent}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:07:04.587" endtime="20210408 19:07:04.587"></status>
</kw>
<msg timestamp="20210408 19:07:04.587" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:07:04.585" endtime="20210408 19:07:04.587"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:07:04.794" level="INFO">${List_Argument_Excel_Value} = ['BNS CANADA CORPORATE BANKING']</msg>
<status status="PASS" starttime="20210408 19:07:04.794" endtime="20210408 19:07:04.795"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:07:04.854" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:07:04.854" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:07:04.853" endtime="20210408 19:07:04.854"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:07:04.907" level="INFO">${Arg_User_Input} = BNS CANADA CORPORATE BANKING</msg>
<status status="PASS" starttime="20210408 19:07:04.906" endtime="20210408 19:07:04.907"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:07:05.069" level="INFO">${Arg_User_Input} = BNS CANADA CORPORATE BANKING</msg>
<status status="PASS" starttime="20210408 19:07:05.069" endtime="20210408 19:07:05.069"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:07:05.121" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:07:05.121" endtime="20210408 19:07:05.121"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:07:05.172" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:07:05.171" endtime="20210408 19:07:05.172"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:07:05.247" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:07:05.246" endtime="20210408 19:07:05.247"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:07:05.305" endtime="20210408 19:07:05.305"></status>
</kw>
<msg timestamp="20210408 19:07:05.305" level="INFO">${Extracted_Argument_Value} = BNS CANADA CORPORATE BANKING</msg>
<status status="PASS" starttime="20210408 19:07:05.303" endtime="20210408 19:07:05.305"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:04.743" endtime="20210408 19:07:05.306"></status>
</kw>
<msg timestamp="20210408 19:07:05.306" level="INFO">${Extracted_Argument_Value} = BNS CANADA CORPORATE BANKING</msg>
<status status="PASS" starttime="20210408 19:07:04.637" endtime="20210408 19:07:05.306"></status>
</kw>
<msg timestamp="20210408 19:07:05.306" level="INFO">${Deal_AdminAgent} = BNS CANADA CORPORATE BANKING</msg>
<status status="PASS" starttime="20210408 19:07:04.534" endtime="20210408 19:07:05.307"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sAdminAgent_Location}</arg>
</arguments>
<assign>
<var>${AdminAgent_Location}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:07:05.514" endtime="20210408 19:07:05.515"></status>
</kw>
<msg timestamp="20210408 19:07:05.515" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:07:05.513" endtime="20210408 19:07:05.515"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:07:05.723" level="INFO">${List_Argument_Excel_Value} = ['Toronto, Canada']</msg>
<status status="PASS" starttime="20210408 19:07:05.723" endtime="20210408 19:07:05.723"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:07:05.775" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:07:05.775" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:07:05.775" endtime="20210408 19:07:05.776"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:07:05.828" level="INFO">${Arg_User_Input} = TORONTO, CANADA</msg>
<status status="PASS" starttime="20210408 19:07:05.827" endtime="20210408 19:07:05.828"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:07:05.881" level="INFO">${Arg_User_Input} = TORONTO, CANADA</msg>
<status status="PASS" starttime="20210408 19:07:05.880" endtime="20210408 19:07:05.881"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:07:05.930" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:07:05.930" endtime="20210408 19:07:05.931"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:07:05.981" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:07:05.980" endtime="20210408 19:07:05.981"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:07:06.036" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:07:06.035" endtime="20210408 19:07:06.036"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:07:06.087" endtime="20210408 19:07:06.088"></status>
</kw>
<msg timestamp="20210408 19:07:06.088" level="INFO">${Extracted_Argument_Value} = Toronto, Canada</msg>
<status status="PASS" starttime="20210408 19:07:06.085" endtime="20210408 19:07:06.088"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:05.666" endtime="20210408 19:07:06.088"></status>
</kw>
<msg timestamp="20210408 19:07:06.088" level="INFO">${Extracted_Argument_Value} = Toronto, Canada</msg>
<status status="PASS" starttime="20210408 19:07:05.565" endtime="20210408 19:07:06.089"></status>
</kw>
<msg timestamp="20210408 19:07:06.089" level="INFO">${AdminAgent_Location} = Toronto, Canada</msg>
<status status="PASS" starttime="20210408 19:07:05.461" endtime="20210408 19:07:06.089"></status>
</kw>
<kw name="Mx LoanIQ Select Window Tab" library="LoanIQ">
<doc>| Usage |
Used to select the Java window tab</doc>
<arguments>
<arg>${LIQ_DealNotebook_Tab}</arg>
<arg>${TAB_SUMMARY}</arg>
</arguments>
<msg timestamp="20210408 19:07:10.848" level="INFO">Window Tab = 'Summary' is selected from the element = 'JavaWindow("title:=Deal Notebook -.*","displayed:=1").JavaTab("tagname:=TabFolder")'</msg>
<status status="PASS" starttime="20210408 19:07:06.139" endtime="20210408 19:07:10.848"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_DealSummary_AdminAgent_Button}</arg>
</arguments>
<msg timestamp="20210408 19:07:11.367" level="INFO">JavaWindow("title:=Deal Notebook.*").JavaButton("attached text:=Admin Agent") is clicked.</msg>
<status status="PASS" starttime="20210408 19:07:10.901" endtime="20210408 19:07:11.368"></status>
</kw>
<kw name="Mx LoanIQ Click Element If Present" library="LoanIQ">
<doc>| Usage |
Click on element identified by `locator` only if that element is present.
It passes if the element is not present.</doc>
<arguments>
<arg>${LIQ_Question_Yes_Button}</arg>
</arguments>
<msg timestamp="20210408 19:07:15.564" level="INFO">JavaWindow("title:=Question.*","displayed:=1").JavaButton("label:=Yes"): is clicked, or skipped if not present.</msg>
<status status="PASS" starttime="20210408 19:07:11.468" endtime="20210408 19:07:15.565"></status>
</kw>
<kw name="Validate admin agent elements" library="Deal_Notebook">
<tags>
<tag>Validation</tag>
</tags>
<doc>This keyword validates admin agent elements
@author: fmamaril</doc>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Validate if Element is Enabled</arg>
<arg>${LIQ_AdminAgentCustomer_Button}</arg>
<arg>Customer</arg>
</arguments>
<kw name="Validate if Element is Enabled" library="GenericKeywords">
<doc>This keyword validates if Element is enabled
@author: ghabal</doc>
<arguments>
<arg>${LIQ_AdminAgentCustomer_Button}</arg>
<arg>Customer</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<msg timestamp="20210408 19:07:15.881" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:07:15.781" endtime="20210408 19:07:15.881"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:15.780" endtime="20210408 19:07:15.882"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<msg timestamp="20210408 19:07:16.049" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:07:15.938" endtime="20210408 19:07:16.049"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:15.937" endtime="20210408 19:07:16.049"></status>
</kw>
<msg timestamp="20210408 19:07:16.050" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:07:15.935" endtime="20210408 19:07:16.050"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed enabled</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed disabled</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>'${Field_Label}' element is confirmed enabled</arg>
</arguments>
<msg timestamp="20210408 19:07:16.116" level="INFO">'Customer' element is confirmed enabled</msg>
<status status="PASS" starttime="20210408 19:07:16.115" endtime="20210408 19:07:16.116"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:16.114" endtime="20210408 19:07:16.116"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:15.713" endtime="20210408 19:07:16.116"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:15.711" endtime="20210408 19:07:16.117"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Validate if Element is Enabled</arg>
<arg>${LIQ_AdminAgent_ServicingGroup_Button}</arg>
<arg>Servicing Group</arg>
</arguments>
<kw name="Validate if Element is Enabled" library="GenericKeywords">
<doc>This keyword validates if Element is enabled
@author: ghabal</doc>
<arguments>
<arg>${LIQ_AdminAgent_ServicingGroup_Button}</arg>
<arg>Servicing Group</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<msg timestamp="20210408 19:07:16.369" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:07:16.252" endtime="20210408 19:07:16.370"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:16.250" endtime="20210408 19:07:16.370"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<msg timestamp="20210408 19:07:16.522" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:07:16.425" endtime="20210408 19:07:16.523"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:16.423" endtime="20210408 19:07:16.523"></status>
</kw>
<msg timestamp="20210408 19:07:16.523" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:07:16.422" endtime="20210408 19:07:16.523"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed enabled</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed disabled</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>'${Field_Label}' element is confirmed enabled</arg>
</arguments>
<msg timestamp="20210408 19:07:16.585" level="INFO">'Servicing Group' element is confirmed enabled</msg>
<status status="PASS" starttime="20210408 19:07:16.584" endtime="20210408 19:07:16.585"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:16.581" endtime="20210408 19:07:16.585"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:16.176" endtime="20210408 19:07:16.586"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:16.174" endtime="20210408 19:07:16.586"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Validate if Element is Enabled</arg>
<arg>${LIQ_PreferredRemittanceInstructions_Button}</arg>
<arg>Preferred Remittance Instructions</arg>
</arguments>
<kw name="Validate if Element is Enabled" library="GenericKeywords">
<doc>This keyword validates if Element is enabled
@author: ghabal</doc>
<arguments>
<arg>${LIQ_PreferredRemittanceInstructions_Button}</arg>
<arg>Preferred Remittance Instructions</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<msg timestamp="20210408 19:07:16.808" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:07:16.698" endtime="20210408 19:07:16.808"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:16.697" endtime="20210408 19:07:16.808"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<msg timestamp="20210408 19:07:16.963" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:07:16.868" endtime="20210408 19:07:16.963"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:16.867" endtime="20210408 19:07:16.964"></status>
</kw>
<msg timestamp="20210408 19:07:16.964" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:07:16.865" endtime="20210408 19:07:16.964"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed enabled</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed disabled</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>'${Field_Label}' element is confirmed enabled</arg>
</arguments>
<msg timestamp="20210408 19:07:17.019" level="INFO">'Preferred Remittance Instructions' element is confirmed enabled</msg>
<status status="PASS" starttime="20210408 19:07:17.018" endtime="20210408 19:07:17.019"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:17.017" endtime="20210408 19:07:17.019"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:16.643" endtime="20210408 19:07:17.020"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:16.642" endtime="20210408 19:07:17.020"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Validate if Element is Enabled</arg>
<arg>${LIQ_AdminAgent_OK_Button}</arg>
<arg>OK</arg>
</arguments>
<kw name="Validate if Element is Enabled" library="GenericKeywords">
<doc>This keyword validates if Element is enabled
@author: ghabal</doc>
<arguments>
<arg>${LIQ_AdminAgent_OK_Button}</arg>
<arg>OK</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<msg timestamp="20210408 19:07:17.240" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:07:17.138" endtime="20210408 19:07:17.240"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:17.136" endtime="20210408 19:07:17.241"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<msg timestamp="20210408 19:07:17.392" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:07:17.297" endtime="20210408 19:07:17.393"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:17.293" endtime="20210408 19:07:17.393"></status>
</kw>
<msg timestamp="20210408 19:07:17.393" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:07:17.292" endtime="20210408 19:07:17.393"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed enabled</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed disabled</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>'${Field_Label}' element is confirmed enabled</arg>
</arguments>
<msg timestamp="20210408 19:07:17.452" level="INFO">'OK' element is confirmed enabled</msg>
<status status="PASS" starttime="20210408 19:07:17.452" endtime="20210408 19:07:17.452"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:17.450" endtime="20210408 19:07:17.452"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:17.087" endtime="20210408 19:07:17.453"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:17.085" endtime="20210408 19:07:17.453"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Validate if Element is Enabled</arg>
<arg>${LIQ_AdminAgent_Cancel_Button}</arg>
<arg>Cancel</arg>
</arguments>
<kw name="Validate if Element is Enabled" library="GenericKeywords">
<doc>This keyword validates if Element is enabled
@author: ghabal</doc>
<arguments>
<arg>${LIQ_AdminAgent_Cancel_Button}</arg>
<arg>Cancel</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<msg timestamp="20210408 19:07:17.777" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:07:17.671" endtime="20210408 19:07:17.778"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:17.669" endtime="20210408 19:07:17.778"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<msg timestamp="20210408 19:07:17.919" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:07:17.831" endtime="20210408 19:07:17.919"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:17.829" endtime="20210408 19:07:17.919"></status>
</kw>
<msg timestamp="20210408 19:07:17.919" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:07:17.827" endtime="20210408 19:07:17.920"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed enabled</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed disabled</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>'${Field_Label}' element is confirmed enabled</arg>
</arguments>
<msg timestamp="20210408 19:07:17.980" level="INFO">'Cancel' element is confirmed enabled</msg>
<status status="PASS" starttime="20210408 19:07:17.979" endtime="20210408 19:07:17.980"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:17.977" endtime="20210408 19:07:17.980"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:17.507" endtime="20210408 19:07:17.980"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:17.506" endtime="20210408 19:07:17.980"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:15.653" endtime="20210408 19:07:17.981"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_AdminAgentCustomer_Button}</arg>
</arguments>
<msg timestamp="20210408 19:07:18.416" level="INFO">JavaWindow("title:=Deal Admin Agent for.*").JavaButton("attached text:=Customer") is clicked.</msg>
<status status="PASS" starttime="20210408 19:07:18.060" endtime="20210408 19:07:18.416"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Deal_AdminAgent}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Enter</arg>
<arg>${LIQ_LenderSelect_ShortName_Textfield}</arg>
<arg>${Deal_AdminAgent}</arg>
</arguments>
<kw name="Mx LoanIQ Enter" library="LoanIQ">
<doc>| Usage |
To enter the data to the element specified by 'locator'.</doc>
<arguments>
<arg>${LIQ_LenderSelect_ShortName_Textfield}</arg>
<arg>${Deal_AdminAgent}</arg>
</arguments>
<msg timestamp="20210408 19:07:18.643" level="INFO">Input= BNS CANADA CORPORATE BANKING is entered in element= JavaWindow("title:=Lender Select").JavaEdit("tagname:=Text","index:=0")</msg>
<status status="PASS" starttime="20210408 19:07:18.490" endtime="20210408 19:07:18.644"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:18.488" endtime="20210408 19:07:18.644"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_LenderSelect_ShortNameSearch_Button}</arg>
</arguments>
<msg timestamp="20210408 19:07:18.953" level="INFO">JavaWindow("title:=Lender Select.*").JavaButton("attached text:=Search") is clicked.</msg>
<status status="PASS" starttime="20210408 19:07:18.700" endtime="20210408 19:07:18.953"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_LenderListShortName_OK_Button}</arg>
</arguments>
<msg timestamp="20210408 19:07:19.591" level="INFO">JavaWindow("title:=Lender Select.*").JavaWindow("title:=Lender List By Short Name").JavaButton("attached text:=OK") is clicked.</msg>
<status status="PASS" starttime="20210408 19:07:19.037" endtime="20210408 19:07:19.591"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${AdminAgent_Location}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Select Combo Box Value</arg>
<arg>${LIQ_AdminAgent_Location_SelectBox}</arg>
<arg>${AdminAgent_Location}</arg>
</arguments>
<kw name="Mx LoanIQ Select Combo Box Value" library="LoanIQ">
<doc>| Usage |
Used to select data in JavaList</doc>
<arguments>
<arg>${LIQ_AdminAgent_Location_SelectBox}</arg>
<arg>${AdminAgent_Location}</arg>
</arguments>
<msg timestamp="20210408 19:07:20.150" level="INFO">Selected value = 'Toronto, Canada' from Combo box object = 'JavaWindow("title:=Deal Admin Agent.*").JavaList("attached text:=Location:")'.</msg>
<status status="PASS" starttime="20210408 19:07:19.658" endtime="20210408 19:07:20.150"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:19.656" endtime="20210408 19:07:20.150"></status>
</kw>
<kw name="Take Screenshot with text into Test Document" library="ReportMaker_Keywords">
<doc>This keyword is used to add screenshot with image filename as description into test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Deal Notebook - Deal Admin Agent</arg>
</arguments>
<kw name="Take Screenshot" library="Screenshot">
<doc>Takes a screenshot in JPEG format and embeds it into the log file.</doc>
<arguments>
<arg>${imageName}</arg>
</arguments>
<msg timestamp="20210408 19:07:20.348" level="INFO" html="yes">&lt;a href="Results/LoanIQ/TC01%20-%20Validate%20ARR%20Pricing%20Option%20at%20Deal%20Level%20and%20Add%20Libor%20Option___2021-04-08%2019-04-35.729/Deal%20Notebook%20-%20Deal%20Admin%20Agent_1.jpg"&gt;&lt;img src="Results/LoanIQ/TC01%20-%20Validate%20ARR%20Pricing%20Option%20at%20Deal%20Level%20and%20Add%20Libor%20Option___2021-04-08%2019-04-35.729/Deal%20Notebook%20-%20Deal%20Admin%20Agent_1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210408 19:07:20.261" endtime="20210408 19:07:20.348"></status>
</kw>
<kw name="Get Latest File" library="ReportMaker">
<arguments>
<arg>${getfilePath}</arg>
</arguments>
<assign>
<var>${imagePath}</var>
</assign>
<msg timestamp="20210408 19:07:20.400" level="INFO">${imagePath} = C:\Git_Evergreen\transform_arr\Results\LoanIQ\TC01 - Validate ARR Pricing Option at Deal Level and Add Libor Option___2021-04-08 19-04-35.729\Deal Notebook - Deal Admin Agent_1.jpg</msg>
<status status="PASS" starttime="20210408 19:07:20.399" endtime="20210408 19:07:20.400"></status>
</kw>
<kw name="Put Screenshot With Text" library="ReportMaker">
<arguments>
<arg>${imagePath}</arg>
<arg>${imageName}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:07:20.454" endtime="20210408 19:07:20.465"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:20.206" endtime="20210408 19:07:20.466"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:04.383" endtime="20210408 19:07:20.466"></status>
</kw>
<kw name="Select Servicing Group and Remittance Instruction for Admin Agent" library="Deal_Notebook">
<doc>Its selects the servicing group and remittance instructions for Admin Agent.
@author: fmamaril DDMMMYYYY - initial create
@update: ehugo 28MAY2020 - added keyword pre-processing; added screenshot
@update: jloretiz 07AUG2020 - remove the text verification not present in BNS Environment
@update: jloretiz 11FEB2021 - added condition for empty data</doc>
<arguments>
<arg>&amp;{ExcelPath}[DealAdminAgent_SGAlias]</arg>
<arg>&amp;{ExcelPath}[DealAdminAgent_PreferredRI]</arg>
<arg>&amp;{ExcelPath}[DealAdminAgent_ServicingGroup]</arg>
</arguments>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sAdminAgent_SGAlias}</arg>
</arguments>
<assign>
<var>${AdminAgent_SGAlias}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:07:20.729" endtime="20210408 19:07:20.729"></status>
</kw>
<msg timestamp="20210408 19:07:20.729" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:07:20.727" endtime="20210408 19:07:20.730"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:07:20.927" level="INFO">${List_Argument_Excel_Value} = ['BC']</msg>
<status status="PASS" starttime="20210408 19:07:20.927" endtime="20210408 19:07:20.927"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:07:20.977" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:07:20.978" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:07:20.977" endtime="20210408 19:07:20.978"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:07:21.031" level="INFO">${Arg_User_Input} = BC</msg>
<status status="PASS" starttime="20210408 19:07:21.030" endtime="20210408 19:07:21.031"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:07:21.080" level="INFO">${Arg_User_Input} = BC</msg>
<status status="PASS" starttime="20210408 19:07:21.080" endtime="20210408 19:07:21.080"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:07:21.131" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:07:21.131" endtime="20210408 19:07:21.132"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:07:21.183" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:07:21.182" endtime="20210408 19:07:21.183"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:07:21.234" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:07:21.233" endtime="20210408 19:07:21.234"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:07:21.287" endtime="20210408 19:07:21.287"></status>
</kw>
<msg timestamp="20210408 19:07:21.287" level="INFO">${Extracted_Argument_Value} = BC</msg>
<status status="PASS" starttime="20210408 19:07:21.285" endtime="20210408 19:07:21.288"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:20.878" endtime="20210408 19:07:21.288"></status>
</kw>
<msg timestamp="20210408 19:07:21.288" level="INFO">${Extracted_Argument_Value} = BC</msg>
<status status="PASS" starttime="20210408 19:07:20.779" endtime="20210408 19:07:21.288"></status>
</kw>
<msg timestamp="20210408 19:07:21.288" level="INFO">${AdminAgent_SGAlias} = BC</msg>
<status status="PASS" starttime="20210408 19:07:20.674" endtime="20210408 19:07:21.288"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sAdminAgentServicingGroup_Method}</arg>
</arguments>
<assign>
<var>${AdminAgentServicingGroup_Method}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:07:21.494" endtime="20210408 19:07:21.495"></status>
</kw>
<msg timestamp="20210408 19:07:21.495" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:07:21.492" endtime="20210408 19:07:21.495"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:07:21.698" level="INFO">${List_Argument_Excel_Value} = ['']</msg>
<status status="PASS" starttime="20210408 19:07:21.697" endtime="20210408 19:07:21.698"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:07:21.748" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:07:21.748" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:07:21.747" endtime="20210408 19:07:21.748"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:07:21.800" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:07:21.799" endtime="20210408 19:07:21.800"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:07:21.853" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:07:21.852" endtime="20210408 19:07:21.853"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:07:21.907" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:07:21.907" endtime="20210408 19:07:21.907"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:07:21.961" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:07:21.960" endtime="20210408 19:07:21.961"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:07:22.013" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:07:22.012" endtime="20210408 19:07:22.013"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:07:22.066" endtime="20210408 19:07:22.067"></status>
</kw>
<msg timestamp="20210408 19:07:22.067" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:07:22.064" endtime="20210408 19:07:22.067"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:21.647" endtime="20210408 19:07:22.068"></status>
</kw>
<msg timestamp="20210408 19:07:22.068" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:07:21.546" endtime="20210408 19:07:22.068"></status>
</kw>
<msg timestamp="20210408 19:07:22.068" level="INFO">${AdminAgentServicingGroup_Method} = </msg>
<status status="PASS" starttime="20210408 19:07:21.441" endtime="20210408 19:07:22.068"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sAdminAgent_ServicingGroup}</arg>
</arguments>
<assign>
<var>${AdminAgent_ServicingGroup}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:07:22.309" endtime="20210408 19:07:22.310"></status>
</kw>
<msg timestamp="20210408 19:07:22.310" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:07:22.307" endtime="20210408 19:07:22.310"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:07:22.520" level="INFO">${List_Argument_Excel_Value} = ['CANADA CORPORATE BANKING']</msg>
<status status="PASS" starttime="20210408 19:07:22.520" endtime="20210408 19:07:22.520"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:07:22.571" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:07:22.571" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:07:22.571" endtime="20210408 19:07:22.572"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:07:22.623" level="INFO">${Arg_User_Input} = CANADA CORPORATE BANKING</msg>
<status status="PASS" starttime="20210408 19:07:22.622" endtime="20210408 19:07:22.623"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:07:22.674" level="INFO">${Arg_User_Input} = CANADA CORPORATE BANKING</msg>
<status status="PASS" starttime="20210408 19:07:22.674" endtime="20210408 19:07:22.674"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:07:22.725" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:07:22.725" endtime="20210408 19:07:22.726"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:07:22.779" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:07:22.778" endtime="20210408 19:07:22.779"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:07:22.832" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:07:22.831" endtime="20210408 19:07:22.832"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:07:22.995" endtime="20210408 19:07:22.995"></status>
</kw>
<msg timestamp="20210408 19:07:22.996" level="INFO">${Extracted_Argument_Value} = CANADA CORPORATE BANKING</msg>
<status status="PASS" starttime="20210408 19:07:22.992" endtime="20210408 19:07:22.996"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:22.466" endtime="20210408 19:07:22.996"></status>
</kw>
<msg timestamp="20210408 19:07:22.996" level="INFO">${Extracted_Argument_Value} = CANADA CORPORATE BANKING</msg>
<status status="PASS" starttime="20210408 19:07:22.363" endtime="20210408 19:07:22.996"></status>
</kw>
<msg timestamp="20210408 19:07:22.997" level="INFO">${AdminAgent_ServicingGroup} = CANADA CORPORATE BANKING</msg>
<status status="PASS" starttime="20210408 19:07:22.253" endtime="20210408 19:07:22.997"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_AdminAgent_ServicingGroup_Button}</arg>
</arguments>
<msg timestamp="20210408 19:07:24.014" level="INFO">JavaWindow("title:=Deal Admin Agent for.*").JavaButton("attached text:=Servicing Group") is clicked.</msg>
<status status="PASS" starttime="20210408 19:07:23.050" endtime="20210408 19:07:24.014"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${AdminAgent_SGAlias}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Select String</arg>
<arg>${LIQ_ServicingGroups_JavaTree}</arg>
<arg>${AdminAgent_SGAlias}</arg>
</arguments>
<kw name="Mx LoanIQ Select String" library="LoanIQ">
<doc>| Usage |
Used to select the given string in JavaTree</doc>
<arguments>
<arg>${LIQ_ServicingGroups_JavaTree}</arg>
<arg>${AdminAgent_SGAlias}</arg>
</arguments>
<msg timestamp="20210408 19:07:30.141" level="INFO">Selected 'BC' from 'JavaWindow("title:=Servicing Groups For:.*").JavaTree("attached text:=Drill Down To Change Group Members")' object.</msg>
<status status="PASS" starttime="20210408 19:07:24.093" endtime="20210408 19:07:30.142"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:24.089" endtime="20210408 19:07:30.142"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${AdminAgentServicingGroup_Method}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Select String</arg>
<arg>${LIQ_ServicingGroups_RemittanceInctructions_JavaTree}</arg>
<arg>${AdminAgentServicingGroup_Method}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:07:30.202" endtime="20210408 19:07:30.203"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_ServicingGroup_OK_Button}</arg>
</arguments>
<msg timestamp="20210408 19:07:30.531" level="INFO">JavaWindow("title:=Servicing Groups For:.*").JavaButton("attached text:=OK") is clicked.</msg>
<status status="PASS" starttime="20210408 19:07:30.260" endtime="20210408 19:07:30.531"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_PreferredRemittanceInstructions_Button}</arg>
</arguments>
<msg timestamp="20210408 19:07:31.244" level="INFO">JavaWindow("title:=Deal Admin Agent for.*").JavaButton("attached text:=Preferred Remittance Instructions") is clicked.</msg>
<status status="PASS" starttime="20210408 19:07:30.594" endtime="20210408 19:07:31.245"></status>
</kw>
<kw name="Mx LoanIQ Click Element If Present" library="LoanIQ">
<doc>| Usage |
Click on element identified by `locator` only if that element is present.
It passes if the element is not present.</doc>
<arguments>
<arg>${LIQ_Warning_Yes_Button}</arg>
</arguments>
<msg timestamp="20210408 19:07:37.141" level="INFO">JavaWindow("title:=Warning.*", "displayed:=1").JavaButton("label:=Yes"): is clicked, or skipped if not present.</msg>
<status status="PASS" starttime="20210408 19:07:31.340" endtime="20210408 19:07:37.142"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${PrefferedRemittanceInstructions_AddButton}</arg>
</arguments>
<msg timestamp="20210408 19:07:37.918" level="INFO">JavaWindow("title:=Deal Servicing Group.*").JavaButton("attached text:=Add") is clicked.</msg>
<status status="PASS" starttime="20210408 19:07:37.206" endtime="20210408 19:07:37.919"></status>
</kw>
<kw name="Mx LoanIQ Activate Window" library="LoanIQ">
<doc>| Usage |
To activate existing window if present.</doc>
<arguments>
<arg>${LIQ_PreferredRemittanceInstructions_Window}</arg>
</arguments>
<msg timestamp="20210408 19:07:38.090" level="INFO">Window : JavaWindow("title:=Choose Preferred Remittance Instructions.*") is activated</msg>
<status status="PASS" starttime="20210408 19:07:37.975" endtime="20210408 19:07:38.090"></status>
</kw>
<kw name="Mx LoanIQ Set" library="LoanIQ">
<doc>|Usage|</doc>
<arguments>
<arg>${LIQ_PreferredRemittanceInstructions_All_Checkbox}</arg>
<arg>${ON}</arg>
</arguments>
<msg timestamp="20210408 19:07:38.372" level="INFO">Object = 'JavaWindow("title:=Choose Preferred Remittance Instructions.*").JavaCheckBox("Index:=1")' is set.</msg>
<status status="PASS" starttime="20210408 19:07:38.154" endtime="20210408 19:07:38.373"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_PreferredRemittanceInstructions_Ok_Button}</arg>
</arguments>
<msg timestamp="20210408 19:07:38.702" level="INFO">JavaWindow("title:=Choose Preferred Remittance Instructions.*").JavaButton("attached text:=OK") is clicked.</msg>
<status status="PASS" starttime="20210408 19:07:38.428" endtime="20210408 19:07:38.702"></status>
</kw>
<kw name="Take Screenshot with text into Test Document" library="ReportMaker_Keywords">
<doc>This keyword is used to add screenshot with image filename as description into test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Deal Notebook - Deal Admin Agent - Servicing Group - Remittance Instruction</arg>
</arguments>
<kw name="Take Screenshot" library="Screenshot">
<doc>Takes a screenshot in JPEG format and embeds it into the log file.</doc>
<arguments>
<arg>${imageName}</arg>
</arguments>
<msg timestamp="20210408 19:07:39.017" level="INFO" html="yes">&lt;a href="Results/LoanIQ/TC01%20-%20Validate%20ARR%20Pricing%20Option%20at%20Deal%20Level%20and%20Add%20Libor%20Option___2021-04-08%2019-04-35.729/Deal%20Notebook%20-%20Deal%20Admin%20Agent%20-%20Servicing%20Group%20-%20Remittance%20Instruction_1.jpg"&gt;&lt;img src="Results/LoanIQ/TC01%20-%20Validate%20ARR%20Pricing%20Option%20at%20Deal%20Level%20and%20Add%20Libor%20Option___2021-04-08%2019-04-35.729/Deal%20Notebook%20-%20Deal%20Admin%20Agent%20-%20Servicing%20Group%20-%20Remittance%20Instruction_1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210408 19:07:38.891" endtime="20210408 19:07:39.018"></status>
</kw>
<kw name="Get Latest File" library="ReportMaker">
<arguments>
<arg>${getfilePath}</arg>
</arguments>
<assign>
<var>${imagePath}</var>
</assign>
<msg timestamp="20210408 19:07:39.112" level="INFO">${imagePath} = C:\Git_Evergreen\transform_arr\Results\LoanIQ\TC01 - Validate ARR Pricing Option at Deal Level and Add Libor Option___2021-04-08 19-04-35.729\Deal Notebook - Deal Admin Agent - Servicing Group - Remit...</msg>
<status status="PASS" starttime="20210408 19:07:39.109" endtime="20210408 19:07:39.112"></status>
</kw>
<kw name="Put Screenshot With Text" library="ReportMaker">
<arguments>
<arg>${imagePath}</arg>
<arg>${imageName}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:07:39.166" endtime="20210408 19:07:39.178"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:38.804" endtime="20210408 19:07:39.178"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_ServicingGroupDetails_Ok_Button}</arg>
</arguments>
<msg timestamp="20210408 19:07:39.489" level="INFO">JavaWindow("title:=Deal Servicing Group Details.*").JavaButton("attached text:=OK") is clicked.</msg>
<status status="PASS" starttime="20210408 19:07:39.229" endtime="20210408 19:07:39.489"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_AdminAgent_OK_Button}</arg>
</arguments>
<msg timestamp="20210408 19:07:42.718" level="INFO">JavaWindow("title:=Deal Admin Agent for.*").JavaButton("attached text:=OK") is clicked.</msg>
<status status="PASS" starttime="20210408 19:07:39.550" endtime="20210408 19:07:42.718"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:20.518" endtime="20210408 19:07:42.719"></status>
</kw>
<kw name="Enter Agreement Date and Proposed Commitment Amount" library="Deal_Notebook">
<doc>This keyword populates the Agreement Date and Proposed Commitment Amount.
@author: fmamaril DDMMMYYYY - initial create
@update: ehugo 28MAY2020 - added keyword pre-processing; added screenshot
@update: jloretiz 11FEB2021 - added condition for empty data</doc>
<arguments>
<arg>${Deal_AgreementDate}</arg>
<arg>&amp;{ExcelPath}[Deal_ProposedCmt]</arg>
</arguments>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sDeal_AgreementDate}</arg>
</arguments>
<assign>
<var>${Deal_AgreementDate}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:07:43.036" endtime="20210408 19:07:43.036"></status>
</kw>
<msg timestamp="20210408 19:07:43.036" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:07:43.034" endtime="20210408 19:07:43.036"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:07:43.259" level="INFO">${List_Argument_Excel_Value} = ['26-Oct-2016']</msg>
<status status="PASS" starttime="20210408 19:07:43.259" endtime="20210408 19:07:43.259"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:07:43.313" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:07:43.314" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:07:43.313" endtime="20210408 19:07:43.314"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:07:43.370" level="INFO">${Arg_User_Input} = 26-OCT-2016</msg>
<status status="PASS" starttime="20210408 19:07:43.370" endtime="20210408 19:07:43.371"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:07:43.427" level="INFO">${Arg_User_Input} = 26-OCT-2016</msg>
<status status="PASS" starttime="20210408 19:07:43.426" endtime="20210408 19:07:43.427"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:07:43.483" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:07:43.482" endtime="20210408 19:07:43.483"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:07:43.538" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:07:43.537" endtime="20210408 19:07:43.538"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:07:43.597" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:07:43.597" endtime="20210408 19:07:43.597"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:07:43.652" endtime="20210408 19:07:43.653"></status>
</kw>
<msg timestamp="20210408 19:07:43.653" level="INFO">${Extracted_Argument_Value} = 26-Oct-2016</msg>
<status status="PASS" starttime="20210408 19:07:43.649" endtime="20210408 19:07:43.653"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:43.205" endtime="20210408 19:07:43.653"></status>
</kw>
<msg timestamp="20210408 19:07:43.654" level="INFO">${Extracted_Argument_Value} = 26-Oct-2016</msg>
<status status="PASS" starttime="20210408 19:07:43.097" endtime="20210408 19:07:43.654"></status>
</kw>
<msg timestamp="20210408 19:07:43.654" level="INFO">${Deal_AgreementDate} = 26-Oct-2016</msg>
<status status="PASS" starttime="20210408 19:07:42.981" endtime="20210408 19:07:43.654"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sDeal_ProposedCmt}</arg>
</arguments>
<assign>
<var>${Deal_ProposedCmt}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:07:43.863" endtime="20210408 19:07:43.863"></status>
</kw>
<msg timestamp="20210408 19:07:43.864" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:07:43.861" endtime="20210408 19:07:43.864"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:07:44.077" level="INFO">${List_Argument_Excel_Value} = ['100,000,000.00']</msg>
<status status="PASS" starttime="20210408 19:07:44.076" endtime="20210408 19:07:44.077"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:07:44.131" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:07:44.131" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:07:44.130" endtime="20210408 19:07:44.131"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:07:44.183" level="INFO">${Arg_User_Input} = 100,000,000.00</msg>
<status status="PASS" starttime="20210408 19:07:44.182" endtime="20210408 19:07:44.183"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:07:44.232" level="INFO">${Arg_User_Input} = 100,000,000.00</msg>
<status status="PASS" starttime="20210408 19:07:44.232" endtime="20210408 19:07:44.232"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:07:44.286" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:07:44.285" endtime="20210408 19:07:44.286"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:07:44.448" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:07:44.447" endtime="20210408 19:07:44.448"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:07:44.502" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:07:44.501" endtime="20210408 19:07:44.502"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:07:44.555" endtime="20210408 19:07:44.555"></status>
</kw>
<msg timestamp="20210408 19:07:44.555" level="INFO">${Extracted_Argument_Value} = 100,000,000.00</msg>
<status status="PASS" starttime="20210408 19:07:44.553" endtime="20210408 19:07:44.555"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:44.021" endtime="20210408 19:07:44.556"></status>
</kw>
<msg timestamp="20210408 19:07:44.556" level="INFO">${Extracted_Argument_Value} = 100,000,000.00</msg>
<status status="PASS" starttime="20210408 19:07:43.913" endtime="20210408 19:07:44.556"></status>
</kw>
<msg timestamp="20210408 19:07:44.556" level="INFO">${Deal_ProposedCmt} = 100,000,000.00</msg>
<status status="PASS" starttime="20210408 19:07:43.808" endtime="20210408 19:07:44.556"></status>
</kw>
<kw name="Mx LoanIQ Select Window Tab" library="LoanIQ">
<doc>| Usage |
Used to select the Java window tab</doc>
<arguments>
<arg>${LIQ_DealNotebook_Tab}</arg>
<arg>${TAB_SUMMARY}</arg>
</arguments>
<msg timestamp="20210408 19:07:49.508" level="INFO">Window Tab = 'Summary' is selected from the element = 'JavaWindow("title:=Deal Notebook -.*","displayed:=1").JavaTab("tagname:=TabFolder")'</msg>
<status status="PASS" starttime="20210408 19:07:44.608" endtime="20210408 19:07:49.509"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Deal_ProposedCmt}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Enter</arg>
<arg>${LIQ_ProposedCmt_TextField}</arg>
<arg>${Deal_ProposedCmt}</arg>
</arguments>
<kw name="Mx LoanIQ Enter" library="LoanIQ">
<doc>| Usage |
To enter the data to the element specified by 'locator'.</doc>
<arguments>
<arg>${LIQ_ProposedCmt_TextField}</arg>
<arg>${Deal_ProposedCmt}</arg>
</arguments>
<msg timestamp="20210408 19:07:49.995" level="INFO">Input= 100,000,000.00 is entered in element= JavaWindow("title:=Deal Notebook.*").JavaEdit("attached text:=Proposed Cmt:")</msg>
<status status="PASS" starttime="20210408 19:07:49.562" endtime="20210408 19:07:49.996"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:49.561" endtime="20210408 19:07:49.996"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Deal_AgreementDate}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Enter</arg>
<arg>${LIQ_DealSummaryAgreementDate_Textfield}</arg>
<arg>${Deal_AgreementDate}</arg>
</arguments>
<kw name="Mx LoanIQ Enter" library="LoanIQ">
<doc>| Usage |
To enter the data to the element specified by 'locator'.</doc>
<arguments>
<arg>${LIQ_DealSummaryAgreementDate_Textfield}</arg>
<arg>${Deal_AgreementDate}</arg>
</arguments>
<msg timestamp="20210408 19:07:50.518" level="INFO">Input= 26-Oct-2016 is entered in element= JavaWindow("title:=Deal Notebook.*").JavaEdit("attached text:=Agreement Date:")</msg>
<status status="PASS" starttime="20210408 19:07:50.058" endtime="20210408 19:07:50.518"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:50.056" endtime="20210408 19:07:50.518"></status>
</kw>
<kw name="Validate Agreement and Proposed Commitment" library="Deal_Notebook">
<tags>
<tag>Validation</tag>
</tags>
<doc>This keyword validates Agreement and Proposed Commitment input
@author: fmamaril
@author: ghabal: added write scripts for suceeeding scripts for Scenario 4 (@)
@author: bernchua 20AUG2019 Delete writing of data to Excel</doc>
<arguments>
<arg>${Deal_AgreementDate}</arg>
<arg>${Deal_ProposedCmt}</arg>
</arguments>
<kw name="Validate Loan IQ Details" library="GenericKeywords">
<doc>This keyword validates the displayed Loan IQ details in the application vs the data in excel
@author: jcdelacruz/ghabal
@update: bernchua Added property 'value' in Mx LoanIQ Get Data keyword.
@update: jdelacru 13DEC2019 - Changed the argument in getting value for UI</doc>
<arguments>
<arg>${Deal_AgreementDate}</arg>
<arg>${LIQ_DealSummaryAgreementDate_Textfield}</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Get Data</arg>
<arg>${Value_fromUI}</arg>
<arg>value%Value_fromUI</arg>
</arguments>
<assign>
<var>${Value_fromUI}</var>
</assign>
<kw name="Mx LoanIQ Get Data" library="LoanIQ">
<doc>| Usage |
Used to returns the text of object identified by `locator'</doc>
<arguments>
<arg>${Value_fromUI}</arg>
<arg>value%Value_fromUI</arg>
</arguments>
<msg timestamp="20210408 19:07:50.887" level="INFO">Fetching value from object: JavaWindow("title:=Deal Notebook.*").JavaEdit("attached text:=Agreement Date:") 
 Value = : 26-Oct-2016</msg>
<msg timestamp="20210408 19:07:50.887" level="INFO">${Value_fromUI} = 26-Oct-2016</msg>
<status status="PASS" starttime="20210408 19:07:50.682" endtime="20210408 19:07:50.888"></status>
</kw>
<msg timestamp="20210408 19:07:50.888" level="INFO">${Value_fromUI} = 26-Oct-2016</msg>
<status status="PASS" starttime="20210408 19:07:50.679" endtime="20210408 19:07:50.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Value_fromExcel} - This is the data retrieved from Excel Sheet</arg>
</arguments>
<msg timestamp="20210408 19:07:50.939" level="INFO">26-Oct-2016 - This is the data retrieved from Excel Sheet</msg>
<status status="PASS" starttime="20210408 19:07:50.939" endtime="20210408 19:07:50.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Value_fromUI} - This is the data displayed in the UI/application</arg>
</arguments>
<msg timestamp="20210408 19:07:50.992" level="INFO">26-Oct-2016 - This is the data displayed in the UI/application</msg>
<status status="PASS" starttime="20210408 19:07:50.992" endtime="20210408 19:07:50.992"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:07:51.051" endtime="20210408 19:07:51.052"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:51.050" endtime="20210408 19:07:51.052"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Should Be Equal</arg>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:07:51.106" endtime="20210408 19:07:51.107"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:51.105" endtime="20210408 19:07:51.107"></status>
</kw>
<msg timestamp="20210408 19:07:51.107" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:07:51.104" endtime="20210408 19:07:51.107"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>"${Value_fromExcel}" - data retrieved from Excel Sheet MATCHES "${Value_fromUI}" - the data displayed in the UI/application</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>"${Value_fromExcel}" - data retrieved from Excel Sheet DOES NOT MATCH "${Value_fromUI}" - the data displayed in the UI/application</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"${Value_fromExcel}" - data retrieved from Excel Sheet MATCHES "${Value_fromUI}" - the data displayed in the UI/application</arg>
</arguments>
<msg timestamp="20210408 19:07:51.162" level="INFO">"26-Oct-2016" - data retrieved from Excel Sheet MATCHES "26-Oct-2016" - the data displayed in the UI/application</msg>
<status status="PASS" starttime="20210408 19:07:51.162" endtime="20210408 19:07:51.162"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:51.160" endtime="20210408 19:07:51.163"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:50.627" endtime="20210408 19:07:51.163"></status>
</kw>
<kw name="Validate Loan IQ Details" library="GenericKeywords">
<doc>This keyword validates the displayed Loan IQ details in the application vs the data in excel
@author: jcdelacruz/ghabal
@update: bernchua Added property 'value' in Mx LoanIQ Get Data keyword.
@update: jdelacru 13DEC2019 - Changed the argument in getting value for UI</doc>
<arguments>
<arg>${Deal_ProposedCmt}</arg>
<arg>${LIQ_ProposedCmt_TextField}</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Get Data</arg>
<arg>${Value_fromUI}</arg>
<arg>value%Value_fromUI</arg>
</arguments>
<assign>
<var>${Value_fromUI}</var>
</assign>
<kw name="Mx LoanIQ Get Data" library="LoanIQ">
<doc>| Usage |
Used to returns the text of object identified by `locator'</doc>
<arguments>
<arg>${Value_fromUI}</arg>
<arg>value%Value_fromUI</arg>
</arguments>
<msg timestamp="20210408 19:07:51.487" level="INFO">Fetching value from object: JavaWindow("title:=Deal Notebook.*").JavaEdit("attached text:=Proposed Cmt:") 
 Value = : 100,000,000.00</msg>
<msg timestamp="20210408 19:07:51.487" level="INFO">${Value_fromUI} = 100,000,000.00</msg>
<status status="PASS" starttime="20210408 19:07:51.270" endtime="20210408 19:07:51.488"></status>
</kw>
<msg timestamp="20210408 19:07:51.488" level="INFO">${Value_fromUI} = 100,000,000.00</msg>
<status status="PASS" starttime="20210408 19:07:51.268" endtime="20210408 19:07:51.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Value_fromExcel} - This is the data retrieved from Excel Sheet</arg>
</arguments>
<msg timestamp="20210408 19:07:51.539" level="INFO">100,000,000.00 - This is the data retrieved from Excel Sheet</msg>
<status status="PASS" starttime="20210408 19:07:51.538" endtime="20210408 19:07:51.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Value_fromUI} - This is the data displayed in the UI/application</arg>
</arguments>
<msg timestamp="20210408 19:07:51.592" level="INFO">100,000,000.00 - This is the data displayed in the UI/application</msg>
<status status="PASS" starttime="20210408 19:07:51.591" endtime="20210408 19:07:51.592"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:07:51.643" endtime="20210408 19:07:51.644"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:51.642" endtime="20210408 19:07:51.644"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Should Be Equal</arg>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:07:51.699" endtime="20210408 19:07:51.700"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:51.698" endtime="20210408 19:07:51.700"></status>
</kw>
<msg timestamp="20210408 19:07:51.700" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:07:51.696" endtime="20210408 19:07:51.700"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>"${Value_fromExcel}" - data retrieved from Excel Sheet MATCHES "${Value_fromUI}" - the data displayed in the UI/application</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>"${Value_fromExcel}" - data retrieved from Excel Sheet DOES NOT MATCH "${Value_fromUI}" - the data displayed in the UI/application</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"${Value_fromExcel}" - data retrieved from Excel Sheet MATCHES "${Value_fromUI}" - the data displayed in the UI/application</arg>
</arguments>
<msg timestamp="20210408 19:07:51.752" level="INFO">"100,000,000.00" - data retrieved from Excel Sheet MATCHES "100,000,000.00" - the data displayed in the UI/application</msg>
<status status="PASS" starttime="20210408 19:07:51.751" endtime="20210408 19:07:51.752"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:51.750" endtime="20210408 19:07:51.752"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:51.216" endtime="20210408 19:07:51.752"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:50.573" endtime="20210408 19:07:51.753"></status>
</kw>
<kw name="Take Screenshot with text into Test Document" library="ReportMaker_Keywords">
<doc>This keyword is used to add screenshot with image filename as description into test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Deal Notebook - Agreement Date - Proposed Cmt Amount</arg>
</arguments>
<kw name="Take Screenshot" library="Screenshot">
<doc>Takes a screenshot in JPEG format and embeds it into the log file.</doc>
<arguments>
<arg>${imageName}</arg>
</arguments>
<msg timestamp="20210408 19:07:51.948" level="INFO" html="yes">&lt;a href="Results/LoanIQ/TC01%20-%20Validate%20ARR%20Pricing%20Option%20at%20Deal%20Level%20and%20Add%20Libor%20Option___2021-04-08%2019-04-35.729/Deal%20Notebook%20-%20Agreement%20Date%20-%20Proposed%20Cmt%20Amount_1.jpg"&gt;&lt;img src="Results/LoanIQ/TC01%20-%20Validate%20ARR%20Pricing%20Option%20at%20Deal%20Level%20and%20Add%20Libor%20Option___2021-04-08%2019-04-35.729/Deal%20Notebook%20-%20Agreement%20Date%20-%20Proposed%20Cmt%20Amount_1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210408 19:07:51.854" endtime="20210408 19:07:51.949"></status>
</kw>
<kw name="Get Latest File" library="ReportMaker">
<arguments>
<arg>${getfilePath}</arg>
</arguments>
<assign>
<var>${imagePath}</var>
</assign>
<msg timestamp="20210408 19:07:52.001" level="INFO">${imagePath} = C:\Git_Evergreen\transform_arr\Results\LoanIQ\TC01 - Validate ARR Pricing Option at Deal Level and Add Libor Option___2021-04-08 19-04-35.729\Deal Notebook - Agreement Date - Proposed Cmt Amount_1.jpg</msg>
<status status="PASS" starttime="20210408 19:07:52.000" endtime="20210408 19:07:52.001"></status>
</kw>
<kw name="Put Screenshot With Text" library="ReportMaker">
<arguments>
<arg>${imagePath}</arg>
<arg>${imageName}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:07:52.053" endtime="20210408 19:07:52.066"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:51.803" endtime="20210408 19:07:52.066"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:42.818" endtime="20210408 19:07:52.066"></status>
</kw>
<kw name="Unrestrict Deal" library="Deal_Notebook">
<doc>This keyword unrestricts a deal.
@author: fmamaril
@update: jloretiz 03FEB2021 - Update Click Element If Present Keyword</doc>
<kw name="Mx LoanIQ Activate Window" library="LoanIQ">
<doc>| Usage |
To activate existing window if present.</doc>
<arguments>
<arg>${LIQ_DealNotebook_Window}</arg>
</arguments>
<msg timestamp="20210408 19:07:52.255" level="INFO">Window : JavaWindow("title:=Deal Notebook -.*","displayed:=1") is activated</msg>
<status status="PASS" starttime="20210408 19:07:52.169" endtime="20210408 19:07:52.255"></status>
</kw>
<kw name="Mx LoanIQ Select" library="LoanIQ">
<doc>| Usage |
Used to select the element.</doc>
<arguments>
<arg>${LIQ_DealNotebook_DistributionRestrict_Menu}</arg>
</arguments>
<msg timestamp="20210408 19:07:52.874" level="INFO">JavaWindow("title:=Deal Notebook.*").JavaMenu("label:=Distribution").JavaMenu("label:=Unrestrict Deal") is selected with data: NONE</msg>
<status status="PASS" starttime="20210408 19:07:52.313" endtime="20210408 19:07:52.875"></status>
</kw>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${LIQ_Warning_MessageBox}</arg>
<arg>value%Once the deal is unrestricted, it cannot be restricted again. Are you sure you want to unrestrict this deal?</arg>
</arguments>
<msg timestamp="20210408 19:07:53.102" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:07:52.941" endtime="20210408 19:07:53.102"></status>
</kw>
<kw name="Mx LoanIQ Click Element If Present" library="LoanIQ">
<doc>| Usage |
Click on element identified by `locator` only if that element is present.
It passes if the element is not present.</doc>
<arguments>
<arg>${LIQ_Warning_Yes_Button}</arg>
</arguments>
<msg timestamp="20210408 19:07:57.518" level="INFO">JavaWindow("title:=Warning.*", "displayed:=1").JavaButton("label:=Yes"): is clicked, or skipped if not present.</msg>
<status status="PASS" starttime="20210408 19:07:53.165" endtime="20210408 19:07:57.519"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_DealNotebook_Restrict_Label}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<assign>
<var>${Status}</var>
</assign>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_DealNotebook_Restrict_Label}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:08:03.129" level="INFO" html="yes">&lt;a href="screenshot_29.jpg"&gt;&lt;img src="screenshot_29.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20210408 19:08:03.129" level="INFO">Keyword Details-------------------------------------------------
Action = VERIFYOBJECTEXIST
Input = None
Object = JavaWindow("title:=Deal Notebook.*").JavaStaticText("text:=Restricted Deal")
Verification Data = Y</msg>
<msg timestamp="20210408 19:08:03.130" level="FAIL">Error Number: -110037 Error Description: Object doesnot Exist. JavaVerifyObjectExist. Retried for:  0 times. </msg>
<status status="FAIL" starttime="20210408 19:07:57.574" endtime="20210408 19:08:03.200"></status>
</kw>
<msg timestamp="20210408 19:08:03.201" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20210408 19:07:57.571" endtime="20210408 19:08:03.201"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Not Be True</arg>
<arg>${Status}==True</arg>
</arguments>
<kw name="Should Not Be True" library="BuiltIn">
<doc>Fails if the given condition is true.</doc>
<arguments>
<arg>${Status}==True</arg>
</arguments>
<status status="PASS" starttime="20210408 19:08:03.259" endtime="20210408 19:08:03.260"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:03.257" endtime="20210408 19:08:03.261"></status>
</kw>
<kw name="Take Screenshot with text into Test Document" library="ReportMaker_Keywords">
<doc>This keyword is used to add screenshot with image filename as description into test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Unrestrict Deal</arg>
</arguments>
<kw name="Take Screenshot" library="Screenshot">
<doc>Takes a screenshot in JPEG format and embeds it into the log file.</doc>
<arguments>
<arg>${imageName}</arg>
</arguments>
<msg timestamp="20210408 19:08:03.478" level="INFO" html="yes">&lt;a href="Results/LoanIQ/TC01%20-%20Validate%20ARR%20Pricing%20Option%20at%20Deal%20Level%20and%20Add%20Libor%20Option___2021-04-08%2019-04-35.729/Unrestrict%20Deal_1.jpg"&gt;&lt;img src="Results/LoanIQ/TC01%20-%20Validate%20ARR%20Pricing%20Option%20at%20Deal%20Level%20and%20Add%20Libor%20Option___2021-04-08%2019-04-35.729/Unrestrict%20Deal_1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210408 19:08:03.390" endtime="20210408 19:08:03.479"></status>
</kw>
<kw name="Get Latest File" library="ReportMaker">
<arguments>
<arg>${getfilePath}</arg>
</arguments>
<assign>
<var>${imagePath}</var>
</assign>
<msg timestamp="20210408 19:08:03.543" level="INFO">${imagePath} = C:\Git_Evergreen\transform_arr\Results\LoanIQ\TC01 - Validate ARR Pricing Option at Deal Level and Add Libor Option___2021-04-08 19-04-35.729\Unrestrict Deal_1.jpg</msg>
<status status="PASS" starttime="20210408 19:08:03.541" endtime="20210408 19:08:03.543"></status>
</kw>
<kw name="Put Screenshot With Text" library="ReportMaker">
<arguments>
<arg>${imagePath}</arg>
<arg>${imageName}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:08:03.613" endtime="20210408 19:08:03.626"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:03.317" endtime="20210408 19:08:03.626"></status>
</kw>
<status status="PASS" starttime="20210408 19:07:52.117" endtime="20210408 19:08:03.626"></status>
</kw>
<status status="PASS" starttime="20210408 19:06:42.327" endtime="20210408 19:08:03.626"></status>
</kw>
<msg timestamp="20210408 19:08:03.627" level="INFO">Mx Execute Template With Multiple Data keyword passed for all the data</msg>
<status status="PASS" starttime="20210408 19:06:42.298" endtime="20210408 19:08:03.627"></status>
</kw>
<kw name="Mx Execute Template With Multiple Data" library="GenericLib">
<doc>| Usage |
 This keyword is used to run template with multiple data.</doc>
<arguments>
<arg>Input Deal Personnel Tab Details</arg>
<arg>${ExcelPath}</arg>
<arg>${Deal_1}</arg>
<arg>CRED01_DealSetup</arg>
</arguments>
<kw name="Input Deal Personnel Tab Details" library="CRED01_DealSetUpWithoutOrigination">
<doc>This keyword is used to Setup Deal Personnel Codes Tab Details
@author: hstone 24NOV2020 - initial create</doc>
<arguments>
<arg>OrderedDict([('rowid', '1'), ('Test_Case', 'ARR_Scenario3'), ('Deal_NamePrefix', 'ARR_LIBORSC3'), ('Deal_AliasPrefix', 'SC3'), ('Deal_Name', 'ARR_LIBORSC308042021190438PNT'), ('Deal_Alias', 'SC308042021190441XJG'), ('Deal_EffectiveDate', '26-Oct-2016'), ('Deal_AgreementDate', '26-Oct-2016'), ('Deal_AdjustmentSettings', 'Present'), ('Deal_AgreementDateAdjustment', '30'), ('Deal_EffectiveDateAdjustment', '30'), ('Deal_Currency', 'USD'), ('Deal_DepartmentCode', 'NAM'), ('Deal_Department', 'North America'), ('Deal_SalesGroup', 'Sales Group 1'), ('Deal_AternateID', ''), ('Deal_ANSIID', ''), ('Deal_IsSoleLender', 'OFF'), ('Deal_ClassificationCode', 'GCP'), ('Deal_ClassificationDesc', 'General Corp Purpose'), ('Deal_AdminAgent', 'BNS CANADA CORPORATE BANKING'), ('Deal_AdminAgentLocation', 'Toronto, Canada'), ('DealAdminAgent_SGAlias', 'BC'), ('DealAdminAgent_PreferredRI', ''), ('DealAdminAgent_ServicingGroup', 'CANADA CORPORATE BANKING'), ('Deal_ProposedCmt', '100,000,000.00'), ('Deal_EarlyDiscussion', 'OFF'), ('Deal_ExpenseCode', '0394703947'), ('Deal_HolidayCalendarRemove', 'Canadian'), ('Deal_HolidayCalendarAdd', 'US Holiday Calendar (New York)'), ('Deal_IsPricingOptionARR', 'TRUE'), ('Deal_PricingOption_CCY', ''), ('Deal_PricingOption', 'SOFR Daily Compounding W OPS Not Overridable'), ('PricingOption_IsARR', 'False'), ('PricingOption_InitialFractionRate', 'Actual'), ('PricingOption_RoundingDecimal', 'Actual'), ('PricingOption_NonBusinessDayRule', 'Modified Following Business Day'), ('PricingOption_BillNoOfDays', '0'), ('PricingOption_MatrixChangeAppMthd', 'Effective date of change'), ('PricingOption_RateChangeAppMthd', 'Effective date of change'), ('PricingOption_RACInitialFractionRate', ''), ('PricingOption_RACRoundingDecimal', ''), ('PricingOption_RACRoundingMethod', ''), ('PricingOption_PercentOfRateFormulaUsage', '(Base + Spread + RAC) * PCT'), ('PricingOption_RepricingNonBusinessDayRule', 'Modified Following Business Day'), ('PricingOption_FeeOnLenderShareFunding', ''), ('PricingOption_InterestDueUponPrincipalPayment', 'OFF'), ('PricingOption_InterestDueUponRepricing', ''), ('PricingOption_ReferenceBanksApply', 'OFF'), ('PricingOption_IntentNoticeDaysInAdvance', '3'), ('PricingOption_IntentNoticeTime', '12'), ('PricingOption_12HrPeriodOption', ''), ('PricingOption_MaximumDrawAmount', ''), ('PricingOption_MinimumDrawAmount', ''), ('PricingOption_MinimumPaymentAmount', ''), ('PricingOption_MinimumAmountMultiples', ''), ('PricingOption_BillBorrower', 'YES'), ('PricingOption_ARRObservationPeriod', 'ON'), ('PricingOption_LookbackDays', '5'), ('PricingOption_LockoutDays', '0'), ('PricingOption_RateBasis', 'Actual/360'), ('PricingOption_CalculationMethod', 'Daily Rate With Compounding')])</arg>
</arguments>
<kw name="Report Sub Header" library="ReportMaker_Keywords">
<doc>This keyword is used to add given argument as sub header in test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Setup Deal Personnel Codes Tab Details</arg>
</arguments>
<kw name="Set Report Sub Header" library="ReportMaker">
<arguments>
<arg>${SubHeader}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:08:03.816" endtime="20210408 19:08:03.819"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:03.762" endtime="20210408 19:08:03.819"></status>
</kw>
<kw name="Check/Uncheck Early Discussion Deal Checkbox" library="Deal_Notebook">
<doc>This keyword unticks the Early Discussion Deal Checkbox.
@author: fmamaril
@update: ehugo 28MAY2020 - added screenshot</doc>
<arguments>
<arg>&amp;{ExcelPath}[Deal_EarlyDiscussion]</arg>
</arguments>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sIsCheck}</arg>
</arguments>
<assign>
<var>${IsCheck}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:08:04.191" endtime="20210408 19:08:04.192"></status>
</kw>
<msg timestamp="20210408 19:08:04.192" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:08:04.190" endtime="20210408 19:08:04.192"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:08:04.419" level="INFO">${List_Argument_Excel_Value} = ['OFF']</msg>
<status status="PASS" starttime="20210408 19:08:04.419" endtime="20210408 19:08:04.420"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:08:04.472" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:08:04.472" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:08:04.471" endtime="20210408 19:08:04.472"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:08:04.528" level="INFO">${Arg_User_Input} = OFF</msg>
<status status="PASS" starttime="20210408 19:08:04.527" endtime="20210408 19:08:04.528"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:08:04.581" level="INFO">${Arg_User_Input} = OFF</msg>
<status status="PASS" starttime="20210408 19:08:04.580" endtime="20210408 19:08:04.581"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:08:04.632" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:08:04.631" endtime="20210408 19:08:04.632"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:08:04.687" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:08:04.686" endtime="20210408 19:08:04.687"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:08:04.740" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:08:04.739" endtime="20210408 19:08:04.740"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:08:04.792" endtime="20210408 19:08:04.793"></status>
</kw>
<msg timestamp="20210408 19:08:04.793" level="INFO">${Extracted_Argument_Value} = OFF</msg>
<status status="PASS" starttime="20210408 19:08:04.790" endtime="20210408 19:08:04.794"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:04.361" endtime="20210408 19:08:04.794"></status>
</kw>
<msg timestamp="20210408 19:08:04.794" level="INFO">${Extracted_Argument_Value} = OFF</msg>
<status status="PASS" starttime="20210408 19:08:04.245" endtime="20210408 19:08:04.794"></status>
</kw>
<msg timestamp="20210408 19:08:04.795" level="INFO">${IsCheck} = OFF</msg>
<status status="PASS" starttime="20210408 19:08:04.137" endtime="20210408 19:08:04.795"></status>
</kw>
<kw name="Mx LoanIQ Select Window Tab" library="LoanIQ">
<doc>| Usage |
Used to select the Java window tab</doc>
<arguments>
<arg>${LIQ_DealNotebook_Tab}</arg>
<arg>${TAB_PERSONNEL}</arg>
</arguments>
<msg timestamp="20210408 19:08:09.716" level="INFO">Window Tab = 'Personnel' is selected from the element = 'JavaWindow("title:=Deal Notebook -.*","displayed:=1").JavaTab("tagname:=TabFolder")'</msg>
<status status="PASS" starttime="20210408 19:08:04.848" endtime="20210408 19:08:09.716"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${sIsCheck}'=='${OFF}'</arg>
<arg>Mx LoanIQ Set</arg>
<arg>${LIQ_DealNotebook_EarlyDiscussionDeal_Checkbox}</arg>
<arg>${OFF}</arg>
<arg>ELSE</arg>
<arg>Mx LoanIQ Set</arg>
<arg>${LIQ_DealNotebook_EarlyDiscussionDeal_Checkbox}</arg>
<arg>${ON}</arg>
</arguments>
<kw name="Mx LoanIQ Set" library="LoanIQ">
<doc>|Usage|</doc>
<arguments>
<arg>${LIQ_DealNotebook_EarlyDiscussionDeal_Checkbox}</arg>
<arg>${OFF}</arg>
</arguments>
<msg timestamp="20210408 19:08:10.192" level="INFO">Object = 'JavaWindow("title:=Deal Notebook.*").JavaCheckBox("attached text:=Early Discussion Deal")' is unset.</msg>
<status status="PASS" starttime="20210408 19:08:09.818" endtime="20210408 19:08:10.192"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:09.814" endtime="20210408 19:08:10.193"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${sIsCheck}'=='${OFF}'</arg>
<arg>Validate if Element is Unchecked</arg>
<arg>${LIQ_DealNotebook_EarlyDiscussionDeal_Checkbox}</arg>
<arg>Early Discussion Deal</arg>
</arguments>
<kw name="Validate if Element is Unchecked" library="GenericKeywords">
<doc>This keyword validates if Element is unchecked
@author: ghabal
@update: hstone 02SEP2020 - Optimized Keyword
- Added Failure Log</doc>
<arguments>
<arg>${LIQ_DealNotebook_EarlyDiscussionDeal_Checkbox}</arg>
<arg>Early Discussion Deal</arg>
</arguments>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>value%0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>value%0</arg>
</arguments>
<msg timestamp="20210408 19:08:10.694" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:08:10.308" endtime="20210408 19:08:10.695"></status>
</kw>
<msg timestamp="20210408 19:08:10.695" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:08:10.306" endtime="20210408 19:08:10.695"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed unchecked</arg>
<arg>ELSE</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Fail</arg>
<arg>'${Field_Label}' element is confirmed checked</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>'${Field_Label}' element is confirmed unchecked</arg>
</arguments>
<msg timestamp="20210408 19:08:10.748" level="INFO">'Early Discussion Deal' element is confirmed unchecked</msg>
<status status="PASS" starttime="20210408 19:08:10.747" endtime="20210408 19:08:10.748"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:10.746" endtime="20210408 19:08:10.748"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:10.250" endtime="20210408 19:08:10.748"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:10.249" endtime="20210408 19:08:10.748"></status>
</kw>
<kw name="Take Screenshot with text into Test Document" library="ReportMaker_Keywords">
<doc>This keyword is used to add screenshot with image filename as description into test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Deal Notebook - Personnel Tab - Early Discussion Deal</arg>
</arguments>
<kw name="Take Screenshot" library="Screenshot">
<doc>Takes a screenshot in JPEG format and embeds it into the log file.</doc>
<arguments>
<arg>${imageName}</arg>
</arguments>
<msg timestamp="20210408 19:08:10.955" level="INFO" html="yes">&lt;a href="Results/LoanIQ/TC01%20-%20Validate%20ARR%20Pricing%20Option%20at%20Deal%20Level%20and%20Add%20Libor%20Option___2021-04-08%2019-04-35.729/Deal%20Notebook%20-%20Personnel%20Tab%20-%20Early%20Discussion%20Deal_1.jpg"&gt;&lt;img src="Results/LoanIQ/TC01%20-%20Validate%20ARR%20Pricing%20Option%20at%20Deal%20Level%20and%20Add%20Libor%20Option___2021-04-08%2019-04-35.729/Deal%20Notebook%20-%20Personnel%20Tab%20-%20Early%20Discussion%20Deal_1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210408 19:08:10.861" endtime="20210408 19:08:10.956"></status>
</kw>
<kw name="Get Latest File" library="ReportMaker">
<arguments>
<arg>${getfilePath}</arg>
</arguments>
<assign>
<var>${imagePath}</var>
</assign>
<msg timestamp="20210408 19:08:11.010" level="INFO">${imagePath} = C:\Git_Evergreen\transform_arr\Results\LoanIQ\TC01 - Validate ARR Pricing Option at Deal Level and Add Libor Option___2021-04-08 19-04-35.729\Deal Notebook - Personnel Tab - Early Discussion Deal_1.jp...</msg>
<status status="PASS" starttime="20210408 19:08:11.008" endtime="20210408 19:08:11.010"></status>
</kw>
<kw name="Put Screenshot With Text" library="ReportMaker">
<arguments>
<arg>${imagePath}</arg>
<arg>${imageName}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:08:11.071" endtime="20210408 19:08:11.084"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:10.808" endtime="20210408 19:08:11.084"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:03.869" endtime="20210408 19:08:11.085"></status>
</kw>
<kw name="Enter Department on Personel Tab" library="Deal_Notebook">
<doc>This keyword enters the Department on Personeel Tab.
@author: fmamaril DDMMMYYYY - initial create
@update: ehugo 28MAY2020 - added keyword pre-processing; added screenshot
@update: jloretiz 11FEB2021 - added condition for empty data</doc>
<arguments>
<arg>&amp;{ExcelPath}[Deal_DepartmentCode]</arg>
<arg>&amp;{ExcelPath}[Deal_Department]</arg>
</arguments>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sDepartmentCode}</arg>
</arguments>
<assign>
<var>${DepartmentCode}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:08:11.371" endtime="20210408 19:08:11.371"></status>
</kw>
<msg timestamp="20210408 19:08:11.372" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:08:11.369" endtime="20210408 19:08:11.372"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:08:11.595" level="INFO">${List_Argument_Excel_Value} = ['NAM']</msg>
<status status="PASS" starttime="20210408 19:08:11.594" endtime="20210408 19:08:11.595"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:08:11.646" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:08:11.646" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:08:11.646" endtime="20210408 19:08:11.647"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:08:11.697" level="INFO">${Arg_User_Input} = NAM</msg>
<status status="PASS" starttime="20210408 19:08:11.697" endtime="20210408 19:08:11.698"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:08:11.750" level="INFO">${Arg_User_Input} = NAM</msg>
<status status="PASS" starttime="20210408 19:08:11.750" endtime="20210408 19:08:11.750"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:08:11.803" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:08:11.802" endtime="20210408 19:08:11.803"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:08:11.855" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:08:11.854" endtime="20210408 19:08:11.855"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:08:11.905" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:08:11.904" endtime="20210408 19:08:11.905"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:08:11.958" endtime="20210408 19:08:11.959"></status>
</kw>
<msg timestamp="20210408 19:08:11.959" level="INFO">${Extracted_Argument_Value} = NAM</msg>
<status status="PASS" starttime="20210408 19:08:11.956" endtime="20210408 19:08:11.959"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:11.524" endtime="20210408 19:08:11.960"></status>
</kw>
<msg timestamp="20210408 19:08:11.960" level="INFO">${Extracted_Argument_Value} = NAM</msg>
<status status="PASS" starttime="20210408 19:08:11.421" endtime="20210408 19:08:11.960"></status>
</kw>
<msg timestamp="20210408 19:08:11.960" level="INFO">${DepartmentCode} = NAM</msg>
<status status="PASS" starttime="20210408 19:08:11.312" endtime="20210408 19:08:11.960"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sDepartment}</arg>
</arguments>
<assign>
<var>${Department}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:08:12.294" endtime="20210408 19:08:12.295"></status>
</kw>
<msg timestamp="20210408 19:08:12.295" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:08:12.293" endtime="20210408 19:08:12.295"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:08:12.498" level="INFO">${List_Argument_Excel_Value} = ['North America']</msg>
<status status="PASS" starttime="20210408 19:08:12.497" endtime="20210408 19:08:12.498"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:08:12.550" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:08:12.550" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:08:12.549" endtime="20210408 19:08:12.550"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:08:12.601" level="INFO">${Arg_User_Input} = NORTH AMERICA</msg>
<status status="PASS" starttime="20210408 19:08:12.600" endtime="20210408 19:08:12.601"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:08:12.653" level="INFO">${Arg_User_Input} = NORTH AMERICA</msg>
<status status="PASS" starttime="20210408 19:08:12.652" endtime="20210408 19:08:12.653"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:08:12.704" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:08:12.703" endtime="20210408 19:08:12.704"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:08:12.755" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:08:12.754" endtime="20210408 19:08:12.755"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:08:12.807" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:08:12.806" endtime="20210408 19:08:12.807"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:08:12.888" endtime="20210408 19:08:12.888"></status>
</kw>
<msg timestamp="20210408 19:08:12.888" level="INFO">${Extracted_Argument_Value} = North America</msg>
<status status="PASS" starttime="20210408 19:08:12.885" endtime="20210408 19:08:12.888"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:12.446" endtime="20210408 19:08:12.889"></status>
</kw>
<msg timestamp="20210408 19:08:12.889" level="INFO">${Extracted_Argument_Value} = North America</msg>
<status status="PASS" starttime="20210408 19:08:12.345" endtime="20210408 19:08:12.889"></status>
</kw>
<msg timestamp="20210408 19:08:12.889" level="INFO">${Department} = North America</msg>
<status status="PASS" starttime="20210408 19:08:12.237" endtime="20210408 19:08:12.889"></status>
</kw>
<kw name="Mx LoanIQ Select Window Tab" library="LoanIQ">
<doc>| Usage |
Used to select the Java window tab</doc>
<arguments>
<arg>${LIQ_DealNotebook_Tab}</arg>
<arg>${TAB_PERSONNEL}</arg>
</arguments>
<msg timestamp="20210408 19:08:17.697" level="INFO">Window Tab = 'Personnel' is selected from the element = 'JavaWindow("title:=Deal Notebook -.*","displayed:=1").JavaTab("tagname:=TabFolder")'</msg>
<status status="PASS" starttime="20210408 19:08:12.958" endtime="20210408 19:08:17.697"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_DealPersonnel_Department_Button}</arg>
</arguments>
<msg timestamp="20210408 19:08:18.581" level="INFO">JavaWindow("title:=Deal Notebook.*").JavaButton("text:=D&amp;epartment") is clicked.</msg>
<status status="PASS" starttime="20210408 19:08:17.767" endtime="20210408 19:08:18.581"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${DepartmentCode}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Select String</arg>
<arg>${LIQ_DepartmentSelector_Javatree}</arg>
<arg>${DepartmentCode}</arg>
</arguments>
<kw name="Mx LoanIQ Select String" library="LoanIQ">
<doc>| Usage |
Used to select the given string in JavaTree</doc>
<arguments>
<arg>${LIQ_DepartmentSelector_Javatree}</arg>
<arg>${DepartmentCode}</arg>
</arguments>
<msg timestamp="20210408 19:08:21.180" level="INFO">Selected 'NAM' from 'JavaWindow("title:=Department Selector").JavaTree("tagname:=Search by code:")' object.</msg>
<status status="PASS" starttime="20210408 19:08:18.677" endtime="20210408 19:08:21.180"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:18.675" endtime="20210408 19:08:21.181"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_DepartmentSelector_OK_Button}</arg>
</arguments>
<msg timestamp="20210408 19:08:21.428" level="INFO">JavaWindow("title:=Department Selector").JavaButton("attached text:=OK") is clicked.</msg>
<status status="PASS" starttime="20210408 19:08:21.238" endtime="20210408 19:08:21.428"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify If Text Value Exist in Textfield on Page</arg>
<arg>Deal Notebook</arg>
<arg>${Department}</arg>
</arguments>
<kw name="Verify If Text Value Exist in Textfield on Page" library="GenericKeywords">
<doc>This keyword verifies if static object exist in page
@author: fmamaril
&lt;update&gt; bernchua: Added "displayed:=1" property in JavaWindow locator.</doc>
<arguments>
<arg>Deal Notebook</arg>
<arg>${Department}</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>JavaWindow("title:=.*${WindowName}.*","displayed:=1").JavaEdit("value:=${Text to Validate}")</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>JavaWindow("title:=.*${WindowName}.*","displayed:=1").JavaEdit("value:=${Text to Validate}")</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:08:21.773" level="INFO">Locator = 'JavaWindow("title:=.*Deal Notebook.*","displayed:=1").JavaEdit("value:=North America")' exists.</msg>
<status status="PASS" starttime="20210408 19:08:21.604" endtime="20210408 19:08:21.774"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:21.602" endtime="20210408 19:08:21.774"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>JavaWindow("title:=.*${WindowName}.*","displayed:=1").JavaEdit("value:=${Text to Validate}")</arg>
<arg>Processtimeout=5</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>JavaWindow("title:=.*${WindowName}.*","displayed:=1").JavaEdit("value:=${Text to Validate}")</arg>
<arg>Processtimeout=5</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>JavaWindow("title:=.*${WindowName}.*","displayed:=1").JavaEdit("value:=${Text to Validate}")</arg>
<arg>Processtimeout=5</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:08:22.005" level="INFO">Locator = 'JavaWindow("title:=.*Deal Notebook.*","displayed:=1").JavaEdit("value:=North America")' exists.</msg>
<status status="PASS" starttime="20210408 19:08:21.831" endtime="20210408 19:08:22.005"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:21.830" endtime="20210408 19:08:22.006"></status>
</kw>
<msg timestamp="20210408 19:08:22.006" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:08:21.828" endtime="20210408 19:08:22.006"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>"${Text to Validate}" is displayed on ${WindowName} window.</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>"${Text to Validate}" is not displayed on ${WindowName} window.</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"${Text to Validate}" is displayed on ${WindowName} window.</arg>
</arguments>
<msg timestamp="20210408 19:08:22.066" level="INFO">"North America" is displayed on Deal Notebook window.</msg>
<status status="PASS" starttime="20210408 19:08:22.065" endtime="20210408 19:08:22.066"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:22.064" endtime="20210408 19:08:22.066"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:21.537" endtime="20210408 19:08:22.066"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:21.533" endtime="20210408 19:08:22.066"></status>
</kw>
<kw name="Take Screenshot with text into Test Document" library="ReportMaker_Keywords">
<doc>This keyword is used to add screenshot with image filename as description into test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Deal Notebook - Personnel Tab - Department</arg>
</arguments>
<kw name="Take Screenshot" library="Screenshot">
<doc>Takes a screenshot in JPEG format and embeds it into the log file.</doc>
<arguments>
<arg>${imageName}</arg>
</arguments>
<msg timestamp="20210408 19:08:22.276" level="INFO" html="yes">&lt;a href="Results/LoanIQ/TC01%20-%20Validate%20ARR%20Pricing%20Option%20at%20Deal%20Level%20and%20Add%20Libor%20Option___2021-04-08%2019-04-35.729/Deal%20Notebook%20-%20Personnel%20Tab%20-%20Department_1.jpg"&gt;&lt;img src="Results/LoanIQ/TC01%20-%20Validate%20ARR%20Pricing%20Option%20at%20Deal%20Level%20and%20Add%20Libor%20Option___2021-04-08%2019-04-35.729/Deal%20Notebook%20-%20Personnel%20Tab%20-%20Department_1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210408 19:08:22.174" endtime="20210408 19:08:22.277"></status>
</kw>
<kw name="Get Latest File" library="ReportMaker">
<arguments>
<arg>${getfilePath}</arg>
</arguments>
<assign>
<var>${imagePath}</var>
</assign>
<msg timestamp="20210408 19:08:22.337" level="INFO">${imagePath} = C:\Git_Evergreen\transform_arr\Results\LoanIQ\TC01 - Validate ARR Pricing Option at Deal Level and Add Libor Option___2021-04-08 19-04-35.729\Deal Notebook - Personnel Tab - Department_1.jpg</msg>
<status status="PASS" starttime="20210408 19:08:22.335" endtime="20210408 19:08:22.337"></status>
</kw>
<kw name="Put Screenshot With Text" library="ReportMaker">
<arguments>
<arg>${imagePath}</arg>
<arg>${imageName}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:08:22.391" endtime="20210408 19:08:22.405"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:22.123" endtime="20210408 19:08:22.405"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:11.134" endtime="20210408 19:08:22.406"></status>
</kw>
<kw name="Enter Expense Code" library="Deal_Notebook">
<doc>This keyword selects expense code.
@author: fmamaril DDMMMYYYY - initial create
@update: ehugo 28MAY2020 - added keyword pre-processing
@update: jloretiz 11FEB2021 - added condition for empty data</doc>
<arguments>
<arg>&amp;{ExcelPath}[Deal_ExpenseCode]</arg>
</arguments>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sDeal_ExpenseCode}</arg>
</arguments>
<assign>
<var>${Deal_ExpenseCode}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:08:22.664" endtime="20210408 19:08:22.664"></status>
</kw>
<msg timestamp="20210408 19:08:22.664" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:08:22.662" endtime="20210408 19:08:22.665"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:08:22.865" level="INFO">${List_Argument_Excel_Value} = ['0394703947']</msg>
<status status="PASS" starttime="20210408 19:08:22.865" endtime="20210408 19:08:22.866"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:08:22.916" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:08:22.916" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:08:22.916" endtime="20210408 19:08:22.917"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:08:22.967" level="INFO">${Arg_User_Input} = 0394703947</msg>
<status status="PASS" starttime="20210408 19:08:22.967" endtime="20210408 19:08:22.967"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:08:23.019" level="INFO">${Arg_User_Input} = 0394703947</msg>
<status status="PASS" starttime="20210408 19:08:23.018" endtime="20210408 19:08:23.019"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:08:23.094" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:08:23.094" endtime="20210408 19:08:23.094"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:08:23.146" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:08:23.146" endtime="20210408 19:08:23.147"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:08:23.199" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:08:23.198" endtime="20210408 19:08:23.199"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:08:23.252" endtime="20210408 19:08:23.252"></status>
</kw>
<msg timestamp="20210408 19:08:23.252" level="INFO">${Extracted_Argument_Value} = 0394703947</msg>
<status status="PASS" starttime="20210408 19:08:23.250" endtime="20210408 19:08:23.253"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:22.815" endtime="20210408 19:08:23.253"></status>
</kw>
<msg timestamp="20210408 19:08:23.253" level="INFO">${Extracted_Argument_Value} = 0394703947</msg>
<status status="PASS" starttime="20210408 19:08:22.713" endtime="20210408 19:08:23.253"></status>
</kw>
<msg timestamp="20210408 19:08:23.253" level="INFO">${Deal_ExpenseCode} = 0394703947</msg>
<status status="PASS" starttime="20210408 19:08:22.610" endtime="20210408 19:08:23.253"></status>
</kw>
<kw name="Mx LoanIQ Select Window Tab" library="LoanIQ">
<doc>| Usage |
Used to select the Java window tab</doc>
<arguments>
<arg>${LIQ_DealNotebook_Tab}</arg>
<arg>${TAB_PERSONNEL}</arg>
</arguments>
<msg timestamp="20210408 19:08:28.024" level="INFO">Window Tab = 'Personnel' is selected from the element = 'JavaWindow("title:=Deal Notebook -.*","displayed:=1").JavaTab("tagname:=TabFolder")'</msg>
<status status="PASS" starttime="20210408 19:08:23.305" endtime="20210408 19:08:28.024"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_DealPersonnelExpenseCode_Button}</arg>
</arguments>
<msg timestamp="20210408 19:08:28.558" level="INFO">JavaWindow("title:=Deal Notebook.*").JavaButton("attached text:=Expense Code") is clicked.</msg>
<status status="PASS" starttime="20210408 19:08:28.087" endtime="20210408 19:08:28.558"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Validate if Element is Enabled</arg>
<arg>${LIQ_SelectExpenseCode_All_Button}</arg>
<arg>All</arg>
</arguments>
<kw name="Validate if Element is Enabled" library="GenericKeywords">
<doc>This keyword validates if Element is enabled
@author: ghabal</doc>
<arguments>
<arg>${LIQ_SelectExpenseCode_All_Button}</arg>
<arg>All</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<msg timestamp="20210408 19:08:28.790" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:08:28.690" endtime="20210408 19:08:28.790"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:28.689" endtime="20210408 19:08:28.791"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<msg timestamp="20210408 19:08:28.948" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:08:28.870" endtime="20210408 19:08:28.949"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:28.867" endtime="20210408 19:08:28.949"></status>
</kw>
<msg timestamp="20210408 19:08:28.949" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:08:28.865" endtime="20210408 19:08:28.949"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed enabled</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed disabled</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>'${Field_Label}' element is confirmed enabled</arg>
</arguments>
<msg timestamp="20210408 19:08:29.018" level="INFO">'All' element is confirmed enabled</msg>
<status status="PASS" starttime="20210408 19:08:29.017" endtime="20210408 19:08:29.018"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:29.015" endtime="20210408 19:08:29.018"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:28.631" endtime="20210408 19:08:29.019"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:28.630" endtime="20210408 19:08:29.019"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Validate if Element is Enabled</arg>
<arg>${LIQ_SelectExpenseCode_Borrower_Button}</arg>
<arg>Borrower</arg>
</arguments>
<kw name="Validate if Element is Enabled" library="GenericKeywords">
<doc>This keyword validates if Element is enabled
@author: ghabal</doc>
<arguments>
<arg>${LIQ_SelectExpenseCode_Borrower_Button}</arg>
<arg>Borrower</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<msg timestamp="20210408 19:08:29.246" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:08:29.134" endtime="20210408 19:08:29.246"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:29.132" endtime="20210408 19:08:29.246"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<msg timestamp="20210408 19:08:29.384" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:08:29.303" endtime="20210408 19:08:29.384"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:29.301" endtime="20210408 19:08:29.384"></status>
</kw>
<msg timestamp="20210408 19:08:29.385" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:08:29.300" endtime="20210408 19:08:29.385"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed enabled</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed disabled</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>'${Field_Label}' element is confirmed enabled</arg>
</arguments>
<msg timestamp="20210408 19:08:29.442" level="INFO">'Borrower' element is confirmed enabled</msg>
<status status="PASS" starttime="20210408 19:08:29.442" endtime="20210408 19:08:29.442"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:29.440" endtime="20210408 19:08:29.442"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:29.071" endtime="20210408 19:08:29.442"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:29.070" endtime="20210408 19:08:29.442"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_SelectExpenseCode_All_Button}</arg>
</arguments>
<msg timestamp="20210408 19:08:29.978" level="INFO">JavaWindow("title:=Select Expense.*").JavaButton("attached text:=All Expense Codes") is clicked.</msg>
<status status="PASS" starttime="20210408 19:08:29.493" endtime="20210408 19:08:29.978"></status>
</kw>
<kw name="Validate Expense Code Window" library="Deal_Notebook">
<tags>
<tag>Validation</tag>
</tags>
<doc>This keyword validates Expense Code elements
@author: fmamaril</doc>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_SelectExpenseCode_Cancel_Button}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_SelectExpenseCode_Cancel_Button}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:08:30.175" level="INFO">Locator = 'JavaWindow("title:=Select Expense.*").JavaButton("attached text:=Cancel")' exists.</msg>
<status status="PASS" starttime="20210408 19:08:30.108" endtime="20210408 19:08:30.176"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:30.106" endtime="20210408 19:08:30.176"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_SelectExpenseCode_Code_RadioButton}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_SelectExpenseCode_Code_RadioButton}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:08:30.312" level="INFO">Locator = 'JavaWindow("title:=Select Expense.*").JavaRadioButton("label:=Code")' exists.</msg>
<status status="PASS" starttime="20210408 19:08:30.233" endtime="20210408 19:08:30.312"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:30.230" endtime="20210408 19:08:30.313"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_SelectExpenseCode_Description_RadioButton}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_SelectExpenseCode_Description_RadioButton}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:08:30.459" level="INFO">Locator = 'JavaWindow("title:=Select Expense.*").JavaRadioButton("label:=Description")' exists.</msg>
<status status="PASS" starttime="20210408 19:08:30.387" endtime="20210408 19:08:30.459"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:30.385" endtime="20210408 19:08:30.459"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_SelectExpenseCode_JavaTree}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_SelectExpenseCode_JavaTree}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:08:30.728" level="INFO">Locator = 'JavaWindow("title:=Select Expense.*").JavaTree("tagname:=Search by code:")' exists.</msg>
<status status="PASS" starttime="20210408 19:08:30.648" endtime="20210408 19:08:30.728"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:30.646" endtime="20210408 19:08:30.729"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:30.049" endtime="20210408 19:08:30.729"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Deal_ExpenseCode}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Enter</arg>
<arg>${LIQ_SelectExpenseCode_Search_TextField}</arg>
<arg>${Deal_ExpenseCode}</arg>
</arguments>
<kw name="Mx LoanIQ Enter" library="LoanIQ">
<doc>| Usage |
To enter the data to the element specified by 'locator'.</doc>
<arguments>
<arg>${LIQ_SelectExpenseCode_Search_TextField}</arg>
<arg>${Deal_ExpenseCode}</arg>
</arguments>
<msg timestamp="20210408 19:08:30.998" level="INFO">Input= 0394703947 is entered in element= JavaWindow("title:=Select Expense.*").JavaEdit("tagname:=Text")</msg>
<status status="PASS" starttime="20210408 19:08:30.797" endtime="20210408 19:08:30.999"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:30.795" endtime="20210408 19:08:30.999"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_SelectExpenseCode_OK_Button}</arg>
</arguments>
<msg timestamp="20210408 19:08:31.311" level="INFO">JavaWindow("title:=Select Expense Code").JavaButton("attached text:=OK") is clicked.</msg>
<status status="PASS" starttime="20210408 19:08:31.065" endtime="20210408 19:08:31.312"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify If Text Value Exist in Textfield on Page</arg>
<arg>Deal Notebook</arg>
<arg>${Deal_ExpenseCode}</arg>
</arguments>
<kw name="Verify If Text Value Exist in Textfield on Page" library="GenericKeywords">
<doc>This keyword verifies if static object exist in page
@author: fmamaril
&lt;update&gt; bernchua: Added "displayed:=1" property in JavaWindow locator.</doc>
<arguments>
<arg>Deal Notebook</arg>
<arg>${Deal_ExpenseCode}</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>JavaWindow("title:=.*${WindowName}.*","displayed:=1").JavaEdit("value:=${Text to Validate}")</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>JavaWindow("title:=.*${WindowName}.*","displayed:=1").JavaEdit("value:=${Text to Validate}")</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:08:31.642" level="INFO">Locator = 'JavaWindow("title:=.*Deal Notebook.*","displayed:=1").JavaEdit("value:=0394703947")' exists.</msg>
<status status="PASS" starttime="20210408 19:08:31.479" endtime="20210408 19:08:31.642"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:31.477" endtime="20210408 19:08:31.642"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>JavaWindow("title:=.*${WindowName}.*","displayed:=1").JavaEdit("value:=${Text to Validate}")</arg>
<arg>Processtimeout=5</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>JavaWindow("title:=.*${WindowName}.*","displayed:=1").JavaEdit("value:=${Text to Validate}")</arg>
<arg>Processtimeout=5</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>JavaWindow("title:=.*${WindowName}.*","displayed:=1").JavaEdit("value:=${Text to Validate}")</arg>
<arg>Processtimeout=5</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:08:31.852" level="INFO">Locator = 'JavaWindow("title:=.*Deal Notebook.*","displayed:=1").JavaEdit("value:=0394703947")' exists.</msg>
<status status="PASS" starttime="20210408 19:08:31.697" endtime="20210408 19:08:31.853"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:31.696" endtime="20210408 19:08:31.853"></status>
</kw>
<msg timestamp="20210408 19:08:31.853" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:08:31.693" endtime="20210408 19:08:31.853"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>"${Text to Validate}" is displayed on ${WindowName} window.</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>"${Text to Validate}" is not displayed on ${WindowName} window.</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"${Text to Validate}" is displayed on ${WindowName} window.</arg>
</arguments>
<msg timestamp="20210408 19:08:31.909" level="INFO">"0394703947" is displayed on Deal Notebook window.</msg>
<status status="PASS" starttime="20210408 19:08:31.909" endtime="20210408 19:08:31.909"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:31.907" endtime="20210408 19:08:31.910"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:31.396" endtime="20210408 19:08:31.910"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:31.393" endtime="20210408 19:08:31.910"></status>
</kw>
<kw name="Take Screenshot with text into Test Document" library="ReportMaker_Keywords">
<doc>This keyword is used to add screenshot with image filename as description into test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Deal Notebook - Personnel - Expense Code</arg>
</arguments>
<kw name="Take Screenshot" library="Screenshot">
<doc>Takes a screenshot in JPEG format and embeds it into the log file.</doc>
<arguments>
<arg>${imageName}</arg>
</arguments>
<msg timestamp="20210408 19:08:32.115" level="INFO" html="yes">&lt;a href="Results/LoanIQ/TC01%20-%20Validate%20ARR%20Pricing%20Option%20at%20Deal%20Level%20and%20Add%20Libor%20Option___2021-04-08%2019-04-35.729/Deal%20Notebook%20-%20Personnel%20-%20Expense%20Code_1.jpg"&gt;&lt;img src="Results/LoanIQ/TC01%20-%20Validate%20ARR%20Pricing%20Option%20at%20Deal%20Level%20and%20Add%20Libor%20Option___2021-04-08%2019-04-35.729/Deal%20Notebook%20-%20Personnel%20-%20Expense%20Code_1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210408 19:08:32.011" endtime="20210408 19:08:32.116"></status>
</kw>
<kw name="Get Latest File" library="ReportMaker">
<arguments>
<arg>${getfilePath}</arg>
</arguments>
<assign>
<var>${imagePath}</var>
</assign>
<msg timestamp="20210408 19:08:32.172" level="INFO">${imagePath} = C:\Git_Evergreen\transform_arr\Results\LoanIQ\TC01 - Validate ARR Pricing Option at Deal Level and Add Libor Option___2021-04-08 19-04-35.729\Deal Notebook - Personnel - Expense Code_1.jpg</msg>
<status status="PASS" starttime="20210408 19:08:32.171" endtime="20210408 19:08:32.173"></status>
</kw>
<kw name="Put Screenshot With Text" library="ReportMaker">
<arguments>
<arg>${imagePath}</arg>
<arg>${imageName}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:08:32.223" endtime="20210408 19:08:32.237"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:31.959" endtime="20210408 19:08:32.237"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:22.455" endtime="20210408 19:08:32.237"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:03.710" endtime="20210408 19:08:32.238"></status>
</kw>
<msg timestamp="20210408 19:08:32.238" level="INFO">Mx Execute Template With Multiple Data keyword passed for all the data</msg>
<status status="PASS" starttime="20210408 19:08:03.678" endtime="20210408 19:08:32.238"></status>
</kw>
<kw name="Mx Execute Template With Multiple Data" library="GenericLib">
<doc>| Usage |
 This keyword is used to run template with multiple data.</doc>
<arguments>
<arg>Input Deal Calendars Tab Details</arg>
<arg>${ExcelPath}</arg>
<arg>${Deal_1}</arg>
<arg>CRED01_DealSetup</arg>
</arguments>
<kw name="Input Deal Calendars Tab Details" library="CRED01_DealSetUpWithoutOrigination">
<doc>This keyword is used to Input Deal Calendars Tab Details
@author: hstone 24NOV2020 - initial create</doc>
<arguments>
<arg>OrderedDict([('rowid', '1'), ('Test_Case', 'ARR_Scenario3'), ('Deal_NamePrefix', 'ARR_LIBORSC3'), ('Deal_AliasPrefix', 'SC3'), ('Deal_Name', 'ARR_LIBORSC308042021190438PNT'), ('Deal_Alias', 'SC308042021190441XJG'), ('Deal_EffectiveDate', '26-Oct-2016'), ('Deal_AgreementDate', '26-Oct-2016'), ('Deal_AdjustmentSettings', 'Present'), ('Deal_AgreementDateAdjustment', '30'), ('Deal_EffectiveDateAdjustment', '30'), ('Deal_Currency', 'USD'), ('Deal_DepartmentCode', 'NAM'), ('Deal_Department', 'North America'), ('Deal_SalesGroup', 'Sales Group 1'), ('Deal_AternateID', ''), ('Deal_ANSIID', ''), ('Deal_IsSoleLender', 'OFF'), ('Deal_ClassificationCode', 'GCP'), ('Deal_ClassificationDesc', 'General Corp Purpose'), ('Deal_AdminAgent', 'BNS CANADA CORPORATE BANKING'), ('Deal_AdminAgentLocation', 'Toronto, Canada'), ('DealAdminAgent_SGAlias', 'BC'), ('DealAdminAgent_PreferredRI', ''), ('DealAdminAgent_ServicingGroup', 'CANADA CORPORATE BANKING'), ('Deal_ProposedCmt', '100,000,000.00'), ('Deal_EarlyDiscussion', 'OFF'), ('Deal_ExpenseCode', '0394703947'), ('Deal_HolidayCalendarRemove', 'Canadian'), ('Deal_HolidayCalendarAdd', 'US Holiday Calendar (New York)'), ('Deal_IsPricingOptionARR', 'TRUE'), ('Deal_PricingOption_CCY', ''), ('Deal_PricingOption', 'SOFR Daily Compounding W OPS Not Overridable'), ('PricingOption_IsARR', 'False'), ('PricingOption_InitialFractionRate', 'Actual'), ('PricingOption_RoundingDecimal', 'Actual'), ('PricingOption_NonBusinessDayRule', 'Modified Following Business Day'), ('PricingOption_BillNoOfDays', '0'), ('PricingOption_MatrixChangeAppMthd', 'Effective date of change'), ('PricingOption_RateChangeAppMthd', 'Effective date of change'), ('PricingOption_RACInitialFractionRate', ''), ('PricingOption_RACRoundingDecimal', ''), ('PricingOption_RACRoundingMethod', ''), ('PricingOption_PercentOfRateFormulaUsage', '(Base + Spread + RAC) * PCT'), ('PricingOption_RepricingNonBusinessDayRule', 'Modified Following Business Day'), ('PricingOption_FeeOnLenderShareFunding', ''), ('PricingOption_InterestDueUponPrincipalPayment', 'OFF'), ('PricingOption_InterestDueUponRepricing', ''), ('PricingOption_ReferenceBanksApply', 'OFF'), ('PricingOption_IntentNoticeDaysInAdvance', '3'), ('PricingOption_IntentNoticeTime', '12'), ('PricingOption_12HrPeriodOption', ''), ('PricingOption_MaximumDrawAmount', ''), ('PricingOption_MinimumDrawAmount', ''), ('PricingOption_MinimumPaymentAmount', ''), ('PricingOption_MinimumAmountMultiples', ''), ('PricingOption_BillBorrower', 'YES'), ('PricingOption_ARRObservationPeriod', 'ON'), ('PricingOption_LookbackDays', '5'), ('PricingOption_LockoutDays', '0'), ('PricingOption_RateBasis', 'Actual/360'), ('PricingOption_CalculationMethod', 'Daily Rate With Compounding')])</arg>
</arguments>
<kw name="Report Sub Header" library="ReportMaker_Keywords">
<doc>This keyword is used to add given argument as sub header in test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Input Deal Calendars Tab Details</arg>
</arguments>
<kw name="Set Report Sub Header" library="ReportMaker">
<arguments>
<arg>${SubHeader}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:08:32.421" endtime="20210408 19:08:32.423"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:32.370" endtime="20210408 19:08:32.424"></status>
</kw>
<kw name="Delete Holiday on Calendar" library="Deal_Notebook">
<doc>This keyword deletes a Holiday on Calendar.
@author: fmamaril DDMMMYYYY - initial create
@update: ehugo 28MAY2020 - added keyword pre-processing; added screenshot</doc>
<arguments>
<arg>&amp;{ExcelPath}[Deal_HolidayCalendarRemove]</arg>
</arguments>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sHolidayCalendar}</arg>
</arguments>
<assign>
<var>${HolidayCalendar}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:08:32.680" endtime="20210408 19:08:32.680"></status>
</kw>
<msg timestamp="20210408 19:08:32.680" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:08:32.678" endtime="20210408 19:08:32.681"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:08:32.881" level="INFO">${List_Argument_Excel_Value} = ['Canadian']</msg>
<status status="PASS" starttime="20210408 19:08:32.881" endtime="20210408 19:08:32.881"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:08:32.931" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:08:32.931" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:08:32.930" endtime="20210408 19:08:32.931"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:08:32.982" level="INFO">${Arg_User_Input} = CANADIAN</msg>
<status status="PASS" starttime="20210408 19:08:32.981" endtime="20210408 19:08:32.982"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:08:33.033" level="INFO">${Arg_User_Input} = CANADIAN</msg>
<status status="PASS" starttime="20210408 19:08:33.032" endtime="20210408 19:08:33.033"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:08:33.084" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:08:33.083" endtime="20210408 19:08:33.084"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:08:33.136" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:08:33.136" endtime="20210408 19:08:33.136"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:08:33.190" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:08:33.190" endtime="20210408 19:08:33.191"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:08:33.252" endtime="20210408 19:08:33.252"></status>
</kw>
<msg timestamp="20210408 19:08:33.252" level="INFO">${Extracted_Argument_Value} = Canadian</msg>
<status status="PASS" starttime="20210408 19:08:33.250" endtime="20210408 19:08:33.252"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:32.829" endtime="20210408 19:08:33.253"></status>
</kw>
<msg timestamp="20210408 19:08:33.253" level="INFO">${Extracted_Argument_Value} = Canadian</msg>
<status status="PASS" starttime="20210408 19:08:32.728" endtime="20210408 19:08:33.253"></status>
</kw>
<msg timestamp="20210408 19:08:33.253" level="INFO">${HolidayCalendar} = Canadian</msg>
<status status="PASS" starttime="20210408 19:08:32.626" endtime="20210408 19:08:33.253"></status>
</kw>
<kw name="Mx LoanIQ Select Window Tab" library="LoanIQ">
<doc>| Usage |
Used to select the Java window tab</doc>
<arguments>
<arg>${LIQ_DealNotebook_Tab}</arg>
<arg>${TAB_CALENDARS}</arg>
</arguments>
<msg timestamp="20210408 19:08:38.156" level="INFO">Window Tab = 'Calendars' is selected from the element = 'JavaWindow("title:=Deal Notebook -.*","displayed:=1").JavaTab("tagname:=TabFolder")'</msg>
<status status="PASS" starttime="20210408 19:08:33.304" endtime="20210408 19:08:38.157"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${HolidayCalendar}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Select String</arg>
<arg>${LIQ_DealCalendars_Javatree}</arg>
<arg>${HolidayCalendar}</arg>
</arguments>
<kw name="Mx LoanIQ Select String" library="LoanIQ">
<doc>| Usage |
Used to select the given string in JavaTree</doc>
<arguments>
<arg>${LIQ_DealCalendars_Javatree}</arg>
<arg>${HolidayCalendar}</arg>
</arguments>
<msg timestamp="20210408 19:08:41.647" level="INFO">Selected 'Canadian' from 'JavaWindow("title:=Deal Notebook.*").JavaObject("tagname:=Group","text:=Holiday Calendars").JavaTree("tagname:=Drill down for details")' object.</msg>
<status status="PASS" starttime="20210408 19:08:38.254" endtime="20210408 19:08:41.648"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:38.251" endtime="20210408 19:08:41.648"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_DealCalendars_DeleteButton}</arg>
</arguments>
<msg timestamp="20210408 19:08:42.153" level="INFO">JavaWindow("title:=Deal Notebook.*").JavaButton("attached text:=Delete") is clicked.</msg>
<status status="PASS" starttime="20210408 19:08:41.720" endtime="20210408 19:08:42.154"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_Question_Yes_Button}</arg>
</arguments>
<msg timestamp="20210408 19:08:42.749" level="INFO">JavaWindow("title:=Question.*","displayed:=1").JavaButton("label:=Yes") is clicked.</msg>
<status status="PASS" starttime="20210408 19:08:42.248" endtime="20210408 19:08:42.749"></status>
</kw>
<kw name="Take Screenshot with text into Test Document" library="ReportMaker_Keywords">
<doc>This keyword is used to add screenshot with image filename as description into test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>DealNotebook - Calendar - Delete Holiday</arg>
</arguments>
<kw name="Take Screenshot" library="Screenshot">
<doc>Takes a screenshot in JPEG format and embeds it into the log file.</doc>
<arguments>
<arg>${imageName}</arg>
</arguments>
<msg timestamp="20210408 19:08:42.955" level="INFO" html="yes">&lt;a href="Results/LoanIQ/TC01%20-%20Validate%20ARR%20Pricing%20Option%20at%20Deal%20Level%20and%20Add%20Libor%20Option___2021-04-08%2019-04-35.729/DealNotebook%20-%20Calendar%20-%20Delete%20Holiday_1.jpg"&gt;&lt;img src="Results/LoanIQ/TC01%20-%20Validate%20ARR%20Pricing%20Option%20at%20Deal%20Level%20and%20Add%20Libor%20Option___2021-04-08%2019-04-35.729/DealNotebook%20-%20Calendar%20-%20Delete%20Holiday_1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210408 19:08:42.871" endtime="20210408 19:08:42.956"></status>
</kw>
<kw name="Get Latest File" library="ReportMaker">
<arguments>
<arg>${getfilePath}</arg>
</arguments>
<assign>
<var>${imagePath}</var>
</assign>
<msg timestamp="20210408 19:08:43.013" level="INFO">${imagePath} = C:\Git_Evergreen\transform_arr\Results\LoanIQ\TC01 - Validate ARR Pricing Option at Deal Level and Add Libor Option___2021-04-08 19-04-35.729\DealNotebook - Calendar - Delete Holiday_1.jpg</msg>
<status status="PASS" starttime="20210408 19:08:43.011" endtime="20210408 19:08:43.013"></status>
</kw>
<kw name="Put Screenshot With Text" library="ReportMaker">
<arguments>
<arg>${imagePath}</arg>
<arg>${imageName}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:08:43.072" endtime="20210408 19:08:43.086"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:42.818" endtime="20210408 19:08:43.086"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:32.474" endtime="20210408 19:08:43.086"></status>
</kw>
<kw name="Add Holiday on Calendar" library="Deal_Notebook">
<doc>This keyword adds a Holiday on Calendar.
@author: fmamaril
@update: mnanquil
Added condition to add multiple holiday calendar.
Ex Multiple Input: Calendar 1 | Calendar 2 | Calendar 3 and so on..
Ex Single Input: Calendar 1
@update: ehugo 28MAY2020 - added keyword pre-processing; updated screenshot filename</doc>
<arguments>
<arg>&amp;{ExcelPath}[Deal_HolidayCalendarAdd]</arg>
</arguments>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sHolidayCalendar}</arg>
</arguments>
<assign>
<var>${HolidayCalendar}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:08:43.356" endtime="20210408 19:08:43.356"></status>
</kw>
<msg timestamp="20210408 19:08:43.356" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:08:43.354" endtime="20210408 19:08:43.356"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:08:43.590" level="INFO">${List_Argument_Excel_Value} = ['US Holiday Calendar (New York)']</msg>
<status status="PASS" starttime="20210408 19:08:43.590" endtime="20210408 19:08:43.591"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:08:43.640" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:08:43.640" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:08:43.640" endtime="20210408 19:08:43.640"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:08:43.692" level="INFO">${Arg_User_Input} = US HOLIDAY CALENDAR (NEW YORK)</msg>
<status status="PASS" starttime="20210408 19:08:43.691" endtime="20210408 19:08:43.692"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:08:43.743" level="INFO">${Arg_User_Input} = US HOLIDAY CALENDAR (NEW YORK)</msg>
<status status="PASS" starttime="20210408 19:08:43.742" endtime="20210408 19:08:43.743"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:08:43.794" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:08:43.794" endtime="20210408 19:08:43.795"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:08:43.845" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:08:43.844" endtime="20210408 19:08:43.845"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:08:43.896" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:08:43.895" endtime="20210408 19:08:43.896"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:08:43.949" endtime="20210408 19:08:43.949"></status>
</kw>
<msg timestamp="20210408 19:08:43.949" level="INFO">${Extracted_Argument_Value} = US Holiday Calendar (New York)</msg>
<status status="PASS" starttime="20210408 19:08:43.947" endtime="20210408 19:08:43.949"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:43.538" endtime="20210408 19:08:43.950"></status>
</kw>
<msg timestamp="20210408 19:08:43.950" level="INFO">${Extracted_Argument_Value} = US Holiday Calendar (New York)</msg>
<status status="PASS" starttime="20210408 19:08:43.437" endtime="20210408 19:08:43.950"></status>
</kw>
<msg timestamp="20210408 19:08:43.950" level="INFO">${HolidayCalendar} = US Holiday Calendar (New York)</msg>
<status status="PASS" starttime="20210408 19:08:43.301" endtime="20210408 19:08:43.950"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${HolidayCalendar}</arg>
<arg>|</arg>
</arguments>
<assign>
<var>@{HolidayCalendarArray}</var>
</assign>
<msg timestamp="20210408 19:08:44.111" level="INFO">@{HolidayCalendarArray} = [ US Holiday Calendar (New York) ]</msg>
<status status="PASS" starttime="20210408 19:08:44.111" endtime="20210408 19:08:44.112"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${HolidayCalendarArray}</arg>
</arguments>
<assign>
<var>${CalendarCount}</var>
</assign>
<msg timestamp="20210408 19:08:44.162" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:08:44.162" level="INFO">${CalendarCount} = 1</msg>
<status status="PASS" starttime="20210408 19:08:44.162" endtime="20210408 19:08:44.162"></status>
</kw>
<kw name="Mx LoanIQ Select Window Tab" library="LoanIQ">
<doc>| Usage |
Used to select the Java window tab</doc>
<arguments>
<arg>${LIQ_DealNotebook_Tab}</arg>
<arg>Calendars</arg>
</arguments>
<msg timestamp="20210408 19:08:49.000" level="INFO">Window Tab = 'Calendars' is selected from the element = 'JavaWindow("title:=Deal Notebook -.*","displayed:=1").JavaTab("tagname:=TabFolder")'</msg>
<status status="PASS" starttime="20210408 19:08:44.215" endtime="20210408 19:08:49.000"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Validate if Element is Enabled</arg>
<arg>${LIQ_DealCalendars_AddButton}</arg>
<arg>Add</arg>
</arguments>
<kw name="Validate if Element is Enabled" library="GenericKeywords">
<doc>This keyword validates if Element is enabled
@author: ghabal</doc>
<arguments>
<arg>${LIQ_DealCalendars_AddButton}</arg>
<arg>Add</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<msg timestamp="20210408 19:08:49.464" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:08:49.112" endtime="20210408 19:08:49.464"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:49.111" endtime="20210408 19:08:49.465"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<msg timestamp="20210408 19:08:49.834" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:08:49.519" endtime="20210408 19:08:49.834"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:49.518" endtime="20210408 19:08:49.835"></status>
</kw>
<msg timestamp="20210408 19:08:49.835" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:08:49.516" endtime="20210408 19:08:49.835"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed enabled</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed disabled</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>'${Field_Label}' element is confirmed enabled</arg>
</arguments>
<msg timestamp="20210408 19:08:49.893" level="INFO">'Add' element is confirmed enabled</msg>
<status status="PASS" starttime="20210408 19:08:49.892" endtime="20210408 19:08:49.893"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:49.891" endtime="20210408 19:08:49.893"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:49.058" endtime="20210408 19:08:49.893"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:49.056" endtime="20210408 19:08:49.894"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Validate if Element is Enabled</arg>
<arg>${LIQ_DealCalendars_DeleteButton}</arg>
<arg>Delete</arg>
</arguments>
<kw name="Validate if Element is Enabled" library="GenericKeywords">
<doc>This keyword validates if Element is enabled
@author: ghabal</doc>
<arguments>
<arg>${LIQ_DealCalendars_DeleteButton}</arg>
<arg>Delete</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<msg timestamp="20210408 19:08:50.380" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:08:50.004" endtime="20210408 19:08:50.380"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:50.002" endtime="20210408 19:08:50.381"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<msg timestamp="20210408 19:08:50.773" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:08:50.437" endtime="20210408 19:08:50.773"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:50.435" endtime="20210408 19:08:50.774"></status>
</kw>
<msg timestamp="20210408 19:08:50.774" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:08:50.434" endtime="20210408 19:08:50.774"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed enabled</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed disabled</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>'${Field_Label}' element is confirmed enabled</arg>
</arguments>
<msg timestamp="20210408 19:08:50.828" level="INFO">'Delete' element is confirmed enabled</msg>
<status status="PASS" starttime="20210408 19:08:50.827" endtime="20210408 19:08:50.828"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:50.825" endtime="20210408 19:08:50.828"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:49.948" endtime="20210408 19:08:50.828"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:49.947" endtime="20210408 19:08:50.828"></status>
</kw>
<kw name="${INDEX} IN RANGE [ ${CalendarCount} ]" type="for">
<kw name="${INDEX} = 0" type="foritem">
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>${SPACE}@{HolidayCalendarArray}[${INDEX}]${SPACE}</arg>
</arguments>
<assign>
<var>${HolidayCalendar}</var>
</assign>
<msg timestamp="20210408 19:08:50.934" level="INFO">${HolidayCalendar} = US Holiday Calendar (New York)</msg>
<status status="PASS" starttime="20210408 19:08:50.933" endtime="20210408 19:08:50.934"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_DealCalendars_AddButton}</arg>
</arguments>
<msg timestamp="20210408 19:08:51.502" level="INFO">JavaWindow("title:=Deal Notebook.*").JavaButton("attached text:=Add") is clicked.</msg>
<status status="PASS" starttime="20210408 19:08:50.986" endtime="20210408 19:08:51.503"></status>
</kw>
<kw name="Validation on Add Holiday Calendar" library="Deal_Notebook">
<tags>
<tag>Validation</tag>
</tags>
<doc>This keyword validates Holiday Calendar setup.
@author: fmamaril</doc>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Validate if Element is Enabled</arg>
<arg>${LIQ_HolidayCalendar_ComboBox}</arg>
<arg>Holiday Calendar</arg>
</arguments>
<kw name="Validate if Element is Enabled" library="GenericKeywords">
<doc>This keyword validates if Element is enabled
@author: ghabal</doc>
<arguments>
<arg>${LIQ_HolidayCalendar_ComboBox}</arg>
<arg>Holiday Calendar</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<msg timestamp="20210408 19:08:51.807" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:08:51.693" endtime="20210408 19:08:51.807"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:51.691" endtime="20210408 19:08:51.807"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<msg timestamp="20210408 19:08:51.959" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:08:51.863" endtime="20210408 19:08:51.959"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:51.861" endtime="20210408 19:08:51.959"></status>
</kw>
<msg timestamp="20210408 19:08:51.960" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:08:51.860" endtime="20210408 19:08:51.960"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed enabled</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed disabled</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>'${Field_Label}' element is confirmed enabled</arg>
</arguments>
<msg timestamp="20210408 19:08:52.017" level="INFO">'Holiday Calendar' element is confirmed enabled</msg>
<status status="PASS" starttime="20210408 19:08:52.017" endtime="20210408 19:08:52.017"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:52.014" endtime="20210408 19:08:52.017"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:51.636" endtime="20210408 19:08:52.018"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:51.635" endtime="20210408 19:08:52.018"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Validate if Element is Checked</arg>
<arg>${LIQ_HolidayCalendar_BorrowerIntentNotice_Checkbox}</arg>
<arg>Borrower Intent Notice</arg>
</arguments>
<kw name="Validate if Element is Checked" library="GenericKeywords">
<doc>This keyword validates if Element is checked
@author: ghabal
@update: hstone 02SEP2020 - Optimized Keyword
- Added Failure Log</doc>
<arguments>
<arg>${LIQ_HolidayCalendar_BorrowerIntentNotice_Checkbox}</arg>
<arg>Borrower Intent Notice</arg>
</arguments>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>value%1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>value%1</arg>
</arguments>
<msg timestamp="20210408 19:08:52.262" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:08:52.137" endtime="20210408 19:08:52.262"></status>
</kw>
<msg timestamp="20210408 19:08:52.262" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:08:52.135" endtime="20210408 19:08:52.263"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed checked</arg>
<arg>ELSE</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Fail</arg>
<arg>${Field_Label}' element is confirmed unchecked</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>'${Field_Label}' element is confirmed checked</arg>
</arguments>
<msg timestamp="20210408 19:08:52.350" level="INFO">'Borrower Intent Notice' element is confirmed checked</msg>
<status status="PASS" starttime="20210408 19:08:52.349" endtime="20210408 19:08:52.350"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:52.347" endtime="20210408 19:08:52.350"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:52.074" endtime="20210408 19:08:52.350"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:52.073" endtime="20210408 19:08:52.350"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Validate if Element is Checked</arg>
<arg>${LIQ_HolidayCalendar_FXRate_Checkbox}</arg>
<arg>FX Rate</arg>
</arguments>
<kw name="Validate if Element is Checked" library="GenericKeywords">
<doc>This keyword validates if Element is checked
@author: ghabal
@update: hstone 02SEP2020 - Optimized Keyword
- Added Failure Log</doc>
<arguments>
<arg>${LIQ_HolidayCalendar_FXRate_Checkbox}</arg>
<arg>FX Rate</arg>
</arguments>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>value%1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>value%1</arg>
</arguments>
<msg timestamp="20210408 19:08:52.612" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:08:52.501" endtime="20210408 19:08:52.612"></status>
</kw>
<msg timestamp="20210408 19:08:52.612" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:08:52.500" endtime="20210408 19:08:52.613"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed checked</arg>
<arg>ELSE</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Fail</arg>
<arg>${Field_Label}' element is confirmed unchecked</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>'${Field_Label}' element is confirmed checked</arg>
</arguments>
<msg timestamp="20210408 19:08:52.667" level="INFO">'FX Rate' element is confirmed checked</msg>
<status status="PASS" starttime="20210408 19:08:52.667" endtime="20210408 19:08:52.667"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:52.665" endtime="20210408 19:08:52.667"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:52.425" endtime="20210408 19:08:52.667"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:52.423" endtime="20210408 19:08:52.668"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Validate if Element is Checked</arg>
<arg>${LIQ_HolidayCalendar_InterestRate_Checkbox}</arg>
<arg>Interest Rate</arg>
</arguments>
<kw name="Validate if Element is Checked" library="GenericKeywords">
<doc>This keyword validates if Element is checked
@author: ghabal
@update: hstone 02SEP2020 - Optimized Keyword
- Added Failure Log</doc>
<arguments>
<arg>${LIQ_HolidayCalendar_InterestRate_Checkbox}</arg>
<arg>Interest Rate</arg>
</arguments>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>value%1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>value%1</arg>
</arguments>
<msg timestamp="20210408 19:08:52.884" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:08:52.775" endtime="20210408 19:08:52.884"></status>
</kw>
<msg timestamp="20210408 19:08:52.885" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:08:52.773" endtime="20210408 19:08:52.885"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed checked</arg>
<arg>ELSE</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Fail</arg>
<arg>${Field_Label}' element is confirmed unchecked</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>'${Field_Label}' element is confirmed checked</arg>
</arguments>
<msg timestamp="20210408 19:08:52.938" level="INFO">'Interest Rate' element is confirmed checked</msg>
<status status="PASS" starttime="20210408 19:08:52.938" endtime="20210408 19:08:52.938"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:52.936" endtime="20210408 19:08:52.938"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:52.723" endtime="20210408 19:08:52.939"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:52.721" endtime="20210408 19:08:52.939"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Validate if Element is Checked</arg>
<arg>${LIQ_HolidayCalendar_EffectiveDate_Checkbox}</arg>
<arg>Effective Date</arg>
</arguments>
<kw name="Validate if Element is Checked" library="GenericKeywords">
<doc>This keyword validates if Element is checked
@author: ghabal
@update: hstone 02SEP2020 - Optimized Keyword
- Added Failure Log</doc>
<arguments>
<arg>${LIQ_HolidayCalendar_EffectiveDate_Checkbox}</arg>
<arg>Effective Date</arg>
</arguments>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>value%1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>value%1</arg>
</arguments>
<msg timestamp="20210408 19:08:53.159" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:08:53.044" endtime="20210408 19:08:53.159"></status>
</kw>
<msg timestamp="20210408 19:08:53.160" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:08:53.042" endtime="20210408 19:08:53.160"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed checked</arg>
<arg>ELSE</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Fail</arg>
<arg>${Field_Label}' element is confirmed unchecked</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>'${Field_Label}' element is confirmed checked</arg>
</arguments>
<msg timestamp="20210408 19:08:53.228" level="INFO">'Effective Date' element is confirmed checked</msg>
<status status="PASS" starttime="20210408 19:08:53.227" endtime="20210408 19:08:53.228"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:53.226" endtime="20210408 19:08:53.228"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:52.991" endtime="20210408 19:08:53.228"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:52.989" endtime="20210408 19:08:53.228"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Validate if Element is Checked</arg>
<arg>${LIQ_HolidayCalendar_PaymentAdvice_Checkbox}</arg>
<arg>Payment Advice</arg>
</arguments>
<kw name="Validate if Element is Checked" library="GenericKeywords">
<doc>This keyword validates if Element is checked
@author: ghabal
@update: hstone 02SEP2020 - Optimized Keyword
- Added Failure Log</doc>
<arguments>
<arg>${LIQ_HolidayCalendar_PaymentAdvice_Checkbox}</arg>
<arg>Payment Advice</arg>
</arguments>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>value%1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>value%1</arg>
</arguments>
<msg timestamp="20210408 19:08:53.450" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:08:53.337" endtime="20210408 19:08:53.450"></status>
</kw>
<msg timestamp="20210408 19:08:53.450" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:08:53.335" endtime="20210408 19:08:53.451"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed checked</arg>
<arg>ELSE</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Fail</arg>
<arg>${Field_Label}' element is confirmed unchecked</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>'${Field_Label}' element is confirmed checked</arg>
</arguments>
<msg timestamp="20210408 19:08:53.504" level="INFO">'Payment Advice' element is confirmed checked</msg>
<status status="PASS" starttime="20210408 19:08:53.504" endtime="20210408 19:08:53.504"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:53.502" endtime="20210408 19:08:53.505"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:53.283" endtime="20210408 19:08:53.505"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:53.282" endtime="20210408 19:08:53.505"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Validate if Element is Enabled</arg>
<arg>${LIQ_HolidayCalendar_Ok_Button}</arg>
<arg>OK</arg>
</arguments>
<kw name="Validate if Element is Enabled" library="GenericKeywords">
<doc>This keyword validates if Element is enabled
@author: ghabal</doc>
<arguments>
<arg>${LIQ_HolidayCalendar_Ok_Button}</arg>
<arg>OK</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<msg timestamp="20210408 19:08:53.744" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:08:53.623" endtime="20210408 19:08:53.745"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:53.621" endtime="20210408 19:08:53.745"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<msg timestamp="20210408 19:08:53.889" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:08:53.800" endtime="20210408 19:08:53.889"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:53.799" endtime="20210408 19:08:53.889"></status>
</kw>
<msg timestamp="20210408 19:08:53.890" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:08:53.797" endtime="20210408 19:08:53.890"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed enabled</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed disabled</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>'${Field_Label}' element is confirmed enabled</arg>
</arguments>
<msg timestamp="20210408 19:08:53.944" level="INFO">'OK' element is confirmed enabled</msg>
<status status="PASS" starttime="20210408 19:08:53.944" endtime="20210408 19:08:53.944"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:53.942" endtime="20210408 19:08:53.944"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:53.562" endtime="20210408 19:08:53.945"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:53.561" endtime="20210408 19:08:53.945"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Validate if Element is Enabled</arg>
<arg>${LIQ_HolidayCalendar_Cancel_Button}</arg>
<arg>Cancel</arg>
</arguments>
<kw name="Validate if Element is Enabled" library="GenericKeywords">
<doc>This keyword validates if Element is enabled
@author: ghabal</doc>
<arguments>
<arg>${LIQ_HolidayCalendar_Cancel_Button}</arg>
<arg>Cancel</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<msg timestamp="20210408 19:08:54.168" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:08:54.051" endtime="20210408 19:08:54.169"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:54.050" endtime="20210408 19:08:54.169"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>enabled%1</arg>
</arguments>
<msg timestamp="20210408 19:08:54.317" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:08:54.226" endtime="20210408 19:08:54.317"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:54.224" endtime="20210408 19:08:54.317"></status>
</kw>
<msg timestamp="20210408 19:08:54.318" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:08:54.223" endtime="20210408 19:08:54.318"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed enabled</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed disabled</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>'${Field_Label}' element is confirmed enabled</arg>
</arguments>
<msg timestamp="20210408 19:08:54.371" level="INFO">'Cancel' element is confirmed enabled</msg>
<status status="PASS" starttime="20210408 19:08:54.371" endtime="20210408 19:08:54.372"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:54.368" endtime="20210408 19:08:54.372"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:53.998" endtime="20210408 19:08:54.372"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:53.996" endtime="20210408 19:08:54.372"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:51.570" endtime="20210408 19:08:54.372"></status>
</kw>
<kw name="Mx LoanIQ Select Combo Box Value" library="LoanIQ">
<doc>| Usage |
Used to select data in JavaList</doc>
<arguments>
<arg>${LIQ_HolidayCalendar_ComboBox}</arg>
<arg>${HolidayCalendar}</arg>
</arguments>
<msg timestamp="20210408 19:08:54.509" level="INFO">Selected value = 'US Holiday Calendar (New York)' from Combo box object = 'JavaWindow("title:=Holiday Calendar").JavaList("attached text:=Calendar:","index:=0")'.</msg>
<status status="PASS" starttime="20210408 19:08:54.429" endtime="20210408 19:08:54.509"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_HolidayCalendar_Ok_Button}</arg>
</arguments>
<msg timestamp="20210408 19:08:54.802" level="INFO">JavaWindow("title:=Holiday Calendar").JavaButton("attached text:=OK") is clicked.</msg>
<status status="PASS" starttime="20210408 19:08:54.567" endtime="20210408 19:08:54.802"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Select String</arg>
<arg>${LIQ_DealCalendars_Javatree}</arg>
<arg>${HolidayCalendar}</arg>
</arguments>
<kw name="Mx LoanIQ Select String" library="LoanIQ">
<doc>| Usage |
Used to select the given string in JavaTree</doc>
<arguments>
<arg>${LIQ_DealCalendars_Javatree}</arg>
<arg>${HolidayCalendar}</arg>
</arguments>
<msg timestamp="20210408 19:08:58.815" level="INFO">Selected 'US Holiday Calendar (New York)' from 'JavaWindow("title:=Deal Notebook.*").JavaObject("tagname:=Group","text:=Holiday Calendars").JavaTree("tagname:=Drill down for details")' object.</msg>
<status status="PASS" starttime="20210408 19:08:54.856" endtime="20210408 19:08:58.816"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:54.855" endtime="20210408 19:08:58.816"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_DealCalendars_AllItems_X_Javatree}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_DealCalendars_AllItems_X_Javatree}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:08:59.113" level="INFO">Locator = 'JavaWindow("title:=Deal Notebook.*").JavaTree("tagname:=Drill down for details","developer name:=.*borrowerIntentNoticeAsCheckMark=X.*interestRateSettingNoticeAsCheckMark=X.*paymentAdviceDatesAsCheckMark=X.*effectiveDateAsCheckMark=X.*fxRateSettingNoticeAsCheckMark=X.*billingAsCheckMark=X.*")' exists.</msg>
<status status="PASS" starttime="20210408 19:08:58.909" endtime="20210408 19:08:59.113"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:58.907" endtime="20210408 19:08:59.114"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:50.881" endtime="20210408 19:08:59.114"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:50.881" endtime="20210408 19:08:59.114"></status>
</kw>
<kw name="Take Screenshot with text into Test Document" library="ReportMaker_Keywords">
<doc>This keyword is used to add screenshot with image filename as description into test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Deal Notebook - Calendar - Add Holiday Calendar - ${HolidayCalendar}</arg>
</arguments>
<kw name="Take Screenshot" library="Screenshot">
<doc>Takes a screenshot in JPEG format and embeds it into the log file.</doc>
<arguments>
<arg>${imageName}</arg>
</arguments>
<msg timestamp="20210408 19:08:59.311" level="INFO" html="yes">&lt;a href="Results/LoanIQ/TC01%20-%20Validate%20ARR%20Pricing%20Option%20at%20Deal%20Level%20and%20Add%20Libor%20Option___2021-04-08%2019-04-35.729/Deal%20Notebook%20-%20Calendar%20-%20Add%20Holiday%20Calendar%20-%20US%20Holiday%20Calendar%20%28New%20York%29_1.jpg"&gt;&lt;img src="Results/LoanIQ/TC01%20-%20Validate%20ARR%20Pricing%20Option%20at%20Deal%20Level%20and%20Add%20Libor%20Option___2021-04-08%2019-04-35.729/Deal%20Notebook%20-%20Calendar%20-%20Add%20Holiday%20Calendar%20-%20US%20Holiday%20Calendar%20%28New%20York%29_1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210408 19:08:59.229" endtime="20210408 19:08:59.311"></status>
</kw>
<kw name="Get Latest File" library="ReportMaker">
<arguments>
<arg>${getfilePath}</arg>
</arguments>
<assign>
<var>${imagePath}</var>
</assign>
<msg timestamp="20210408 19:08:59.472" level="INFO">${imagePath} = C:\Git_Evergreen\transform_arr\Results\LoanIQ\TC01 - Validate ARR Pricing Option at Deal Level and Add Libor Option___2021-04-08 19-04-35.729\Deal Notebook - Calendar - Add Holiday Calendar - US Holid...</msg>
<status status="PASS" starttime="20210408 19:08:59.471" endtime="20210408 19:08:59.473"></status>
</kw>
<kw name="Put Screenshot With Text" library="ReportMaker">
<arguments>
<arg>${imagePath}</arg>
<arg>${imageName}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:08:59.524" endtime="20210408 19:08:59.539"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:59.164" endtime="20210408 19:08:59.539"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:43.140" endtime="20210408 19:08:59.539"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:32.320" endtime="20210408 19:08:59.540"></status>
</kw>
<msg timestamp="20210408 19:08:59.540" level="INFO">Mx Execute Template With Multiple Data keyword passed for all the data</msg>
<status status="PASS" starttime="20210408 19:08:32.288" endtime="20210408 19:08:59.540"></status>
</kw>
<kw name="Mx Execute Template With Multiple Data" library="GenericLib">
<doc>| Usage |
 This keyword is used to run template with multiple data.</doc>
<arguments>
<arg>Input Deal Pricing Options at Pricing Rules Tab</arg>
<arg>${ExcelPath}</arg>
<arg>${Deal_1}</arg>
<arg>CRED01_DealSetup</arg>
</arguments>
<kw name="Input Deal Pricing Options at Pricing Rules Tab" library="CRED01_DealSetUpWithoutOrigination">
<doc>This keyword is used to Input Deal Pricing Options at Pricing Rules Tab
@author: hstone 24NOV2020 - initial create
@update: jloretiz 04FEB2021 - add additional scripts for ARR scenarios</doc>
<arguments>
<arg>OrderedDict([('rowid', '1'), ('Test_Case', 'ARR_Scenario3'), ('Deal_NamePrefix', 'ARR_LIBORSC3'), ('Deal_AliasPrefix', 'SC3'), ('Deal_Name', 'ARR_LIBORSC308042021190438PNT'), ('Deal_Alias', 'SC308042021190441XJG'), ('Deal_EffectiveDate', '26-Oct-2016'), ('Deal_AgreementDate', '26-Oct-2016'), ('Deal_AdjustmentSettings', 'Present'), ('Deal_AgreementDateAdjustment', '30'), ('Deal_EffectiveDateAdjustment', '30'), ('Deal_Currency', 'USD'), ('Deal_DepartmentCode', 'NAM'), ('Deal_Department', 'North America'), ('Deal_SalesGroup', 'Sales Group 1'), ('Deal_AternateID', ''), ('Deal_ANSIID', ''), ('Deal_IsSoleLender', 'OFF'), ('Deal_ClassificationCode', 'GCP'), ('Deal_ClassificationDesc', 'General Corp Purpose'), ('Deal_AdminAgent', 'BNS CANADA CORPORATE BANKING'), ('Deal_AdminAgentLocation', 'Toronto, Canada'), ('DealAdminAgent_SGAlias', 'BC'), ('DealAdminAgent_PreferredRI', ''), ('DealAdminAgent_ServicingGroup', 'CANADA CORPORATE BANKING'), ('Deal_ProposedCmt', '100,000,000.00'), ('Deal_EarlyDiscussion', 'OFF'), ('Deal_ExpenseCode', '0394703947'), ('Deal_HolidayCalendarRemove', 'Canadian'), ('Deal_HolidayCalendarAdd', 'US Holiday Calendar (New York)'), ('Deal_IsPricingOptionARR', 'TRUE'), ('Deal_PricingOption_CCY', ''), ('Deal_PricingOption', 'SOFR Daily Compounding W OPS Not Overridable'), ('PricingOption_IsARR', 'False'), ('PricingOption_InitialFractionRate', 'Actual'), ('PricingOption_RoundingDecimal', 'Actual'), ('PricingOption_NonBusinessDayRule', 'Modified Following Business Day'), ('PricingOption_BillNoOfDays', '0'), ('PricingOption_MatrixChangeAppMthd', 'Effective date of change'), ('PricingOption_RateChangeAppMthd', 'Effective date of change'), ('PricingOption_RACInitialFractionRate', ''), ('PricingOption_RACRoundingDecimal', ''), ('PricingOption_RACRoundingMethod', ''), ('PricingOption_PercentOfRateFormulaUsage', '(Base + Spread + RAC) * PCT'), ('PricingOption_RepricingNonBusinessDayRule', 'Modified Following Business Day'), ('PricingOption_FeeOnLenderShareFunding', ''), ('PricingOption_InterestDueUponPrincipalPayment', 'OFF'), ('PricingOption_InterestDueUponRepricing', ''), ('PricingOption_ReferenceBanksApply', 'OFF'), ('PricingOption_IntentNoticeDaysInAdvance', '3'), ('PricingOption_IntentNoticeTime', '12'), ('PricingOption_12HrPeriodOption', ''), ('PricingOption_MaximumDrawAmount', ''), ('PricingOption_MinimumDrawAmount', ''), ('PricingOption_MinimumPaymentAmount', ''), ('PricingOption_MinimumAmountMultiples', ''), ('PricingOption_BillBorrower', 'YES'), ('PricingOption_ARRObservationPeriod', 'ON'), ('PricingOption_LookbackDays', '5'), ('PricingOption_LockoutDays', '0'), ('PricingOption_RateBasis', 'Actual/360'), ('PricingOption_CalculationMethod', 'Daily Rate With Compounding')])</arg>
</arguments>
<kw name="Report Sub Header" library="ReportMaker_Keywords">
<doc>This keyword is used to add given argument as sub header in test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Input Deal Pricing Options at Pricing Rules Tab</arg>
</arguments>
<kw name="Set Report Sub Header" library="ReportMaker">
<arguments>
<arg>${SubHeader}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:08:59.724" endtime="20210408 19:08:59.726"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:59.673" endtime="20210408 19:08:59.726"></status>
</kw>
<kw name="Add Pricing Option" library="Deal_Notebook">
<doc>This keyword adds a pricing option.
@author: fmamaril DDMMMYYYY - initial create
@update: mnanquil DDMMMYYYY - Changed verify text in java tree on line 540 to mx loaniq select string.
@update: rtarayao DDMMMYYYY - Added an optional argument to handle pricing options that does not tick on Bill Borrower checkbox.
@update: ehugo 28MAY2020 - added keyword Pre-processing; added screenshot
@update: hstone 16OCT2020 - Completed all Keyword Pre-processing for all arguments
- Added 'Mx LoanIQ Set JavaWindow("title:=Interest Pricing Option.*").JavaCheckBox("attached text:=Bill Borrower.*") OFF' for unchecking condition
- Added 'Run Keyword If '${PricingOption_FeeOnLenderShareFunding}' != 'None' Mx LoanIQ Check Or Uncheck JavaWindow("title:=Interest Pricing Option.*").JavaCheckBox("attached text:=Fee on Lender Shares Due At Funding") ${PricingOption_FeeOnLenderShareFunding}'
- Moved to the end of fill-out: 'Run Keyword If '${PricingOption_CCY}' != 'None' Mx LoanIQ Select Combo Box Value JavaWindow("title:=Interest Pricing Option.*").JavaList("attached text:=CCY:") ${PricingOption_CCY}'
- Added empty check for '${PricingOption_InterestDueUponRepricing}' before checkbox fill-out
@update: jloretiz 11FEB2021 - added condition for empty data</doc>
<arguments>
<arg>&amp;{ExcelPath}[Deal_PricingOption]</arg>
<arg>&amp;{ExcelPath}[PricingOption_InitialFractionRate]</arg>
<arg>&amp;{ExcelPath}[PricingOption_RoundingDecimal]</arg>
<arg>&amp;{ExcelPath}[PricingOption_NonBusinessDayRule]</arg>
<arg>&amp;{ExcelPath}[PricingOption_BillNoOfDays]</arg>
<arg>&amp;{ExcelPath}[PricingOption_MatrixChangeAppMthd]</arg>
<arg>&amp;{ExcelPath}[PricingOption_RateChangeAppMthd]</arg>
<arg>&amp;{ExcelPath}[PricingOption_RACInitialFractionRate]</arg>
<arg>&amp;{ExcelPath}[PricingOption_RACRoundingDecimal]</arg>
<arg>&amp;{ExcelPath}[PricingOption_RACRoundingMethod]</arg>
<arg>&amp;{ExcelPath}[PricingOption_PercentOfRateFormulaUsage]</arg>
<arg>&amp;{ExcelPath}[PricingOption_RepricingNonBusinessDayRule]</arg>
<arg>&amp;{ExcelPath}[PricingOption_FeeOnLenderShareFunding]</arg>
<arg>&amp;{ExcelPath}[PricingOption_InterestDueUponPrincipalPayment]</arg>
<arg>&amp;{ExcelPath}[PricingOption_InterestDueUponRepricing]</arg>
<arg>&amp;{ExcelPath}[PricingOption_ReferenceBanksApply]</arg>
<arg>&amp;{ExcelPath}[PricingOption_IntentNoticeDaysInAdvance]</arg>
<arg>&amp;{ExcelPath}[PricingOption_IntentNoticeTime]</arg>
<arg>&amp;{ExcelPath}[PricingOption_12HrPeriodOption]</arg>
<arg>&amp;{ExcelPath}[PricingOption_MaximumDrawAmount]</arg>
<arg>&amp;{ExcelPath}[PricingOption_MinimumDrawAmount]</arg>
<arg>&amp;{ExcelPath}[PricingOption_MinimumPaymentAmount]</arg>
<arg>&amp;{ExcelPath}[PricingOption_MinimumAmountMultiples]</arg>
<arg>&amp;{ExcelPath}[Deal_PricingOption_CCY]</arg>
<arg>&amp;{ExcelPath}[PricingOption_BillBorrower]</arg>
</arguments>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sPricingRule_Option}</arg>
</arguments>
<assign>
<var>${PricingRule_Option}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:00.336" endtime="20210408 19:09:00.337"></status>
</kw>
<msg timestamp="20210408 19:09:00.337" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:09:00.334" endtime="20210408 19:09:00.337"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:09:00.536" level="INFO">${List_Argument_Excel_Value} = ['SOFR Daily Compounding W OPS Not Overridable']</msg>
<status status="PASS" starttime="20210408 19:09:00.535" endtime="20210408 19:09:00.536"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:09:00.589" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:09:00.589" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:09:00.588" endtime="20210408 19:09:00.589"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:09:00.640" level="INFO">${Arg_User_Input} = SOFR DAILY COMPOUNDING W OPS NOT OVERRIDABLE</msg>
<status status="PASS" starttime="20210408 19:09:00.639" endtime="20210408 19:09:00.640"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:09:00.691" level="INFO">${Arg_User_Input} = SOFR DAILY COMPOUNDING W OPS NOT OVERRIDABLE</msg>
<status status="PASS" starttime="20210408 19:09:00.690" endtime="20210408 19:09:00.691"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:09:00.744" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:00.743" endtime="20210408 19:09:00.744"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:09:00.795" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:00.794" endtime="20210408 19:09:00.795"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:09:00.845" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:00.844" endtime="20210408 19:09:00.845"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:00.903" endtime="20210408 19:09:00.904"></status>
</kw>
<msg timestamp="20210408 19:09:00.904" level="INFO">${Extracted_Argument_Value} = SOFR Daily Compounding W OPS Not Overridable</msg>
<status status="PASS" starttime="20210408 19:09:00.902" endtime="20210408 19:09:00.904"></status>
</kw>
<status status="PASS" starttime="20210408 19:09:00.484" endtime="20210408 19:09:00.904"></status>
</kw>
<msg timestamp="20210408 19:09:00.905" level="INFO">${Extracted_Argument_Value} = SOFR Daily Compounding W OPS Not Overridable</msg>
<status status="PASS" starttime="20210408 19:09:00.386" endtime="20210408 19:09:00.905"></status>
</kw>
<msg timestamp="20210408 19:09:00.905" level="INFO">${PricingRule_Option} = SOFR Daily Compounding W OPS Not Overridable</msg>
<status status="PASS" starttime="20210408 19:09:00.284" endtime="20210408 19:09:00.905"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sInitialFractionRate_Round}</arg>
</arguments>
<assign>
<var>${InitialFractionRate_Round}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:01.122" endtime="20210408 19:09:01.122"></status>
</kw>
<msg timestamp="20210408 19:09:01.122" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:09:01.120" endtime="20210408 19:09:01.122"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:09:01.328" level="INFO">${List_Argument_Excel_Value} = ['Actual']</msg>
<status status="PASS" starttime="20210408 19:09:01.328" endtime="20210408 19:09:01.328"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:09:01.379" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:09:01.379" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:09:01.378" endtime="20210408 19:09:01.379"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:09:01.431" level="INFO">${Arg_User_Input} = ACTUAL</msg>
<status status="PASS" starttime="20210408 19:09:01.431" endtime="20210408 19:09:01.432"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:09:01.481" level="INFO">${Arg_User_Input} = ACTUAL</msg>
<status status="PASS" starttime="20210408 19:09:01.481" endtime="20210408 19:09:01.481"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:09:01.534" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:01.533" endtime="20210408 19:09:01.534"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:09:01.587" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:01.586" endtime="20210408 19:09:01.587"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:09:01.640" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:01.640" endtime="20210408 19:09:01.641"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:01.692" endtime="20210408 19:09:01.693"></status>
</kw>
<msg timestamp="20210408 19:09:01.693" level="INFO">${Extracted_Argument_Value} = Actual</msg>
<status status="PASS" starttime="20210408 19:09:01.690" endtime="20210408 19:09:01.693"></status>
</kw>
<status status="PASS" starttime="20210408 19:09:01.271" endtime="20210408 19:09:01.693"></status>
</kw>
<msg timestamp="20210408 19:09:01.693" level="INFO">${Extracted_Argument_Value} = Actual</msg>
<status status="PASS" starttime="20210408 19:09:01.171" endtime="20210408 19:09:01.693"></status>
</kw>
<msg timestamp="20210408 19:09:01.694" level="INFO">${InitialFractionRate_Round} = Actual</msg>
<status status="PASS" starttime="20210408 19:09:01.063" endtime="20210408 19:09:01.694"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sRoundingDecimal_Round}</arg>
</arguments>
<assign>
<var>${RoundingDecimal_Round}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:01.900" endtime="20210408 19:09:01.900"></status>
</kw>
<msg timestamp="20210408 19:09:01.901" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:09:01.898" endtime="20210408 19:09:01.901"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:09:02.207" level="INFO">${List_Argument_Excel_Value} = ['Actual']</msg>
<status status="PASS" starttime="20210408 19:09:02.206" endtime="20210408 19:09:02.207"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:09:02.257" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:09:02.257" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:09:02.257" endtime="20210408 19:09:02.258"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:09:02.309" level="INFO">${Arg_User_Input} = ACTUAL</msg>
<status status="PASS" starttime="20210408 19:09:02.309" endtime="20210408 19:09:02.309"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:09:02.360" level="INFO">${Arg_User_Input} = ACTUAL</msg>
<status status="PASS" starttime="20210408 19:09:02.360" endtime="20210408 19:09:02.360"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:09:02.412" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:02.412" endtime="20210408 19:09:02.413"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:09:02.465" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:02.464" endtime="20210408 19:09:02.465"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:09:02.518" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:02.517" endtime="20210408 19:09:02.518"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:02.570" endtime="20210408 19:09:02.570"></status>
</kw>
<msg timestamp="20210408 19:09:02.570" level="INFO">${Extracted_Argument_Value} = Actual</msg>
<status status="PASS" starttime="20210408 19:09:02.568" endtime="20210408 19:09:02.570"></status>
</kw>
<status status="PASS" starttime="20210408 19:09:02.048" endtime="20210408 19:09:02.571"></status>
</kw>
<msg timestamp="20210408 19:09:02.571" level="INFO">${Extracted_Argument_Value} = Actual</msg>
<status status="PASS" starttime="20210408 19:09:01.950" endtime="20210408 19:09:02.571"></status>
</kw>
<msg timestamp="20210408 19:09:02.571" level="INFO">${RoundingDecimal_Round} = Actual</msg>
<status status="PASS" starttime="20210408 19:09:01.846" endtime="20210408 19:09:02.571"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sNonBusinessDayRule}</arg>
</arguments>
<assign>
<var>${NonBusinessDayRule}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:02.782" endtime="20210408 19:09:02.782"></status>
</kw>
<msg timestamp="20210408 19:09:02.782" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:09:02.780" endtime="20210408 19:09:02.783"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:09:03.006" level="INFO">${List_Argument_Excel_Value} = ['Modified Following Business Day']</msg>
<status status="PASS" starttime="20210408 19:09:03.006" endtime="20210408 19:09:03.006"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:09:03.058" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:09:03.058" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:09:03.057" endtime="20210408 19:09:03.058"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:09:03.121" level="INFO">${Arg_User_Input} = MODIFIED FOLLOWING BUSINESS DAY</msg>
<status status="PASS" starttime="20210408 19:09:03.120" endtime="20210408 19:09:03.121"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:09:03.173" level="INFO">${Arg_User_Input} = MODIFIED FOLLOWING BUSINESS DAY</msg>
<status status="PASS" starttime="20210408 19:09:03.173" endtime="20210408 19:09:03.174"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:09:03.226" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:03.225" endtime="20210408 19:09:03.226"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:09:03.279" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:03.278" endtime="20210408 19:09:03.279"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:09:03.330" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:03.329" endtime="20210408 19:09:03.330"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:03.384" endtime="20210408 19:09:03.385"></status>
</kw>
<msg timestamp="20210408 19:09:03.385" level="INFO">${Extracted_Argument_Value} = Modified Following Business Day</msg>
<status status="PASS" starttime="20210408 19:09:03.382" endtime="20210408 19:09:03.385"></status>
</kw>
<status status="PASS" starttime="20210408 19:09:02.952" endtime="20210408 19:09:03.386"></status>
</kw>
<msg timestamp="20210408 19:09:03.386" level="INFO">${Extracted_Argument_Value} = Modified Following Business Day</msg>
<status status="PASS" starttime="20210408 19:09:02.849" endtime="20210408 19:09:03.387"></status>
</kw>
<msg timestamp="20210408 19:09:03.387" level="INFO">${NonBusinessDayRule} = Modified Following Business Day</msg>
<status status="PASS" starttime="20210408 19:09:02.727" endtime="20210408 19:09:03.387"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${iPricingOption_BillNoOfDays}</arg>
</arguments>
<assign>
<var>${PricingOption_BillNoOfDays}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:03.613" endtime="20210408 19:09:03.614"></status>
</kw>
<msg timestamp="20210408 19:09:03.614" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:09:03.612" endtime="20210408 19:09:03.614"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:09:03.821" level="INFO">${List_Argument_Excel_Value} = ['0']</msg>
<status status="PASS" starttime="20210408 19:09:03.820" endtime="20210408 19:09:03.821"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:09:03.871" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:09:03.871" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:09:03.871" endtime="20210408 19:09:03.871"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:09:03.927" level="INFO">${Arg_User_Input} = 0</msg>
<status status="PASS" starttime="20210408 19:09:03.927" endtime="20210408 19:09:03.927"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:09:03.977" level="INFO">${Arg_User_Input} = 0</msg>
<status status="PASS" starttime="20210408 19:09:03.977" endtime="20210408 19:09:03.978"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:09:04.031" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:04.030" endtime="20210408 19:09:04.031"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:09:04.086" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:04.086" endtime="20210408 19:09:04.086"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:09:04.139" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:04.139" endtime="20210408 19:09:04.140"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:04.194" endtime="20210408 19:09:04.195"></status>
</kw>
<msg timestamp="20210408 19:09:04.195" level="INFO">${Extracted_Argument_Value} = 0</msg>
<status status="PASS" starttime="20210408 19:09:04.192" endtime="20210408 19:09:04.195"></status>
</kw>
<status status="PASS" starttime="20210408 19:09:03.771" endtime="20210408 19:09:04.195"></status>
</kw>
<msg timestamp="20210408 19:09:04.196" level="INFO">${Extracted_Argument_Value} = 0</msg>
<status status="PASS" starttime="20210408 19:09:03.664" endtime="20210408 19:09:04.196"></status>
</kw>
<msg timestamp="20210408 19:09:04.196" level="INFO">${PricingOption_BillNoOfDays} = 0</msg>
<status status="PASS" starttime="20210408 19:09:03.553" endtime="20210408 19:09:04.196"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sMatrixChangeAppMethod}</arg>
</arguments>
<assign>
<var>${MatrixChangeAppMethod}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:04.577" endtime="20210408 19:09:04.577"></status>
</kw>
<msg timestamp="20210408 19:09:04.577" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:09:04.575" endtime="20210408 19:09:04.577"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:09:04.813" level="INFO">${List_Argument_Excel_Value} = ['Effective date of change']</msg>
<status status="PASS" starttime="20210408 19:09:04.812" endtime="20210408 19:09:04.813"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:09:04.865" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:09:04.865" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:09:04.865" endtime="20210408 19:09:04.865"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:09:04.918" level="INFO">${Arg_User_Input} = EFFECTIVE DATE OF CHANGE</msg>
<status status="PASS" starttime="20210408 19:09:04.918" endtime="20210408 19:09:04.918"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:09:04.970" level="INFO">${Arg_User_Input} = EFFECTIVE DATE OF CHANGE</msg>
<status status="PASS" starttime="20210408 19:09:04.969" endtime="20210408 19:09:04.970"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:09:05.022" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:05.022" endtime="20210408 19:09:05.023"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:09:05.075" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:05.075" endtime="20210408 19:09:05.075"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:09:05.128" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:05.128" endtime="20210408 19:09:05.129"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:05.181" endtime="20210408 19:09:05.181"></status>
</kw>
<msg timestamp="20210408 19:09:05.182" level="INFO">${Extracted_Argument_Value} = Effective date of change</msg>
<status status="PASS" starttime="20210408 19:09:05.179" endtime="20210408 19:09:05.182"></status>
</kw>
<status status="PASS" starttime="20210408 19:09:04.758" endtime="20210408 19:09:05.182"></status>
</kw>
<msg timestamp="20210408 19:09:05.182" level="INFO">${Extracted_Argument_Value} = Effective date of change</msg>
<status status="PASS" starttime="20210408 19:09:04.658" endtime="20210408 19:09:05.182"></status>
</kw>
<msg timestamp="20210408 19:09:05.182" level="INFO">${MatrixChangeAppMethod} = Effective date of change</msg>
<status status="PASS" starttime="20210408 19:09:04.498" endtime="20210408 19:09:05.183"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sRateChangeAppMethod}</arg>
</arguments>
<assign>
<var>${RateChangeAppMethod}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:05.392" endtime="20210408 19:09:05.392"></status>
</kw>
<msg timestamp="20210408 19:09:05.392" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:09:05.390" endtime="20210408 19:09:05.392"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:09:05.593" level="INFO">${List_Argument_Excel_Value} = ['Effective date of change']</msg>
<status status="PASS" starttime="20210408 19:09:05.593" endtime="20210408 19:09:05.593"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:09:05.643" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:09:05.643" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:09:05.643" endtime="20210408 19:09:05.643"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:09:05.698" level="INFO">${Arg_User_Input} = EFFECTIVE DATE OF CHANGE</msg>
<status status="PASS" starttime="20210408 19:09:05.697" endtime="20210408 19:09:05.698"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:09:05.758" level="INFO">${Arg_User_Input} = EFFECTIVE DATE OF CHANGE</msg>
<status status="PASS" starttime="20210408 19:09:05.757" endtime="20210408 19:09:05.758"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:09:05.814" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:05.814" endtime="20210408 19:09:05.815"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:09:05.868" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:05.868" endtime="20210408 19:09:05.868"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:09:05.921" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:05.921" endtime="20210408 19:09:05.921"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:05.975" endtime="20210408 19:09:05.976"></status>
</kw>
<msg timestamp="20210408 19:09:05.976" level="INFO">${Extracted_Argument_Value} = Effective date of change</msg>
<status status="PASS" starttime="20210408 19:09:05.973" endtime="20210408 19:09:05.976"></status>
</kw>
<status status="PASS" starttime="20210408 19:09:05.541" endtime="20210408 19:09:05.976"></status>
</kw>
<msg timestamp="20210408 19:09:05.976" level="INFO">${Extracted_Argument_Value} = Effective date of change</msg>
<status status="PASS" starttime="20210408 19:09:05.443" endtime="20210408 19:09:05.976"></status>
</kw>
<msg timestamp="20210408 19:09:05.977" level="INFO">${RateChangeAppMethod} = Effective date of change</msg>
<status status="PASS" starttime="20210408 19:09:05.336" endtime="20210408 19:09:05.977"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sPricingOption_InitialFractionRate}</arg>
</arguments>
<assign>
<var>${PricingOption_InitialFractionRate}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:06.202" endtime="20210408 19:09:06.203"></status>
</kw>
<msg timestamp="20210408 19:09:06.203" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:09:06.201" endtime="20210408 19:09:06.203"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:09:06.409" level="INFO">${List_Argument_Excel_Value} = ['']</msg>
<status status="PASS" starttime="20210408 19:09:06.409" endtime="20210408 19:09:06.409"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:09:06.461" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:09:06.461" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:09:06.460" endtime="20210408 19:09:06.461"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:09:06.511" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:09:06.511" endtime="20210408 19:09:06.512"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:09:06.564" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:09:06.564" endtime="20210408 19:09:06.564"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:09:06.616" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:06.615" endtime="20210408 19:09:06.616"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:09:06.670" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:06.669" endtime="20210408 19:09:06.670"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:09:06.724" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:06.723" endtime="20210408 19:09:06.724"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:06.777" endtime="20210408 19:09:06.777"></status>
</kw>
<msg timestamp="20210408 19:09:06.777" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:09:06.775" endtime="20210408 19:09:06.777"></status>
</kw>
<status status="PASS" starttime="20210408 19:09:06.357" endtime="20210408 19:09:06.778"></status>
</kw>
<msg timestamp="20210408 19:09:06.778" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:09:06.253" endtime="20210408 19:09:06.778"></status>
</kw>
<msg timestamp="20210408 19:09:06.778" level="INFO">${PricingOption_InitialFractionRate} = </msg>
<status status="PASS" starttime="20210408 19:09:06.145" endtime="20210408 19:09:06.778"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sPricingOption_RoundingDecimalPrecision}</arg>
</arguments>
<assign>
<var>${PricingOption_RoundingDecimalPrecision}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:06.988" endtime="20210408 19:09:06.989"></status>
</kw>
<msg timestamp="20210408 19:09:06.989" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:09:06.987" endtime="20210408 19:09:06.989"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:09:07.197" level="INFO">${List_Argument_Excel_Value} = ['']</msg>
<status status="PASS" starttime="20210408 19:09:07.196" endtime="20210408 19:09:07.197"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:09:07.268" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:09:07.268" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:09:07.267" endtime="20210408 19:09:07.268"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:09:07.340" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:09:07.339" endtime="20210408 19:09:07.340"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:09:07.395" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:09:07.394" endtime="20210408 19:09:07.395"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:09:07.450" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:07.449" endtime="20210408 19:09:07.450"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:09:07.503" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:07.502" endtime="20210408 19:09:07.503"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:09:07.664" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:07.663" endtime="20210408 19:09:07.664"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:07.717" endtime="20210408 19:09:07.717"></status>
</kw>
<msg timestamp="20210408 19:09:07.717" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:09:07.715" endtime="20210408 19:09:07.717"></status>
</kw>
<status status="PASS" starttime="20210408 19:09:07.146" endtime="20210408 19:09:07.718"></status>
</kw>
<msg timestamp="20210408 19:09:07.718" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:09:07.040" endtime="20210408 19:09:07.718"></status>
</kw>
<msg timestamp="20210408 19:09:07.718" level="INFO">${PricingOption_RoundingDecimalPrecision} = </msg>
<status status="PASS" starttime="20210408 19:09:06.934" endtime="20210408 19:09:07.718"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sPricingOption_RoundingApplicationMethod}</arg>
</arguments>
<assign>
<var>${PricingOption_RoundingApplicationMethod}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:07.927" endtime="20210408 19:09:07.927"></status>
</kw>
<msg timestamp="20210408 19:09:07.927" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:09:07.925" endtime="20210408 19:09:07.928"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:09:08.142" level="INFO">${List_Argument_Excel_Value} = ['']</msg>
<status status="PASS" starttime="20210408 19:09:08.141" endtime="20210408 19:09:08.142"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:09:08.193" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:09:08.193" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:09:08.192" endtime="20210408 19:09:08.193"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:09:08.245" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:09:08.244" endtime="20210408 19:09:08.245"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:09:08.300" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:09:08.299" endtime="20210408 19:09:08.300"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:09:08.352" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:08.351" endtime="20210408 19:09:08.352"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:09:08.404" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:08.404" endtime="20210408 19:09:08.404"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:09:08.459" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:08.458" endtime="20210408 19:09:08.460"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:08.514" endtime="20210408 19:09:08.514"></status>
</kw>
<msg timestamp="20210408 19:09:08.515" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:09:08.511" endtime="20210408 19:09:08.515"></status>
</kw>
<status status="PASS" starttime="20210408 19:09:08.091" endtime="20210408 19:09:08.515"></status>
</kw>
<msg timestamp="20210408 19:09:08.515" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:09:07.980" endtime="20210408 19:09:08.515"></status>
</kw>
<msg timestamp="20210408 19:09:08.516" level="INFO">${PricingOption_RoundingApplicationMethod} = </msg>
<status status="PASS" starttime="20210408 19:09:07.874" endtime="20210408 19:09:08.516"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sPricingOption_PercentOfRateFormulaUsage}</arg>
</arguments>
<assign>
<var>${PricingOption_PercentOfRateFormulaUsage}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:08.736" endtime="20210408 19:09:08.737"></status>
</kw>
<msg timestamp="20210408 19:09:08.737" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:09:08.735" endtime="20210408 19:09:08.737"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:09:08.954" level="INFO">${List_Argument_Excel_Value} = ['(Base + Spread + RAC) * PCT']</msg>
<status status="PASS" starttime="20210408 19:09:08.954" endtime="20210408 19:09:08.955"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:09:09.005" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:09:09.005" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:09:09.004" endtime="20210408 19:09:09.005"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:09:09.056" level="INFO">${Arg_User_Input} = (BASE + SPREAD + RAC) * PCT</msg>
<status status="PASS" starttime="20210408 19:09:09.056" endtime="20210408 19:09:09.056"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:09:09.109" level="INFO">${Arg_User_Input} = (BASE + SPREAD + RAC) * PCT</msg>
<status status="PASS" starttime="20210408 19:09:09.108" endtime="20210408 19:09:09.109"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:09:09.163" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:09.162" endtime="20210408 19:09:09.163"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:09:09.215" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:09.214" endtime="20210408 19:09:09.215"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:09:09.266" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:09.265" endtime="20210408 19:09:09.266"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:09.320" endtime="20210408 19:09:09.321"></status>
</kw>
<msg timestamp="20210408 19:09:09.321" level="INFO">${Extracted_Argument_Value} = (Base + Spread + RAC) * PCT</msg>
<status status="PASS" starttime="20210408 19:09:09.318" endtime="20210408 19:09:09.321"></status>
</kw>
<status status="PASS" starttime="20210408 19:09:08.901" endtime="20210408 19:09:09.321"></status>
</kw>
<msg timestamp="20210408 19:09:09.321" level="INFO">${Extracted_Argument_Value} = (Base + Spread + RAC) * PCT</msg>
<status status="PASS" starttime="20210408 19:09:08.793" endtime="20210408 19:09:09.322"></status>
</kw>
<msg timestamp="20210408 19:09:09.322" level="INFO">${PricingOption_PercentOfRateFormulaUsage} = (Base + Spread + RAC) * PCT</msg>
<status status="PASS" starttime="20210408 19:09:08.673" endtime="20210408 19:09:09.322"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sPricingOption_RepricingNonBusinessDayRule}</arg>
</arguments>
<assign>
<var>${PricingOption_RepricingNonBusinessDayRule}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:09.538" endtime="20210408 19:09:09.539"></status>
</kw>
<msg timestamp="20210408 19:09:09.539" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:09:09.537" endtime="20210408 19:09:09.539"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:09:09.745" level="INFO">${List_Argument_Excel_Value} = ['Modified Following Business Day']</msg>
<status status="PASS" starttime="20210408 19:09:09.745" endtime="20210408 19:09:09.746"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:09:09.795" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:09:09.796" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:09:09.795" endtime="20210408 19:09:09.796"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:09:09.845" level="INFO">${Arg_User_Input} = MODIFIED FOLLOWING BUSINESS DAY</msg>
<status status="PASS" starttime="20210408 19:09:09.845" endtime="20210408 19:09:09.845"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:09:09.895" level="INFO">${Arg_User_Input} = MODIFIED FOLLOWING BUSINESS DAY</msg>
<status status="PASS" starttime="20210408 19:09:09.895" endtime="20210408 19:09:09.895"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:09:09.947" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:09.946" endtime="20210408 19:09:09.947"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:09:09.998" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:09.997" endtime="20210408 19:09:09.998"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:09:10.048" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:10.048" endtime="20210408 19:09:10.049"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:10.101" endtime="20210408 19:09:10.101"></status>
</kw>
<msg timestamp="20210408 19:09:10.102" level="INFO">${Extracted_Argument_Value} = Modified Following Business Day</msg>
<status status="PASS" starttime="20210408 19:09:10.099" endtime="20210408 19:09:10.102"></status>
</kw>
<status status="PASS" starttime="20210408 19:09:09.691" endtime="20210408 19:09:10.102"></status>
</kw>
<msg timestamp="20210408 19:09:10.102" level="INFO">${Extracted_Argument_Value} = Modified Following Business Day</msg>
<status status="PASS" starttime="20210408 19:09:09.590" endtime="20210408 19:09:10.102"></status>
</kw>
<msg timestamp="20210408 19:09:10.103" level="INFO">${PricingOption_RepricingNonBusinessDayRule} = Modified Following Business Day</msg>
<status status="PASS" starttime="20210408 19:09:09.484" endtime="20210408 19:09:10.103"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sPricingOption_FeeOnLenderShareFunding}</arg>
</arguments>
<assign>
<var>${PricingOption_FeeOnLenderShareFunding}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:10.415" endtime="20210408 19:09:10.415"></status>
</kw>
<msg timestamp="20210408 19:09:10.415" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:09:10.413" endtime="20210408 19:09:10.415"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:09:10.616" level="INFO">${List_Argument_Excel_Value} = ['']</msg>
<status status="PASS" starttime="20210408 19:09:10.615" endtime="20210408 19:09:10.616"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:09:10.667" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:09:10.667" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:09:10.667" endtime="20210408 19:09:10.667"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:09:10.721" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:09:10.720" endtime="20210408 19:09:10.721"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:09:10.771" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:09:10.770" endtime="20210408 19:09:10.771"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:09:10.821" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:10.820" endtime="20210408 19:09:10.821"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:09:10.872" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:10.871" endtime="20210408 19:09:10.872"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:09:10.922" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:10.921" endtime="20210408 19:09:10.922"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:10.977" endtime="20210408 19:09:10.977"></status>
</kw>
<msg timestamp="20210408 19:09:10.978" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:09:10.975" endtime="20210408 19:09:10.978"></status>
</kw>
<status status="PASS" starttime="20210408 19:09:10.564" endtime="20210408 19:09:10.978"></status>
</kw>
<msg timestamp="20210408 19:09:10.978" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:09:10.466" endtime="20210408 19:09:10.978"></status>
</kw>
<msg timestamp="20210408 19:09:10.978" level="INFO">${PricingOption_FeeOnLenderShareFunding} = </msg>
<status status="PASS" starttime="20210408 19:09:10.361" endtime="20210408 19:09:10.979"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sPricingOption_InterestDueUponPrincipalPayment}</arg>
</arguments>
<assign>
<var>${PricingOption_InterestDueUponPrincipalPayment}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:11.190" endtime="20210408 19:09:11.190"></status>
</kw>
<msg timestamp="20210408 19:09:11.191" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:09:11.188" endtime="20210408 19:09:11.191"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:09:11.397" level="INFO">${List_Argument_Excel_Value} = ['OFF']</msg>
<status status="PASS" starttime="20210408 19:09:11.396" endtime="20210408 19:09:11.397"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:09:11.452" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:09:11.452" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:09:11.451" endtime="20210408 19:09:11.452"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:09:11.502" level="INFO">${Arg_User_Input} = OFF</msg>
<status status="PASS" starttime="20210408 19:09:11.502" endtime="20210408 19:09:11.502"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:09:11.555" level="INFO">${Arg_User_Input} = OFF</msg>
<status status="PASS" starttime="20210408 19:09:11.555" endtime="20210408 19:09:11.555"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:09:11.607" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:11.607" endtime="20210408 19:09:11.608"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:09:11.657" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:11.657" endtime="20210408 19:09:11.657"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:09:11.710" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:11.709" endtime="20210408 19:09:11.710"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:11.763" endtime="20210408 19:09:11.763"></status>
</kw>
<msg timestamp="20210408 19:09:11.763" level="INFO">${Extracted_Argument_Value} = OFF</msg>
<status status="PASS" starttime="20210408 19:09:11.761" endtime="20210408 19:09:11.763"></status>
</kw>
<status status="PASS" starttime="20210408 19:09:11.345" endtime="20210408 19:09:11.764"></status>
</kw>
<msg timestamp="20210408 19:09:11.764" level="INFO">${Extracted_Argument_Value} = OFF</msg>
<status status="PASS" starttime="20210408 19:09:11.243" endtime="20210408 19:09:11.764"></status>
</kw>
<msg timestamp="20210408 19:09:11.764" level="INFO">${PricingOption_InterestDueUponPrincipalPayment} = OFF</msg>
<status status="PASS" starttime="20210408 19:09:11.136" endtime="20210408 19:09:11.764"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sPricingOption_InterestDueUponRepricing}</arg>
</arguments>
<assign>
<var>${PricingOption_InterestDueUponRepricing}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:11.973" endtime="20210408 19:09:11.973"></status>
</kw>
<msg timestamp="20210408 19:09:11.973" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:09:11.971" endtime="20210408 19:09:11.974"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:09:12.196" level="INFO">${List_Argument_Excel_Value} = ['']</msg>
<status status="PASS" starttime="20210408 19:09:12.196" endtime="20210408 19:09:12.196"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:09:12.251" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:09:12.251" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:09:12.250" endtime="20210408 19:09:12.251"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:09:12.335" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:09:12.334" endtime="20210408 19:09:12.335"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:09:12.408" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:09:12.408" endtime="20210408 19:09:12.408"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:09:12.486" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:12.485" endtime="20210408 19:09:12.486"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:09:12.660" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:12.659" endtime="20210408 19:09:12.660"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:09:12.711" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:12.711" endtime="20210408 19:09:12.712"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:12.764" endtime="20210408 19:09:12.765"></status>
</kw>
<msg timestamp="20210408 19:09:12.765" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:09:12.762" endtime="20210408 19:09:12.765"></status>
</kw>
<status status="PASS" starttime="20210408 19:09:12.142" endtime="20210408 19:09:12.765"></status>
</kw>
<msg timestamp="20210408 19:09:12.766" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:09:12.024" endtime="20210408 19:09:12.766"></status>
</kw>
<msg timestamp="20210408 19:09:12.766" level="INFO">${PricingOption_InterestDueUponRepricing} = </msg>
<status status="PASS" starttime="20210408 19:09:11.919" endtime="20210408 19:09:12.766"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sPricingOption_ReferenceBanksApply}</arg>
</arguments>
<assign>
<var>${PricingOption_ReferenceBanksApply}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:12.969" endtime="20210408 19:09:12.969"></status>
</kw>
<msg timestamp="20210408 19:09:12.970" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:09:12.967" endtime="20210408 19:09:12.970"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:09:13.171" level="INFO">${List_Argument_Excel_Value} = ['OFF']</msg>
<status status="PASS" starttime="20210408 19:09:13.171" endtime="20210408 19:09:13.171"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:09:13.222" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:09:13.222" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:09:13.221" endtime="20210408 19:09:13.222"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:09:13.273" level="INFO">${Arg_User_Input} = OFF</msg>
<status status="PASS" starttime="20210408 19:09:13.272" endtime="20210408 19:09:13.273"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:09:13.325" level="INFO">${Arg_User_Input} = OFF</msg>
<status status="PASS" starttime="20210408 19:09:13.325" endtime="20210408 19:09:13.325"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:09:13.377" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:13.376" endtime="20210408 19:09:13.377"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:09:13.430" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:13.429" endtime="20210408 19:09:13.430"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:09:13.482" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:13.481" endtime="20210408 19:09:13.482"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:13.534" endtime="20210408 19:09:13.535"></status>
</kw>
<msg timestamp="20210408 19:09:13.535" level="INFO">${Extracted_Argument_Value} = OFF</msg>
<status status="PASS" starttime="20210408 19:09:13.533" endtime="20210408 19:09:13.535"></status>
</kw>
<status status="PASS" starttime="20210408 19:09:13.120" endtime="20210408 19:09:13.535"></status>
</kw>
<msg timestamp="20210408 19:09:13.535" level="INFO">${Extracted_Argument_Value} = OFF</msg>
<status status="PASS" starttime="20210408 19:09:13.020" endtime="20210408 19:09:13.536"></status>
</kw>
<msg timestamp="20210408 19:09:13.536" level="INFO">${PricingOption_ReferenceBanksApply} = OFF</msg>
<status status="PASS" starttime="20210408 19:09:12.916" endtime="20210408 19:09:13.536"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sPricingOption_IntentNoticeDaysInAdvance}</arg>
</arguments>
<assign>
<var>${PricingOption_IntentNoticeDaysInAdvance}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:13.750" endtime="20210408 19:09:13.750"></status>
</kw>
<msg timestamp="20210408 19:09:13.751" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:09:13.749" endtime="20210408 19:09:13.751"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:09:14.024" level="INFO">${List_Argument_Excel_Value} = ['3']</msg>
<status status="PASS" starttime="20210408 19:09:14.024" endtime="20210408 19:09:14.025"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:09:14.119" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:09:14.119" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:09:14.118" endtime="20210408 19:09:14.119"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:09:14.175" level="INFO">${Arg_User_Input} = 3</msg>
<status status="PASS" starttime="20210408 19:09:14.175" endtime="20210408 19:09:14.176"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:09:14.228" level="INFO">${Arg_User_Input} = 3</msg>
<status status="PASS" starttime="20210408 19:09:14.228" endtime="20210408 19:09:14.228"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:09:14.281" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:14.280" endtime="20210408 19:09:14.281"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:09:14.333" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:14.332" endtime="20210408 19:09:14.333"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:09:14.405" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:14.404" endtime="20210408 19:09:14.405"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:14.469" endtime="20210408 19:09:14.469"></status>
</kw>
<msg timestamp="20210408 19:09:14.470" level="INFO">${Extracted_Argument_Value} = 3</msg>
<status status="PASS" starttime="20210408 19:09:14.466" endtime="20210408 19:09:14.470"></status>
</kw>
<status status="PASS" starttime="20210408 19:09:13.943" endtime="20210408 19:09:14.470"></status>
</kw>
<msg timestamp="20210408 19:09:14.470" level="INFO">${Extracted_Argument_Value} = 3</msg>
<status status="PASS" starttime="20210408 19:09:13.800" endtime="20210408 19:09:14.470"></status>
</kw>
<msg timestamp="20210408 19:09:14.471" level="INFO">${PricingOption_IntentNoticeDaysInAdvance} = 3</msg>
<status status="PASS" starttime="20210408 19:09:13.696" endtime="20210408 19:09:14.471"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sPricingOption_IntentNoticeTime}</arg>
</arguments>
<assign>
<var>${PricingOption_IntentNoticeTime}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:14.706" endtime="20210408 19:09:14.706"></status>
</kw>
<msg timestamp="20210408 19:09:14.706" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:09:14.704" endtime="20210408 19:09:14.707"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:09:14.909" level="INFO">${List_Argument_Excel_Value} = ['12']</msg>
<status status="PASS" starttime="20210408 19:09:14.908" endtime="20210408 19:09:14.909"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:09:14.959" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:09:14.960" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:09:14.959" endtime="20210408 19:09:14.960"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:09:15.011" level="INFO">${Arg_User_Input} = 12</msg>
<status status="PASS" starttime="20210408 19:09:15.010" endtime="20210408 19:09:15.011"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:09:15.062" level="INFO">${Arg_User_Input} = 12</msg>
<status status="PASS" starttime="20210408 19:09:15.061" endtime="20210408 19:09:15.062"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:09:15.112" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:15.111" endtime="20210408 19:09:15.112"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:09:15.163" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:15.162" endtime="20210408 19:09:15.163"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:09:15.215" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:15.214" endtime="20210408 19:09:15.215"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:15.269" endtime="20210408 19:09:15.269"></status>
</kw>
<msg timestamp="20210408 19:09:15.269" level="INFO">${Extracted_Argument_Value} = 12</msg>
<status status="PASS" starttime="20210408 19:09:15.266" endtime="20210408 19:09:15.269"></status>
</kw>
<status status="PASS" starttime="20210408 19:09:14.857" endtime="20210408 19:09:15.270"></status>
</kw>
<msg timestamp="20210408 19:09:15.270" level="INFO">${Extracted_Argument_Value} = 12</msg>
<status status="PASS" starttime="20210408 19:09:14.758" endtime="20210408 19:09:15.270"></status>
</kw>
<msg timestamp="20210408 19:09:15.270" level="INFO">${PricingOption_IntentNoticeTime} = 12</msg>
<status status="PASS" starttime="20210408 19:09:14.653" endtime="20210408 19:09:15.270"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sPricingOption_12HrPeriodOption}</arg>
</arguments>
<assign>
<var>${PricingOption_12HrPeriodOption}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:15.477" endtime="20210408 19:09:15.477"></status>
</kw>
<msg timestamp="20210408 19:09:15.477" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:09:15.475" endtime="20210408 19:09:15.478"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:09:15.679" level="INFO">${List_Argument_Excel_Value} = ['']</msg>
<status status="PASS" starttime="20210408 19:09:15.678" endtime="20210408 19:09:15.679"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:09:15.730" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:09:15.730" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:09:15.730" endtime="20210408 19:09:15.730"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:09:15.902" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:09:15.901" endtime="20210408 19:09:15.902"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:09:15.980" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:09:15.980" endtime="20210408 19:09:15.980"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:09:16.062" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:16.061" endtime="20210408 19:09:16.062"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:09:16.115" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:16.114" endtime="20210408 19:09:16.115"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:09:16.169" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:16.168" endtime="20210408 19:09:16.169"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:16.226" endtime="20210408 19:09:16.226"></status>
</kw>
<msg timestamp="20210408 19:09:16.227" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:09:16.224" endtime="20210408 19:09:16.227"></status>
</kw>
<status status="PASS" starttime="20210408 19:09:15.627" endtime="20210408 19:09:16.227"></status>
</kw>
<msg timestamp="20210408 19:09:16.227" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:09:15.528" endtime="20210408 19:09:16.228"></status>
</kw>
<msg timestamp="20210408 19:09:16.228" level="INFO">${PricingOption_12HrPeriodOption} = </msg>
<status status="PASS" starttime="20210408 19:09:15.425" endtime="20210408 19:09:16.228"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sPricingOption_MaximumDrawdownAmount}</arg>
</arguments>
<assign>
<var>${PricingOption_MaximumDrawdownAmount}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:16.442" endtime="20210408 19:09:16.443"></status>
</kw>
<msg timestamp="20210408 19:09:16.443" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:09:16.441" endtime="20210408 19:09:16.443"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:09:16.646" level="INFO">${List_Argument_Excel_Value} = ['']</msg>
<status status="PASS" starttime="20210408 19:09:16.645" endtime="20210408 19:09:16.646"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:09:16.699" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:09:16.699" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:09:16.698" endtime="20210408 19:09:16.699"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:09:16.750" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:09:16.750" endtime="20210408 19:09:16.750"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:09:16.801" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:09:16.800" endtime="20210408 19:09:16.801"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:09:16.864" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:16.863" endtime="20210408 19:09:16.864"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:09:16.918" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:16.917" endtime="20210408 19:09:16.918"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:09:16.984" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:16.983" endtime="20210408 19:09:16.984"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:17.044" endtime="20210408 19:09:17.045"></status>
</kw>
<msg timestamp="20210408 19:09:17.045" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:09:17.042" endtime="20210408 19:09:17.045"></status>
</kw>
<status status="PASS" starttime="20210408 19:09:16.592" endtime="20210408 19:09:17.045"></status>
</kw>
<msg timestamp="20210408 19:09:17.045" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:09:16.492" endtime="20210408 19:09:17.045"></status>
</kw>
<msg timestamp="20210408 19:09:17.046" level="INFO">${PricingOption_MaximumDrawdownAmount} = </msg>
<status status="PASS" starttime="20210408 19:09:16.389" endtime="20210408 19:09:17.046"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sPricingOption_MinimumDrawdownAmount}</arg>
</arguments>
<assign>
<var>${PricingOption_MinimumDrawdownAmount}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:17.265" endtime="20210408 19:09:17.266"></status>
</kw>
<msg timestamp="20210408 19:09:17.266" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:09:17.264" endtime="20210408 19:09:17.266"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:09:17.469" level="INFO">${List_Argument_Excel_Value} = ['']</msg>
<status status="PASS" starttime="20210408 19:09:17.468" endtime="20210408 19:09:17.469"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:09:17.533" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:09:17.533" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:09:17.532" endtime="20210408 19:09:17.533"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:09:17.584" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:09:17.583" endtime="20210408 19:09:17.584"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:09:17.634" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:09:17.633" endtime="20210408 19:09:17.634"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:09:17.685" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:17.684" endtime="20210408 19:09:17.685"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:09:17.736" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:17.735" endtime="20210408 19:09:17.736"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:09:17.786" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:17.786" endtime="20210408 19:09:17.787"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:17.839" endtime="20210408 19:09:17.840"></status>
</kw>
<msg timestamp="20210408 19:09:17.840" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:09:17.837" endtime="20210408 19:09:17.840"></status>
</kw>
<status status="PASS" starttime="20210408 19:09:17.416" endtime="20210408 19:09:17.840"></status>
</kw>
<msg timestamp="20210408 19:09:17.840" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:09:17.317" endtime="20210408 19:09:17.841"></status>
</kw>
<msg timestamp="20210408 19:09:17.841" level="INFO">${PricingOption_MinimumDrawdownAmount} = </msg>
<status status="PASS" starttime="20210408 19:09:17.210" endtime="20210408 19:09:17.841"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sPricingOption_MinimumPaymentAmount}</arg>
</arguments>
<assign>
<var>${PricingOption_MinimumPaymentAmount}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:18.109" endtime="20210408 19:09:18.110"></status>
</kw>
<msg timestamp="20210408 19:09:18.110" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:09:18.108" endtime="20210408 19:09:18.110"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:09:18.329" level="INFO">${List_Argument_Excel_Value} = ['']</msg>
<status status="PASS" starttime="20210408 19:09:18.328" endtime="20210408 19:09:18.329"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:09:18.383" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:09:18.383" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:09:18.382" endtime="20210408 19:09:18.383"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:09:18.546" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:09:18.546" endtime="20210408 19:09:18.546"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:09:18.598" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:09:18.597" endtime="20210408 19:09:18.598"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:09:18.649" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:18.648" endtime="20210408 19:09:18.649"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:09:18.700" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:18.699" endtime="20210408 19:09:18.700"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:09:18.751" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:18.751" endtime="20210408 19:09:18.751"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:18.802" endtime="20210408 19:09:18.803"></status>
</kw>
<msg timestamp="20210408 19:09:18.803" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:09:18.800" endtime="20210408 19:09:18.803"></status>
</kw>
<status status="PASS" starttime="20210408 19:09:18.274" endtime="20210408 19:09:18.803"></status>
</kw>
<msg timestamp="20210408 19:09:18.804" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:09:18.162" endtime="20210408 19:09:18.804"></status>
</kw>
<msg timestamp="20210408 19:09:18.804" level="INFO">${PricingOption_MinimumPaymentAmount} = </msg>
<status status="PASS" starttime="20210408 19:09:18.055" endtime="20210408 19:09:18.804"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sPricingOption_MinimumAmountMultiples}</arg>
</arguments>
<assign>
<var>${PricingOption_MinimumAmountMultiples}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:19.020" endtime="20210408 19:09:19.021"></status>
</kw>
<msg timestamp="20210408 19:09:19.021" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:09:19.018" endtime="20210408 19:09:19.021"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:09:19.238" level="INFO">${List_Argument_Excel_Value} = ['']</msg>
<status status="PASS" starttime="20210408 19:09:19.237" endtime="20210408 19:09:19.238"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:09:19.289" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:09:19.289" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:09:19.288" endtime="20210408 19:09:19.289"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:09:19.342" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:09:19.340" endtime="20210408 19:09:19.342"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:09:19.393" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:09:19.393" endtime="20210408 19:09:19.393"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:09:19.449" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:19.448" endtime="20210408 19:09:19.449"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:09:19.499" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:19.498" endtime="20210408 19:09:19.499"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:09:19.550" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:19.549" endtime="20210408 19:09:19.550"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:19.603" endtime="20210408 19:09:19.604"></status>
</kw>
<msg timestamp="20210408 19:09:19.604" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:09:19.601" endtime="20210408 19:09:19.604"></status>
</kw>
<status status="PASS" starttime="20210408 19:09:19.185" endtime="20210408 19:09:19.604"></status>
</kw>
<msg timestamp="20210408 19:09:19.605" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:09:19.082" endtime="20210408 19:09:19.605"></status>
</kw>
<msg timestamp="20210408 19:09:19.605" level="INFO">${PricingOption_MinimumAmountMultiples} = </msg>
<status status="PASS" starttime="20210408 19:09:18.967" endtime="20210408 19:09:19.605"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sPricingOption_CCY}</arg>
</arguments>
<assign>
<var>${PricingOption_CCY}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:19.816" endtime="20210408 19:09:19.817"></status>
</kw>
<msg timestamp="20210408 19:09:19.817" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:09:19.815" endtime="20210408 19:09:19.817"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:09:20.022" level="INFO">${List_Argument_Excel_Value} = ['']</msg>
<status status="PASS" starttime="20210408 19:09:20.022" endtime="20210408 19:09:20.022"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:09:20.078" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:09:20.078" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:09:20.077" endtime="20210408 19:09:20.078"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:09:20.129" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:09:20.128" endtime="20210408 19:09:20.129"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:09:20.182" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:09:20.181" endtime="20210408 19:09:20.182"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:09:20.235" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:20.234" endtime="20210408 19:09:20.235"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:09:20.286" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:20.285" endtime="20210408 19:09:20.286"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:09:20.337" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:20.336" endtime="20210408 19:09:20.337"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:20.390" endtime="20210408 19:09:20.391"></status>
</kw>
<msg timestamp="20210408 19:09:20.391" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:09:20.388" endtime="20210408 19:09:20.391"></status>
</kw>
<status status="PASS" starttime="20210408 19:09:19.968" endtime="20210408 19:09:20.391"></status>
</kw>
<msg timestamp="20210408 19:09:20.391" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:09:19.866" endtime="20210408 19:09:20.392"></status>
</kw>
<msg timestamp="20210408 19:09:20.392" level="INFO">${PricingOption_CCY} = </msg>
<status status="PASS" starttime="20210408 19:09:19.764" endtime="20210408 19:09:20.392"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sPricingOption_BillBorrower}</arg>
</arguments>
<assign>
<var>${PricingOption_BillBorrower}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:20.602" endtime="20210408 19:09:20.603"></status>
</kw>
<msg timestamp="20210408 19:09:20.603" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:09:20.601" endtime="20210408 19:09:20.603"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:09:20.918" level="INFO">${List_Argument_Excel_Value} = ['YES']</msg>
<status status="PASS" starttime="20210408 19:09:20.918" endtime="20210408 19:09:20.918"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:09:20.969" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:09:20.969" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:09:20.969" endtime="20210408 19:09:20.970"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:09:21.019" level="INFO">${Arg_User_Input} = YES</msg>
<status status="PASS" starttime="20210408 19:09:21.019" endtime="20210408 19:09:21.020"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:09:21.076" level="INFO">${Arg_User_Input} = YES</msg>
<status status="PASS" starttime="20210408 19:09:21.075" endtime="20210408 19:09:21.076"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:09:21.127" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:21.126" endtime="20210408 19:09:21.127"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:09:21.179" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:21.178" endtime="20210408 19:09:21.179"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:09:21.230" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:21.230" endtime="20210408 19:09:21.231"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:21.282" endtime="20210408 19:09:21.283"></status>
</kw>
<msg timestamp="20210408 19:09:21.283" level="INFO">${Extracted_Argument_Value} = YES</msg>
<status status="PASS" starttime="20210408 19:09:21.280" endtime="20210408 19:09:21.283"></status>
</kw>
<status status="PASS" starttime="20210408 19:09:20.862" endtime="20210408 19:09:21.283"></status>
</kw>
<msg timestamp="20210408 19:09:21.284" level="INFO">${Extracted_Argument_Value} = YES</msg>
<status status="PASS" starttime="20210408 19:09:20.655" endtime="20210408 19:09:21.284"></status>
</kw>
<msg timestamp="20210408 19:09:21.284" level="INFO">${PricingOption_BillBorrower} = YES</msg>
<status status="PASS" starttime="20210408 19:09:20.549" endtime="20210408 19:09:21.284"></status>
</kw>
<kw name="Mx LoanIQ Select Window Tab" library="LoanIQ">
<doc>| Usage |
Used to select the Java window tab</doc>
<arguments>
<arg>${LIQ_DealNotebook_Tab}</arg>
<arg>${TAB_PRICING_RULES}</arg>
</arguments>
<msg timestamp="20210408 19:09:26.293" level="INFO">Window Tab = 'Pricing Rules' is selected from the element = 'JavaWindow("title:=Deal Notebook -.*","displayed:=1").JavaTab("tagname:=TabFolder")'</msg>
<status status="PASS" starttime="20210408 19:09:21.336" endtime="20210408 19:09:26.293"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_PricingRules_AddOption_Button}</arg>
</arguments>
<msg timestamp="20210408 19:09:28.713" level="INFO">JavaWindow("title:=Deal Notebook.*").JavaButton("attached text:=Add Option","enabled:=1") is clicked.</msg>
<status status="PASS" starttime="20210408 19:09:26.411" endtime="20210408 19:09:28.713"></status>
</kw>
<kw name="Mx LoanIQ Activate Window" library="LoanIQ">
<doc>| Usage |
To activate existing window if present.</doc>
<arguments>
<arg>${LIQ_InterestPricingOption_Window}</arg>
</arguments>
<msg timestamp="20210408 19:09:28.892" level="INFO">Window : JavaWindow("title:=.*Interest Pricing Option.*") is activated</msg>
<status status="PASS" starttime="20210408 19:09:28.800" endtime="20210408 19:09:28.893"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PricingOption_CCY}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Select Combo Box Value</arg>
<arg>${LIQ_InterestPricingOption_CCY_List}</arg>
<arg>${PricingOption_CCY}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:28.953" endtime="20210408 19:09:28.954"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PricingRule_Option}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Select Combo Box Value</arg>
<arg>${LIQ_InterestPricingOption_Dropdown}</arg>
<arg>${PricingRule_Option}</arg>
</arguments>
<kw name="Mx LoanIQ Select Combo Box Value" library="LoanIQ">
<doc>| Usage |
Used to select data in JavaList</doc>
<arguments>
<arg>${LIQ_InterestPricingOption_Dropdown}</arg>
<arg>${PricingRule_Option}</arg>
</arguments>
<msg timestamp="20210408 19:09:29.376" level="INFO">Selected value = 'SOFR Daily Compounding W OPS Not Overridable' from Combo box object = 'JavaWindow("title:=Interest Pricing Option.*").JavaList("x:=270","y:=30")'.</msg>
<status status="PASS" starttime="20210408 19:09:29.008" endtime="20210408 19:09:29.376"></status>
</kw>
<status status="PASS" starttime="20210408 19:09:29.006" endtime="20210408 19:09:29.377"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PricingOption_InitialFractionRate}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Select Combo Box Value</arg>
<arg>${LIQ_InterestPricingOption_InitialFractionRate_List}</arg>
<arg>${PricingOption_InitialFractionRate}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:29.434" endtime="20210408 19:09:29.435"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${InitialFractionRate_Round}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Select Combo Box Value</arg>
<arg>${LIQ_InterestPricingOption_InitialFractionRate_Dropdown}</arg>
<arg>${InitialFractionRate_Round}</arg>
</arguments>
<kw name="Mx LoanIQ Select Combo Box Value" library="LoanIQ">
<doc>| Usage |
Used to select data in JavaList</doc>
<arguments>
<arg>${LIQ_InterestPricingOption_InitialFractionRate_Dropdown}</arg>
<arg>${InitialFractionRate_Round}</arg>
</arguments>
<msg timestamp="20210408 19:09:29.651" level="INFO">Selected value = 'Actual' from Combo box object = 'JavaWindow("title:=Interest Pricing Option.*").JavaList("x:=396","y:=59")'.</msg>
<status status="PASS" starttime="20210408 19:09:29.504" endtime="20210408 19:09:29.651"></status>
</kw>
<status status="PASS" starttime="20210408 19:09:29.501" endtime="20210408 19:09:29.652"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PricingOption_RoundingDecimalPrecision}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Select Combo Box Value</arg>
<arg>${LIQ_InterestPricingOption_RoundingDecimalPrecision_List}</arg>
<arg>${PricingOption_RoundingDecimalPrecision}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:29.703" endtime="20210408 19:09:29.703"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${RoundingDecimal_Round}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Select Combo Box Value</arg>
<arg>${LIQ_InterestPricingOption_RoundingDecimalRound_Dropdown}</arg>
<arg>${RoundingDecimal_Round}</arg>
</arguments>
<kw name="Mx LoanIQ Select Combo Box Value" library="LoanIQ">
<doc>| Usage |
Used to select data in JavaList</doc>
<arguments>
<arg>${LIQ_InterestPricingOption_RoundingDecimalRound_Dropdown}</arg>
<arg>${RoundingDecimal_Round}</arg>
</arguments>
<msg timestamp="20210408 19:09:29.900" level="INFO">Selected value = 'Actual' from Combo box object = 'JavaWindow("title:=Interest Pricing Option.*").JavaList("x:=396","y:=88")'.</msg>
<status status="PASS" starttime="20210408 19:09:29.759" endtime="20210408 19:09:29.901"></status>
</kw>
<status status="PASS" starttime="20210408 19:09:29.757" endtime="20210408 19:09:29.901"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${NonBusinessDayRule}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Select Combo Box Value</arg>
<arg>${LIQ_InterestPricingOption_NonBusinessDayRule_Dropdown}</arg>
<arg>${NonBusinessDayRule}</arg>
</arguments>
<kw name="Mx LoanIQ Select Combo Box Value" library="LoanIQ">
<doc>| Usage |
Used to select data in JavaList</doc>
<arguments>
<arg>${LIQ_InterestPricingOption_NonBusinessDayRule_Dropdown}</arg>
<arg>${NonBusinessDayRule}</arg>
</arguments>
<msg timestamp="20210408 19:09:30.163" level="INFO">Selected value = 'Modified Following Business Day' from Combo box object = 'JavaWindow("title:=Interest Pricing Option.*").JavaList("index:=4")'.</msg>
<status status="PASS" starttime="20210408 19:09:29.958" endtime="20210408 19:09:30.163"></status>
</kw>
<status status="PASS" starttime="20210408 19:09:29.956" endtime="20210408 19:09:30.164"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PricingOption_BillBorrower}'=='${YES}'</arg>
<arg>Mx LoanIQ Set</arg>
<arg>${LIQ_InterestPricingOption_BillBorrower_Checkbox}</arg>
<arg>${ON}</arg>
<arg>ELSE</arg>
<arg>Mx LoanIQ Set</arg>
<arg>${LIQ_InterestPricingOption_BillBorrower_Checkbox}</arg>
<arg>${OFF}</arg>
</arguments>
<kw name="Mx LoanIQ Set" library="LoanIQ">
<doc>|Usage|</doc>
<arguments>
<arg>${LIQ_InterestPricingOption_BillBorrower_Checkbox}</arg>
<arg>${ON}</arg>
</arguments>
<msg timestamp="20210408 19:09:30.387" level="INFO">Object = 'JavaWindow("title:=Interest Pricing Option.*").JavaCheckBox("attached text:=Bill Borrower.*")' is set.</msg>
<status status="PASS" starttime="20210408 19:09:30.219" endtime="20210408 19:09:30.388"></status>
</kw>
<status status="PASS" starttime="20210408 19:09:30.215" endtime="20210408 19:09:30.388"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PricingOption_RoundingApplicationMethod}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Select Combo Box Value</arg>
<arg>${LIQ_InterestPricingOption_RoundingApplicationMethod_List}</arg>
<arg>${PricingOption_RoundingApplicationMethod}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:30.439" endtime="20210408 19:09:30.440"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PricingOption_PercentOfRateFormulaUsage}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Select Combo Box Value</arg>
<arg>${LIQ_InterestPricingOption_PercentOfRateFormulaUsage_List}</arg>
<arg>${PricingOption_PercentOfRateFormulaUsage}</arg>
</arguments>
<kw name="Mx LoanIQ Select Combo Box Value" library="LoanIQ">
<doc>| Usage |
Used to select data in JavaList</doc>
<arguments>
<arg>${LIQ_InterestPricingOption_PercentOfRateFormulaUsage_List}</arg>
<arg>${PricingOption_PercentOfRateFormulaUsage}</arg>
</arguments>
<msg timestamp="20210408 19:09:30.645" level="INFO">Selected value = '(Base + Spread + RAC) * PCT' from Combo box object = 'JavaWindow("title:=Interest Pricing Option.*").JavaList("text:=\(Base \+ Spread \+ RAC\) \* PCT")'.</msg>
<status status="PASS" starttime="20210408 19:09:30.498" endtime="20210408 19:09:30.646"></status>
</kw>
<status status="PASS" starttime="20210408 19:09:30.496" endtime="20210408 19:09:30.646"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PricingOption_RepricingNonBusinessDayRule}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Select Combo Box Value</arg>
<arg>${LIQ_InterestPricingOption_RepricingNonBusinessDayRule_Dropdown}</arg>
<arg>${PricingOption_RepricingNonBusinessDayRule}</arg>
</arguments>
<kw name="Mx LoanIQ Select Combo Box Value" library="LoanIQ">
<doc>| Usage |
Used to select data in JavaList</doc>
<arguments>
<arg>${LIQ_InterestPricingOption_RepricingNonBusinessDayRule_Dropdown}</arg>
<arg>${PricingOption_RepricingNonBusinessDayRule}</arg>
</arguments>
<msg timestamp="20210408 19:09:30.840" level="INFO">Selected value = 'Modified Following Business Day' from Combo box object = 'JavaWindow("title:=Interest Pricing Option.*").JavaList("labeled_containers_path:=.*Repricing.*","tagname:=Non Business Day Rule.*")'.</msg>
<status status="PASS" starttime="20210408 19:09:30.700" endtime="20210408 19:09:30.841"></status>
</kw>
<status status="PASS" starttime="20210408 19:09:30.698" endtime="20210408 19:09:30.841"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_InterestPricingOption_InterestDueUponRepricing_Checkbox}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<assign>
<var>${Status}</var>
</assign>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_InterestPricingOption_InterestDueUponRepricing_Checkbox}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:09:31.014" level="INFO">Locator = 'JavaWindow("title:=Interest Pricing Option.*").JavaCheckBox("attached text:=Interest Due Upon Repricing")' exists.</msg>
<status status="PASS" starttime="20210408 19:09:30.895" endtime="20210408 19:09:31.014"></status>
</kw>
<msg timestamp="20210408 19:09:31.015" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20210408 19:09:30.893" endtime="20210408 19:09:31.015"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Status}'=='${TRUE}'</arg>
<arg>Check or Uncheck Interest Due Upon Repricing</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>Unable to find field</arg>
</arguments>
<kw name="Check or Uncheck Interest Due Upon Repricing" library="Deal_Notebook">
<doc>This will check and uncheck the Interest Due Upon Repricing
@author: rtarayao</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Validate if Element is Checked</arg>
<arg>${LIQ_InterestPricingOption_InterestDueUponRepricing_Checkbox}</arg>
<arg>Interest Due Upon Repricing</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Validate if Element is Checked" library="GenericKeywords">
<doc>This keyword validates if Element is checked
@author: ghabal
@update: hstone 02SEP2020 - Optimized Keyword
- Added Failure Log</doc>
<arguments>
<arg>${LIQ_InterestPricingOption_InterestDueUponRepricing_Checkbox}</arg>
<arg>Interest Due Upon Repricing</arg>
</arguments>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>value%1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>value%1</arg>
</arguments>
<msg timestamp="20210408 19:09:31.412" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:09:31.181" endtime="20210408 19:09:31.412"></status>
</kw>
<msg timestamp="20210408 19:09:31.413" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:09:31.179" endtime="20210408 19:09:31.413"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed checked</arg>
<arg>ELSE</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Fail</arg>
<arg>${Field_Label}' element is confirmed unchecked</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>'${Field_Label}' element is confirmed checked</arg>
</arguments>
<msg timestamp="20210408 19:09:31.469" level="INFO">'Interest Due Upon Repricing' element is confirmed checked</msg>
<status status="PASS" starttime="20210408 19:09:31.469" endtime="20210408 19:09:31.470"></status>
</kw>
<status status="PASS" starttime="20210408 19:09:31.466" endtime="20210408 19:09:31.470"></status>
</kw>
<status status="PASS" starttime="20210408 19:09:31.129" endtime="20210408 19:09:31.470"></status>
</kw>
<msg timestamp="20210408 19:09:31.471" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20210408 19:09:31.127" endtime="20210408 19:09:31.471"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==True</arg>
<arg>Mx LoanIQ Check Or Uncheck</arg>
<arg>${LIQ_InterestPricingOption_InterestDueUponRepricing_Checkbox}</arg>
<arg>OFF</arg>
<arg>ELSE IF</arg>
<arg>${status}==False</arg>
<arg>Mx LoanIQ Check Or Uncheck</arg>
<arg>${LIQ_InterestPricingOption_InterestDueUponPrincipalPayment_Checkbox}</arg>
<arg>ON</arg>
</arguments>
<kw name="Mx LoanIQ Check Or Uncheck" library="LoanIQ">
<doc>| Usage |
 This keyword performs check or uncheck on the  checkbox object</doc>
<arguments>
<arg>${LIQ_InterestPricingOption_InterestDueUponRepricing_Checkbox}</arg>
<arg>OFF</arg>
</arguments>
<msg timestamp="20210408 19:09:31.778" level="INFO">Checkbox object = 'JavaWindow("title:=Interest Pricing Option.*").JavaCheckBox("attached text:=Interest Due Upon Repricing")' is unset</msg>
<status status="PASS" starttime="20210408 19:09:31.524" endtime="20210408 19:09:31.778"></status>
</kw>
<status status="PASS" starttime="20210408 19:09:31.522" endtime="20210408 19:09:31.779"></status>
</kw>
<status status="PASS" starttime="20210408 19:09:31.071" endtime="20210408 19:09:31.779"></status>
</kw>
<status status="PASS" starttime="20210408 19:09:31.069" endtime="20210408 19:09:31.779"></status>
</kw>
<kw name="Mx LoanIQ Enter" library="LoanIQ">
<doc>| Usage |
To enter the data to the element specified by 'locator'.</doc>
<arguments>
<arg>${LIQ_InterestPricingOption_BillingNumberDays_Field}</arg>
<arg>${PricingOption_BillNoOfDays}</arg>
</arguments>
<msg timestamp="20210408 19:09:32.083" level="INFO">Input= 0 is entered in element= JavaWindow("title:=Interest Pricing Option.*").JavaEdit("attached text:=Billing Number of Days:")</msg>
<status status="PASS" starttime="20210408 19:09:31.833" endtime="20210408 19:09:32.084"></status>
</kw>
<kw name="Mx LoanIQ Select Combo Box Value" library="LoanIQ">
<doc>| Usage |
Used to select data in JavaList</doc>
<arguments>
<arg>${LIQ_InterestPricingOption_MatrixChangeAppMthd_Combobox}</arg>
<arg>${MatrixChangeAppMethod}</arg>
</arguments>
<msg timestamp="20210408 19:09:32.313" level="INFO">Selected value = 'Effective date of change' from Combo box object = 'JavaWindow("title:=Interest Pricing Option.*").JavaList("index:=7")'.</msg>
<status status="PASS" starttime="20210408 19:09:32.137" endtime="20210408 19:09:32.314"></status>
</kw>
<kw name="Mx LoanIQ Select Combo Box Value" library="LoanIQ">
<doc>| Usage |
Used to select data in JavaList</doc>
<arguments>
<arg>${LIQ_InterestPricingOption_RateChangeAppMthd_Combobox}</arg>
<arg>${RateChangeAppMethod}</arg>
</arguments>
<msg timestamp="20210408 19:09:32.538" level="INFO">Selected value = 'Effective date of change' from Combo box object = 'JavaWindow("title:=Interest Pricing Option.*").JavaList("index:=8")'.</msg>
<status status="PASS" starttime="20210408 19:09:32.367" endtime="20210408 19:09:32.538"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PricingOption_InterestDueUponPrincipalPayment}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Check Or Uncheck</arg>
<arg>${LIQ_InterestPricingOption_InterestDueUponPrincipalPayment_Checkbox}</arg>
<arg>${PricingOption_InterestDueUponPrincipalPayment}</arg>
</arguments>
<kw name="Mx LoanIQ Check Or Uncheck" library="LoanIQ">
<doc>| Usage |
 This keyword performs check or uncheck on the  checkbox object</doc>
<arguments>
<arg>${LIQ_InterestPricingOption_InterestDueUponPrincipalPayment_Checkbox}</arg>
<arg>${PricingOption_InterestDueUponPrincipalPayment}</arg>
</arguments>
<msg timestamp="20210408 19:09:32.826" level="INFO">Checkbox object = 'JavaWindow("title:=Interest Pricing Option.*").JavaCheckBox("attached text:=Interest Due Upon Principal Payment")' is unset</msg>
<status status="PASS" starttime="20210408 19:09:32.595" endtime="20210408 19:09:32.826"></status>
</kw>
<status status="PASS" starttime="20210408 19:09:32.594" endtime="20210408 19:09:32.827"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PricingOption_InterestDueUponRepricing}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Check Or Uncheck</arg>
<arg>${LIQ_InterestPricingOption_InterestDueUponRepricing_Checkbox}</arg>
<arg>${PricingOption_InterestDueUponRepricing}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:32.885" endtime="20210408 19:09:32.885"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PricingOption_ReferenceBanksApply}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Check Or Uncheck</arg>
<arg>${LIQ_InterestPricingOption_ReferenceBanksApply_Checkbox}</arg>
<arg>${PricingOption_ReferenceBanksApply}</arg>
</arguments>
<kw name="Mx LoanIQ Check Or Uncheck" library="LoanIQ">
<doc>| Usage |
 This keyword performs check or uncheck on the  checkbox object</doc>
<arguments>
<arg>${LIQ_InterestPricingOption_ReferenceBanksApply_Checkbox}</arg>
<arg>${PricingOption_ReferenceBanksApply}</arg>
</arguments>
<msg timestamp="20210408 19:09:38.209" level="INFO">Checkbox object = 'JavaWindow("title:=Interest Pricing Option.*").JavaCheckBox("attached text:=Reference Banks Apply")' is unset</msg>
<status status="PASS" starttime="20210408 19:09:32.940" endtime="20210408 19:09:38.209"></status>
</kw>
<status status="PASS" starttime="20210408 19:09:32.938" endtime="20210408 19:09:38.210"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PricingOption_IntentNoticeDaysInAdvance}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Enter</arg>
<arg>${LIQ_InterestPricingOption_IntentNoticeDaysInAdvance_Textfield}</arg>
<arg>${PricingOption_IntentNoticeDaysInAdvance}</arg>
</arguments>
<kw name="Mx LoanIQ Enter" library="LoanIQ">
<doc>| Usage |
To enter the data to the element specified by 'locator'.</doc>
<arguments>
<arg>${LIQ_InterestPricingOption_IntentNoticeDaysInAdvance_Textfield}</arg>
<arg>${PricingOption_IntentNoticeDaysInAdvance}</arg>
</arguments>
<msg timestamp="20210408 19:09:38.516" level="INFO">Input= 3 is entered in element= JavaWindow("title:=Interest Pricing Option.*").JavaEdit("labeled_containers_path:=.*Intent Notice.*","attached text:=Days in Advance.*")</msg>
<status status="PASS" starttime="20210408 19:09:38.269" endtime="20210408 19:09:38.517"></status>
</kw>
<status status="PASS" starttime="20210408 19:09:38.267" endtime="20210408 19:09:38.517"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PricingOption_IntentNoticeTime}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Enter</arg>
<arg>${LIQ_InterestPricingOption_IntentNoticeTimeInAdvance_Textfield}</arg>
<arg>${PricingOption_IntentNoticeTime}</arg>
</arguments>
<kw name="Mx LoanIQ Enter" library="LoanIQ">
<doc>| Usage |
To enter the data to the element specified by 'locator'.</doc>
<arguments>
<arg>${LIQ_InterestPricingOption_IntentNoticeTimeInAdvance_Textfield}</arg>
<arg>${PricingOption_IntentNoticeTime}</arg>
</arguments>
<msg timestamp="20210408 19:09:38.837" level="INFO">Input= 12 is entered in element= JavaWindow("title:=Interest Pricing Option.*").JavaEdit("labeled_containers_path:=.*Intent Notice.*","attached text:=Time.*")</msg>
<status status="PASS" starttime="20210408 19:09:38.598" endtime="20210408 19:09:38.838"></status>
</kw>
<status status="PASS" starttime="20210408 19:09:38.596" endtime="20210408 19:09:38.838"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PricingOption_12HrPeriodOption}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Enter</arg>
<arg>JavaWindow("title:=Interest Pricing Option.*").JavaRadioButton("labeled_containers_path:=.*Intent Notice.*","attached text:=${PricingOption_12HrPeriodOption}")</arg>
<arg>ON</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:38.900" endtime="20210408 19:09:38.900"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PricingOption_MaximumDrawdownAmount}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Enter</arg>
<arg>${LIQ_InterestPricingOption_MaximumDrawdownAmount_Textfield}</arg>
<arg>${PricingOption_MaximumDrawdownAmount}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:38.956" endtime="20210408 19:09:38.957"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PricingOption_MinimumDrawdownAmount}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Enter</arg>
<arg>${LIQ_InterestPricingOption_MinimumDrawdownAmount_Textfield}</arg>
<arg>${PricingOption_MinimumDrawdownAmount}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:39.012" endtime="20210408 19:09:39.013"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PricingOption_MinimumPaymentAmount}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Enter</arg>
<arg>${LIQ_InterestPricingOption_MinimumPaymentAmount_Textfield}</arg>
<arg>${PricingOption_MinimumPaymentAmount}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:39.067" endtime="20210408 19:09:39.068"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PricingOption_MinimumAmountMultiples}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Enter</arg>
<arg>${LIQ_InterestPricingOption_MinimumAmountMultiples_Textfield}</arg>
<arg>${PricingOption_MinimumAmountMultiples}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:39.125" endtime="20210408 19:09:39.126"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PricingOption_FeeOnLenderShareFunding}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Check Or Uncheck</arg>
<arg>${LIQ_InterestPricingOption_FeeOnLenderShareFunding_Checkbox}</arg>
<arg>${PricingOption_FeeOnLenderShareFunding}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:39.181" endtime="20210408 19:09:39.182"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PricingOption_CCY}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Select Combo Box Value</arg>
<arg>${LIQ_InterestPricingOption_CCY_List}</arg>
<arg>${PricingOption_CCY}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:39.240" endtime="20210408 19:09:39.241"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_InterestPricingOption_Ok_Button}</arg>
</arguments>
<msg timestamp="20210408 19:09:39.831" level="INFO">JavaWindow("title:=.*Interest Pricing Option.*").JavaButton("attached text:=OK") is clicked.</msg>
<status status="PASS" starttime="20210408 19:09:39.300" endtime="20210408 19:09:39.832"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Select String</arg>
<arg>${LIQ_PricingRules_AllowedPricingOption_JavaTree}</arg>
<arg>${PricingRule_Option}</arg>
</arguments>
<kw name="Mx LoanIQ Select String" library="LoanIQ">
<doc>| Usage |
Used to select the given string in JavaTree</doc>
<arguments>
<arg>${LIQ_PricingRules_AllowedPricingOption_JavaTree}</arg>
<arg>${PricingRule_Option}</arg>
</arguments>
<msg timestamp="20210408 19:09:43.574" level="INFO">Selected 'SOFR Daily Compounding W OPS Not Overridable' from 'JavaWindow("title:=Deal Notebook -.*").JavaTree("tagname:=Drill down to update","labeled_containers_path:=.*Allowed Pricing Options.*")' object.</msg>
<status status="PASS" starttime="20210408 19:09:39.934" endtime="20210408 19:09:43.575"></status>
</kw>
<status status="PASS" starttime="20210408 19:09:39.931" endtime="20210408 19:09:43.575"></status>
</kw>
<kw name="Take Screenshot with text into Test Document" library="ReportMaker_Keywords">
<doc>This keyword is used to add screenshot with image filename as description into test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Deal Notebook - Pricing Rules Tab - Pricing Option</arg>
</arguments>
<kw name="Take Screenshot" library="Screenshot">
<doc>Takes a screenshot in JPEG format and embeds it into the log file.</doc>
<arguments>
<arg>${imageName}</arg>
</arguments>
<msg timestamp="20210408 19:09:43.820" level="INFO" html="yes">&lt;a href="Results/LoanIQ/TC01%20-%20Validate%20ARR%20Pricing%20Option%20at%20Deal%20Level%20and%20Add%20Libor%20Option___2021-04-08%2019-04-35.729/Deal%20Notebook%20-%20Pricing%20Rules%20Tab%20-%20Pricing%20Option_1.jpg"&gt;&lt;img src="Results/LoanIQ/TC01%20-%20Validate%20ARR%20Pricing%20Option%20at%20Deal%20Level%20and%20Add%20Libor%20Option___2021-04-08%2019-04-35.729/Deal%20Notebook%20-%20Pricing%20Rules%20Tab%20-%20Pricing%20Option_1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210408 19:09:43.711" endtime="20210408 19:09:43.821"></status>
</kw>
<kw name="Get Latest File" library="ReportMaker">
<arguments>
<arg>${getfilePath}</arg>
</arguments>
<assign>
<var>${imagePath}</var>
</assign>
<msg timestamp="20210408 19:09:43.873" level="INFO">${imagePath} = C:\Git_Evergreen\transform_arr\Results\LoanIQ\TC01 - Validate ARR Pricing Option at Deal Level and Add Libor Option___2021-04-08 19-04-35.729\Deal Notebook - Pricing Rules Tab - Pricing Option_1.jpg</msg>
<status status="PASS" starttime="20210408 19:09:43.871" endtime="20210408 19:09:43.874"></status>
</kw>
<kw name="Put Screenshot With Text" library="ReportMaker">
<arguments>
<arg>${imagePath}</arg>
<arg>${imageName}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:43.927" endtime="20210408 19:09:43.943"></status>
</kw>
<status status="PASS" starttime="20210408 19:09:43.658" endtime="20210408 19:09:43.944"></status>
</kw>
<status status="PASS" starttime="20210408 19:09:00.124" endtime="20210408 19:09:43.944"></status>
</kw>
<status status="PASS" starttime="20210408 19:08:59.622" endtime="20210408 19:09:43.944"></status>
</kw>
<msg timestamp="20210408 19:09:43.944" level="INFO">Mx Execute Template With Multiple Data keyword passed for all the data</msg>
<status status="PASS" starttime="20210408 19:08:59.597" endtime="20210408 19:09:43.945"></status>
</kw>
<kw name="Mx Execute Template With Multiple Data" library="GenericLib">
<doc>| Usage |
 This keyword is used to run template with multiple data.</doc>
<arguments>
<arg>Validate Deal ARR Pricing Options at Pricing Rules Tab</arg>
<arg>${ExcelPath}</arg>
<arg>${Deal_1}</arg>
<arg>CRED01_DealSetup</arg>
</arguments>
<kw name="Validate Deal ARR Pricing Options at Pricing Rules Tab" library="CRED01_DealSetUpWithoutOrigination">
<doc>This keyword is used to Validate ARR Pricing Options at Pricing Rules Tab
@author: jloretiz 04FEB2021 - initial create
@update: mangeles 01MAR2021 - added Payment and Pricing Lag Days return value</doc>
<arguments>
<arg>OrderedDict([('rowid', '1'), ('Test_Case', 'ARR_Scenario3'), ('Deal_NamePrefix', 'ARR_LIBORSC3'), ('Deal_AliasPrefix', 'SC3'), ('Deal_Name', 'ARR_LIBORSC308042021190438PNT'), ('Deal_Alias', 'SC308042021190441XJG'), ('Deal_EffectiveDate', '26-Oct-2016'), ('Deal_AgreementDate', '26-Oct-2016'), ('Deal_AdjustmentSettings', 'Present'), ('Deal_AgreementDateAdjustment', '30'), ('Deal_EffectiveDateAdjustment', '30'), ('Deal_Currency', 'USD'), ('Deal_DepartmentCode', 'NAM'), ('Deal_Department', 'North America'), ('Deal_SalesGroup', 'Sales Group 1'), ('Deal_AternateID', ''), ('Deal_ANSIID', ''), ('Deal_IsSoleLender', 'OFF'), ('Deal_ClassificationCode', 'GCP'), ('Deal_ClassificationDesc', 'General Corp Purpose'), ('Deal_AdminAgent', 'BNS CANADA CORPORATE BANKING'), ('Deal_AdminAgentLocation', 'Toronto, Canada'), ('DealAdminAgent_SGAlias', 'BC'), ('DealAdminAgent_PreferredRI', ''), ('DealAdminAgent_ServicingGroup', 'CANADA CORPORATE BANKING'), ('Deal_ProposedCmt', '100,000,000.00'), ('Deal_EarlyDiscussion', 'OFF'), ('Deal_ExpenseCode', '0394703947'), ('Deal_HolidayCalendarRemove', 'Canadian'), ('Deal_HolidayCalendarAdd', 'US Holiday Calendar (New York)'), ('Deal_IsPricingOptionARR', 'TRUE'), ('Deal_PricingOption_CCY', ''), ('Deal_PricingOption', 'SOFR Daily Compounding W OPS Not Overridable'), ('PricingOption_IsARR', 'False'), ('PricingOption_InitialFractionRate', 'Actual'), ('PricingOption_RoundingDecimal', 'Actual'), ('PricingOption_NonBusinessDayRule', 'Modified Following Business Day'), ('PricingOption_BillNoOfDays', '0'), ('PricingOption_MatrixChangeAppMthd', 'Effective date of change'), ('PricingOption_RateChangeAppMthd', 'Effective date of change'), ('PricingOption_RACInitialFractionRate', ''), ('PricingOption_RACRoundingDecimal', ''), ('PricingOption_RACRoundingMethod', ''), ('PricingOption_PercentOfRateFormulaUsage', '(Base + Spread + RAC) * PCT'), ('PricingOption_RepricingNonBusinessDayRule', 'Modified Following Business Day'), ('PricingOption_FeeOnLenderShareFunding', ''), ('PricingOption_InterestDueUponPrincipalPayment', 'OFF'), ('PricingOption_InterestDueUponRepricing', ''), ('PricingOption_ReferenceBanksApply', 'OFF'), ('PricingOption_IntentNoticeDaysInAdvance', '3'), ('PricingOption_IntentNoticeTime', '12'), ('PricingOption_12HrPeriodOption', ''), ('PricingOption_MaximumDrawAmount', ''), ('PricingOption_MinimumDrawAmount', ''), ('PricingOption_MinimumPaymentAmount', ''), ('PricingOption_MinimumAmountMultiples', ''), ('PricingOption_BillBorrower', 'YES'), ('PricingOption_ARRObservationPeriod', 'ON'), ('PricingOption_LookbackDays', '5'), ('PricingOption_LockoutDays', '0'), ('PricingOption_RateBasis', 'Actual/360'), ('PricingOption_CalculationMethod', 'Daily Rate With Compounding')])</arg>
</arguments>
<kw name="Report Sub Header" library="ReportMaker_Keywords">
<doc>This keyword is used to add given argument as sub header in test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Validate Deal ARR Pricing Options at Pricing Rules Tab</arg>
</arguments>
<kw name="Set Report Sub Header" library="ReportMaker">
<arguments>
<arg>${SubHeader}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:44.123" endtime="20210408 19:09:44.125"></status>
</kw>
<status status="PASS" starttime="20210408 19:09:44.073" endtime="20210408 19:09:44.125"></status>
</kw>
<kw name="Get ARR Pricing Option Details in Table Maintenance" library="TableMaintenance">
<doc>This keyword will get the ARR Pricing Options Details in Table Maintenance.
@author: jloretiz 04FEB2021 - initial create
@update: mangeles 01MAR2021 - add options to retrieve payment and pricing lag days
@update: cmcordero 25MAR2021 - add keyword to enable Match Funded option
@update: cmcordero 31MAR2021 - add keyword to enable Match Funded Overridable option</doc>
<arguments>
<arg>&amp;{ExcelPath}[Deal_PricingOption]</arg>
</arguments>
<assign>
<var>${LookbackDays}</var>
<var>${LookoutDays}</var>
<var>${RateBasis}</var>
<var>${CalculationMethod}</var>
<var>${PaymentLagDays}</var>
<var>${PricingLagDays}</var>
</assign>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sPricingRule_Option}</arg>
</arguments>
<assign>
<var>${PricingRule_Option}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:44.534" endtime="20210408 19:09:44.534"></status>
</kw>
<msg timestamp="20210408 19:09:44.535" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:09:44.533" endtime="20210408 19:09:44.535"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:09:44.767" level="INFO">${List_Argument_Excel_Value} = ['SOFR Daily Compounding W OPS Not Overridable']</msg>
<status status="PASS" starttime="20210408 19:09:44.767" endtime="20210408 19:09:44.768"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:09:44.833" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:09:44.833" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:09:44.832" endtime="20210408 19:09:44.833"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:09:44.884" level="INFO">${Arg_User_Input} = SOFR DAILY COMPOUNDING W OPS NOT OVERRIDABLE</msg>
<status status="PASS" starttime="20210408 19:09:44.883" endtime="20210408 19:09:44.884"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:09:44.945" level="INFO">${Arg_User_Input} = SOFR DAILY COMPOUNDING W OPS NOT OVERRIDABLE</msg>
<status status="PASS" starttime="20210408 19:09:44.944" endtime="20210408 19:09:44.945"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:09:44.997" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:44.997" endtime="20210408 19:09:44.997"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:09:45.051" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:45.051" endtime="20210408 19:09:45.052"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:09:45.123" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:45.123" endtime="20210408 19:09:45.123"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:45.203" endtime="20210408 19:09:45.204"></status>
</kw>
<msg timestamp="20210408 19:09:45.204" level="INFO">${Extracted_Argument_Value} = SOFR Daily Compounding W OPS Not Overridable</msg>
<status status="PASS" starttime="20210408 19:09:45.200" endtime="20210408 19:09:45.204"></status>
</kw>
<status status="PASS" starttime="20210408 19:09:44.714" endtime="20210408 19:09:45.204"></status>
</kw>
<msg timestamp="20210408 19:09:45.204" level="INFO">${Extracted_Argument_Value} = SOFR Daily Compounding W OPS Not Overridable</msg>
<status status="PASS" starttime="20210408 19:09:44.607" endtime="20210408 19:09:45.204"></status>
</kw>
<msg timestamp="20210408 19:09:45.205" level="INFO">${PricingRule_Option} = SOFR Daily Compounding W OPS Not Overridable</msg>
<status status="PASS" starttime="20210408 19:09:44.470" endtime="20210408 19:09:45.205"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_TableMaintenance_Button}</arg>
</arguments>
<msg timestamp="20210408 19:09:47.002" level="INFO">JavaWindow("title:=Fusion Loan IQ.*").JavaButton("index:=5") is clicked.</msg>
<status status="PASS" starttime="20210408 19:09:45.279" endtime="20210408 19:09:47.003"></status>
</kw>
<kw name="Search in Table Maintenance" library="TableMaintenance">
<doc>This keyword is used to search in Table Maintenance and doubleclick the value.
e.g. Search in Table Maintenance Currency Pair
@author: clanding
@update: clanding 26MAR2019 - refactor according to CBA Evergreen Automation Checklist and PointSheet v1.0.1
@update: hstone 04SEP2020 - Added Keyword Pre-processing</doc>
<arguments>
<arg>${MAINTENANCE_PRICING_OPTIONS}</arg>
</arguments>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sTableName}</arg>
</arguments>
<assign>
<var>${TableName}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:47.396" endtime="20210408 19:09:47.397"></status>
</kw>
<msg timestamp="20210408 19:09:47.397" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:09:47.395" endtime="20210408 19:09:47.397"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:09:47.616" level="INFO">${List_Argument_Excel_Value} = ['Pricing Option Name']</msg>
<status status="PASS" starttime="20210408 19:09:47.615" endtime="20210408 19:09:47.616"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:09:47.666" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:09:47.666" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:09:47.665" endtime="20210408 19:09:47.666"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:09:47.718" level="INFO">${Arg_User_Input} = PRICING OPTION NAME</msg>
<status status="PASS" starttime="20210408 19:09:47.718" endtime="20210408 19:09:47.719"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:09:47.772" level="INFO">${Arg_User_Input} = PRICING OPTION NAME</msg>
<status status="PASS" starttime="20210408 19:09:47.771" endtime="20210408 19:09:47.772"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:09:47.824" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:47.824" endtime="20210408 19:09:47.825"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:09:47.879" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:47.878" endtime="20210408 19:09:47.879"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:09:47.940" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:09:47.939" endtime="20210408 19:09:47.940"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:09:48.026" endtime="20210408 19:09:48.027"></status>
</kw>
<msg timestamp="20210408 19:09:48.028" level="INFO">${Extracted_Argument_Value} = Pricing Option Name</msg>
<status status="PASS" starttime="20210408 19:09:48.024" endtime="20210408 19:09:48.028"></status>
</kw>
<status status="PASS" starttime="20210408 19:09:47.553" endtime="20210408 19:09:48.028"></status>
</kw>
<msg timestamp="20210408 19:09:48.028" level="INFO">${Extracted_Argument_Value} = Pricing Option Name</msg>
<status status="PASS" starttime="20210408 19:09:47.450" endtime="20210408 19:09:48.029"></status>
</kw>
<msg timestamp="20210408 19:09:48.029" level="INFO">${TableName} = Pricing Option Name</msg>
<status status="PASS" starttime="20210408 19:09:47.342" endtime="20210408 19:09:48.029"></status>
</kw>
<kw name="Mx LoanIQ Activate Window" library="LoanIQ">
<doc>| Usage |
To activate existing window if present.</doc>
<arguments>
<arg>${LIQ_TableMaintenance_Window}</arg>
</arguments>
<msg timestamp="20210408 19:09:48.190" level="INFO">Window : JavaWindow("title:=Table Maintenance") is activated</msg>
<status status="PASS" starttime="20210408 19:09:48.082" endtime="20210408 19:09:48.190"></status>
</kw>
<kw name="Mx LoanIQ Enter" library="LoanIQ">
<doc>| Usage |
To enter the data to the element specified by 'locator'.</doc>
<arguments>
<arg>${LIQ_TableMaintenance_Search_Field}</arg>
<arg>${sTableName}</arg>
</arguments>
<msg timestamp="20210408 19:09:48.651" level="INFO">Input= Pricing Option Name is entered in element= JavaWindow("title:=Table Maintenance").JavaEdit("attached text:=Search:")</msg>
<status status="PASS" starttime="20210408 19:09:48.241" endtime="20210408 19:09:48.651"></status>
</kw>
<kw name="Mx LoanIQ DoubleClick" library="LoanIQ">
<doc>| Usage |
 This keyword performs double click on a item in the JavaTree</doc>
<arguments>
<arg>${LIQ_TableMaintenance_Tables_JavaTree}</arg>
<arg>${sTableName}</arg>
</arguments>
<msg timestamp="20210408 19:09:49.199" level="INFO">Double clicked on 'Pricing Option Name' at object = 'JavaWindow("title:=Table Maintenance").JavaTree("tagname:=Drill down to view details.*","index:=1")'.</msg>
<status status="PASS" starttime="20210408 19:09:48.730" endtime="20210408 19:09:49.199"></status>
</kw>
<status status="PASS" starttime="20210408 19:09:47.088" endtime="20210408 19:09:49.200"></status>
</kw>
<kw name="Mx LoanIQ Activate Window" library="LoanIQ">
<doc>| Usage |
To activate existing window if present.</doc>
<arguments>
<arg>${LIQ_PricingOption_Window}</arg>
</arguments>
<msg timestamp="20210408 19:09:51.519" level="INFO">Window : JavaWindow("title:=Browse data from Pricing Option Name") is activated</msg>
<status status="PASS" starttime="20210408 19:09:49.292" endtime="20210408 19:09:51.520"></status>
</kw>
<kw name="Mx LoanIQ Set" library="LoanIQ">
<doc>|Usage|</doc>
<arguments>
<arg>${LIQ_PricingOption_ShowAll_RadioButton}</arg>
<arg>${ON}</arg>
</arguments>
<msg timestamp="20210408 19:09:51.893" level="INFO">Object = 'JavaWindow("title:=Browse data from Pricing Option Name").JavaRadioButton("attached text:=Show all")' is set.</msg>
<status status="PASS" starttime="20210408 19:09:51.574" endtime="20210408 19:09:51.893"></status>
</kw>
<kw name="Mx LoanIQ DoubleClick" library="LoanIQ">
<doc>| Usage |
 This keyword performs double click on a item in the JavaTree</doc>
<arguments>
<arg>${LIQ_PricingOption_Tree}</arg>
<arg>${PricingRule_Option}</arg>
</arguments>
<msg timestamp="20210408 19:09:53.616" level="INFO">Double clicked on 'SOFR Daily Compounding W OPS Not Overridable' at object = 'JavaWindow("title:=Browse data from Pricing Option Name").JavaTree("attached text:=Drill down to view details")'.</msg>
<status status="PASS" starttime="20210408 19:09:51.951" endtime="20210408 19:09:53.617"></status>
</kw>
<kw name="Mx LoanIQ Activate Window" library="LoanIQ">
<doc>| Usage |
To activate existing window if present.</doc>
<arguments>
<arg>${LIQ_PricingOptionNameUpdate_Window}</arg>
</arguments>
<msg timestamp="20210408 19:10:00.642" level="INFO">Window : JavaWindow("title:=Pricing Option Name Update") is activated</msg>
<status status="PASS" starttime="20210408 19:09:53.698" endtime="20210408 19:10:00.642"></status>
</kw>
<kw name="Take Screenshot with text into Test Document" library="ReportMaker_Keywords">
<doc>This keyword is used to add screenshot with image filename as description into test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>ARR Pricing Option - Table Maintenance</arg>
</arguments>
<kw name="Take Screenshot" library="Screenshot">
<doc>Takes a screenshot in JPEG format and embeds it into the log file.</doc>
<arguments>
<arg>${imageName}</arg>
</arguments>
<msg timestamp="20210408 19:10:00.859" level="INFO" html="yes">&lt;a href="Results/LoanIQ/TC01%20-%20Validate%20ARR%20Pricing%20Option%20at%20Deal%20Level%20and%20Add%20Libor%20Option___2021-04-08%2019-04-35.729/ARR%20Pricing%20Option%20-%20Table%20Maintenance_1.jpg"&gt;&lt;img src="Results/LoanIQ/TC01%20-%20Validate%20ARR%20Pricing%20Option%20at%20Deal%20Level%20and%20Add%20Libor%20Option___2021-04-08%2019-04-35.729/ARR%20Pricing%20Option%20-%20Table%20Maintenance_1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210408 19:10:00.750" endtime="20210408 19:10:00.859"></status>
</kw>
<kw name="Get Latest File" library="ReportMaker">
<arguments>
<arg>${getfilePath}</arg>
</arguments>
<assign>
<var>${imagePath}</var>
</assign>
<msg timestamp="20210408 19:10:00.915" level="INFO">${imagePath} = C:\Git_Evergreen\transform_arr\Results\LoanIQ\TC01 - Validate ARR Pricing Option at Deal Level and Add Libor Option___2021-04-08 19-04-35.729\ARR Pricing Option - Table Maintenance_1.jpg</msg>
<status status="PASS" starttime="20210408 19:10:00.913" endtime="20210408 19:10:00.915"></status>
</kw>
<kw name="Put Screenshot With Text" library="ReportMaker">
<arguments>
<arg>${imagePath}</arg>
<arg>${imageName}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:10:00.970" endtime="20210408 19:10:00.984"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:00.695" endtime="20210408 19:10:00.985"></status>
</kw>
<kw name="Mx LoanIQ Get Data" library="LoanIQ">
<doc>| Usage |
Used to returns the text of object identified by `locator'</doc>
<arguments>
<arg>${LIQ_PricingOptionNameUpdate_LookbackDays_TextField}</arg>
<arg>value%test</arg>
</arguments>
<assign>
<var>${UI_LookbackDays}</var>
</assign>
<msg timestamp="20210408 19:10:01.166" level="INFO">Fetching value from object: JavaWindow("title:=Pricing Option Name Update").JavaEdit("attached text:=Lookback Days") 
 Value = : 5</msg>
<msg timestamp="20210408 19:10:01.217" level="INFO">${test} = 5</msg>
<msg timestamp="20210408 19:10:01.217" level="INFO">${UI_LookbackDays} = 5</msg>
<status status="PASS" starttime="20210408 19:10:01.035" endtime="20210408 19:10:01.217"></status>
</kw>
<kw name="Mx LoanIQ Get Data" library="LoanIQ">
<doc>| Usage |
Used to returns the text of object identified by `locator'</doc>
<arguments>
<arg>${LIQ_PricingOptionNameUpdate_LookoutDays_TextField}</arg>
<arg>value%test</arg>
</arguments>
<assign>
<var>${UI_LookoutDays}</var>
</assign>
<msg timestamp="20210408 19:10:01.382" level="INFO">Fetching value from object: JavaWindow("title:=Pricing Option Name Update").JavaEdit("attached text:=Lockout Days") 
 Value = : 0</msg>
<msg timestamp="20210408 19:10:01.382" level="INFO">${test} = 0</msg>
<msg timestamp="20210408 19:10:01.383" level="INFO">${UI_LookoutDays} = 0</msg>
<status status="PASS" starttime="20210408 19:10:01.269" endtime="20210408 19:10:01.383"></status>
</kw>
<kw name="Mx LoanIQ Get Data" library="LoanIQ">
<doc>| Usage |
Used to returns the text of object identified by `locator'</doc>
<arguments>
<arg>${LIQ_PricingOptionNameUpdate_RateBasis_ComboBox}</arg>
<arg>value%test</arg>
</arguments>
<assign>
<var>${UI_RateBasis}</var>
</assign>
<msg timestamp="20210408 19:10:01.544" level="INFO">Fetching value from object: JavaWindow("title:=Pricing Option Name Update").JavaList("items count:=4", "y:=393") 
 Value = : Actual/360</msg>
<msg timestamp="20210408 19:10:01.544" level="INFO">${test} = Actual/360</msg>
<msg timestamp="20210408 19:10:01.545" level="INFO">${UI_RateBasis} = Actual/360</msg>
<status status="PASS" starttime="20210408 19:10:01.432" endtime="20210408 19:10:01.545"></status>
</kw>
<kw name="Mx LoanIQ Get Data" library="LoanIQ">
<doc>| Usage |
Used to returns the text of object identified by `locator'</doc>
<arguments>
<arg>${LIQ_PricingOptionNameUpdate_CalculationMedthod_ComboBox}</arg>
<arg>value%test</arg>
</arguments>
<assign>
<var>${UI_CalculationMethod}</var>
</assign>
<msg timestamp="20210408 19:10:01.708" level="INFO">Fetching value from object: JavaWindow("title:=Pricing Option Name Update").JavaList("items count:=5", "y:=353") 
 Value = : Daily Rate With Compounding</msg>
<msg timestamp="20210408 19:10:01.708" level="INFO">${test} = Daily Rate With Compounding</msg>
<msg timestamp="20210408 19:10:01.709" level="INFO">${UI_CalculationMethod} = Daily Rate With Compounding</msg>
<status status="PASS" starttime="20210408 19:10:01.597" endtime="20210408 19:10:01.709"></status>
</kw>
<kw name="Mx LoanIQ Get Data" library="LoanIQ">
<doc>| Usage |
Used to returns the text of object identified by `locator'</doc>
<arguments>
<arg>${LIQ_PricingOptionNameUpdate_PaymentLagDays_TextField}</arg>
<arg>value%test</arg>
</arguments>
<assign>
<var>${UI_PaymentLagDays}</var>
</assign>
<msg timestamp="20210408 19:10:01.885" level="INFO">Fetching value from object: JavaWindow("title:=Pricing Option Name Update").JavaEdit("attached text:=Payment Lag Days") 
 Value = : 0</msg>
<msg timestamp="20210408 19:10:01.886" level="INFO">${test} = 0</msg>
<msg timestamp="20210408 19:10:01.886" level="INFO">${UI_PaymentLagDays} = 0</msg>
<status status="PASS" starttime="20210408 19:10:01.770" endtime="20210408 19:10:01.886"></status>
</kw>
<kw name="Mx LoanIQ Get Data" library="LoanIQ">
<doc>| Usage |
Used to returns the text of object identified by `locator'</doc>
<arguments>
<arg>${LIQ_PricingOptionNameUpdate_PricingLagDays_TextField}</arg>
<arg>value%test</arg>
</arguments>
<assign>
<var>${UI_PricingLagDays}</var>
</assign>
<msg timestamp="20210408 19:10:02.053" level="INFO">Fetching value from object: JavaWindow("title:=Pricing Option Name Update").JavaEdit("attached text:=Pricing Lag Days") 
 Value = : 1</msg>
<msg timestamp="20210408 19:10:02.054" level="INFO">${test} = 1</msg>
<msg timestamp="20210408 19:10:02.054" level="INFO">${UI_PricingLagDays} = 1</msg>
<status status="PASS" starttime="20210408 19:10:01.938" endtime="20210408 19:10:02.054"></status>
</kw>
<kw name="Mx LoanIQ Get Data" library="LoanIQ">
<doc>| Usage |
Used to returns the text of object identified by `locator'</doc>
<arguments>
<arg>${LIQ_PricingOptionNameUpdate_MatchFunded_CheckBox}</arg>
<arg>value%test</arg>
</arguments>
<assign>
<var>${UI_MatchFunded}</var>
</assign>
<msg timestamp="20210408 19:10:02.235" level="INFO">Fetching value from object: JavaWindow("title:=Pricing Option Name Update").JavaCheckBox("attached text:=Match Funded") 
 Value = : 1</msg>
<msg timestamp="20210408 19:10:02.236" level="INFO">${test} = 1</msg>
<msg timestamp="20210408 19:10:02.236" level="INFO">${UI_MatchFunded} = 1</msg>
<status status="PASS" starttime="20210408 19:10:02.118" endtime="20210408 19:10:02.236"></status>
</kw>
<kw name="Mx LoanIQ Set" library="LoanIQ">
<doc>|Usage|</doc>
<arguments>
<arg>${LIQ_PricingOptionNameUpdate_MatchFunded_CheckBox}</arg>
<arg>ON</arg>
</arguments>
<msg timestamp="20210408 19:10:02.422" level="INFO">Object = 'JavaWindow("title:=Pricing Option Name Update").JavaCheckBox("attached text:=Match Funded")' is set.</msg>
<status status="PASS" starttime="20210408 19:10:02.290" endtime="20210408 19:10:02.422"></status>
</kw>
<kw name="Mx LoanIQ Set" library="LoanIQ">
<doc>|Usage|</doc>
<arguments>
<arg>${LIQ_PricingOptionNameUpdate_MatchFundedOverridable_CheckBox}</arg>
<arg>ON</arg>
</arguments>
<msg timestamp="20210408 19:10:02.603" level="INFO">Object = 'JavaWindow("title:=Pricing Option Name Update").JavaCheckBox("attached text:=Match Funded Overridable")' is set.</msg>
<status status="PASS" starttime="20210408 19:10:02.476" endtime="20210408 19:10:02.604"></status>
</kw>
<kw name="Take Screenshot with text into Test Document" library="ReportMaker_Keywords">
<doc>This keyword is used to add screenshot with image filename as description into test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Enable Match Funded Options</arg>
</arguments>
<kw name="Take Screenshot" library="Screenshot">
<doc>Takes a screenshot in JPEG format and embeds it into the log file.</doc>
<arguments>
<arg>${imageName}</arg>
</arguments>
<msg timestamp="20210408 19:10:02.803" level="INFO" html="yes">&lt;a href="Results/LoanIQ/TC01%20-%20Validate%20ARR%20Pricing%20Option%20at%20Deal%20Level%20and%20Add%20Libor%20Option___2021-04-08%2019-04-35.729/Enable%20Match%20Funded%20Options_1.jpg"&gt;&lt;img src="Results/LoanIQ/TC01%20-%20Validate%20ARR%20Pricing%20Option%20at%20Deal%20Level%20and%20Add%20Libor%20Option___2021-04-08%2019-04-35.729/Enable%20Match%20Funded%20Options_1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210408 19:10:02.708" endtime="20210408 19:10:02.804"></status>
</kw>
<kw name="Get Latest File" library="ReportMaker">
<arguments>
<arg>${getfilePath}</arg>
</arguments>
<assign>
<var>${imagePath}</var>
</assign>
<msg timestamp="20210408 19:10:02.860" level="INFO">${imagePath} = C:\Git_Evergreen\transform_arr\Results\LoanIQ\TC01 - Validate ARR Pricing Option at Deal Level and Add Libor Option___2021-04-08 19-04-35.729\Enable Match Funded Options_1.jpg</msg>
<status status="PASS" starttime="20210408 19:10:02.858" endtime="20210408 19:10:02.860"></status>
</kw>
<kw name="Put Screenshot With Text" library="ReportMaker">
<arguments>
<arg>${imagePath}</arg>
<arg>${imageName}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:10:02.910" endtime="20210408 19:10:02.925"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:02.658" endtime="20210408 19:10:02.926"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_PricingOptionNameUpdate_OK_Button}</arg>
</arguments>
<msg timestamp="20210408 19:10:03.295" level="INFO">JavaWindow("title:=Pricing Option Name Update").JavaButton("attached text:=OK") is clicked.</msg>
<status status="PASS" starttime="20210408 19:10:02.980" endtime="20210408 19:10:03.296"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_EnterOptionalUserComment_Window}</arg>
</arguments>
<assign>
<var>${UserCommentWindow_isPresent}</var>
</assign>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_EnterOptionalUserComment_Window}</arg>
</arguments>
<msg timestamp="20210408 19:10:08.721" level="INFO" html="yes">&lt;a href="screenshot_30.jpg"&gt;&lt;img src="screenshot_30.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20210408 19:10:08.721" level="INFO">Keyword Details-------------------------------------------------
Action = VERIFYOBJECTEXIST
Input = None
Object = JavaWindow("title:=Enter Optional User Comment")
Verification Data = Y</msg>
<msg timestamp="20210408 19:10:08.722" level="FAIL">Error Number: -110037 Error Description: Object doesnot Exist. JavaVerifyObjectExist. Retried for:  0 times. </msg>
<status status="FAIL" starttime="20210408 19:10:03.382" endtime="20210408 19:10:08.909"></status>
</kw>
<msg timestamp="20210408 19:10:08.910" level="INFO">${UserCommentWindow_isPresent} = False</msg>
<status status="PASS" starttime="20210408 19:10:03.380" endtime="20210408 19:10:08.910"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UserCommentWindow_isPresent}'=='True'</arg>
<arg>Mx LoanIQ click</arg>
<arg>${LIQ_EnterOptionalUserComment_OK_Button}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:10:08.983" endtime="20210408 19:10:08.983"></status>
</kw>
<kw name="Mx LoanIQ Close Window" library="LoanIQ">
<doc>| Usage |
To close the specified window.</doc>
<arguments>
<arg>${LIQ_PricingOption_Window}</arg>
</arguments>
<msg timestamp="20210408 19:10:09.205" level="INFO"> Window: JavaWindow("title:=Browse data from Pricing Option Name") is closed.</msg>
<status status="PASS" starttime="20210408 19:10:09.034" endtime="20210408 19:10:09.206"></status>
</kw>
<kw name="Mx LoanIQ Close Window" library="LoanIQ">
<doc>| Usage |
To close the specified window.</doc>
<arguments>
<arg>${LIQ_TableMaintenance_Window}</arg>
</arguments>
<msg timestamp="20210408 19:10:09.392" level="INFO"> Window: JavaWindow("title:=Table Maintenance") is closed.</msg>
<status status="PASS" starttime="20210408 19:10:09.286" endtime="20210408 19:10:09.393"></status>
</kw>
<kw name="Save Values of Runtime Execution on Excel File" library="GenericKeywords">
<doc>This keyword is used to save the generated values of runtime to the excel file.
@author: amansuet 31MAR2020 - initial create</doc>
<arguments>
<arg>${sRunTimeVar_LookbackDays}</arg>
<arg>${UI_LookbackDays}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:10:09.549" level="INFO">${List_Argument_Excel_Value} = ['None']</msg>
<status status="PASS" starttime="20210408 19:10:09.548" endtime="20210408 19:10:09.549"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:10:09.605" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:10:09.606" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:10:09.605" endtime="20210408 19:10:09.606"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:10:09.672" level="INFO">${Arg_User_Input} = NONE</msg>
<status status="PASS" starttime="20210408 19:10:09.671" endtime="20210408 19:10:09.672"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}&gt;=2</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:10:09.740" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:10:09.739" endtime="20210408 19:10:09.740"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}'</arg>
<arg>Log</arg>
<arg>User input non-runtime value.</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}&gt;=2 and '${Arg_User_Input}'=='${RUNTIME}' and '${Variable_Name_Input}'!=''</arg>
<arg>Write Data to Runtime Excel File</arg>
<arg>${SCENARIONAME_CURRENT}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>${sExtracted_Argument_Value}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Invalid Argument Value for Runtime. Runtime format should be = 'Runtime:&lt;VariableName&gt;' or 'Runtime:&lt;VariableName&gt;:&lt;Prefix&gt;'.</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>User input non-runtime value.</arg>
</arguments>
<msg timestamp="20210408 19:10:09.799" level="INFO">User input non-runtime value.</msg>
<status status="PASS" starttime="20210408 19:10:09.799" endtime="20210408 19:10:09.799"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:09.796" endtime="20210408 19:10:09.799"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:09.463" endtime="20210408 19:10:09.800"></status>
</kw>
<kw name="Save Values of Runtime Execution on Excel File" library="GenericKeywords">
<doc>This keyword is used to save the generated values of runtime to the excel file.
@author: amansuet 31MAR2020 - initial create</doc>
<arguments>
<arg>${sRunTimeVar_LookoutDays}</arg>
<arg>${UI_LookoutDays}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:10:09.907" level="INFO">${List_Argument_Excel_Value} = ['None']</msg>
<status status="PASS" starttime="20210408 19:10:09.907" endtime="20210408 19:10:09.907"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:10:09.960" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:10:09.960" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:10:09.959" endtime="20210408 19:10:09.960"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:10:10.012" level="INFO">${Arg_User_Input} = NONE</msg>
<status status="PASS" starttime="20210408 19:10:10.011" endtime="20210408 19:10:10.012"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}&gt;=2</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:10:10.064" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:10:10.063" endtime="20210408 19:10:10.064"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}'</arg>
<arg>Log</arg>
<arg>User input non-runtime value.</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}&gt;=2 and '${Arg_User_Input}'=='${RUNTIME}' and '${Variable_Name_Input}'!=''</arg>
<arg>Write Data to Runtime Excel File</arg>
<arg>${SCENARIONAME_CURRENT}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>${sExtracted_Argument_Value}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Invalid Argument Value for Runtime. Runtime format should be = 'Runtime:&lt;VariableName&gt;' or 'Runtime:&lt;VariableName&gt;:&lt;Prefix&gt;'.</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>User input non-runtime value.</arg>
</arguments>
<msg timestamp="20210408 19:10:10.125" level="INFO">User input non-runtime value.</msg>
<status status="PASS" starttime="20210408 19:10:10.124" endtime="20210408 19:10:10.125"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:10.123" endtime="20210408 19:10:10.125"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:09.851" endtime="20210408 19:10:10.125"></status>
</kw>
<kw name="Save Values of Runtime Execution on Excel File" library="GenericKeywords">
<doc>This keyword is used to save the generated values of runtime to the excel file.
@author: amansuet 31MAR2020 - initial create</doc>
<arguments>
<arg>${sRunTimeVar_RateBasis}</arg>
<arg>${UI_RateBasis}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:10:10.235" level="INFO">${List_Argument_Excel_Value} = ['None']</msg>
<status status="PASS" starttime="20210408 19:10:10.235" endtime="20210408 19:10:10.235"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:10:10.301" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:10:10.301" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:10:10.300" endtime="20210408 19:10:10.301"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:10:10.380" level="INFO">${Arg_User_Input} = NONE</msg>
<status status="PASS" starttime="20210408 19:10:10.379" endtime="20210408 19:10:10.380"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}&gt;=2</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:10:10.458" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:10:10.457" endtime="20210408 19:10:10.458"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}'</arg>
<arg>Log</arg>
<arg>User input non-runtime value.</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}&gt;=2 and '${Arg_User_Input}'=='${RUNTIME}' and '${Variable_Name_Input}'!=''</arg>
<arg>Write Data to Runtime Excel File</arg>
<arg>${SCENARIONAME_CURRENT}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>${sExtracted_Argument_Value}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Invalid Argument Value for Runtime. Runtime format should be = 'Runtime:&lt;VariableName&gt;' or 'Runtime:&lt;VariableName&gt;:&lt;Prefix&gt;'.</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>User input non-runtime value.</arg>
</arguments>
<msg timestamp="20210408 19:10:10.541" level="INFO">User input non-runtime value.</msg>
<status status="PASS" starttime="20210408 19:10:10.540" endtime="20210408 19:10:10.541"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:10.538" endtime="20210408 19:10:10.541"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:10.180" endtime="20210408 19:10:10.542"></status>
</kw>
<kw name="Save Values of Runtime Execution on Excel File" library="GenericKeywords">
<doc>This keyword is used to save the generated values of runtime to the excel file.
@author: amansuet 31MAR2020 - initial create</doc>
<arguments>
<arg>${sRunTimeVar_CalculationMethod}</arg>
<arg>${UI_CalculationMethod}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:10:10.665" level="INFO">${List_Argument_Excel_Value} = ['None']</msg>
<status status="PASS" starttime="20210408 19:10:10.664" endtime="20210408 19:10:10.665"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:10:10.718" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:10:10.718" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:10:10.717" endtime="20210408 19:10:10.718"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:10:10.771" level="INFO">${Arg_User_Input} = NONE</msg>
<status status="PASS" starttime="20210408 19:10:10.771" endtime="20210408 19:10:10.772"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}&gt;=2</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:10:10.824" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:10:10.824" endtime="20210408 19:10:10.825"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}'</arg>
<arg>Log</arg>
<arg>User input non-runtime value.</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}&gt;=2 and '${Arg_User_Input}'=='${RUNTIME}' and '${Variable_Name_Input}'!=''</arg>
<arg>Write Data to Runtime Excel File</arg>
<arg>${SCENARIONAME_CURRENT}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>${sExtracted_Argument_Value}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Invalid Argument Value for Runtime. Runtime format should be = 'Runtime:&lt;VariableName&gt;' or 'Runtime:&lt;VariableName&gt;:&lt;Prefix&gt;'.</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>User input non-runtime value.</arg>
</arguments>
<msg timestamp="20210408 19:10:10.878" level="INFO">User input non-runtime value.</msg>
<status status="PASS" starttime="20210408 19:10:10.878" endtime="20210408 19:10:10.878"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:10.876" endtime="20210408 19:10:10.878"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:10.595" endtime="20210408 19:10:10.878"></status>
</kw>
<kw name="Save Values of Runtime Execution on Excel File" library="GenericKeywords">
<doc>This keyword is used to save the generated values of runtime to the excel file.
@author: amansuet 31MAR2020 - initial create</doc>
<arguments>
<arg>${sRunTimeVar_PaymanetLagDays}</arg>
<arg>${UI_PaymentLagDays}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:10:10.986" level="INFO">${List_Argument_Excel_Value} = ['None']</msg>
<status status="PASS" starttime="20210408 19:10:10.985" endtime="20210408 19:10:10.986"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:10:11.037" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:10:11.037" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:10:11.037" endtime="20210408 19:10:11.037"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:10:11.091" level="INFO">${Arg_User_Input} = NONE</msg>
<status status="PASS" starttime="20210408 19:10:11.091" endtime="20210408 19:10:11.091"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}&gt;=2</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:10:11.143" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:10:11.143" endtime="20210408 19:10:11.143"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}'</arg>
<arg>Log</arg>
<arg>User input non-runtime value.</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}&gt;=2 and '${Arg_User_Input}'=='${RUNTIME}' and '${Variable_Name_Input}'!=''</arg>
<arg>Write Data to Runtime Excel File</arg>
<arg>${SCENARIONAME_CURRENT}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>${sExtracted_Argument_Value}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Invalid Argument Value for Runtime. Runtime format should be = 'Runtime:&lt;VariableName&gt;' or 'Runtime:&lt;VariableName&gt;:&lt;Prefix&gt;'.</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>User input non-runtime value.</arg>
</arguments>
<msg timestamp="20210408 19:10:11.197" level="INFO">User input non-runtime value.</msg>
<status status="PASS" starttime="20210408 19:10:11.197" endtime="20210408 19:10:11.197"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:11.195" endtime="20210408 19:10:11.197"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:10.933" endtime="20210408 19:10:11.198"></status>
</kw>
<kw name="Save Values of Runtime Execution on Excel File" library="GenericKeywords">
<doc>This keyword is used to save the generated values of runtime to the excel file.
@author: amansuet 31MAR2020 - initial create</doc>
<arguments>
<arg>${sRunTimeVar_PricingLagDays}</arg>
<arg>${UI_PricingLagDays}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:10:11.299" level="INFO">${List_Argument_Excel_Value} = ['None']</msg>
<status status="PASS" starttime="20210408 19:10:11.298" endtime="20210408 19:10:11.299"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:10:11.351" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:10:11.351" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:10:11.351" endtime="20210408 19:10:11.351"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:10:11.403" level="INFO">${Arg_User_Input} = NONE</msg>
<status status="PASS" starttime="20210408 19:10:11.402" endtime="20210408 19:10:11.403"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}&gt;=2</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:10:11.454" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:10:11.454" endtime="20210408 19:10:11.454"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}'</arg>
<arg>Log</arg>
<arg>User input non-runtime value.</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}&gt;=2 and '${Arg_User_Input}'=='${RUNTIME}' and '${Variable_Name_Input}'!=''</arg>
<arg>Write Data to Runtime Excel File</arg>
<arg>${SCENARIONAME_CURRENT}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>${sExtracted_Argument_Value}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Invalid Argument Value for Runtime. Runtime format should be = 'Runtime:&lt;VariableName&gt;' or 'Runtime:&lt;VariableName&gt;:&lt;Prefix&gt;'.</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>User input non-runtime value.</arg>
</arguments>
<msg timestamp="20210408 19:10:11.510" level="INFO">User input non-runtime value.</msg>
<status status="PASS" starttime="20210408 19:10:11.509" endtime="20210408 19:10:11.510"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:11.508" endtime="20210408 19:10:11.510"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:11.247" endtime="20210408 19:10:11.510"></status>
</kw>
<msg timestamp="20210408 19:10:11.511" level="INFO">${LookbackDays} = 5</msg>
<msg timestamp="20210408 19:10:11.511" level="INFO">${LookoutDays} = 0</msg>
<msg timestamp="20210408 19:10:11.511" level="INFO">${RateBasis} = Actual/360</msg>
<msg timestamp="20210408 19:10:11.511" level="INFO">${CalculationMethod} = Daily Rate With Compounding</msg>
<msg timestamp="20210408 19:10:11.511" level="INFO">${PaymentLagDays} = 0</msg>
<msg timestamp="20210408 19:10:11.511" level="INFO">${PricingLagDays} = 1</msg>
<status status="PASS" starttime="20210408 19:09:44.176" endtime="20210408 19:10:11.511"></status>
</kw>
<kw name="Validate Deal ARR Pricing Option Details" library="Deal_Notebook">
<doc>This keyword will validate the ARR Pricing Options Details in Deal Notebook.
@author: jloretiz 04FEB2021 - initial create
@update: rjlingat 08APR2021 - update to handle Observation Period with On or Off value and Disabled. Validates ARR Parameters Not Overridable. Condition to Click Cancel or Ok</doc>
<arguments>
<arg>&amp;{ExcelPath}[Deal_PricingOption]</arg>
<arg>&amp;{ExcelPath}[PricingOption_ARRObservationPeriod]</arg>
<arg>${LookbackDays}</arg>
<arg>${LookoutDays}</arg>
<arg>${RateBasis}</arg>
<arg>${CalculationMethod}</arg>
</arguments>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sPricingRule_Option}</arg>
</arguments>
<assign>
<var>${PricingRule_Option}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:10:11.773" endtime="20210408 19:10:11.773"></status>
</kw>
<msg timestamp="20210408 19:10:11.773" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:10:11.771" endtime="20210408 19:10:11.773"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:10:12.104" level="INFO">${List_Argument_Excel_Value} = ['SOFR Daily Compounding W OPS Not Overridable']</msg>
<status status="PASS" starttime="20210408 19:10:12.104" endtime="20210408 19:10:12.104"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:10:12.157" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:10:12.157" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:10:12.157" endtime="20210408 19:10:12.157"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:10:12.208" level="INFO">${Arg_User_Input} = SOFR DAILY COMPOUNDING W OPS NOT OVERRIDABLE</msg>
<status status="PASS" starttime="20210408 19:10:12.207" endtime="20210408 19:10:12.208"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:10:12.262" level="INFO">${Arg_User_Input} = SOFR DAILY COMPOUNDING W OPS NOT OVERRIDABLE</msg>
<status status="PASS" starttime="20210408 19:10:12.261" endtime="20210408 19:10:12.262"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:10:12.320" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:10:12.320" endtime="20210408 19:10:12.320"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:10:12.379" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:10:12.379" endtime="20210408 19:10:12.380"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:10:12.438" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:10:12.438" endtime="20210408 19:10:12.439"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:10:12.498" endtime="20210408 19:10:12.499"></status>
</kw>
<msg timestamp="20210408 19:10:12.499" level="INFO">${Extracted_Argument_Value} = SOFR Daily Compounding W OPS Not Overridable</msg>
<status status="PASS" starttime="20210408 19:10:12.494" endtime="20210408 19:10:12.499"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:12.045" endtime="20210408 19:10:12.499"></status>
</kw>
<msg timestamp="20210408 19:10:12.499" level="INFO">${Extracted_Argument_Value} = SOFR Daily Compounding W OPS Not Overridable</msg>
<status status="PASS" starttime="20210408 19:10:11.936" endtime="20210408 19:10:12.499"></status>
</kw>
<msg timestamp="20210408 19:10:12.500" level="INFO">${PricingRule_Option} = SOFR Daily Compounding W OPS Not Overridable</msg>
<status status="PASS" starttime="20210408 19:10:11.718" endtime="20210408 19:10:12.500"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sLookbackDays}</arg>
</arguments>
<assign>
<var>${LookbackDays}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:10:12.716" endtime="20210408 19:10:12.717"></status>
</kw>
<msg timestamp="20210408 19:10:12.717" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:10:12.715" endtime="20210408 19:10:12.717"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:10:12.943" level="INFO">${List_Argument_Excel_Value} = ['5']</msg>
<status status="PASS" starttime="20210408 19:10:12.942" endtime="20210408 19:10:12.943"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:10:12.994" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:10:12.994" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:10:12.993" endtime="20210408 19:10:12.995"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:10:13.046" level="INFO">${Arg_User_Input} = 5</msg>
<status status="PASS" starttime="20210408 19:10:13.045" endtime="20210408 19:10:13.046"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:10:13.100" level="INFO">${Arg_User_Input} = 5</msg>
<status status="PASS" starttime="20210408 19:10:13.099" endtime="20210408 19:10:13.100"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:10:13.160" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:10:13.159" endtime="20210408 19:10:13.160"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:10:13.239" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:10:13.238" endtime="20210408 19:10:13.239"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:10:13.317" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:10:13.316" endtime="20210408 19:10:13.317"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:10:13.396" endtime="20210408 19:10:13.396"></status>
</kw>
<msg timestamp="20210408 19:10:13.396" level="INFO">${Extracted_Argument_Value} = 5</msg>
<status status="PASS" starttime="20210408 19:10:13.393" endtime="20210408 19:10:13.396"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:12.877" endtime="20210408 19:10:13.397"></status>
</kw>
<msg timestamp="20210408 19:10:13.397" level="INFO">${Extracted_Argument_Value} = 5</msg>
<status status="PASS" starttime="20210408 19:10:12.768" endtime="20210408 19:10:13.397"></status>
</kw>
<msg timestamp="20210408 19:10:13.397" level="INFO">${LookbackDays} = 5</msg>
<status status="PASS" starttime="20210408 19:10:12.660" endtime="20210408 19:10:13.397"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sLookoutDays}</arg>
</arguments>
<assign>
<var>${LookoutDays}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:10:13.714" endtime="20210408 19:10:13.715"></status>
</kw>
<msg timestamp="20210408 19:10:13.715" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:10:13.712" endtime="20210408 19:10:13.715"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:10:14.011" level="INFO">${List_Argument_Excel_Value} = ['0']</msg>
<status status="PASS" starttime="20210408 19:10:14.010" endtime="20210408 19:10:14.011"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:10:14.062" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:10:14.062" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:10:14.061" endtime="20210408 19:10:14.062"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:10:14.120" level="INFO">${Arg_User_Input} = 0</msg>
<status status="PASS" starttime="20210408 19:10:14.119" endtime="20210408 19:10:14.120"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:10:14.171" level="INFO">${Arg_User_Input} = 0</msg>
<status status="PASS" starttime="20210408 19:10:14.170" endtime="20210408 19:10:14.171"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:10:14.223" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:10:14.223" endtime="20210408 19:10:14.224"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:10:14.275" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:10:14.275" endtime="20210408 19:10:14.275"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:10:14.328" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:10:14.327" endtime="20210408 19:10:14.328"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:10:14.382" endtime="20210408 19:10:14.382"></status>
</kw>
<msg timestamp="20210408 19:10:14.382" level="INFO">${Extracted_Argument_Value} = 0</msg>
<status status="PASS" starttime="20210408 19:10:14.380" endtime="20210408 19:10:14.382"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:13.943" endtime="20210408 19:10:14.383"></status>
</kw>
<msg timestamp="20210408 19:10:14.383" level="INFO">${Extracted_Argument_Value} = 0</msg>
<status status="PASS" starttime="20210408 19:10:13.792" endtime="20210408 19:10:14.383"></status>
</kw>
<msg timestamp="20210408 19:10:14.383" level="INFO">${LookoutDays} = 0</msg>
<status status="PASS" starttime="20210408 19:10:13.634" endtime="20210408 19:10:14.383"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sRateBasis}</arg>
</arguments>
<assign>
<var>${RateBasis}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:10:14.715" endtime="20210408 19:10:14.716"></status>
</kw>
<msg timestamp="20210408 19:10:14.716" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:10:14.713" endtime="20210408 19:10:14.716"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:10:15.017" level="INFO">${List_Argument_Excel_Value} = ['Actual/360']</msg>
<status status="PASS" starttime="20210408 19:10:15.017" endtime="20210408 19:10:15.017"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:10:15.069" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:10:15.069" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:10:15.068" endtime="20210408 19:10:15.069"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:10:15.124" level="INFO">${Arg_User_Input} = ACTUAL/360</msg>
<status status="PASS" starttime="20210408 19:10:15.123" endtime="20210408 19:10:15.124"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:10:15.176" level="INFO">${Arg_User_Input} = ACTUAL/360</msg>
<status status="PASS" starttime="20210408 19:10:15.176" endtime="20210408 19:10:15.177"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:10:15.229" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:10:15.229" endtime="20210408 19:10:15.230"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:10:15.284" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:10:15.283" endtime="20210408 19:10:15.284"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:10:15.336" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:10:15.335" endtime="20210408 19:10:15.336"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:10:15.390" endtime="20210408 19:10:15.391"></status>
</kw>
<msg timestamp="20210408 19:10:15.391" level="INFO">${Extracted_Argument_Value} = Actual/360</msg>
<status status="PASS" starttime="20210408 19:10:15.388" endtime="20210408 19:10:15.391"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:14.943" endtime="20210408 19:10:15.391"></status>
</kw>
<msg timestamp="20210408 19:10:15.392" level="INFO">${Extracted_Argument_Value} = Actual/360</msg>
<status status="PASS" starttime="20210408 19:10:14.793" endtime="20210408 19:10:15.392"></status>
</kw>
<msg timestamp="20210408 19:10:15.392" level="INFO">${RateBasis} = Actual/360</msg>
<status status="PASS" starttime="20210408 19:10:14.642" endtime="20210408 19:10:15.392"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sCalculationMethod}</arg>
</arguments>
<assign>
<var>${CalculationMethod}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:10:15.600" endtime="20210408 19:10:15.600"></status>
</kw>
<msg timestamp="20210408 19:10:15.601" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:10:15.599" endtime="20210408 19:10:15.601"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:10:15.809" level="INFO">${List_Argument_Excel_Value} = ['Daily Rate With Compounding']</msg>
<status status="PASS" starttime="20210408 19:10:15.808" endtime="20210408 19:10:15.809"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:10:15.859" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:10:15.859" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:10:15.859" endtime="20210408 19:10:15.859"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:10:15.914" level="INFO">${Arg_User_Input} = DAILY RATE WITH COMPOUNDING</msg>
<status status="PASS" starttime="20210408 19:10:15.913" endtime="20210408 19:10:15.914"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:10:16.014" level="INFO">${Arg_User_Input} = DAILY RATE WITH COMPOUNDING</msg>
<status status="PASS" starttime="20210408 19:10:16.013" endtime="20210408 19:10:16.014"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:10:16.083" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:10:16.082" endtime="20210408 19:10:16.083"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:10:16.145" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:10:16.144" endtime="20210408 19:10:16.145"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:10:16.196" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:10:16.195" endtime="20210408 19:10:16.196"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:10:16.249" endtime="20210408 19:10:16.250"></status>
</kw>
<msg timestamp="20210408 19:10:16.250" level="INFO">${Extracted_Argument_Value} = Daily Rate With Compounding</msg>
<status status="PASS" starttime="20210408 19:10:16.247" endtime="20210408 19:10:16.250"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:15.754" endtime="20210408 19:10:16.250"></status>
</kw>
<msg timestamp="20210408 19:10:16.251" level="INFO">${Extracted_Argument_Value} = Daily Rate With Compounding</msg>
<status status="PASS" starttime="20210408 19:10:15.652" endtime="20210408 19:10:16.251"></status>
</kw>
<msg timestamp="20210408 19:10:16.251" level="INFO">${CalculationMethod} = Daily Rate With Compounding</msg>
<status status="PASS" starttime="20210408 19:10:15.545" endtime="20210408 19:10:16.251"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sObservationPeriod}</arg>
</arguments>
<assign>
<var>${ObservationPeriod}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:10:16.462" endtime="20210408 19:10:16.463"></status>
</kw>
<msg timestamp="20210408 19:10:16.463" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:10:16.461" endtime="20210408 19:10:16.463"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:10:16.668" level="INFO">${List_Argument_Excel_Value} = ['ON']</msg>
<status status="PASS" starttime="20210408 19:10:16.667" endtime="20210408 19:10:16.668"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:10:16.720" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:10:16.720" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:10:16.719" endtime="20210408 19:10:16.720"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:10:16.770" level="INFO">${Arg_User_Input} = ON</msg>
<status status="PASS" starttime="20210408 19:10:16.770" endtime="20210408 19:10:16.770"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:10:16.828" level="INFO">${Arg_User_Input} = ON</msg>
<status status="PASS" starttime="20210408 19:10:16.827" endtime="20210408 19:10:16.828"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:10:16.880" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:10:16.879" endtime="20210408 19:10:16.880"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:10:16.935" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:10:16.934" endtime="20210408 19:10:16.935"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:10:16.986" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:10:16.985" endtime="20210408 19:10:16.986"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:10:17.037" endtime="20210408 19:10:17.038"></status>
</kw>
<msg timestamp="20210408 19:10:17.038" level="INFO">${Extracted_Argument_Value} = ON</msg>
<status status="PASS" starttime="20210408 19:10:17.035" endtime="20210408 19:10:17.038"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:16.613" endtime="20210408 19:10:17.039"></status>
</kw>
<msg timestamp="20210408 19:10:17.039" level="INFO">${Extracted_Argument_Value} = ON</msg>
<status status="PASS" starttime="20210408 19:10:16.514" endtime="20210408 19:10:17.039"></status>
</kw>
<msg timestamp="20210408 19:10:17.040" level="INFO">${ObservationPeriod} = ON</msg>
<status status="PASS" starttime="20210408 19:10:16.409" endtime="20210408 19:10:17.040"></status>
</kw>
<kw name="Mx LoanIQ Activate Window" library="LoanIQ">
<doc>| Usage |
To activate existing window if present.</doc>
<arguments>
<arg>${LIQ_DealNotebook_Window}</arg>
</arguments>
<msg timestamp="20210408 19:10:17.196" level="INFO">Window : JavaWindow("title:=Deal Notebook -.*","displayed:=1") is activated</msg>
<status status="PASS" starttime="20210408 19:10:17.101" endtime="20210408 19:10:17.197"></status>
</kw>
<kw name="Mx LoanIQ Select Window Tab" library="LoanIQ">
<doc>| Usage |
Used to select the Java window tab</doc>
<arguments>
<arg>${LIQ_DealNotebook_Tab}</arg>
<arg>${TAB_PRICING_RULES}</arg>
</arguments>
<msg timestamp="20210408 19:10:22.212" level="INFO">Window Tab = 'Pricing Rules' is selected from the element = 'JavaWindow("title:=Deal Notebook -.*","displayed:=1").JavaTab("tagname:=TabFolder")'</msg>
<status status="PASS" starttime="20210408 19:10:17.256" endtime="20210408 19:10:22.212"></status>
</kw>
<kw name="Mx LoanIQ DoubleClick" library="LoanIQ">
<doc>| Usage |
 This keyword performs double click on a item in the JavaTree</doc>
<arguments>
<arg>${LIQ_PricingRules_AllowedPricingOption_JavaTree}</arg>
<arg>${PricingRule_Option}</arg>
</arguments>
<msg timestamp="20210408 19:10:26.672" level="INFO">Double clicked on 'SOFR Daily Compounding W OPS Not Overridable' at object = 'JavaWindow("title:=Deal Notebook -.*").JavaTree("tagname:=Drill down to update","labeled_containers_path:=.*Allowed Pricing Options.*")'.</msg>
<status status="PASS" starttime="20210408 19:10:22.280" endtime="20210408 19:10:26.672"></status>
</kw>
<kw name="Mx LoanIQ Activate Window" library="LoanIQ">
<doc>| Usage |
To activate existing window if present.</doc>
<arguments>
<arg>${LIQ_InterestPricingOption_Window}</arg>
</arguments>
<msg timestamp="20210408 19:10:26.811" level="INFO">Window : JavaWindow("title:=.*Interest Pricing Option.*") is activated</msg>
<status status="PASS" starttime="20210408 19:10:26.742" endtime="20210408 19:10:26.811"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_InterestPricingOption_ARRParameters_Button}</arg>
</arguments>
<msg timestamp="20210408 19:10:27.392" level="INFO">JavaWindow("title:=.*Interest Pricing Option.*").JavaButton("attached text:=ARR Parameters") is clicked.</msg>
<status status="PASS" starttime="20210408 19:10:26.887" endtime="20210408 19:10:27.393"></status>
</kw>
<kw name="Mx LoanIQ Activate Window" library="LoanIQ">
<doc>| Usage |
To activate existing window if present.</doc>
<arguments>
<arg>${LIQ_AlternativeReferenceRates_Window}</arg>
</arguments>
<msg timestamp="20210408 19:10:27.592" level="INFO">Window : JavaWindow("title:=Alternative Reference Rates .*") is activated</msg>
<status status="PASS" starttime="20210408 19:10:27.480" endtime="20210408 19:10:27.593"></status>
</kw>
<kw name="Mx LoanIQ Get Data" library="LoanIQ">
<doc>| Usage |
Used to returns the text of object identified by `locator'</doc>
<arguments>
<arg>${LIQ_AlternativeReferenceRates_LookbackDays_TextField}</arg>
<arg>value%test</arg>
</arguments>
<assign>
<var>${UI_LookbackDays}</var>
</assign>
<msg timestamp="20210408 19:10:27.721" level="INFO">Fetching value from object: JavaWindow("title:=Alternative Reference Rates .*").JavaEdit("attached text:=Lookback Days:") 
 Value = : 5</msg>
<msg timestamp="20210408 19:10:27.721" level="INFO">${test} = 5</msg>
<msg timestamp="20210408 19:10:27.722" level="INFO">${UI_LookbackDays} = 5</msg>
<status status="PASS" starttime="20210408 19:10:27.646" endtime="20210408 19:10:27.722"></status>
</kw>
<kw name="Mx LoanIQ Get Data" library="LoanIQ">
<doc>| Usage |
Used to returns the text of object identified by `locator'</doc>
<arguments>
<arg>${LIQ_AlternativeReferenceRates_LockoutDays_TextField}</arg>
<arg>value%test</arg>
</arguments>
<assign>
<var>${UI_LookoutDays}</var>
</assign>
<msg timestamp="20210408 19:10:27.867" level="INFO">Fetching value from object: JavaWindow("title:=Alternative Reference Rates .*").JavaEdit("attached text:=Lockout Days:") 
 Value = : 0</msg>
<msg timestamp="20210408 19:10:27.868" level="INFO">${test} = 0</msg>
<msg timestamp="20210408 19:10:27.868" level="INFO">${UI_LookoutDays} = 0</msg>
<status status="PASS" starttime="20210408 19:10:27.785" endtime="20210408 19:10:27.868"></status>
</kw>
<kw name="Mx LoanIQ Get Data" library="LoanIQ">
<doc>| Usage |
Used to returns the text of object identified by `locator'</doc>
<arguments>
<arg>${LIQ_AlternativeReferenceRates_RateBasis_Dropdown}</arg>
<arg>value%test</arg>
</arguments>
<assign>
<var>${UI_RateBasis}</var>
</assign>
<msg timestamp="20210408 19:10:28.008" level="INFO">Fetching value from object: JavaWindow("title:=Alternative Reference Rates .*").JavaList("attached text:=Rate Basis:") 
 Value = : Actual/360</msg>
<msg timestamp="20210408 19:10:28.009" level="INFO">${test} = Actual/360</msg>
<msg timestamp="20210408 19:10:28.009" level="INFO">${UI_RateBasis} = Actual/360</msg>
<status status="PASS" starttime="20210408 19:10:27.924" endtime="20210408 19:10:28.009"></status>
</kw>
<kw name="Mx LoanIQ Get Data" library="LoanIQ">
<doc>| Usage |
Used to returns the text of object identified by `locator'</doc>
<arguments>
<arg>${LIQ_AlternativeReferenceRates_CalculationMethod_Dropdown}</arg>
<arg>value%test</arg>
</arguments>
<assign>
<var>${UI_CalculationMethod}</var>
</assign>
<msg timestamp="20210408 19:10:28.158" level="INFO">Fetching value from object: JavaWindow("title:=Alternative Reference Rates .*").JavaList("attached text:=Calculation Method:") 
 Value = : Daily Rate With Compounding</msg>
<msg timestamp="20210408 19:10:28.158" level="INFO">${test} = Daily Rate With Compounding</msg>
<msg timestamp="20210408 19:10:28.159" level="INFO">${UI_CalculationMethod} = Daily Rate With Compounding</msg>
<status status="PASS" starttime="20210408 19:10:28.066" endtime="20210408 19:10:28.159"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Validate if Element is Disabled</arg>
<arg>${LIQ_AlternativeReferenceRates_ObservationPeriod_Checkbox}</arg>
<arg>disabled%1</arg>
</arguments>
<assign>
<var>${ButtonStatus_ObservationPeriod}</var>
</assign>
<kw name="Validate if Element is Disabled" library="GenericKeywords">
<doc>This keyword validates if Element is disabled
@author: ghabal</doc>
<arguments>
<arg>${LIQ_AlternativeReferenceRates_ObservationPeriod_Checkbox}</arg>
<arg>disabled%1</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%0</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>enabled%0</arg>
</arguments>
<msg timestamp="20210408 19:10:28.420" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:10:28.295" endtime="20210408 19:10:28.420"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:28.293" endtime="20210408 19:10:28.420"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%0</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>enabled%0</arg>
</arguments>
<msg timestamp="20210408 19:10:28.692" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:10:28.596" endtime="20210408 19:10:28.692"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:28.594" endtime="20210408 19:10:28.693"></status>
</kw>
<msg timestamp="20210408 19:10:28.693" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:10:28.593" endtime="20210408 19:10:28.693"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed disabled</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed enabled</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>'${Field_Label}' element is confirmed disabled</arg>
</arguments>
<msg timestamp="20210408 19:10:28.746" level="INFO">'disabled%1' element is confirmed disabled</msg>
<status status="PASS" starttime="20210408 19:10:28.746" endtime="20210408 19:10:28.746"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:28.744" endtime="20210408 19:10:28.746"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:28.223" endtime="20210408 19:10:28.747"></status>
</kw>
<msg timestamp="20210408 19:10:28.747" level="INFO">${ButtonStatus_ObservationPeriod} = True</msg>
<status status="PASS" starttime="20210408 19:10:28.221" endtime="20210408 19:10:28.747"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ObservationPeriod}'=='${ON}' and ${ButtonStatus_ObservationPeriod}==False</arg>
<arg>Mx LoanIQ Set</arg>
<arg>${LIQ_AlternativeReferenceRates_ObservationPeriod_Checkbox}</arg>
<arg>${ON}</arg>
<arg>ELSE IF</arg>
<arg>'${ObservationPeriod}'=='${OFF}' and ${ButtonStatus_ObservationPeriod}==False</arg>
<arg>Mx LoanIQ Set</arg>
<arg>${LIQ_AlternativeReferenceRates_ObservationPeriod_Checkbox}</arg>
<arg>${OFF}</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>ObservationPeriod is Disabled</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>ObservationPeriod is Disabled</arg>
</arguments>
<msg timestamp="20210408 19:10:28.803" level="INFO">ObservationPeriod is Disabled</msg>
<status status="PASS" starttime="20210408 19:10:28.802" endtime="20210408 19:10:28.803"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:28.800" endtime="20210408 19:10:28.803"></status>
</kw>
<kw name="Take Screenshot with text into Test Document" library="ReportMaker_Keywords">
<doc>This keyword is used to add screenshot with image filename as description into test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Interest Pricing - Validate ARR Parameters</arg>
</arguments>
<kw name="Take Screenshot" library="Screenshot">
<doc>Takes a screenshot in JPEG format and embeds it into the log file.</doc>
<arguments>
<arg>${imageName}</arg>
</arguments>
<msg timestamp="20210408 19:10:29.006" level="INFO" html="yes">&lt;a href="Results/LoanIQ/TC01%20-%20Validate%20ARR%20Pricing%20Option%20at%20Deal%20Level%20and%20Add%20Libor%20Option___2021-04-08%2019-04-35.729/Interest%20Pricing%20-%20Validate%20ARR%20Parameters_1.jpg"&gt;&lt;img src="Results/LoanIQ/TC01%20-%20Validate%20ARR%20Pricing%20Option%20at%20Deal%20Level%20and%20Add%20Libor%20Option___2021-04-08%2019-04-35.729/Interest%20Pricing%20-%20Validate%20ARR%20Parameters_1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210408 19:10:28.910" endtime="20210408 19:10:29.007"></status>
</kw>
<kw name="Get Latest File" library="ReportMaker">
<arguments>
<arg>${getfilePath}</arg>
</arguments>
<assign>
<var>${imagePath}</var>
</assign>
<msg timestamp="20210408 19:10:29.064" level="INFO">${imagePath} = C:\Git_Evergreen\transform_arr\Results\LoanIQ\TC01 - Validate ARR Pricing Option at Deal Level and Add Libor Option___2021-04-08 19-04-35.729\Interest Pricing - Validate ARR Parameters_1.jpg</msg>
<status status="PASS" starttime="20210408 19:10:29.062" endtime="20210408 19:10:29.065"></status>
</kw>
<kw name="Put Screenshot With Text" library="ReportMaker">
<arguments>
<arg>${imagePath}</arg>
<arg>${imageName}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:10:29.116" endtime="20210408 19:10:29.133"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:28.858" endtime="20210408 19:10:29.133"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${UI_LookbackDays}</arg>
<arg>${UI_LookbackDays}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:10:29.193" endtime="20210408 19:10:29.194"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${UI_LookoutDays}</arg>
<arg>${LookoutDays}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:10:29.243" endtime="20210408 19:10:29.244"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${UI_RateBasis}</arg>
<arg>${RateBasis}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:10:29.294" endtime="20210408 19:10:29.294"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${UI_CalculationMethod}</arg>
<arg>${CalculationMethod}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:10:29.345" endtime="20210408 19:10:29.345"></status>
</kw>
<kw name="Validate Deal ARR Parameters are Not Overridable" library="Deal_Notebook">
<doc>This will validate if the ARR Parameters are not Overridable
@author: rjlingat 08Apr-2021 - initial Create</doc>
<arguments>
<arg>${ButtonStatus_ObservationPeriod}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==True</arg>
<arg>Run Keywords</arg>
<arg>Validate if Element is Not Editable</arg>
<arg>${LIQ_AlternativeReferenceRates_LookbackDays_TextField}</arg>
<arg>LookbackDays</arg>
<arg>AND</arg>
<arg>Validate if Element is Not Editable</arg>
<arg>${LIQ_AlternativeReferenceRates_LockoutDays_TextField}</arg>
<arg>LookoutDays</arg>
<arg>AND</arg>
<arg>Validate if Element is Disabled</arg>
<arg>${LIQ_AlternativeReferenceRates_RateBasis_Dropdown}</arg>
<arg>RateBasis</arg>
<arg>AND</arg>
<arg>Validate if Element is Disabled</arg>
<arg>${LIQ_AlternativeReferenceRates_CalculationMethod_Dropdown}</arg>
<arg>CalculationMethod</arg>
<arg>AND</arg>
<arg>Validate if Element is Disabled</arg>
<arg>${LIQ_AlternativeReferenceRates_ObservationPeriod_Checkbox}</arg>
<arg>ObservationPeriod</arg>
<arg>AND</arg>
<arg>Take Screenshot with text into test document</arg>
<arg>Deal ARR Parameters - Not Overridable</arg>
<arg>AND</arg>
<arg>Mx LoanIQ Click</arg>
<arg>${LIQ_AlternativeReferenceRates_Cancel_Button}</arg>
<arg>ELSE</arg>
<arg>Mx LoanIQ Click</arg>
<arg>${LIQ_AlternativeReferenceRates_Ok_Button}</arg>
</arguments>
<kw name="Run Keywords" library="BuiltIn">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>Validate if Element is Not Editable</arg>
<arg>${LIQ_AlternativeReferenceRates_LookbackDays_TextField}</arg>
<arg>LookbackDays</arg>
<arg>AND</arg>
<arg>Validate if Element is Not Editable</arg>
<arg>${LIQ_AlternativeReferenceRates_LockoutDays_TextField}</arg>
<arg>LookoutDays</arg>
<arg>AND</arg>
<arg>Validate if Element is Disabled</arg>
<arg>${LIQ_AlternativeReferenceRates_RateBasis_Dropdown}</arg>
<arg>RateBasis</arg>
<arg>AND</arg>
<arg>Validate if Element is Disabled</arg>
<arg>${LIQ_AlternativeReferenceRates_CalculationMethod_Dropdown}</arg>
<arg>CalculationMethod</arg>
<arg>AND</arg>
<arg>Validate if Element is Disabled</arg>
<arg>${LIQ_AlternativeReferenceRates_ObservationPeriod_Checkbox}</arg>
<arg>ObservationPeriod</arg>
<arg>AND</arg>
<arg>Take Screenshot with text into test document</arg>
<arg>Deal ARR Parameters - Not Overridable</arg>
<arg>AND</arg>
<arg>Mx LoanIQ Click</arg>
<arg>${LIQ_AlternativeReferenceRates_Cancel_Button}</arg>
</arguments>
<kw name="Validate if Element is Not Editable" library="GenericKeywords">
<doc>This keyword validates if Element is disabled
@author: chanario DDMMMYYYY - initial create</doc>
<arguments>
<arg>${LIQ_AlternativeReferenceRates_LookbackDays_TextField}</arg>
<arg>LookbackDays</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>editable%0</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>editable%0</arg>
</arguments>
<msg timestamp="20210408 19:10:29.628" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:10:29.504" endtime="20210408 19:10:29.628"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:29.503" endtime="20210408 19:10:29.628"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>editable%0</arg>
</arguments>
<assign>
<var>${Result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>editable%0</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>editable%0</arg>
</arguments>
<msg timestamp="20210408 19:10:29.788" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:10:29.685" endtime="20210408 19:10:29.789"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:29.683" endtime="20210408 19:10:29.789"></status>
</kw>
<msg timestamp="20210408 19:10:29.790" level="INFO">${Result} = True</msg>
<status status="PASS" starttime="20210408 19:10:29.681" endtime="20210408 19:10:29.790"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Result}'=='${TRUE}'</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed disabled</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed enabled</arg>
<arg>level=ERROR</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>'${Field_Label}' element is confirmed disabled</arg>
</arguments>
<msg timestamp="20210408 19:10:29.851" level="INFO">'LookbackDays' element is confirmed disabled</msg>
<status status="PASS" starttime="20210408 19:10:29.850" endtime="20210408 19:10:29.851"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:29.849" endtime="20210408 19:10:29.851"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:29.451" endtime="20210408 19:10:29.851"></status>
</kw>
<kw name="Validate if Element is Not Editable" library="GenericKeywords">
<doc>This keyword validates if Element is disabled
@author: chanario DDMMMYYYY - initial create</doc>
<arguments>
<arg>${LIQ_AlternativeReferenceRates_LockoutDays_TextField}</arg>
<arg>LookoutDays</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>editable%0</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>editable%0</arg>
</arguments>
<msg timestamp="20210408 19:10:30.036" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:10:29.907" endtime="20210408 19:10:30.036"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:29.906" endtime="20210408 19:10:30.037"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>editable%0</arg>
</arguments>
<assign>
<var>${Result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>editable%0</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>editable%0</arg>
</arguments>
<msg timestamp="20210408 19:10:30.211" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:10:30.111" endtime="20210408 19:10:30.212"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:30.110" endtime="20210408 19:10:30.212"></status>
</kw>
<msg timestamp="20210408 19:10:30.212" level="INFO">${Result} = True</msg>
<status status="PASS" starttime="20210408 19:10:30.106" endtime="20210408 19:10:30.212"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Result}'=='${TRUE}'</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed disabled</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed enabled</arg>
<arg>level=ERROR</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>'${Field_Label}' element is confirmed disabled</arg>
</arguments>
<msg timestamp="20210408 19:10:30.267" level="INFO">'LookoutDays' element is confirmed disabled</msg>
<status status="PASS" starttime="20210408 19:10:30.267" endtime="20210408 19:10:30.268"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:30.265" endtime="20210408 19:10:30.268"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:29.852" endtime="20210408 19:10:30.268"></status>
</kw>
<kw name="Validate if Element is Disabled" library="GenericKeywords">
<doc>This keyword validates if Element is disabled
@author: ghabal</doc>
<arguments>
<arg>${LIQ_AlternativeReferenceRates_RateBasis_Dropdown}</arg>
<arg>RateBasis</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%0</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>enabled%0</arg>
</arguments>
<msg timestamp="20210408 19:10:30.451" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:10:30.324" endtime="20210408 19:10:30.451"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:30.323" endtime="20210408 19:10:30.452"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%0</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>enabled%0</arg>
</arguments>
<msg timestamp="20210408 19:10:30.624" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:10:30.508" endtime="20210408 19:10:30.624"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:30.507" endtime="20210408 19:10:30.625"></status>
</kw>
<msg timestamp="20210408 19:10:30.625" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:10:30.504" endtime="20210408 19:10:30.625"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed disabled</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed enabled</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>'${Field_Label}' element is confirmed disabled</arg>
</arguments>
<msg timestamp="20210408 19:10:30.677" level="INFO">'RateBasis' element is confirmed disabled</msg>
<status status="PASS" starttime="20210408 19:10:30.676" endtime="20210408 19:10:30.677"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:30.675" endtime="20210408 19:10:30.677"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:30.269" endtime="20210408 19:10:30.677"></status>
</kw>
<kw name="Validate if Element is Disabled" library="GenericKeywords">
<doc>This keyword validates if Element is disabled
@author: ghabal</doc>
<arguments>
<arg>${LIQ_AlternativeReferenceRates_CalculationMethod_Dropdown}</arg>
<arg>CalculationMethod</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%0</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>enabled%0</arg>
</arguments>
<msg timestamp="20210408 19:10:30.856" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:10:30.731" endtime="20210408 19:10:30.856"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:30.730" endtime="20210408 19:10:30.856"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%0</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>enabled%0</arg>
</arguments>
<msg timestamp="20210408 19:10:31.014" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:10:30.912" endtime="20210408 19:10:31.014"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:30.910" endtime="20210408 19:10:31.015"></status>
</kw>
<msg timestamp="20210408 19:10:31.015" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:10:30.908" endtime="20210408 19:10:31.015"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed disabled</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed enabled</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>'${Field_Label}' element is confirmed disabled</arg>
</arguments>
<msg timestamp="20210408 19:10:31.068" level="INFO">'CalculationMethod' element is confirmed disabled</msg>
<status status="PASS" starttime="20210408 19:10:31.067" endtime="20210408 19:10:31.068"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:31.066" endtime="20210408 19:10:31.068"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:30.679" endtime="20210408 19:10:31.069"></status>
</kw>
<kw name="Validate if Element is Disabled" library="GenericKeywords">
<doc>This keyword validates if Element is disabled
@author: ghabal</doc>
<arguments>
<arg>${LIQ_AlternativeReferenceRates_ObservationPeriod_Checkbox}</arg>
<arg>ObservationPeriod</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%0</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>enabled%0</arg>
</arguments>
<msg timestamp="20210408 19:10:31.232" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:10:31.128" endtime="20210408 19:10:31.232"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:31.127" endtime="20210408 19:10:31.232"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%0</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>enabled%0</arg>
</arguments>
<msg timestamp="20210408 19:10:31.382" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:10:31.284" endtime="20210408 19:10:31.382"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:31.283" endtime="20210408 19:10:31.383"></status>
</kw>
<msg timestamp="20210408 19:10:31.383" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:10:31.281" endtime="20210408 19:10:31.383"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed disabled</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed enabled</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>'${Field_Label}' element is confirmed disabled</arg>
</arguments>
<msg timestamp="20210408 19:10:31.435" level="INFO">'ObservationPeriod' element is confirmed disabled</msg>
<status status="PASS" starttime="20210408 19:10:31.434" endtime="20210408 19:10:31.435"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:31.433" endtime="20210408 19:10:31.435"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:31.070" endtime="20210408 19:10:31.435"></status>
</kw>
<kw name="Take Screenshot with text into Test Document" library="ReportMaker_Keywords">
<doc>This keyword is used to add screenshot with image filename as description into test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Deal ARR Parameters - Not Overridable</arg>
</arguments>
<kw name="Take Screenshot" library="Screenshot">
<doc>Takes a screenshot in JPEG format and embeds it into the log file.</doc>
<arguments>
<arg>${imageName}</arg>
</arguments>
<msg timestamp="20210408 19:10:31.591" level="INFO" html="yes">&lt;a href="Results/LoanIQ/TC01%20-%20Validate%20ARR%20Pricing%20Option%20at%20Deal%20Level%20and%20Add%20Libor%20Option___2021-04-08%2019-04-35.729/Deal%20ARR%20Parameters%20-%20Not%20Overridable_1.jpg"&gt;&lt;img src="Results/LoanIQ/TC01%20-%20Validate%20ARR%20Pricing%20Option%20at%20Deal%20Level%20and%20Add%20Libor%20Option___2021-04-08%2019-04-35.729/Deal%20ARR%20Parameters%20-%20Not%20Overridable_1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210408 19:10:31.489" endtime="20210408 19:10:31.592"></status>
</kw>
<kw name="Get Latest File" library="ReportMaker">
<arguments>
<arg>${getfilePath}</arg>
</arguments>
<assign>
<var>${imagePath}</var>
</assign>
<msg timestamp="20210408 19:10:31.645" level="INFO">${imagePath} = C:\Git_Evergreen\transform_arr\Results\LoanIQ\TC01 - Validate ARR Pricing Option at Deal Level and Add Libor Option___2021-04-08 19-04-35.729\Deal ARR Parameters - Not Overridable_1.jpg</msg>
<status status="PASS" starttime="20210408 19:10:31.643" endtime="20210408 19:10:31.645"></status>
</kw>
<kw name="Put Screenshot With Text" library="ReportMaker">
<arguments>
<arg>${imagePath}</arg>
<arg>${imageName}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:10:31.694" endtime="20210408 19:10:31.712"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:31.436" endtime="20210408 19:10:31.713"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_AlternativeReferenceRates_Cancel_Button}</arg>
</arguments>
<msg timestamp="20210408 19:10:31.893" level="INFO">JavaWindow("title:=Alternative Reference Rates .*").JavaButton("attached text:=Cancel") is clicked.</msg>
<status status="PASS" starttime="20210408 19:10:31.715" endtime="20210408 19:10:31.894"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:29.450" endtime="20210408 19:10:31.894"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:29.448" endtime="20210408 19:10:31.895"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:29.396" endtime="20210408 19:10:31.895"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_InterestPricingOption_Ok_Button}</arg>
</arguments>
<msg timestamp="20210408 19:10:32.249" level="INFO">JavaWindow("title:=.*Interest Pricing Option.*").JavaButton("attached text:=OK") is clicked.</msg>
<status status="PASS" starttime="20210408 19:10:31.987" endtime="20210408 19:10:32.250"></status>
</kw>
<kw name="Take Screenshot with text into Test Document" library="ReportMaker_Keywords">
<doc>This keyword is used to add screenshot with image filename as description into test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Interest Pricing Option - ${PricingRule_Option}</arg>
</arguments>
<kw name="Take Screenshot" library="Screenshot">
<doc>Takes a screenshot in JPEG format and embeds it into the log file.</doc>
<arguments>
<arg>${imageName}</arg>
</arguments>
<msg timestamp="20210408 19:10:32.525" level="INFO" html="yes">&lt;a href="Results/LoanIQ/TC01%20-%20Validate%20ARR%20Pricing%20Option%20at%20Deal%20Level%20and%20Add%20Libor%20Option___2021-04-08%2019-04-35.729/Interest%20Pricing%20Option%20-%20SOFR%20Daily%20Compounding%20W%20OPS%20Not%20Overridable_1.jpg"&gt;&lt;img src="Results/LoanIQ/TC01%20-%20Validate%20ARR%20Pricing%20Option%20at%20Deal%20Level%20and%20Add%20Libor%20Option___2021-04-08%2019-04-35.729/Interest%20Pricing%20Option%20-%20SOFR%20Daily%20Compounding%20W%20OPS%20Not%20Overridable_1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210408 19:10:32.428" endtime="20210408 19:10:32.526"></status>
</kw>
<kw name="Get Latest File" library="ReportMaker">
<arguments>
<arg>${getfilePath}</arg>
</arguments>
<assign>
<var>${imagePath}</var>
</assign>
<msg timestamp="20210408 19:10:32.578" level="INFO">${imagePath} = C:\Git_Evergreen\transform_arr\Results\LoanIQ\TC01 - Validate ARR Pricing Option at Deal Level and Add Libor Option___2021-04-08 19-04-35.729\Interest Pricing Option - SOFR Daily Compounding W OPS Not...</msg>
<status status="PASS" starttime="20210408 19:10:32.576" endtime="20210408 19:10:32.579"></status>
</kw>
<kw name="Put Screenshot With Text" library="ReportMaker">
<arguments>
<arg>${imagePath}</arg>
<arg>${imageName}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:10:32.628" endtime="20210408 19:10:32.646"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:32.374" endtime="20210408 19:10:32.647"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:11.563" endtime="20210408 19:10:32.647"></status>
</kw>
<kw name="Save Changes on Deal Notebook" library="Deal_Notebook">
<doc>This keyword saves the deal notebook.
@author: fmamaril DDMMMYYYY - initial create
@update: bernchua 31JUL2019 - Used generic keyword for clicking warning message
@update: ehugo 23JUN2020 - added screenshot</doc>
<kw name="Mx LoanIQ Activate Window" library="LoanIQ">
<doc>| Usage |
To activate existing window if present.</doc>
<arguments>
<arg>${LIQ_DealNoteBook_Window}</arg>
</arguments>
<msg timestamp="20210408 19:10:32.837" level="INFO">Window : JavaWindow("title:=Deal Notebook -.*","displayed:=1") is activated</msg>
<status status="PASS" starttime="20210408 19:10:32.749" endtime="20210408 19:10:32.837"></status>
</kw>
<kw name="Mx LoanIQ Select" library="LoanIQ">
<doc>| Usage |
Used to select the element.</doc>
<arguments>
<arg>${LIQ_DealNotebook_File_Save}</arg>
</arguments>
<msg timestamp="20210408 19:10:33.444" level="INFO">JavaWindow("title:=Deal Notebook.*").JavaMenu("label:=File").JavaMenu("label:=Save") is selected with data: NONE</msg>
<status status="PASS" starttime="20210408 19:10:32.888" endtime="20210408 19:10:33.444"></status>
</kw>
<kw name="Verify If Warning Is Displayed" library="GenericKeywords">
<doc>This keyword checks if a warning message is displayed, and clicks the 'Yes' button.
@author: bernchua
@update: hstone 06AUG2020 - update loop max count</doc>
<kw name="${i} IN RANGE [ 99999 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_Warning_Yes_Button}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_Warning_Yes_Button}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:10:39.062" level="INFO" html="yes">&lt;a href="screenshot_31.jpg"&gt;&lt;img src="screenshot_31.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20210408 19:10:39.062" level="INFO">Keyword Details-------------------------------------------------
Action = VERIFYOBJECTEXIST
Input = None
Object = JavaWindow("title:=Warning.*", "displayed:=1").JavaButton("label:=Yes")
Verification Data = Y</msg>
<msg timestamp="20210408 19:10:39.063" level="FAIL">Error Number: -110037 Error Description: Object doesnot Exist. JavaVerifyObjectExist. Retried for:  0 times. </msg>
<status status="FAIL" starttime="20210408 19:10:33.739" endtime="20210408 19:10:39.135"></status>
</kw>
<msg timestamp="20210408 19:10:39.136" level="INFO">${status} = False</msg>
<status status="PASS" starttime="20210408 19:10:33.737" endtime="20210408 19:10:39.136"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==True</arg>
<arg>mx LoanIQ click</arg>
<arg>${LIQ_Warning_Yes_Button}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:10:39.191" endtime="20210408 19:10:39.192"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
</arguments>
<msg timestamp="20210408 19:10:39.251" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210408 19:10:39.250" endtime="20210408 19:10:39.434"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:33.642" endtime="20210408 19:10:39.488"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:33.639" endtime="20210408 19:10:39.489"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:33.531" endtime="20210408 19:10:39.490"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>2 times</arg>
<arg>Mx Click Element If Present</arg>
<arg>${LIQ_Warning_OK_Button}</arg>
</arguments>
<msg timestamp="20210408 19:10:39.541" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Mx Click Element If Present" library="UFTGeneric">
<doc>| Usage |
Click on element identified by `locator` only if that element is present.</doc>
<arguments>
<arg>${LIQ_Warning_OK_Button}</arg>
</arguments>
<msg timestamp="20210408 19:10:42.852" level="INFO">JavaWindow("title:=Warning.*","displayed:=1").JavaButton("label:=OK") element is clicked.</msg>
<status status="PASS" starttime="20210408 19:10:39.543" endtime="20210408 19:10:42.852"></status>
</kw>
<msg timestamp="20210408 19:10:42.852" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Mx Click Element If Present" library="UFTGeneric">
<doc>| Usage |
Click on element identified by `locator` only if that element is present.</doc>
<arguments>
<arg>${LIQ_Warning_OK_Button}</arg>
</arguments>
<msg timestamp="20210408 19:10:51.184" level="INFO">JavaWindow("title:=Warning.*","displayed:=1").JavaButton("label:=OK") element is clicked.</msg>
<status status="PASS" starttime="20210408 19:10:42.855" endtime="20210408 19:10:51.184"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:39.541" endtime="20210408 19:10:51.185"></status>
</kw>
<kw name="Take Screenshot with text into Test Document" library="ReportMaker_Keywords">
<doc>This keyword is used to add screenshot with image filename as description into test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Deal Notebook - Save Changes</arg>
</arguments>
<kw name="Take Screenshot" library="Screenshot">
<doc>Takes a screenshot in JPEG format and embeds it into the log file.</doc>
<arguments>
<arg>${imageName}</arg>
</arguments>
<msg timestamp="20210408 19:10:51.412" level="INFO" html="yes">&lt;a href="Results/LoanIQ/TC01%20-%20Validate%20ARR%20Pricing%20Option%20at%20Deal%20Level%20and%20Add%20Libor%20Option___2021-04-08%2019-04-35.729/Deal%20Notebook%20-%20Save%20Changes_1.jpg"&gt;&lt;img src="Results/LoanIQ/TC01%20-%20Validate%20ARR%20Pricing%20Option%20at%20Deal%20Level%20and%20Add%20Libor%20Option___2021-04-08%2019-04-35.729/Deal%20Notebook%20-%20Save%20Changes_1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210408 19:10:51.309" endtime="20210408 19:10:51.413"></status>
</kw>
<kw name="Get Latest File" library="ReportMaker">
<arguments>
<arg>${getfilePath}</arg>
</arguments>
<assign>
<var>${imagePath}</var>
</assign>
<msg timestamp="20210408 19:10:51.467" level="INFO">${imagePath} = C:\Git_Evergreen\transform_arr\Results\LoanIQ\TC01 - Validate ARR Pricing Option at Deal Level and Add Libor Option___2021-04-08 19-04-35.729\Deal Notebook - Save Changes_1.jpg</msg>
<status status="PASS" starttime="20210408 19:10:51.464" endtime="20210408 19:10:51.467"></status>
</kw>
<kw name="Put Screenshot With Text" library="ReportMaker">
<arguments>
<arg>${imagePath}</arg>
<arg>${imageName}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:10:51.518" endtime="20210408 19:10:51.540"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:51.239" endtime="20210408 19:10:51.541"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:32.697" endtime="20210408 19:10:51.542"></status>
</kw>
<status status="PASS" starttime="20210408 19:09:44.020" endtime="20210408 19:10:51.542"></status>
</kw>
<msg timestamp="20210408 19:10:51.543" level="INFO">Mx Execute Template With Multiple Data keyword passed for all the data</msg>
<status status="PASS" starttime="20210408 19:09:43.995" endtime="20210408 19:10:51.543"></status>
</kw>
<kw name="Mx Execute Template With Multiple Data" library="GenericLib">
<doc>| Usage |
 This keyword is used to run template with multiple data.</doc>
<arguments>
<arg>Input Deal Pricing Options at Pricing Rules Tab</arg>
<arg>${ExcelPath}</arg>
<arg>${Deal_2}</arg>
<arg>CRED01_DealSetup</arg>
</arguments>
<kw name="Input Deal Pricing Options at Pricing Rules Tab" library="CRED01_DealSetUpWithoutOrigination">
<doc>This keyword is used to Input Deal Pricing Options at Pricing Rules Tab
@author: hstone 24NOV2020 - initial create
@update: jloretiz 04FEB2021 - add additional scripts for ARR scenarios</doc>
<arguments>
<arg>OrderedDict([('rowid', '2'), ('Test_Case', 'ARR_Scenario3'), ('Deal_NamePrefix', 'ARR_LIBORSC3'), ('Deal_AliasPrefix', 'SC3'), ('Deal_Name', ''), ('Deal_Alias', ''), ('Deal_EffectiveDate', ''), ('Deal_AgreementDate', ''), ('Deal_AdjustmentSettings', 'Present'), ('Deal_AgreementDateAdjustment', '30'), ('Deal_EffectiveDateAdjustment', '30'), ('Deal_Currency', 'USD'), ('Deal_DepartmentCode', 'NAM'), ('Deal_Department', 'North America'), ('Deal_SalesGroup', 'Sales Group 1'), ('Deal_AternateID', ''), ('Deal_ANSIID', ''), ('Deal_IsSoleLender', 'OFF'), ('Deal_ClassificationCode', 'GCP'), ('Deal_ClassificationDesc', 'General Corp Purpose'), ('Deal_AdminAgent', 'BNS CANADA CORPORATE BANKING'), ('Deal_AdminAgentLocation', 'Toronto, Canada'), ('DealAdminAgent_SGAlias', 'BC'), ('DealAdminAgent_PreferredRI', ''), ('DealAdminAgent_ServicingGroup', 'CANADA CORPORATE BANKING'), ('Deal_ProposedCmt', '100,000,000.00'), ('Deal_EarlyDiscussion', 'OFF'), ('Deal_ExpenseCode', '0394703947'), ('Deal_HolidayCalendarRemove', 'Canadian'), ('Deal_HolidayCalendarAdd', 'US Holiday Calendar (New York)'), ('Deal_IsPricingOptionARR', 'TRUE'), ('Deal_PricingOption_CCY', ''), ('Deal_PricingOption', 'Libor Option'), ('PricingOption_IsARR', 'False'), ('PricingOption_InitialFractionRate', 'Actual'), ('PricingOption_RoundingDecimal', 'Actual'), ('PricingOption_NonBusinessDayRule', 'Modified Following Business Day'), ('PricingOption_BillNoOfDays', '0'), ('PricingOption_MatrixChangeAppMthd', 'Effective date of change'), ('PricingOption_RateChangeAppMthd', 'Effective date of change'), ('PricingOption_RACInitialFractionRate', ''), ('PricingOption_RACRoundingDecimal', ''), ('PricingOption_RACRoundingMethod', ''), ('PricingOption_PercentOfRateFormulaUsage', '(Base + Spread + RAC) * PCT'), ('PricingOption_RepricingNonBusinessDayRule', 'Modified Following Business Day'), ('PricingOption_FeeOnLenderShareFunding', ''), ('PricingOption_InterestDueUponPrincipalPayment', 'OFF'), ('PricingOption_InterestDueUponRepricing', ''), ('PricingOption_ReferenceBanksApply', 'OFF'), ('PricingOption_IntentNoticeDaysInAdvance', '3'), ('PricingOption_IntentNoticeTime', '12'), ('PricingOption_12HrPeriodOption', ''), ('PricingOption_MaximumDrawAmount', ''), ('PricingOption_MinimumDrawAmount', ''), ('PricingOption_MinimumPaymentAmount', ''), ('PricingOption_MinimumAmountMultiples', ''), ('PricingOption_BillBorrower', 'YES'), ('PricingOption_ARRObservationPeriod', 'ON'), ('PricingOption_LookbackDays', '5'), ('PricingOption_LockoutDays', '0'), ('PricingOption_RateBasis', 'Actual/360'), ('PricingOption_CalculationMethod', 'Daily Rate With Compounding')])</arg>
</arguments>
<kw name="Report Sub Header" library="ReportMaker_Keywords">
<doc>This keyword is used to add given argument as sub header in test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Input Deal Pricing Options at Pricing Rules Tab</arg>
</arguments>
<kw name="Set Report Sub Header" library="ReportMaker">
<arguments>
<arg>${SubHeader}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:10:51.727" endtime="20210408 19:10:51.730"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:51.675" endtime="20210408 19:10:51.730"></status>
</kw>
<kw name="Add Pricing Option" library="Deal_Notebook">
<doc>This keyword adds a pricing option.
@author: fmamaril DDMMMYYYY - initial create
@update: mnanquil DDMMMYYYY - Changed verify text in java tree on line 540 to mx loaniq select string.
@update: rtarayao DDMMMYYYY - Added an optional argument to handle pricing options that does not tick on Bill Borrower checkbox.
@update: ehugo 28MAY2020 - added keyword Pre-processing; added screenshot
@update: hstone 16OCT2020 - Completed all Keyword Pre-processing for all arguments
- Added 'Mx LoanIQ Set JavaWindow("title:=Interest Pricing Option.*").JavaCheckBox("attached text:=Bill Borrower.*") OFF' for unchecking condition
- Added 'Run Keyword If '${PricingOption_FeeOnLenderShareFunding}' != 'None' Mx LoanIQ Check Or Uncheck JavaWindow("title:=Interest Pricing Option.*").JavaCheckBox("attached text:=Fee on Lender Shares Due At Funding") ${PricingOption_FeeOnLenderShareFunding}'
- Moved to the end of fill-out: 'Run Keyword If '${PricingOption_CCY}' != 'None' Mx LoanIQ Select Combo Box Value JavaWindow("title:=Interest Pricing Option.*").JavaList("attached text:=CCY:") ${PricingOption_CCY}'
- Added empty check for '${PricingOption_InterestDueUponRepricing}' before checkbox fill-out
@update: jloretiz 11FEB2021 - added condition for empty data</doc>
<arguments>
<arg>&amp;{ExcelPath}[Deal_PricingOption]</arg>
<arg>&amp;{ExcelPath}[PricingOption_InitialFractionRate]</arg>
<arg>&amp;{ExcelPath}[PricingOption_RoundingDecimal]</arg>
<arg>&amp;{ExcelPath}[PricingOption_NonBusinessDayRule]</arg>
<arg>&amp;{ExcelPath}[PricingOption_BillNoOfDays]</arg>
<arg>&amp;{ExcelPath}[PricingOption_MatrixChangeAppMthd]</arg>
<arg>&amp;{ExcelPath}[PricingOption_RateChangeAppMthd]</arg>
<arg>&amp;{ExcelPath}[PricingOption_RACInitialFractionRate]</arg>
<arg>&amp;{ExcelPath}[PricingOption_RACRoundingDecimal]</arg>
<arg>&amp;{ExcelPath}[PricingOption_RACRoundingMethod]</arg>
<arg>&amp;{ExcelPath}[PricingOption_PercentOfRateFormulaUsage]</arg>
<arg>&amp;{ExcelPath}[PricingOption_RepricingNonBusinessDayRule]</arg>
<arg>&amp;{ExcelPath}[PricingOption_FeeOnLenderShareFunding]</arg>
<arg>&amp;{ExcelPath}[PricingOption_InterestDueUponPrincipalPayment]</arg>
<arg>&amp;{ExcelPath}[PricingOption_InterestDueUponRepricing]</arg>
<arg>&amp;{ExcelPath}[PricingOption_ReferenceBanksApply]</arg>
<arg>&amp;{ExcelPath}[PricingOption_IntentNoticeDaysInAdvance]</arg>
<arg>&amp;{ExcelPath}[PricingOption_IntentNoticeTime]</arg>
<arg>&amp;{ExcelPath}[PricingOption_12HrPeriodOption]</arg>
<arg>&amp;{ExcelPath}[PricingOption_MaximumDrawAmount]</arg>
<arg>&amp;{ExcelPath}[PricingOption_MinimumDrawAmount]</arg>
<arg>&amp;{ExcelPath}[PricingOption_MinimumPaymentAmount]</arg>
<arg>&amp;{ExcelPath}[PricingOption_MinimumAmountMultiples]</arg>
<arg>&amp;{ExcelPath}[Deal_PricingOption_CCY]</arg>
<arg>&amp;{ExcelPath}[PricingOption_BillBorrower]</arg>
</arguments>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sPricingRule_Option}</arg>
</arguments>
<assign>
<var>${PricingRule_Option}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:10:52.465" endtime="20210408 19:10:52.465"></status>
</kw>
<msg timestamp="20210408 19:10:52.465" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:10:52.463" endtime="20210408 19:10:52.465"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:10:52.669" level="INFO">${List_Argument_Excel_Value} = ['Libor Option']</msg>
<status status="PASS" starttime="20210408 19:10:52.668" endtime="20210408 19:10:52.669"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:10:52.721" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:10:52.721" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:10:52.721" endtime="20210408 19:10:52.721"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:10:52.772" level="INFO">${Arg_User_Input} = LIBOR OPTION</msg>
<status status="PASS" starttime="20210408 19:10:52.772" endtime="20210408 19:10:52.772"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:10:52.825" level="INFO">${Arg_User_Input} = LIBOR OPTION</msg>
<status status="PASS" starttime="20210408 19:10:52.824" endtime="20210408 19:10:52.825"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:10:52.877" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:10:52.876" endtime="20210408 19:10:52.877"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:10:52.930" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:10:52.929" endtime="20210408 19:10:52.930"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:10:52.983" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:10:52.983" endtime="20210408 19:10:52.983"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:10:53.035" endtime="20210408 19:10:53.036"></status>
</kw>
<msg timestamp="20210408 19:10:53.036" level="INFO">${Extracted_Argument_Value} = Libor Option</msg>
<status status="PASS" starttime="20210408 19:10:53.033" endtime="20210408 19:10:53.036"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:52.615" endtime="20210408 19:10:53.036"></status>
</kw>
<msg timestamp="20210408 19:10:53.037" level="INFO">${Extracted_Argument_Value} = Libor Option</msg>
<status status="PASS" starttime="20210408 19:10:52.516" endtime="20210408 19:10:53.037"></status>
</kw>
<msg timestamp="20210408 19:10:53.037" level="INFO">${PricingRule_Option} = Libor Option</msg>
<status status="PASS" starttime="20210408 19:10:52.399" endtime="20210408 19:10:53.037"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sInitialFractionRate_Round}</arg>
</arguments>
<assign>
<var>${InitialFractionRate_Round}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:10:53.251" endtime="20210408 19:10:53.252"></status>
</kw>
<msg timestamp="20210408 19:10:53.252" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:10:53.250" endtime="20210408 19:10:53.252"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:10:53.469" level="INFO">${List_Argument_Excel_Value} = ['Actual']</msg>
<status status="PASS" starttime="20210408 19:10:53.468" endtime="20210408 19:10:53.469"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:10:53.519" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:10:53.519" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:10:53.518" endtime="20210408 19:10:53.519"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:10:53.579" level="INFO">${Arg_User_Input} = ACTUAL</msg>
<status status="PASS" starttime="20210408 19:10:53.578" endtime="20210408 19:10:53.579"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:10:53.630" level="INFO">${Arg_User_Input} = ACTUAL</msg>
<status status="PASS" starttime="20210408 19:10:53.629" endtime="20210408 19:10:53.630"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:10:53.680" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:10:53.679" endtime="20210408 19:10:53.680"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:10:53.731" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:10:53.730" endtime="20210408 19:10:53.731"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:10:53.781" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:10:53.780" endtime="20210408 19:10:53.781"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:10:53.948" endtime="20210408 19:10:53.949"></status>
</kw>
<msg timestamp="20210408 19:10:53.949" level="INFO">${Extracted_Argument_Value} = Actual</msg>
<status status="PASS" starttime="20210408 19:10:53.946" endtime="20210408 19:10:53.949"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:53.415" endtime="20210408 19:10:53.949"></status>
</kw>
<msg timestamp="20210408 19:10:53.949" level="INFO">${Extracted_Argument_Value} = Actual</msg>
<status status="PASS" starttime="20210408 19:10:53.316" endtime="20210408 19:10:53.950"></status>
</kw>
<msg timestamp="20210408 19:10:53.950" level="INFO">${InitialFractionRate_Round} = Actual</msg>
<status status="PASS" starttime="20210408 19:10:53.199" endtime="20210408 19:10:53.950"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sRoundingDecimal_Round}</arg>
</arguments>
<assign>
<var>${RoundingDecimal_Round}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:10:54.165" endtime="20210408 19:10:54.166"></status>
</kw>
<msg timestamp="20210408 19:10:54.166" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:10:54.164" endtime="20210408 19:10:54.166"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:10:54.371" level="INFO">${List_Argument_Excel_Value} = ['Actual']</msg>
<status status="PASS" starttime="20210408 19:10:54.370" endtime="20210408 19:10:54.371"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:10:54.422" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:10:54.422" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:10:54.422" endtime="20210408 19:10:54.422"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:10:54.472" level="INFO">${Arg_User_Input} = ACTUAL</msg>
<status status="PASS" starttime="20210408 19:10:54.471" endtime="20210408 19:10:54.472"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:10:54.523" level="INFO">${Arg_User_Input} = ACTUAL</msg>
<status status="PASS" starttime="20210408 19:10:54.522" endtime="20210408 19:10:54.523"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:10:54.584" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:10:54.583" endtime="20210408 19:10:54.584"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:10:54.636" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:10:54.635" endtime="20210408 19:10:54.636"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:10:54.694" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:10:54.693" endtime="20210408 19:10:54.694"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:10:54.774" endtime="20210408 19:10:54.774"></status>
</kw>
<msg timestamp="20210408 19:10:54.774" level="INFO">${Extracted_Argument_Value} = Actual</msg>
<status status="PASS" starttime="20210408 19:10:54.771" endtime="20210408 19:10:54.774"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:54.319" endtime="20210408 19:10:54.775"></status>
</kw>
<msg timestamp="20210408 19:10:54.775" level="INFO">${Extracted_Argument_Value} = Actual</msg>
<status status="PASS" starttime="20210408 19:10:54.216" endtime="20210408 19:10:54.775"></status>
</kw>
<msg timestamp="20210408 19:10:54.775" level="INFO">${RoundingDecimal_Round} = Actual</msg>
<status status="PASS" starttime="20210408 19:10:54.112" endtime="20210408 19:10:54.775"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sNonBusinessDayRule}</arg>
</arguments>
<assign>
<var>${NonBusinessDayRule}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:10:55.079" endtime="20210408 19:10:55.080"></status>
</kw>
<msg timestamp="20210408 19:10:55.080" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:10:55.078" endtime="20210408 19:10:55.080"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:10:55.338" level="INFO">${List_Argument_Excel_Value} = ['Modified Following Business Day']</msg>
<status status="PASS" starttime="20210408 19:10:55.338" endtime="20210408 19:10:55.339"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:10:55.402" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:10:55.403" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:10:55.402" endtime="20210408 19:10:55.403"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:10:55.456" level="INFO">${Arg_User_Input} = MODIFIED FOLLOWING BUSINESS DAY</msg>
<status status="PASS" starttime="20210408 19:10:55.455" endtime="20210408 19:10:55.456"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:10:55.510" level="INFO">${Arg_User_Input} = MODIFIED FOLLOWING BUSINESS DAY</msg>
<status status="PASS" starttime="20210408 19:10:55.509" endtime="20210408 19:10:55.510"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:10:55.579" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:10:55.578" endtime="20210408 19:10:55.579"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:10:55.657" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:10:55.656" endtime="20210408 19:10:55.657"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:10:55.734" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:10:55.733" endtime="20210408 19:10:55.734"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:10:55.812" endtime="20210408 19:10:55.813"></status>
</kw>
<msg timestamp="20210408 19:10:55.813" level="INFO">${Extracted_Argument_Value} = Modified Following Business Day</msg>
<status status="PASS" starttime="20210408 19:10:55.810" endtime="20210408 19:10:55.813"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:55.284" endtime="20210408 19:10:55.813"></status>
</kw>
<msg timestamp="20210408 19:10:55.813" level="INFO">${Extracted_Argument_Value} = Modified Following Business Day</msg>
<status status="PASS" starttime="20210408 19:10:55.145" endtime="20210408 19:10:55.813"></status>
</kw>
<msg timestamp="20210408 19:10:55.814" level="INFO">${NonBusinessDayRule} = Modified Following Business Day</msg>
<status status="PASS" starttime="20210408 19:10:55.000" endtime="20210408 19:10:55.814"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${iPricingOption_BillNoOfDays}</arg>
</arguments>
<assign>
<var>${PricingOption_BillNoOfDays}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:10:56.097" endtime="20210408 19:10:56.097"></status>
</kw>
<msg timestamp="20210408 19:10:56.098" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:10:56.095" endtime="20210408 19:10:56.098"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:10:56.403" level="INFO">${List_Argument_Excel_Value} = ['0']</msg>
<status status="PASS" starttime="20210408 19:10:56.402" endtime="20210408 19:10:56.403"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:10:56.481" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:10:56.481" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:10:56.480" endtime="20210408 19:10:56.481"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:10:56.558" level="INFO">${Arg_User_Input} = 0</msg>
<status status="PASS" starttime="20210408 19:10:56.557" endtime="20210408 19:10:56.558"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:10:56.737" level="INFO">${Arg_User_Input} = 0</msg>
<status status="PASS" starttime="20210408 19:10:56.736" endtime="20210408 19:10:56.737"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:10:56.812" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:10:56.811" endtime="20210408 19:10:56.812"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:10:56.869" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:10:56.869" endtime="20210408 19:10:56.870"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:10:56.945" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:10:56.944" endtime="20210408 19:10:56.945"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:10:57.023" endtime="20210408 19:10:57.023"></status>
</kw>
<msg timestamp="20210408 19:10:57.024" level="INFO">${Extracted_Argument_Value} = 0</msg>
<status status="PASS" starttime="20210408 19:10:57.020" endtime="20210408 19:10:57.024"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:56.324" endtime="20210408 19:10:57.024"></status>
</kw>
<msg timestamp="20210408 19:10:57.025" level="INFO">${Extracted_Argument_Value} = 0</msg>
<status status="PASS" starttime="20210408 19:10:56.178" endtime="20210408 19:10:57.025"></status>
</kw>
<msg timestamp="20210408 19:10:57.025" level="INFO">${PricingOption_BillNoOfDays} = 0</msg>
<status status="PASS" starttime="20210408 19:10:56.032" endtime="20210408 19:10:57.025"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sMatrixChangeAppMethod}</arg>
</arguments>
<assign>
<var>${MatrixChangeAppMethod}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:10:57.335" endtime="20210408 19:10:57.335"></status>
</kw>
<msg timestamp="20210408 19:10:57.336" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:10:57.333" endtime="20210408 19:10:57.336"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:10:57.546" level="INFO">${List_Argument_Excel_Value} = ['Effective date of change']</msg>
<status status="PASS" starttime="20210408 19:10:57.545" endtime="20210408 19:10:57.546"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:10:57.599" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:10:57.599" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:10:57.598" endtime="20210408 19:10:57.599"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:10:57.650" level="INFO">${Arg_User_Input} = EFFECTIVE DATE OF CHANGE</msg>
<status status="PASS" starttime="20210408 19:10:57.650" endtime="20210408 19:10:57.650"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:10:57.701" level="INFO">${Arg_User_Input} = EFFECTIVE DATE OF CHANGE</msg>
<status status="PASS" starttime="20210408 19:10:57.700" endtime="20210408 19:10:57.701"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:10:57.750" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:10:57.750" endtime="20210408 19:10:57.751"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:10:57.803" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:10:57.802" endtime="20210408 19:10:57.803"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:10:57.863" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:10:57.862" endtime="20210408 19:10:57.863"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:10:57.915" endtime="20210408 19:10:57.915"></status>
</kw>
<msg timestamp="20210408 19:10:57.916" level="INFO">${Extracted_Argument_Value} = Effective date of change</msg>
<status status="PASS" starttime="20210408 19:10:57.913" endtime="20210408 19:10:57.916"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:57.489" endtime="20210408 19:10:57.916"></status>
</kw>
<msg timestamp="20210408 19:10:57.916" level="INFO">${Extracted_Argument_Value} = Effective date of change</msg>
<status status="PASS" starttime="20210408 19:10:57.388" endtime="20210408 19:10:57.916"></status>
</kw>
<msg timestamp="20210408 19:10:57.916" level="INFO">${MatrixChangeAppMethod} = Effective date of change</msg>
<status status="PASS" starttime="20210408 19:10:57.257" endtime="20210408 19:10:57.917"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sRateChangeAppMethod}</arg>
</arguments>
<assign>
<var>${RateChangeAppMethod}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:10:58.124" endtime="20210408 19:10:58.124"></status>
</kw>
<msg timestamp="20210408 19:10:58.125" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:10:58.122" endtime="20210408 19:10:58.125"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:10:58.327" level="INFO">${List_Argument_Excel_Value} = ['Effective date of change']</msg>
<status status="PASS" starttime="20210408 19:10:58.326" endtime="20210408 19:10:58.327"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:10:58.377" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:10:58.377" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:10:58.376" endtime="20210408 19:10:58.377"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:10:58.428" level="INFO">${Arg_User_Input} = EFFECTIVE DATE OF CHANGE</msg>
<status status="PASS" starttime="20210408 19:10:58.428" endtime="20210408 19:10:58.428"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:10:58.479" level="INFO">${Arg_User_Input} = EFFECTIVE DATE OF CHANGE</msg>
<status status="PASS" starttime="20210408 19:10:58.478" endtime="20210408 19:10:58.479"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:10:58.529" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:10:58.528" endtime="20210408 19:10:58.529"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:10:58.581" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:10:58.580" endtime="20210408 19:10:58.581"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:10:58.632" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:10:58.632" endtime="20210408 19:10:58.633"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:10:58.686" endtime="20210408 19:10:58.686"></status>
</kw>
<msg timestamp="20210408 19:10:58.687" level="INFO">${Extracted_Argument_Value} = Effective date of change</msg>
<status status="PASS" starttime="20210408 19:10:58.683" endtime="20210408 19:10:58.687"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:58.273" endtime="20210408 19:10:58.687"></status>
</kw>
<msg timestamp="20210408 19:10:58.687" level="INFO">${Extracted_Argument_Value} = Effective date of change</msg>
<status status="PASS" starttime="20210408 19:10:58.174" endtime="20210408 19:10:58.687"></status>
</kw>
<msg timestamp="20210408 19:10:58.687" level="INFO">${RateChangeAppMethod} = Effective date of change</msg>
<status status="PASS" starttime="20210408 19:10:58.069" endtime="20210408 19:10:58.688"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sPricingOption_InitialFractionRate}</arg>
</arguments>
<assign>
<var>${PricingOption_InitialFractionRate}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:10:58.900" endtime="20210408 19:10:58.900"></status>
</kw>
<msg timestamp="20210408 19:10:58.901" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:10:58.899" endtime="20210408 19:10:58.901"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:10:59.112" level="INFO">${List_Argument_Excel_Value} = ['']</msg>
<status status="PASS" starttime="20210408 19:10:59.111" endtime="20210408 19:10:59.112"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:10:59.192" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:10:59.192" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:10:59.192" endtime="20210408 19:10:59.192"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:10:59.268" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:10:59.268" endtime="20210408 19:10:59.268"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:10:59.343" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:10:59.342" endtime="20210408 19:10:59.343"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:10:59.396" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:10:59.395" endtime="20210408 19:10:59.396"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:10:59.447" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:10:59.446" endtime="20210408 19:10:59.447"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:10:59.498" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:10:59.498" endtime="20210408 19:10:59.498"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:10:59.552" endtime="20210408 19:10:59.552"></status>
</kw>
<msg timestamp="20210408 19:10:59.552" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:10:59.550" endtime="20210408 19:10:59.553"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:59.052" endtime="20210408 19:10:59.553"></status>
</kw>
<msg timestamp="20210408 19:10:59.553" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:10:58.949" endtime="20210408 19:10:59.553"></status>
</kw>
<msg timestamp="20210408 19:10:59.553" level="INFO">${PricingOption_InitialFractionRate} = </msg>
<status status="PASS" starttime="20210408 19:10:58.846" endtime="20210408 19:10:59.553"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sPricingOption_RoundingDecimalPrecision}</arg>
</arguments>
<assign>
<var>${PricingOption_RoundingDecimalPrecision}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:10:59.808" endtime="20210408 19:10:59.809"></status>
</kw>
<msg timestamp="20210408 19:10:59.809" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:10:59.806" endtime="20210408 19:10:59.809"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:11:00.213" level="INFO">${List_Argument_Excel_Value} = ['']</msg>
<status status="PASS" starttime="20210408 19:11:00.212" endtime="20210408 19:11:00.213"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:11:00.265" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:11:00.265" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:11:00.264" endtime="20210408 19:11:00.265"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:11:00.319" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:11:00.318" endtime="20210408 19:11:00.319"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:11:00.371" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:11:00.370" endtime="20210408 19:11:00.371"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:11:00.428" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:00.428" endtime="20210408 19:11:00.430"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:11:00.493" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:00.493" endtime="20210408 19:11:00.494"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:11:00.550" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:00.549" endtime="20210408 19:11:00.550"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:00.605" endtime="20210408 19:11:00.605"></status>
</kw>
<msg timestamp="20210408 19:11:00.605" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:11:00.603" endtime="20210408 19:11:00.606"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:00.031" endtime="20210408 19:11:00.606"></status>
</kw>
<msg timestamp="20210408 19:11:00.606" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:10:59.885" endtime="20210408 19:11:00.606"></status>
</kw>
<msg timestamp="20210408 19:11:00.606" level="INFO">${PricingOption_RoundingDecimalPrecision} = </msg>
<status status="PASS" starttime="20210408 19:10:59.729" endtime="20210408 19:11:00.606"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sPricingOption_RoundingApplicationMethod}</arg>
</arguments>
<assign>
<var>${PricingOption_RoundingApplicationMethod}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:00.828" endtime="20210408 19:11:00.828"></status>
</kw>
<msg timestamp="20210408 19:11:00.828" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:11:00.826" endtime="20210408 19:11:00.828"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:11:01.136" level="INFO">${List_Argument_Excel_Value} = ['']</msg>
<status status="PASS" starttime="20210408 19:11:01.136" endtime="20210408 19:11:01.137"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:11:01.211" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:11:01.212" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:11:01.211" endtime="20210408 19:11:01.212"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:11:01.286" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:11:01.285" endtime="20210408 19:11:01.286"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:11:01.339" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:11:01.338" endtime="20210408 19:11:01.339"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:11:01.394" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:01.393" endtime="20210408 19:11:01.394"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:11:01.445" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:01.444" endtime="20210408 19:11:01.445"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:11:01.497" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:01.496" endtime="20210408 19:11:01.497"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:01.550" endtime="20210408 19:11:01.550"></status>
</kw>
<msg timestamp="20210408 19:11:01.550" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:11:01.548" endtime="20210408 19:11:01.550"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:01.056" endtime="20210408 19:11:01.550"></status>
</kw>
<msg timestamp="20210408 19:11:01.550" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:11:00.905" endtime="20210408 19:11:01.550"></status>
</kw>
<msg timestamp="20210408 19:11:01.551" level="INFO">${PricingOption_RoundingApplicationMethod} = </msg>
<status status="PASS" starttime="20210408 19:11:00.767" endtime="20210408 19:11:01.551"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sPricingOption_PercentOfRateFormulaUsage}</arg>
</arguments>
<assign>
<var>${PricingOption_PercentOfRateFormulaUsage}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:01.767" endtime="20210408 19:11:01.767"></status>
</kw>
<msg timestamp="20210408 19:11:01.768" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:11:01.765" endtime="20210408 19:11:01.768"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:11:01.976" level="INFO">${List_Argument_Excel_Value} = ['(Base + Spread + RAC) * PCT']</msg>
<status status="PASS" starttime="20210408 19:11:01.975" endtime="20210408 19:11:01.976"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:11:02.028" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:11:02.028" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:11:02.027" endtime="20210408 19:11:02.028"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:11:02.080" level="INFO">${Arg_User_Input} = (BASE + SPREAD + RAC) * PCT</msg>
<status status="PASS" starttime="20210408 19:11:02.079" endtime="20210408 19:11:02.080"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:11:02.141" level="INFO">${Arg_User_Input} = (BASE + SPREAD + RAC) * PCT</msg>
<status status="PASS" starttime="20210408 19:11:02.140" endtime="20210408 19:11:02.141"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:11:02.191" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:02.190" endtime="20210408 19:11:02.191"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:11:02.243" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:02.243" endtime="20210408 19:11:02.243"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:11:02.295" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:02.294" endtime="20210408 19:11:02.295"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:02.346" endtime="20210408 19:11:02.347"></status>
</kw>
<msg timestamp="20210408 19:11:02.347" level="INFO">${Extracted_Argument_Value} = (Base + Spread + RAC) * PCT</msg>
<status status="PASS" starttime="20210408 19:11:02.345" endtime="20210408 19:11:02.347"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:01.923" endtime="20210408 19:11:02.347"></status>
</kw>
<msg timestamp="20210408 19:11:02.348" level="INFO">${Extracted_Argument_Value} = (Base + Spread + RAC) * PCT</msg>
<status status="PASS" starttime="20210408 19:11:01.820" endtime="20210408 19:11:02.348"></status>
</kw>
<msg timestamp="20210408 19:11:02.348" level="INFO">${PricingOption_PercentOfRateFormulaUsage} = (Base + Spread + RAC) * PCT</msg>
<status status="PASS" starttime="20210408 19:11:01.714" endtime="20210408 19:11:02.348"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sPricingOption_RepricingNonBusinessDayRule}</arg>
</arguments>
<assign>
<var>${PricingOption_RepricingNonBusinessDayRule}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:02.570" endtime="20210408 19:11:02.570"></status>
</kw>
<msg timestamp="20210408 19:11:02.570" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:11:02.568" endtime="20210408 19:11:02.571"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:11:02.891" level="INFO">${List_Argument_Excel_Value} = ['Modified Following Business Day']</msg>
<status status="PASS" starttime="20210408 19:11:02.890" endtime="20210408 19:11:02.891"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:11:02.959" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:11:02.959" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:11:02.959" endtime="20210408 19:11:02.959"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:11:03.037" level="INFO">${Arg_User_Input} = MODIFIED FOLLOWING BUSINESS DAY</msg>
<status status="PASS" starttime="20210408 19:11:03.036" endtime="20210408 19:11:03.037"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:11:03.100" level="INFO">${Arg_User_Input} = MODIFIED FOLLOWING BUSINESS DAY</msg>
<status status="PASS" starttime="20210408 19:11:03.099" endtime="20210408 19:11:03.100"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:11:03.161" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:03.161" endtime="20210408 19:11:03.162"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:11:03.212" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:03.211" endtime="20210408 19:11:03.212"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:11:03.268" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:03.268" endtime="20210408 19:11:03.269"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:03.326" endtime="20210408 19:11:03.327"></status>
</kw>
<msg timestamp="20210408 19:11:03.327" level="INFO">${Extracted_Argument_Value} = Modified Following Business Day</msg>
<status status="PASS" starttime="20210408 19:11:03.324" endtime="20210408 19:11:03.327"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:02.729" endtime="20210408 19:11:03.327"></status>
</kw>
<msg timestamp="20210408 19:11:03.328" level="INFO">${Extracted_Argument_Value} = Modified Following Business Day</msg>
<status status="PASS" starttime="20210408 19:11:02.621" endtime="20210408 19:11:03.328"></status>
</kw>
<msg timestamp="20210408 19:11:03.328" level="INFO">${PricingOption_RepricingNonBusinessDayRule} = Modified Following Business Day</msg>
<status status="PASS" starttime="20210408 19:11:02.515" endtime="20210408 19:11:03.328"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sPricingOption_FeeOnLenderShareFunding}</arg>
</arguments>
<assign>
<var>${PricingOption_FeeOnLenderShareFunding}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:03.540" endtime="20210408 19:11:03.541"></status>
</kw>
<msg timestamp="20210408 19:11:03.541" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:11:03.538" endtime="20210408 19:11:03.541"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:11:03.792" level="INFO">${List_Argument_Excel_Value} = ['']</msg>
<status status="PASS" starttime="20210408 19:11:03.792" endtime="20210408 19:11:03.792"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:11:03.871" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:11:03.871" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:11:03.871" endtime="20210408 19:11:03.872"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:11:03.933" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:11:03.933" endtime="20210408 19:11:03.933"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:11:03.986" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:11:03.986" endtime="20210408 19:11:03.986"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:11:04.040" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:04.039" endtime="20210408 19:11:04.040"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:11:04.094" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:04.093" endtime="20210408 19:11:04.094"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:11:04.153" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:04.152" endtime="20210408 19:11:04.153"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:04.204" endtime="20210408 19:11:04.204"></status>
</kw>
<msg timestamp="20210408 19:11:04.205" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:11:04.202" endtime="20210408 19:11:04.205"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:03.716" endtime="20210408 19:11:04.205"></status>
</kw>
<msg timestamp="20210408 19:11:04.205" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:11:03.595" endtime="20210408 19:11:04.205"></status>
</kw>
<msg timestamp="20210408 19:11:04.205" level="INFO">${PricingOption_FeeOnLenderShareFunding} = </msg>
<status status="PASS" starttime="20210408 19:11:03.484" endtime="20210408 19:11:04.206"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sPricingOption_InterestDueUponPrincipalPayment}</arg>
</arguments>
<assign>
<var>${PricingOption_InterestDueUponPrincipalPayment}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:04.421" endtime="20210408 19:11:04.422"></status>
</kw>
<msg timestamp="20210408 19:11:04.422" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:11:04.420" endtime="20210408 19:11:04.422"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:11:04.629" level="INFO">${List_Argument_Excel_Value} = ['OFF']</msg>
<status status="PASS" starttime="20210408 19:11:04.629" endtime="20210408 19:11:04.629"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:11:04.681" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:11:04.681" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:11:04.681" endtime="20210408 19:11:04.681"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:11:04.734" level="INFO">${Arg_User_Input} = OFF</msg>
<status status="PASS" starttime="20210408 19:11:04.733" endtime="20210408 19:11:04.734"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:11:04.785" level="INFO">${Arg_User_Input} = OFF</msg>
<status status="PASS" starttime="20210408 19:11:04.784" endtime="20210408 19:11:04.785"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:11:04.837" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:04.836" endtime="20210408 19:11:04.837"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:11:04.890" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:04.889" endtime="20210408 19:11:04.890"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:11:04.941" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:04.940" endtime="20210408 19:11:04.941"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:04.997" endtime="20210408 19:11:04.997"></status>
</kw>
<msg timestamp="20210408 19:11:04.997" level="INFO">${Extracted_Argument_Value} = OFF</msg>
<status status="PASS" starttime="20210408 19:11:04.995" endtime="20210408 19:11:04.997"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:04.576" endtime="20210408 19:11:04.998"></status>
</kw>
<msg timestamp="20210408 19:11:04.998" level="INFO">${Extracted_Argument_Value} = OFF</msg>
<status status="PASS" starttime="20210408 19:11:04.474" endtime="20210408 19:11:04.998"></status>
</kw>
<msg timestamp="20210408 19:11:04.998" level="INFO">${PricingOption_InterestDueUponPrincipalPayment} = OFF</msg>
<status status="PASS" starttime="20210408 19:11:04.367" endtime="20210408 19:11:04.998"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sPricingOption_InterestDueUponRepricing}</arg>
</arguments>
<assign>
<var>${PricingOption_InterestDueUponRepricing}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:05.319" endtime="20210408 19:11:05.320"></status>
</kw>
<msg timestamp="20210408 19:11:05.320" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:11:05.318" endtime="20210408 19:11:05.320"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:11:05.536" level="INFO">${List_Argument_Excel_Value} = ['']</msg>
<status status="PASS" starttime="20210408 19:11:05.536" endtime="20210408 19:11:05.537"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:11:05.598" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:11:05.598" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:11:05.597" endtime="20210408 19:11:05.598"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:11:05.654" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:11:05.653" endtime="20210408 19:11:05.654"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:11:05.706" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:11:05.706" endtime="20210408 19:11:05.707"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:11:05.762" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:05.761" endtime="20210408 19:11:05.762"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:11:05.821" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:05.820" endtime="20210408 19:11:05.821"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:11:05.874" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:05.873" endtime="20210408 19:11:05.874"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:05.936" endtime="20210408 19:11:05.937"></status>
</kw>
<msg timestamp="20210408 19:11:05.937" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:11:05.934" endtime="20210408 19:11:05.937"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:05.474" endtime="20210408 19:11:05.937"></status>
</kw>
<msg timestamp="20210408 19:11:05.937" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:11:05.373" endtime="20210408 19:11:05.938"></status>
</kw>
<msg timestamp="20210408 19:11:05.938" level="INFO">${PricingOption_InterestDueUponRepricing} = </msg>
<status status="PASS" starttime="20210408 19:11:05.159" endtime="20210408 19:11:05.938"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sPricingOption_ReferenceBanksApply}</arg>
</arguments>
<assign>
<var>${PricingOption_ReferenceBanksApply}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:06.200" endtime="20210408 19:11:06.201"></status>
</kw>
<msg timestamp="20210408 19:11:06.201" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:11:06.199" endtime="20210408 19:11:06.201"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:11:06.433" level="INFO">${List_Argument_Excel_Value} = ['OFF']</msg>
<status status="PASS" starttime="20210408 19:11:06.432" endtime="20210408 19:11:06.433"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:11:06.495" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:11:06.496" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:11:06.495" endtime="20210408 19:11:06.496"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:11:06.556" level="INFO">${Arg_User_Input} = OFF</msg>
<status status="PASS" starttime="20210408 19:11:06.555" endtime="20210408 19:11:06.556"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:11:06.616" level="INFO">${Arg_User_Input} = OFF</msg>
<status status="PASS" starttime="20210408 19:11:06.616" endtime="20210408 19:11:06.616"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:11:06.670" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:06.670" endtime="20210408 19:11:06.670"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:11:06.725" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:06.724" endtime="20210408 19:11:06.725"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:11:06.776" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:06.775" endtime="20210408 19:11:06.776"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:06.828" endtime="20210408 19:11:06.829"></status>
</kw>
<msg timestamp="20210408 19:11:06.829" level="INFO">${Extracted_Argument_Value} = OFF</msg>
<status status="PASS" starttime="20210408 19:11:06.826" endtime="20210408 19:11:06.829"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:06.373" endtime="20210408 19:11:06.829"></status>
</kw>
<msg timestamp="20210408 19:11:06.829" level="INFO">${Extracted_Argument_Value} = OFF</msg>
<status status="PASS" starttime="20210408 19:11:06.252" endtime="20210408 19:11:06.829"></status>
</kw>
<msg timestamp="20210408 19:11:06.830" level="INFO">${PricingOption_ReferenceBanksApply} = OFF</msg>
<status status="PASS" starttime="20210408 19:11:06.148" endtime="20210408 19:11:06.830"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sPricingOption_IntentNoticeDaysInAdvance}</arg>
</arguments>
<assign>
<var>${PricingOption_IntentNoticeDaysInAdvance}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:07.054" endtime="20210408 19:11:07.054"></status>
</kw>
<msg timestamp="20210408 19:11:07.055" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:11:07.053" endtime="20210408 19:11:07.055"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:11:07.267" level="INFO">${List_Argument_Excel_Value} = ['3']</msg>
<status status="PASS" starttime="20210408 19:11:07.266" endtime="20210408 19:11:07.267"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:11:07.320" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:11:07.320" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:11:07.320" endtime="20210408 19:11:07.321"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:11:07.372" level="INFO">${Arg_User_Input} = 3</msg>
<status status="PASS" starttime="20210408 19:11:07.372" endtime="20210408 19:11:07.373"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:11:07.428" level="INFO">${Arg_User_Input} = 3</msg>
<status status="PASS" starttime="20210408 19:11:07.427" endtime="20210408 19:11:07.428"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:11:07.480" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:07.479" endtime="20210408 19:11:07.481"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:11:07.534" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:07.533" endtime="20210408 19:11:07.534"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:11:07.585" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:07.584" endtime="20210408 19:11:07.585"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:07.641" endtime="20210408 19:11:07.642"></status>
</kw>
<msg timestamp="20210408 19:11:07.642" level="INFO">${Extracted_Argument_Value} = 3</msg>
<status status="PASS" starttime="20210408 19:11:07.639" endtime="20210408 19:11:07.642"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:07.212" endtime="20210408 19:11:07.642"></status>
</kw>
<msg timestamp="20210408 19:11:07.643" level="INFO">${Extracted_Argument_Value} = 3</msg>
<status status="PASS" starttime="20210408 19:11:07.110" endtime="20210408 19:11:07.643"></status>
</kw>
<msg timestamp="20210408 19:11:07.643" level="INFO">${PricingOption_IntentNoticeDaysInAdvance} = 3</msg>
<status status="PASS" starttime="20210408 19:11:06.990" endtime="20210408 19:11:07.643"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sPricingOption_IntentNoticeTime}</arg>
</arguments>
<assign>
<var>${PricingOption_IntentNoticeTime}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:07.856" endtime="20210408 19:11:07.856"></status>
</kw>
<msg timestamp="20210408 19:11:07.856" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:11:07.854" endtime="20210408 19:11:07.856"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:11:08.062" level="INFO">${List_Argument_Excel_Value} = ['12']</msg>
<status status="PASS" starttime="20210408 19:11:08.061" endtime="20210408 19:11:08.062"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:11:08.114" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:11:08.114" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:11:08.113" endtime="20210408 19:11:08.114"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:11:08.170" level="INFO">${Arg_User_Input} = 12</msg>
<status status="PASS" starttime="20210408 19:11:08.169" endtime="20210408 19:11:08.170"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:11:08.221" level="INFO">${Arg_User_Input} = 12</msg>
<status status="PASS" starttime="20210408 19:11:08.220" endtime="20210408 19:11:08.221"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:11:08.272" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:08.272" endtime="20210408 19:11:08.272"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:11:08.322" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:08.322" endtime="20210408 19:11:08.323"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:11:08.375" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:08.374" endtime="20210408 19:11:08.375"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:08.429" endtime="20210408 19:11:08.429"></status>
</kw>
<msg timestamp="20210408 19:11:08.429" level="INFO">${Extracted_Argument_Value} = 12</msg>
<status status="PASS" starttime="20210408 19:11:08.427" endtime="20210408 19:11:08.430"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:08.006" endtime="20210408 19:11:08.430"></status>
</kw>
<msg timestamp="20210408 19:11:08.430" level="INFO">${Extracted_Argument_Value} = 12</msg>
<status status="PASS" starttime="20210408 19:11:07.907" endtime="20210408 19:11:08.430"></status>
</kw>
<msg timestamp="20210408 19:11:08.430" level="INFO">${PricingOption_IntentNoticeTime} = 12</msg>
<status status="PASS" starttime="20210408 19:11:07.799" endtime="20210408 19:11:08.430"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sPricingOption_12HrPeriodOption}</arg>
</arguments>
<assign>
<var>${PricingOption_12HrPeriodOption}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:08.744" endtime="20210408 19:11:08.744"></status>
</kw>
<msg timestamp="20210408 19:11:08.745" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:11:08.742" endtime="20210408 19:11:08.745"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:11:08.946" level="INFO">${List_Argument_Excel_Value} = ['']</msg>
<status status="PASS" starttime="20210408 19:11:08.945" endtime="20210408 19:11:08.946"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:11:08.997" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:11:08.997" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:11:08.997" endtime="20210408 19:11:08.997"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:11:09.047" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:11:09.047" endtime="20210408 19:11:09.047"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:11:09.099" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:11:09.098" endtime="20210408 19:11:09.099"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:11:09.151" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:09.150" endtime="20210408 19:11:09.151"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:11:09.203" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:09.202" endtime="20210408 19:11:09.203"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:11:09.255" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:09.255" endtime="20210408 19:11:09.255"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:09.307" endtime="20210408 19:11:09.308"></status>
</kw>
<msg timestamp="20210408 19:11:09.308" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:11:09.305" endtime="20210408 19:11:09.308"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:08.894" endtime="20210408 19:11:09.308"></status>
</kw>
<msg timestamp="20210408 19:11:09.309" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:11:08.795" endtime="20210408 19:11:09.309"></status>
</kw>
<msg timestamp="20210408 19:11:09.309" level="INFO">${PricingOption_12HrPeriodOption} = </msg>
<status status="PASS" starttime="20210408 19:11:08.691" endtime="20210408 19:11:09.309"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sPricingOption_MaximumDrawdownAmount}</arg>
</arguments>
<assign>
<var>${PricingOption_MaximumDrawdownAmount}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:09.524" endtime="20210408 19:11:09.525"></status>
</kw>
<msg timestamp="20210408 19:11:09.525" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:11:09.523" endtime="20210408 19:11:09.525"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:11:09.744" level="INFO">${List_Argument_Excel_Value} = ['']</msg>
<status status="PASS" starttime="20210408 19:11:09.743" endtime="20210408 19:11:09.744"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:11:09.796" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:11:09.796" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:11:09.796" endtime="20210408 19:11:09.796"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:11:09.849" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:11:09.848" endtime="20210408 19:11:09.849"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:11:09.902" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:11:09.901" endtime="20210408 19:11:09.902"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:11:09.954" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:09.954" endtime="20210408 19:11:09.954"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:11:10.007" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:10.006" endtime="20210408 19:11:10.007"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:11:10.059" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:10.058" endtime="20210408 19:11:10.059"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:10.112" endtime="20210408 19:11:10.112"></status>
</kw>
<msg timestamp="20210408 19:11:10.112" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:11:10.109" endtime="20210408 19:11:10.112"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:09.681" endtime="20210408 19:11:10.113"></status>
</kw>
<msg timestamp="20210408 19:11:10.113" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:11:09.579" endtime="20210408 19:11:10.113"></status>
</kw>
<msg timestamp="20210408 19:11:10.114" level="INFO">${PricingOption_MaximumDrawdownAmount} = </msg>
<status status="PASS" starttime="20210408 19:11:09.468" endtime="20210408 19:11:10.114"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sPricingOption_MinimumDrawdownAmount}</arg>
</arguments>
<assign>
<var>${PricingOption_MinimumDrawdownAmount}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:10.341" endtime="20210408 19:11:10.341"></status>
</kw>
<msg timestamp="20210408 19:11:10.341" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:11:10.339" endtime="20210408 19:11:10.342"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:11:10.541" level="INFO">${List_Argument_Excel_Value} = ['']</msg>
<status status="PASS" starttime="20210408 19:11:10.541" endtime="20210408 19:11:10.541"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:11:10.606" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:11:10.606" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:11:10.605" endtime="20210408 19:11:10.606"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:11:10.657" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:11:10.657" endtime="20210408 19:11:10.657"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:11:10.718" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:11:10.717" endtime="20210408 19:11:10.718"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:11:10.768" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:10.768" endtime="20210408 19:11:10.769"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:11:10.821" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:10.821" endtime="20210408 19:11:10.821"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:11:10.873" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:10.873" endtime="20210408 19:11:10.873"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:10.926" endtime="20210408 19:11:10.926"></status>
</kw>
<msg timestamp="20210408 19:11:10.926" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:11:10.924" endtime="20210408 19:11:10.926"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:10.489" endtime="20210408 19:11:10.927"></status>
</kw>
<msg timestamp="20210408 19:11:10.927" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:11:10.391" endtime="20210408 19:11:10.927"></status>
</kw>
<msg timestamp="20210408 19:11:10.927" level="INFO">${PricingOption_MinimumDrawdownAmount} = </msg>
<status status="PASS" starttime="20210408 19:11:10.274" endtime="20210408 19:11:10.927"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sPricingOption_MinimumPaymentAmount}</arg>
</arguments>
<assign>
<var>${PricingOption_MinimumPaymentAmount}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:11.245" endtime="20210408 19:11:11.246"></status>
</kw>
<msg timestamp="20210408 19:11:11.246" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:11:11.244" endtime="20210408 19:11:11.246"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:11:11.448" level="INFO">${List_Argument_Excel_Value} = ['']</msg>
<status status="PASS" starttime="20210408 19:11:11.447" endtime="20210408 19:11:11.448"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:11:11.498" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:11:11.499" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:11:11.498" endtime="20210408 19:11:11.499"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:11:11.552" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:11:11.551" endtime="20210408 19:11:11.552"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:11:11.604" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:11:11.603" endtime="20210408 19:11:11.604"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:11:11.656" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:11.656" endtime="20210408 19:11:11.656"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:11:11.716" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:11.715" endtime="20210408 19:11:11.716"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:11:11.769" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:11.768" endtime="20210408 19:11:11.769"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:11.821" endtime="20210408 19:11:11.821"></status>
</kw>
<msg timestamp="20210408 19:11:11.822" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:11:11.819" endtime="20210408 19:11:11.822"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:11.396" endtime="20210408 19:11:11.822"></status>
</kw>
<msg timestamp="20210408 19:11:11.822" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:11:11.296" endtime="20210408 19:11:11.823"></status>
</kw>
<msg timestamp="20210408 19:11:11.823" level="INFO">${PricingOption_MinimumPaymentAmount} = </msg>
<status status="PASS" starttime="20210408 19:11:11.193" endtime="20210408 19:11:11.823"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sPricingOption_MinimumAmountMultiples}</arg>
</arguments>
<assign>
<var>${PricingOption_MinimumAmountMultiples}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:12.035" endtime="20210408 19:11:12.036"></status>
</kw>
<msg timestamp="20210408 19:11:12.036" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:11:12.034" endtime="20210408 19:11:12.036"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:11:12.247" level="INFO">${List_Argument_Excel_Value} = ['']</msg>
<status status="PASS" starttime="20210408 19:11:12.246" endtime="20210408 19:11:12.247"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:11:12.302" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:11:12.302" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:11:12.301" endtime="20210408 19:11:12.302"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:11:12.355" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:11:12.355" endtime="20210408 19:11:12.356"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:11:12.407" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:11:12.407" endtime="20210408 19:11:12.407"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:11:12.457" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:12.457" endtime="20210408 19:11:12.458"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:11:12.508" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:12.507" endtime="20210408 19:11:12.508"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:11:12.563" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:12.563" endtime="20210408 19:11:12.563"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:12.615" endtime="20210408 19:11:12.616"></status>
</kw>
<msg timestamp="20210408 19:11:12.616" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:11:12.613" endtime="20210408 19:11:12.616"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:12.195" endtime="20210408 19:11:12.616"></status>
</kw>
<msg timestamp="20210408 19:11:12.616" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:11:12.086" endtime="20210408 19:11:12.616"></status>
</kw>
<msg timestamp="20210408 19:11:12.617" level="INFO">${PricingOption_MinimumAmountMultiples} = </msg>
<status status="PASS" starttime="20210408 19:11:11.983" endtime="20210408 19:11:12.617"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sPricingOption_CCY}</arg>
</arguments>
<assign>
<var>${PricingOption_CCY}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:12.828" endtime="20210408 19:11:12.828"></status>
</kw>
<msg timestamp="20210408 19:11:12.829" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:11:12.826" endtime="20210408 19:11:12.829"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:11:13.037" level="INFO">${List_Argument_Excel_Value} = ['']</msg>
<status status="PASS" starttime="20210408 19:11:13.036" endtime="20210408 19:11:13.037"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:11:13.088" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:11:13.089" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:11:13.088" endtime="20210408 19:11:13.089"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:11:13.144" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:11:13.143" endtime="20210408 19:11:13.144"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:11:13.195" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:11:13.194" endtime="20210408 19:11:13.195"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:11:13.356" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:13.355" endtime="20210408 19:11:13.356"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:11:13.408" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:13.407" endtime="20210408 19:11:13.408"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:11:13.459" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:13.458" endtime="20210408 19:11:13.459"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:13.511" endtime="20210408 19:11:13.511"></status>
</kw>
<msg timestamp="20210408 19:11:13.511" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:11:13.509" endtime="20210408 19:11:13.512"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:12.984" endtime="20210408 19:11:13.512"></status>
</kw>
<msg timestamp="20210408 19:11:13.512" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:11:12.880" endtime="20210408 19:11:13.512"></status>
</kw>
<msg timestamp="20210408 19:11:13.512" level="INFO">${PricingOption_CCY} = </msg>
<status status="PASS" starttime="20210408 19:11:12.777" endtime="20210408 19:11:13.512"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sPricingOption_BillBorrower}</arg>
</arguments>
<assign>
<var>${PricingOption_BillBorrower}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:13.721" endtime="20210408 19:11:13.721"></status>
</kw>
<msg timestamp="20210408 19:11:13.721" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:11:13.719" endtime="20210408 19:11:13.721"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:11:13.929" level="INFO">${List_Argument_Excel_Value} = ['YES']</msg>
<status status="PASS" starttime="20210408 19:11:13.928" endtime="20210408 19:11:13.929"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:11:13.981" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:11:13.981" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:11:13.980" endtime="20210408 19:11:13.981"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:11:14.034" level="INFO">${Arg_User_Input} = YES</msg>
<status status="PASS" starttime="20210408 19:11:14.033" endtime="20210408 19:11:14.034"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:11:14.084" level="INFO">${Arg_User_Input} = YES</msg>
<status status="PASS" starttime="20210408 19:11:14.084" endtime="20210408 19:11:14.085"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:11:14.141" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:14.141" endtime="20210408 19:11:14.142"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:11:14.194" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:14.194" endtime="20210408 19:11:14.194"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:11:14.248" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:14.247" endtime="20210408 19:11:14.248"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:14.303" endtime="20210408 19:11:14.304"></status>
</kw>
<msg timestamp="20210408 19:11:14.304" level="INFO">${Extracted_Argument_Value} = YES</msg>
<status status="PASS" starttime="20210408 19:11:14.301" endtime="20210408 19:11:14.304"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:13.878" endtime="20210408 19:11:14.304"></status>
</kw>
<msg timestamp="20210408 19:11:14.305" level="INFO">${Extracted_Argument_Value} = YES</msg>
<status status="PASS" starttime="20210408 19:11:13.772" endtime="20210408 19:11:14.305"></status>
</kw>
<msg timestamp="20210408 19:11:14.305" level="INFO">${PricingOption_BillBorrower} = YES</msg>
<status status="PASS" starttime="20210408 19:11:13.668" endtime="20210408 19:11:14.305"></status>
</kw>
<kw name="Mx LoanIQ Select Window Tab" library="LoanIQ">
<doc>| Usage |
Used to select the Java window tab</doc>
<arguments>
<arg>${LIQ_DealNotebook_Tab}</arg>
<arg>${TAB_PRICING_RULES}</arg>
</arguments>
<msg timestamp="20210408 19:11:19.284" level="INFO">Window Tab = 'Pricing Rules' is selected from the element = 'JavaWindow("title:=Deal Notebook -.*","displayed:=1").JavaTab("tagname:=TabFolder")'</msg>
<status status="PASS" starttime="20210408 19:11:14.357" endtime="20210408 19:11:19.284"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_PricingRules_AddOption_Button}</arg>
</arguments>
<msg timestamp="20210408 19:11:21.470" level="INFO">JavaWindow("title:=Deal Notebook.*").JavaButton("attached text:=Add Option","enabled:=1") is clicked.</msg>
<status status="PASS" starttime="20210408 19:11:19.343" endtime="20210408 19:11:21.471"></status>
</kw>
<kw name="Mx LoanIQ Activate Window" library="LoanIQ">
<doc>| Usage |
To activate existing window if present.</doc>
<arguments>
<arg>${LIQ_InterestPricingOption_Window}</arg>
</arguments>
<msg timestamp="20210408 19:11:21.605" level="INFO">Window : JavaWindow("title:=.*Interest Pricing Option.*") is activated</msg>
<status status="PASS" starttime="20210408 19:11:21.530" endtime="20210408 19:11:21.606"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PricingOption_CCY}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Select Combo Box Value</arg>
<arg>${LIQ_InterestPricingOption_CCY_List}</arg>
<arg>${PricingOption_CCY}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:21.665" endtime="20210408 19:11:21.666"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PricingRule_Option}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Select Combo Box Value</arg>
<arg>${LIQ_InterestPricingOption_Dropdown}</arg>
<arg>${PricingRule_Option}</arg>
</arguments>
<kw name="Mx LoanIQ Select Combo Box Value" library="LoanIQ">
<doc>| Usage |
Used to select data in JavaList</doc>
<arguments>
<arg>${LIQ_InterestPricingOption_Dropdown}</arg>
<arg>${PricingRule_Option}</arg>
</arguments>
<msg timestamp="20210408 19:11:22.086" level="INFO">Selected value = 'Libor Option' from Combo box object = 'JavaWindow("title:=Interest Pricing Option.*").JavaList("x:=270","y:=30")'.</msg>
<status status="PASS" starttime="20210408 19:11:21.729" endtime="20210408 19:11:22.087"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:21.727" endtime="20210408 19:11:22.087"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PricingOption_InitialFractionRate}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Select Combo Box Value</arg>
<arg>${LIQ_InterestPricingOption_InitialFractionRate_List}</arg>
<arg>${PricingOption_InitialFractionRate}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:22.164" endtime="20210408 19:11:22.165"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${InitialFractionRate_Round}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Select Combo Box Value</arg>
<arg>${LIQ_InterestPricingOption_InitialFractionRate_Dropdown}</arg>
<arg>${InitialFractionRate_Round}</arg>
</arguments>
<kw name="Mx LoanIQ Select Combo Box Value" library="LoanIQ">
<doc>| Usage |
Used to select data in JavaList</doc>
<arguments>
<arg>${LIQ_InterestPricingOption_InitialFractionRate_Dropdown}</arg>
<arg>${InitialFractionRate_Round}</arg>
</arguments>
<msg timestamp="20210408 19:11:22.350" level="INFO">Selected value = 'Actual' from Combo box object = 'JavaWindow("title:=Interest Pricing Option.*").JavaList("x:=396","y:=59")'.</msg>
<status status="PASS" starttime="20210408 19:11:22.218" endtime="20210408 19:11:22.350"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:22.216" endtime="20210408 19:11:22.351"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PricingOption_RoundingDecimalPrecision}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Select Combo Box Value</arg>
<arg>${LIQ_InterestPricingOption_RoundingDecimalPrecision_List}</arg>
<arg>${PricingOption_RoundingDecimalPrecision}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:22.405" endtime="20210408 19:11:22.406"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${RoundingDecimal_Round}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Select Combo Box Value</arg>
<arg>${LIQ_InterestPricingOption_RoundingDecimalRound_Dropdown}</arg>
<arg>${RoundingDecimal_Round}</arg>
</arguments>
<kw name="Mx LoanIQ Select Combo Box Value" library="LoanIQ">
<doc>| Usage |
Used to select data in JavaList</doc>
<arguments>
<arg>${LIQ_InterestPricingOption_RoundingDecimalRound_Dropdown}</arg>
<arg>${RoundingDecimal_Round}</arg>
</arguments>
<msg timestamp="20210408 19:11:22.608" level="INFO">Selected value = 'Actual' from Combo box object = 'JavaWindow("title:=Interest Pricing Option.*").JavaList("x:=396","y:=88")'.</msg>
<status status="PASS" starttime="20210408 19:11:22.478" endtime="20210408 19:11:22.608"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:22.475" endtime="20210408 19:11:22.609"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${NonBusinessDayRule}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Select Combo Box Value</arg>
<arg>${LIQ_InterestPricingOption_NonBusinessDayRule_Dropdown}</arg>
<arg>${NonBusinessDayRule}</arg>
</arguments>
<kw name="Mx LoanIQ Select Combo Box Value" library="LoanIQ">
<doc>| Usage |
Used to select data in JavaList</doc>
<arguments>
<arg>${LIQ_InterestPricingOption_NonBusinessDayRule_Dropdown}</arg>
<arg>${NonBusinessDayRule}</arg>
</arguments>
<msg timestamp="20210408 19:11:22.852" level="INFO">Selected value = 'Modified Following Business Day' from Combo box object = 'JavaWindow("title:=Interest Pricing Option.*").JavaList("index:=4")'.</msg>
<status status="PASS" starttime="20210408 19:11:22.684" endtime="20210408 19:11:22.852"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:22.680" endtime="20210408 19:11:22.852"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PricingOption_BillBorrower}'=='${YES}'</arg>
<arg>Mx LoanIQ Set</arg>
<arg>${LIQ_InterestPricingOption_BillBorrower_Checkbox}</arg>
<arg>${ON}</arg>
<arg>ELSE</arg>
<arg>Mx LoanIQ Set</arg>
<arg>${LIQ_InterestPricingOption_BillBorrower_Checkbox}</arg>
<arg>${OFF}</arg>
</arguments>
<kw name="Mx LoanIQ Set" library="LoanIQ">
<doc>|Usage|</doc>
<arguments>
<arg>${LIQ_InterestPricingOption_BillBorrower_Checkbox}</arg>
<arg>${ON}</arg>
</arguments>
<msg timestamp="20210408 19:11:23.055" level="INFO">Object = 'JavaWindow("title:=Interest Pricing Option.*").JavaCheckBox("attached text:=Bill Borrower.*")' is set.</msg>
<status status="PASS" starttime="20210408 19:11:22.906" endtime="20210408 19:11:23.055"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:22.904" endtime="20210408 19:11:23.056"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PricingOption_RoundingApplicationMethod}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Select Combo Box Value</arg>
<arg>${LIQ_InterestPricingOption_RoundingApplicationMethod_List}</arg>
<arg>${PricingOption_RoundingApplicationMethod}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:23.120" endtime="20210408 19:11:23.121"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PricingOption_PercentOfRateFormulaUsage}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Select Combo Box Value</arg>
<arg>${LIQ_InterestPricingOption_PercentOfRateFormulaUsage_List}</arg>
<arg>${PricingOption_PercentOfRateFormulaUsage}</arg>
</arguments>
<kw name="Mx LoanIQ Select Combo Box Value" library="LoanIQ">
<doc>| Usage |
Used to select data in JavaList</doc>
<arguments>
<arg>${LIQ_InterestPricingOption_PercentOfRateFormulaUsage_List}</arg>
<arg>${PricingOption_PercentOfRateFormulaUsage}</arg>
</arguments>
<msg timestamp="20210408 19:11:23.309" level="INFO">Selected value = '(Base + Spread + RAC) * PCT' from Combo box object = 'JavaWindow("title:=Interest Pricing Option.*").JavaList("text:=\(Base \+ Spread \+ RAC\) \* PCT")'.</msg>
<status status="PASS" starttime="20210408 19:11:23.175" endtime="20210408 19:11:23.309"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:23.174" endtime="20210408 19:11:23.310"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PricingOption_RepricingNonBusinessDayRule}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Select Combo Box Value</arg>
<arg>${LIQ_InterestPricingOption_RepricingNonBusinessDayRule_Dropdown}</arg>
<arg>${PricingOption_RepricingNonBusinessDayRule}</arg>
</arguments>
<kw name="Mx LoanIQ Select Combo Box Value" library="LoanIQ">
<doc>| Usage |
Used to select data in JavaList</doc>
<arguments>
<arg>${LIQ_InterestPricingOption_RepricingNonBusinessDayRule_Dropdown}</arg>
<arg>${PricingOption_RepricingNonBusinessDayRule}</arg>
</arguments>
<msg timestamp="20210408 19:11:23.521" level="INFO">Selected value = 'Modified Following Business Day' from Combo box object = 'JavaWindow("title:=Interest Pricing Option.*").JavaList("labeled_containers_path:=.*Repricing.*","tagname:=Non Business Day Rule.*")'.</msg>
<status status="PASS" starttime="20210408 19:11:23.376" endtime="20210408 19:11:23.522"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:23.373" endtime="20210408 19:11:23.522"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_InterestPricingOption_InterestDueUponRepricing_Checkbox}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<assign>
<var>${Status}</var>
</assign>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_InterestPricingOption_InterestDueUponRepricing_Checkbox}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:11:23.716" level="INFO">Locator = 'JavaWindow("title:=Interest Pricing Option.*").JavaCheckBox("attached text:=Interest Due Upon Repricing")' exists.</msg>
<status status="PASS" starttime="20210408 19:11:23.601" endtime="20210408 19:11:23.716"></status>
</kw>
<msg timestamp="20210408 19:11:23.716" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20210408 19:11:23.599" endtime="20210408 19:11:23.717"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Status}'=='${TRUE}'</arg>
<arg>Check or Uncheck Interest Due Upon Repricing</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>Unable to find field</arg>
</arguments>
<kw name="Check or Uncheck Interest Due Upon Repricing" library="Deal_Notebook">
<doc>This will check and uncheck the Interest Due Upon Repricing
@author: rtarayao</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Validate if Element is Checked</arg>
<arg>${LIQ_InterestPricingOption_InterestDueUponRepricing_Checkbox}</arg>
<arg>Interest Due Upon Repricing</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Validate if Element is Checked" library="GenericKeywords">
<doc>This keyword validates if Element is checked
@author: ghabal
@update: hstone 02SEP2020 - Optimized Keyword
- Added Failure Log</doc>
<arguments>
<arg>${LIQ_InterestPricingOption_InterestDueUponRepricing_Checkbox}</arg>
<arg>Interest Due Upon Repricing</arg>
</arguments>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>value%1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>value%1</arg>
</arguments>
<msg timestamp="20210408 19:11:24.104" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:11:23.881" endtime="20210408 19:11:24.105"></status>
</kw>
<msg timestamp="20210408 19:11:24.105" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:11:23.879" endtime="20210408 19:11:24.105"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed checked</arg>
<arg>ELSE</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Fail</arg>
<arg>${Field_Label}' element is confirmed unchecked</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>'${Field_Label}' element is confirmed checked</arg>
</arguments>
<msg timestamp="20210408 19:11:24.182" level="INFO">'Interest Due Upon Repricing' element is confirmed checked</msg>
<status status="PASS" starttime="20210408 19:11:24.181" endtime="20210408 19:11:24.182"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:24.179" endtime="20210408 19:11:24.182"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:23.828" endtime="20210408 19:11:24.182"></status>
</kw>
<msg timestamp="20210408 19:11:24.182" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20210408 19:11:23.827" endtime="20210408 19:11:24.182"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==True</arg>
<arg>Mx LoanIQ Check Or Uncheck</arg>
<arg>${LIQ_InterestPricingOption_InterestDueUponRepricing_Checkbox}</arg>
<arg>OFF</arg>
<arg>ELSE IF</arg>
<arg>${status}==False</arg>
<arg>Mx LoanIQ Check Or Uncheck</arg>
<arg>${LIQ_InterestPricingOption_InterestDueUponPrincipalPayment_Checkbox}</arg>
<arg>ON</arg>
</arguments>
<kw name="Mx LoanIQ Check Or Uncheck" library="LoanIQ">
<doc>| Usage |
 This keyword performs check or uncheck on the  checkbox object</doc>
<arguments>
<arg>${LIQ_InterestPricingOption_InterestDueUponRepricing_Checkbox}</arg>
<arg>OFF</arg>
</arguments>
<msg timestamp="20210408 19:11:24.511" level="INFO">Checkbox object = 'JavaWindow("title:=Interest Pricing Option.*").JavaCheckBox("attached text:=Interest Due Upon Repricing")' is unset</msg>
<status status="PASS" starttime="20210408 19:11:24.262" endtime="20210408 19:11:24.511"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:24.260" endtime="20210408 19:11:24.511"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:23.776" endtime="20210408 19:11:24.511"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:23.774" endtime="20210408 19:11:24.512"></status>
</kw>
<kw name="Mx LoanIQ Enter" library="LoanIQ">
<doc>| Usage |
To enter the data to the element specified by 'locator'.</doc>
<arguments>
<arg>${LIQ_InterestPricingOption_BillingNumberDays_Field}</arg>
<arg>${PricingOption_BillNoOfDays}</arg>
</arguments>
<msg timestamp="20210408 19:11:24.827" level="INFO">Input= 0 is entered in element= JavaWindow("title:=Interest Pricing Option.*").JavaEdit("attached text:=Billing Number of Days:")</msg>
<status status="PASS" starttime="20210408 19:11:24.590" endtime="20210408 19:11:24.827"></status>
</kw>
<kw name="Mx LoanIQ Select Combo Box Value" library="LoanIQ">
<doc>| Usage |
Used to select data in JavaList</doc>
<arguments>
<arg>${LIQ_InterestPricingOption_MatrixChangeAppMthd_Combobox}</arg>
<arg>${MatrixChangeAppMethod}</arg>
</arguments>
<msg timestamp="20210408 19:11:25.038" level="INFO">Selected value = 'Effective date of change' from Combo box object = 'JavaWindow("title:=Interest Pricing Option.*").JavaList("index:=7")'.</msg>
<status status="PASS" starttime="20210408 19:11:24.877" endtime="20210408 19:11:25.039"></status>
</kw>
<kw name="Mx LoanIQ Select Combo Box Value" library="LoanIQ">
<doc>| Usage |
Used to select data in JavaList</doc>
<arguments>
<arg>${LIQ_InterestPricingOption_RateChangeAppMthd_Combobox}</arg>
<arg>${RateChangeAppMethod}</arg>
</arguments>
<msg timestamp="20210408 19:11:25.297" level="INFO">Selected value = 'Effective date of change' from Combo box object = 'JavaWindow("title:=Interest Pricing Option.*").JavaList("index:=8")'.</msg>
<status status="PASS" starttime="20210408 19:11:25.107" endtime="20210408 19:11:25.298"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PricingOption_InterestDueUponPrincipalPayment}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Check Or Uncheck</arg>
<arg>${LIQ_InterestPricingOption_InterestDueUponPrincipalPayment_Checkbox}</arg>
<arg>${PricingOption_InterestDueUponPrincipalPayment}</arg>
</arguments>
<kw name="Mx LoanIQ Check Or Uncheck" library="LoanIQ">
<doc>| Usage |
 This keyword performs check or uncheck on the  checkbox object</doc>
<arguments>
<arg>${LIQ_InterestPricingOption_InterestDueUponPrincipalPayment_Checkbox}</arg>
<arg>${PricingOption_InterestDueUponPrincipalPayment}</arg>
</arguments>
<msg timestamp="20210408 19:11:25.571" level="INFO">Checkbox object = 'JavaWindow("title:=Interest Pricing Option.*").JavaCheckBox("attached text:=Interest Due Upon Principal Payment")' is unset</msg>
<status status="PASS" starttime="20210408 19:11:25.353" endtime="20210408 19:11:25.572"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:25.351" endtime="20210408 19:11:25.572"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PricingOption_InterestDueUponRepricing}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Check Or Uncheck</arg>
<arg>${LIQ_InterestPricingOption_InterestDueUponRepricing_Checkbox}</arg>
<arg>${PricingOption_InterestDueUponRepricing}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:25.632" endtime="20210408 19:11:25.633"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PricingOption_ReferenceBanksApply}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Check Or Uncheck</arg>
<arg>${LIQ_InterestPricingOption_ReferenceBanksApply_Checkbox}</arg>
<arg>${PricingOption_ReferenceBanksApply}</arg>
</arguments>
<kw name="Mx LoanIQ Check Or Uncheck" library="LoanIQ">
<doc>| Usage |
 This keyword performs check or uncheck on the  checkbox object</doc>
<arguments>
<arg>${LIQ_InterestPricingOption_ReferenceBanksApply_Checkbox}</arg>
<arg>${PricingOption_ReferenceBanksApply}</arg>
</arguments>
<msg timestamp="20210408 19:11:25.925" level="INFO">Checkbox object = 'JavaWindow("title:=Interest Pricing Option.*").JavaCheckBox("attached text:=Reference Banks Apply")' is unset</msg>
<status status="PASS" starttime="20210408 19:11:25.690" endtime="20210408 19:11:25.925"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:25.688" endtime="20210408 19:11:25.925"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PricingOption_IntentNoticeDaysInAdvance}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Enter</arg>
<arg>${LIQ_InterestPricingOption_IntentNoticeDaysInAdvance_Textfield}</arg>
<arg>${PricingOption_IntentNoticeDaysInAdvance}</arg>
</arguments>
<kw name="Mx LoanIQ Enter" library="LoanIQ">
<doc>| Usage |
To enter the data to the element specified by 'locator'.</doc>
<arguments>
<arg>${LIQ_InterestPricingOption_IntentNoticeDaysInAdvance_Textfield}</arg>
<arg>${PricingOption_IntentNoticeDaysInAdvance}</arg>
</arguments>
<msg timestamp="20210408 19:11:26.244" level="INFO">Input= 3 is entered in element= JavaWindow("title:=Interest Pricing Option.*").JavaEdit("labeled_containers_path:=.*Intent Notice.*","attached text:=Days in Advance.*")</msg>
<status status="PASS" starttime="20210408 19:11:25.984" endtime="20210408 19:11:26.245"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:25.982" endtime="20210408 19:11:26.245"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PricingOption_IntentNoticeTime}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Enter</arg>
<arg>${LIQ_InterestPricingOption_IntentNoticeTimeInAdvance_Textfield}</arg>
<arg>${PricingOption_IntentNoticeTime}</arg>
</arguments>
<kw name="Mx LoanIQ Enter" library="LoanIQ">
<doc>| Usage |
To enter the data to the element specified by 'locator'.</doc>
<arguments>
<arg>${LIQ_InterestPricingOption_IntentNoticeTimeInAdvance_Textfield}</arg>
<arg>${PricingOption_IntentNoticeTime}</arg>
</arguments>
<msg timestamp="20210408 19:11:26.538" level="INFO">Input= 12 is entered in element= JavaWindow("title:=Interest Pricing Option.*").JavaEdit("labeled_containers_path:=.*Intent Notice.*","attached text:=Time.*")</msg>
<status status="PASS" starttime="20210408 19:11:26.298" endtime="20210408 19:11:26.538"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:26.297" endtime="20210408 19:11:26.539"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PricingOption_12HrPeriodOption}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Enter</arg>
<arg>JavaWindow("title:=Interest Pricing Option.*").JavaRadioButton("labeled_containers_path:=.*Intent Notice.*","attached text:=${PricingOption_12HrPeriodOption}")</arg>
<arg>ON</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:26.603" endtime="20210408 19:11:26.604"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PricingOption_MaximumDrawdownAmount}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Enter</arg>
<arg>${LIQ_InterestPricingOption_MaximumDrawdownAmount_Textfield}</arg>
<arg>${PricingOption_MaximumDrawdownAmount}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:26.659" endtime="20210408 19:11:26.660"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PricingOption_MinimumDrawdownAmount}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Enter</arg>
<arg>${LIQ_InterestPricingOption_MinimumDrawdownAmount_Textfield}</arg>
<arg>${PricingOption_MinimumDrawdownAmount}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:26.711" endtime="20210408 19:11:26.711"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PricingOption_MinimumPaymentAmount}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Enter</arg>
<arg>${LIQ_InterestPricingOption_MinimumPaymentAmount_Textfield}</arg>
<arg>${PricingOption_MinimumPaymentAmount}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:26.763" endtime="20210408 19:11:26.764"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PricingOption_MinimumAmountMultiples}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Enter</arg>
<arg>${LIQ_InterestPricingOption_MinimumAmountMultiples_Textfield}</arg>
<arg>${PricingOption_MinimumAmountMultiples}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:26.814" endtime="20210408 19:11:26.815"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PricingOption_FeeOnLenderShareFunding}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Check Or Uncheck</arg>
<arg>${LIQ_InterestPricingOption_FeeOnLenderShareFunding_Checkbox}</arg>
<arg>${PricingOption_FeeOnLenderShareFunding}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:26.865" endtime="20210408 19:11:26.866"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PricingOption_CCY}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Select Combo Box Value</arg>
<arg>${LIQ_InterestPricingOption_CCY_List}</arg>
<arg>${PricingOption_CCY}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:26.919" endtime="20210408 19:11:26.920"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_InterestPricingOption_Ok_Button}</arg>
</arguments>
<msg timestamp="20210408 19:11:27.439" level="INFO">JavaWindow("title:=.*Interest Pricing Option.*").JavaButton("attached text:=OK") is clicked.</msg>
<status status="PASS" starttime="20210408 19:11:26.970" endtime="20210408 19:11:27.440"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Select String</arg>
<arg>${LIQ_PricingRules_AllowedPricingOption_JavaTree}</arg>
<arg>${PricingRule_Option}</arg>
</arguments>
<kw name="Mx LoanIQ Select String" library="LoanIQ">
<doc>| Usage |
Used to select the given string in JavaTree</doc>
<arguments>
<arg>${LIQ_PricingRules_AllowedPricingOption_JavaTree}</arg>
<arg>${PricingRule_Option}</arg>
</arguments>
<msg timestamp="20210408 19:11:31.770" level="INFO">Selected 'Libor Option' from 'JavaWindow("title:=Deal Notebook -.*").JavaTree("tagname:=Drill down to update","labeled_containers_path:=.*Allowed Pricing Options.*")' object.</msg>
<status status="PASS" starttime="20210408 19:11:27.558" endtime="20210408 19:11:31.770"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:27.556" endtime="20210408 19:11:31.771"></status>
</kw>
<kw name="Take Screenshot with text into Test Document" library="ReportMaker_Keywords">
<doc>This keyword is used to add screenshot with image filename as description into test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Deal Notebook - Pricing Rules Tab - Pricing Option</arg>
</arguments>
<kw name="Take Screenshot" library="Screenshot">
<doc>Takes a screenshot in JPEG format and embeds it into the log file.</doc>
<arguments>
<arg>${imageName}</arg>
</arguments>
<msg timestamp="20210408 19:11:32.084" level="INFO" html="yes">&lt;a href="Results/LoanIQ/TC01%20-%20Validate%20ARR%20Pricing%20Option%20at%20Deal%20Level%20and%20Add%20Libor%20Option___2021-04-08%2019-04-35.729/Deal%20Notebook%20-%20Pricing%20Rules%20Tab%20-%20Pricing%20Option_2.jpg"&gt;&lt;img src="Results/LoanIQ/TC01%20-%20Validate%20ARR%20Pricing%20Option%20at%20Deal%20Level%20and%20Add%20Libor%20Option___2021-04-08%2019-04-35.729/Deal%20Notebook%20-%20Pricing%20Rules%20Tab%20-%20Pricing%20Option_2.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210408 19:11:31.990" endtime="20210408 19:11:32.084"></status>
</kw>
<kw name="Get Latest File" library="ReportMaker">
<arguments>
<arg>${getfilePath}</arg>
</arguments>
<assign>
<var>${imagePath}</var>
</assign>
<msg timestamp="20210408 19:11:32.145" level="INFO">${imagePath} = C:\Git_Evergreen\transform_arr\Results\LoanIQ\TC01 - Validate ARR Pricing Option at Deal Level and Add Libor Option___2021-04-08 19-04-35.729\Deal Notebook - Pricing Rules Tab - Pricing Option_2.jpg</msg>
<status status="PASS" starttime="20210408 19:11:32.143" endtime="20210408 19:11:32.146"></status>
</kw>
<kw name="Put Screenshot With Text" library="ReportMaker">
<arguments>
<arg>${imagePath}</arg>
<arg>${imageName}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:32.199" endtime="20210408 19:11:32.217"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:31.825" endtime="20210408 19:11:32.217"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:52.226" endtime="20210408 19:11:32.218"></status>
</kw>
<status status="PASS" starttime="20210408 19:10:51.623" endtime="20210408 19:11:32.218"></status>
</kw>
<msg timestamp="20210408 19:11:32.218" level="INFO">Mx Execute Template With Multiple Data keyword passed for all the data</msg>
<status status="PASS" starttime="20210408 19:10:51.597" endtime="20210408 19:11:32.218"></status>
</kw>
<kw name="Handle Teardown" library="ReportMaker_Keywords" type="teardown">
<doc>This keyword is used to save the test execution document and concatenate test result to filename.
@author: cmcordero 15MAR2021 - initial create</doc>
<kw name="Save Document" library="ReportMaker">
<arguments>
<arg>${getFilePath}\\</arg>
<arg>${TESTNAME}_${TEST STATUS}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:32.272" endtime="20210408 19:11:32.436"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:32.219" endtime="20210408 19:11:32.437"></status>
</kw>
<doc>This test case validates ARR Pricing Option at Deal Level and will Add Libor Option
AAR Parameters should not be overridable</doc>
<tags>
<tag>ARR Deal Setup - CRED01</tag>
<tag>SC03_TC01</tag>
</tags>
<status status="PASS" starttime="20210408 19:04:35.190" endtime="20210408 19:11:32.437" critical="yes"></status>
</test>
<test id="s1-s1-s1-s1-s1-t2" name="TC02 - Validate ARR Interest Pricing Option at Facility Level - Term">
<kw name="Set Automation Suite" library="ReportMaker_Keywords" type="setup">
<doc>This keyword is used to setup test execution document directory, test name and test summary.
@author: cmcordero 15MAR2021 - initial create</doc>
<kw name="Set Report Header" library="ReportMaker">
<arguments>
<arg>${TESTNAME}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:32.492" endtime="20210408 19:11:32.518"></status>
</kw>
<kw name="Set Test summary" library="ReportMaker_Keywords">
<doc>This keyword is used to add test case [Documentation] as test summary into test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>${TEST DOCUMENTATION}</arg>
</arguments>
<kw name="Put Text" library="ReportMaker">
<arguments>
<arg>${TEST DOCUMENTATION}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:32.630" endtime="20210408 19:11:32.631"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:32.571" endtime="20210408 19:11:32.632"></status>
</kw>
<kw name="Set Directory" library="ReportMaker_Keywords">
<doc>This keyword is used to set directory of test execution document and screenshots.
@author: cmcordero 15MAR2021 - initial create</doc>
<kw name="Convert date to timestamp" library="ReportMaker_Keywords">
<doc>This keyword is used to convert the current date and time into usable timestamp.
@author: cmcordero 15MAR2021 - initial create</doc>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20210408 19:11:32.788" level="INFO">${date} = 2021-04-08 19:11:32.788</msg>
<status status="PASS" starttime="20210408 19:11:32.788" endtime="20210408 19:11:32.789"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${date}</arg>
<arg>:</arg>
<arg>-</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<msg timestamp="20210408 19:11:32.838" level="INFO">${timestamp} = 2021-04-08 19-11-32.788</msg>
<status status="PASS" starttime="20210408 19:11:32.838" endtime="20210408 19:11:32.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${timestamp}</arg>
</arguments>
<msg timestamp="20210408 19:11:32.890" level="INFO">${timestamp} = 2021-04-08 19-11-32.788</msg>
<status status="PASS" starttime="20210408 19:11:32.890" endtime="20210408 19:11:32.891"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:32.737" endtime="20210408 19:11:32.891"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${screenshot_Path}\\${Application}\\${TESTNAME}___${timestamp}</arg>
</arguments>
<assign>
<var>${filePath}</var>
</assign>
<msg timestamp="20210408 19:11:32.961" level="INFO">${filePath} = C:\Git_Evergreen\transform_arr\Results\LoanIQ\TC02 - Validate ARR Interest Pricing Option at Facility Level - Term___2021-04-08 19-11-32.788</msg>
<status status="PASS" starttime="20210408 19:11:32.961" endtime="20210408 19:11:32.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${getFilePath}</arg>
<arg>${filePath}</arg>
</arguments>
<msg timestamp="20210408 19:11:33.014" level="INFO">${getFilePath} = C:\Git_Evergreen\transform_arr\Results\LoanIQ\TC02 - Validate ARR Interest Pricing Option at Facility Level - Term___2021-04-08 19-11-32.788</msg>
<status status="PASS" starttime="20210408 19:11:33.013" endtime="20210408 19:11:33.014"></status>
</kw>
<kw name="Create Directory" library="OperatingSystem">
<doc>Creates the specified directory.</doc>
<arguments>
<arg>${getFilePath}</arg>
</arguments>
<msg timestamp="20210408 19:11:33.065" level="INFO" html="yes">Created directory '&lt;a href="file://C:\Git_Evergreen\transform_arr\Results\LoanIQ\TC02 - Validate ARR Interest Pricing Option at Facility Level - Term___2021-04-08 19-11-32.788"&gt;C:\Git_Evergreen\transform_arr\Results\LoanIQ\TC02 - Validate ARR Interest Pricing Option at Facility Level - Term___2021-04-08 19-11-32.788&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20210408 19:11:33.064" endtime="20210408 19:11:33.065"></status>
</kw>
<kw name="Set Screenshot Directory" library="Screenshot">
<doc>Sets the directory where screenshots are saved.</doc>
<arguments>
<arg>${getFilePath}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:33.115" endtime="20210408 19:11:33.116"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:32.684" endtime="20210408 19:11:33.116"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:32.440" endtime="20210408 19:11:33.116"></status>
</kw>
<kw name="Mx Execute Template With Multiple Data" library="GenericLib">
<doc>| Usage |
 This keyword is used to run template with multiple data.</doc>
<arguments>
<arg>Create a Facility</arg>
<arg>${ExcelPath}</arg>
<arg>${Facility_1}</arg>
<arg>CRED02_FacilitySetup</arg>
</arguments>
<kw name="Create a Facility" library="CRED01_DealSetUpWithoutOrigination">
<doc>This keyword is used to Create a New Facility
@author: jloretiz 04FEB2021 - initial create</doc>
<arguments>
<arg>OrderedDict([('rowid', '1'), ('Test_Case', 'ARR_Scenario3'), ('Facility_NamePrefix', 'ARR_TERM'), ('Deal_Name', ''), ('Facility_Name', 'ARR_TERM08042021160131'), ('Facility_AgreementDate', '17-Oct-2016'), ('Facility_EffectiveDate', '17-Oct-2016'), ('Facility_ExpiryDate', '17-Oct-2019'), ('Facility_MaturityDate', '17-Oct-2019'), ('Facility_Currency', 'USD'), ('Facility_Type', 'Term Loan'), ('Facility_ProposedCmtAmt', '300,000,000.00'), ('Facility_SubType', 'Committed'), ('Facility_ANSIID', ''), ('Facility_ServicingGroup', 'CANADA CORPORATE BANKING'), ('Facility_Customer', 'BNS CANADA CORPORATE BANKING'), ('Facility_SGLocation', 'Toronto, Canada'), ('Facility_AdjustmentSettings', 'Present'), ('Facility_AgreementDateAdjustment', '30'), ('Facility_EffectiveDateAdjustment', '30'), ('Facility_ExpiryDateAdjustment', '1095'), ('Facility_MaturityDateAdjustment', '1095'), ('Facility_RiskType', 'Demand Loan'), ('Facility_RiskTypeLimit', 'FLOAT'), ('Facility_LoanPurposeType', 'General'), ('Facility_GlobalLimit', 'FLOAT'), ('Facility_PricingOption', 'SOFR Daily Compounding W OPS Not Overridable'), ('Facility_ARRObservationPeriod', 'ON'), ('Facility_LookbackDays', '5'), ('Facility_LockoutDays', '0'), ('Facility_RateBasis', 'Actual/360'), ('Facility_CalculationMethod', 'Daily Rate With Compounding'), ('MIS_Code', 'Origination Type'), ('MIS_Value', 'Syndication- BNS Agent')])</arg>
</arguments>
<kw name="Report Sub Header" library="ReportMaker_Keywords">
<doc>This keyword is used to add given argument as sub header in test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Create a New Facility</arg>
</arguments>
<kw name="Set Report Sub Header" library="ReportMaker">
<arguments>
<arg>${SubHeader}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:33.301" endtime="20210408 19:11:33.303"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:33.247" endtime="20210408 19:11:33.304"></status>
</kw>
<kw name="Generate Name Test Data" library="GenericKeywords">
<doc>This keyword generates value that can be added to a variable to make it unique.
@author: jcdelacruz</doc>
<arguments>
<arg>&amp;{ExcelPath}[Facility_NamePrefix]</arg>
</arguments>
<assign>
<var>${FacilityName}</var>
</assign>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=%d%m%Y%H%M%S</arg>
</arguments>
<assign>
<var>${datetime.microsecond}</var>
</assign>
<msg timestamp="20210408 19:11:33.465" level="INFO">${datetime.microsecond} = 08042021191133</msg>
<status status="PASS" starttime="20210408 19:11:33.410" endtime="20210408 19:11:33.465"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${datetime.microsecond}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:33.516" endtime="20210408 19:11:33.517"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${NameTestData}</arg>
<arg>${datetime.microsecond}</arg>
</arguments>
<assign>
<var>${GeneratedName}</var>
</assign>
<msg timestamp="20210408 19:11:33.568" level="INFO">${GeneratedName} = ARR_TERM08042021191133</msg>
<status status="PASS" starttime="20210408 19:11:33.567" endtime="20210408 19:11:33.569"></status>
</kw>
<msg timestamp="20210408 19:11:33.569" level="INFO">${FacilityName} = ARR_TERM08042021191133</msg>
<status status="PASS" starttime="20210408 19:11:33.357" endtime="20210408 19:11:33.569"></status>
</kw>
<kw name="Read Data From Excel" library="GenericKeywords">
<doc>This keyword will be used for dynamically reading of Excel File supported by Python 3
@author: ritragel 25OCT2019 Initial Create
@update: hstone 16MAR2020 Code Optimization: Replaced Keyw</doc>
<arguments>
<arg>CRED01_DealSetup</arg>
<arg>Deal_Name</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${Deal_Name}</var>
</assign>
<kw name="Open Excel Document" library="ExcelLibrary">
<doc>Opens xlsx document file.</doc>
<arguments>
<arg>${sFilePath}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:33.680" endtime="20210408 19:11:33.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>(Read Data From Excel) sTestCaseColReference = '${sTestCaseColReference}'</arg>
</arguments>
<msg timestamp="20210408 19:11:33.774" level="INFO">(Read Data From Excel) sTestCaseColReference = 'rowid'</msg>
<status status="PASS" starttime="20210408 19:11:33.774" endtime="20210408 19:11:33.774"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${readAllData}'=='Y'</arg>
<arg>Read Data From All Column Rows</arg>
<arg>${sSheetName}</arg>
<arg>${sColumnName}</arg>
<arg>ELSE IF</arg>
<arg>'${readAllData}'=='N'</arg>
<arg>Read Data From Cell</arg>
<arg>${sSheetName}</arg>
<arg>${sColumnName}</arg>
<arg>${rowid}</arg>
<arg>${bTestCaseColumn}</arg>
<arg>${sTestCaseColReference}</arg>
</arguments>
<assign>
<var>${sData}</var>
</assign>
<kw name="Read Data From Cell" library="GenericKeywords">
<doc>This keyword will be used for reading data from single excel cell.
@author: hstone 16MAR2020 Initial Create</doc>
<arguments>
<arg>${sSheetName}</arg>
<arg>${sColumnName}</arg>
<arg>${rowid}</arg>
<arg>${bTestCaseColumn}</arg>
<arg>${sTestCaseColReference}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>(Read Data From Cell) sTestCaseColReference = '${sTestCaseColReference}'</arg>
</arguments>
<msg timestamp="20210408 19:11:33.878" level="INFO">(Read Data From Cell) sTestCaseColReference = 'rowid'</msg>
<status status="PASS" starttime="20210408 19:11:33.878" endtime="20210408 19:11:33.879"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${sTestCaseColReference}'=='None'</arg>
<arg>Get Column Header Index</arg>
<arg>${sSheetName}</arg>
<arg>${sColumnName}</arg>
<arg>${bTestCaseColumn}</arg>
<arg>ELSE</arg>
<arg>Get Column Header Index</arg>
<arg>${sSheetName}</arg>
<arg>${sColumnName}</arg>
<arg>${bTestCaseColumn}</arg>
<arg>${sTestCaseColReference}</arg>
</arguments>
<assign>
<var>${TestCaseHeader_Index}</var>
<var>${ColumnHeader_Index}</var>
</assign>
<kw name="Get Column Header Index" library="GenericKeywords">
<doc>This keyword is used to get the Column Header Index of Test_Case and given Column Name at the Excel Sheet.
@author: hstone 19FEB2020 Initial Create</doc>
<arguments>
<arg>${sSheetName}</arg>
<arg>${sColumnName}</arg>
<arg>${bTestCaseColumn}</arg>
<arg>${sTestCaseColReference}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>(Get Column Header Index) sTestCaseColReference = '${sTestCaseColReference}'</arg>
</arguments>
<msg timestamp="20210408 19:11:33.983" level="INFO">(Get Column Header Index) sTestCaseColReference = 'rowid'</msg>
<status status="PASS" starttime="20210408 19:11:33.983" endtime="20210408 19:11:33.984"></status>
</kw>
<kw name="Read Excel Row" library="ExcelLibrary">
<doc>Returns content of a row from the current sheet of the document.</doc>
<arguments>
<arg>1</arg>
<arg>sheet_name=${sSheetName}</arg>
</arguments>
<assign>
<var>${DataColumn_List}</var>
</assign>
<msg timestamp="20210408 19:11:34.044" level="INFO">${DataColumn_List} = ['rowid', 'Test_Case', 'Deal_NamePrefix', 'Deal_AliasPrefix', 'Deal_Name', 'Deal_Alias', 'Deal_EffectiveDate', 'Deal_AgreementDate', 'Deal_AdjustmentSettings', 'Deal_AgreementDateAdjustment', 'Deal_Ef...</msg>
<status status="PASS" starttime="20210408 19:11:34.043" endtime="20210408 19:11:34.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Data Set Sheet Name: '${sSheetName}'</arg>
</arguments>
<msg timestamp="20210408 19:11:34.100" level="INFO">Data Set Sheet Name: 'CRED01_DealSetup'</msg>
<status status="PASS" starttime="20210408 19:11:34.099" endtime="20210408 19:11:34.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Data Set Sheet Column Names: '${DataColumn_List}'</arg>
</arguments>
<msg timestamp="20210408 19:11:34.155" level="INFO">Data Set Sheet Column Names: '['rowid', 'Test_Case', 'Deal_NamePrefix', 'Deal_AliasPrefix', 'Deal_Name', 'Deal_Alias', 'Deal_EffectiveDate', 'Deal_AgreementDate', 'Deal_AdjustmentSettings', 'Deal_AgreementDateAdjustment', 'Deal_EffectiveDateAdjustment', 'Deal_Currency', 'Deal_DepartmentCode', 'Deal_Department', 'Deal_SalesGroup', 'Deal_AternateID', 'Deal_ANSIID', 'Deal_IsSoleLender', 'Deal_ClassificationCode', 'Deal_ClassificationDesc', 'Deal_AdminAgent', 'Deal_AdminAgentLocation', 'DealAdminAgent_SGAlias', 'DealAdminAgent_PreferredRI', 'DealAdminAgent_ServicingGroup', 'Deal_ProposedCmt', 'Deal_EarlyDiscussion', 'Deal_ExpenseCode', 'Deal_HolidayCalendarRemove', 'Deal_HolidayCalendarAdd', 'Deal_IsPricingOptionARR', 'Deal_PricingOption_CCY', 'Deal_PricingOption', 'PricingOption_IsARR', 'PricingOption_InitialFractionRate', 'PricingOption_RoundingDecimal', 'PricingOption_NonBusinessDayRule', 'PricingOption_BillNoOfDays', 'PricingOption_MatrixChangeAppMthd', 'PricingOption_RateChangeAppMthd', 'PricingOption_RACInitialFractionRate', 'PricingOption_RACRoundingDecimal', 'PricingOption_RACRoundingMethod', 'PricingOption_PercentOfRateFormulaUsage', 'PricingOption_RepricingNonBusinessDayRule', 'PricingOption_FeeOnLenderShareFunding', 'PricingOption_InterestDueUponPrincipalPayment', 'PricingOption_InterestDueUponRepricing', 'PricingOption_ReferenceBanksApply', 'PricingOption_IntentNoticeDaysInAdvance', 'PricingOption_IntentNoticeTime', 'PricingOption_12HrPeriodOption', 'PricingOption_MaximumDrawAmount', 'PricingOption_MinimumDrawAmount', 'PricingOption_MinimumPaymentAmount', 'PricingOption_MinimumAmountMultiples', 'PricingOption_BillBorrower', 'PricingOption_ARRObservationPeriod', 'PricingOption_LookbackDays', 'PricingOption_LockoutDays', 'PricingOption_RateBasis', 'PricingOption_CalculationMethod']'</msg>
<status status="PASS" starttime="20210408 19:11:34.154" endtime="20210408 19:11:34.155"></status>
</kw>
<kw name="Get Index From List" library="Collections">
<doc>Returns the index of the first occurrence of the ``value`` on the list.</doc>
<arguments>
<arg>${DataColumn_List}</arg>
<arg>${sTestCaseColReference}</arg>
</arguments>
<assign>
<var>${TestCaseHeaderName_Index}</var>
</assign>
<msg timestamp="20210408 19:11:34.210" level="INFO">${TestCaseHeaderName_Index} = 0</msg>
<status status="PASS" starttime="20210408 19:11:34.209" endtime="20210408 19:11:34.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Fetched Test Case Column Index : '${TestCaseHeaderName_Index}'</arg>
</arguments>
<msg timestamp="20210408 19:11:34.260" level="INFO">Fetched Test Case Column Index : '0'</msg>
<status status="PASS" starttime="20210408 19:11:34.260" endtime="20210408 19:11:34.261"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${TestCaseHeaderName_Index}&lt;0 and '${bTestCaseColumn}'=='False'</arg>
<arg>Set Variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>Evaluate</arg>
<arg>${TestCaseHeaderName_Index}+1</arg>
</arguments>
<assign>
<var>${TestCaseHeaderName_Index}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${TestCaseHeaderName_Index}+1</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:34.314" endtime="20210408 19:11:34.314"></status>
</kw>
<msg timestamp="20210408 19:11:34.315" level="INFO">${TestCaseHeaderName_Index} = 1</msg>
<status status="PASS" starttime="20210408 19:11:34.313" endtime="20210408 19:11:34.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Evaluated Test Case Column Index : '${TestCaseHeaderName_Index}'</arg>
</arguments>
<msg timestamp="20210408 19:11:34.366" level="INFO">Evaluated Test Case Column Index : '1'</msg>
<status status="PASS" starttime="20210408 19:11:34.366" endtime="20210408 19:11:34.366"></status>
</kw>
<kw name="Get Index From List" library="Collections">
<doc>Returns the index of the first occurrence of the ``value`` on the list.</doc>
<arguments>
<arg>${DataColumn_List}</arg>
<arg>${sColumnName}</arg>
</arguments>
<assign>
<var>${ColumnName_Index}</var>
</assign>
<msg timestamp="20210408 19:11:34.420" level="INFO">${ColumnName_Index} = 4</msg>
<status status="PASS" starttime="20210408 19:11:34.419" endtime="20210408 19:11:34.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Column Name Index : '${ColumnName_Index}'</arg>
</arguments>
<msg timestamp="20210408 19:11:34.472" level="INFO">Column Name Index : '4'</msg>
<status status="PASS" starttime="20210408 19:11:34.472" endtime="20210408 19:11:34.472"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${ColumnName_Index}&lt;0</arg>
<arg>Fail</arg>
<arg>'${sColumnName}' is not found at '${DataColumn_List}' Data Column Values.</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:34.525" endtime="20210408 19:11:34.526"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ColumnName_Index}+1</arg>
</arguments>
<assign>
<var>${ColumnName_Index}</var>
</assign>
<msg timestamp="20210408 19:11:34.577" level="INFO">${ColumnName_Index} = 5</msg>
<status status="PASS" starttime="20210408 19:11:34.576" endtime="20210408 19:11:34.577"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:33.931" endtime="20210408 19:11:34.578"></status>
</kw>
<msg timestamp="20210408 19:11:34.578" level="INFO">${TestCaseHeader_Index} = 1</msg>
<msg timestamp="20210408 19:11:34.578" level="INFO">${ColumnHeader_Index} = 5</msg>
<status status="PASS" starttime="20210408 19:11:33.929" endtime="20210408 19:11:34.578"></status>
</kw>
<kw name="Get Index of a Row Value using a Reference Header Index" library="GenericKeywords">
<doc>This keyword is used to get index of a row value using a reference header index
@author: hstone 19FEB2020 Initial Create</doc>
<arguments>
<arg>${sSheetName}</arg>
<arg>${rowid}</arg>
<arg>${TestCaseHeader_Index}</arg>
</arguments>
<assign>
<var>${RowId_Index}</var>
</assign>
<kw name="Read Excel Column" library="ExcelLibrary">
<doc>Returns content of a column from the current sheet of the document.</doc>
<arguments>
<arg>${sReferenceHeader_Index}</arg>
<arg>sheet_name=${sSheetName}</arg>
</arguments>
<assign>
<var>${DataRow_List}</var>
</assign>
<msg timestamp="20210408 19:11:34.682" level="INFO">${DataRow_List} = ['rowid', '1', '2']</msg>
<status status="PASS" starttime="20210408 19:11:34.681" endtime="20210408 19:11:34.682"></status>
</kw>
<kw name="Read Excel Column" library="ExcelLibrary">
<doc>Returns content of a column from the current sheet of the document.</doc>
<arguments>
<arg>1</arg>
<arg>sheet_name=${sSheetName}</arg>
</arguments>
<assign>
<var>${DataRowId_List}</var>
</assign>
<msg timestamp="20210408 19:11:34.848" level="INFO">${DataRowId_List} = ['rowid', '1', '2']</msg>
<status status="PASS" starttime="20210408 19:11:34.847" endtime="20210408 19:11:34.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Row Names Under Reference Header with Index '${sReferenceHeader_Index}' : '${DataRow_List}'</arg>
</arguments>
<msg timestamp="20210408 19:11:34.902" level="INFO">Row Names Under Reference Header with Index '1' : '['rowid', '1', '2']'</msg>
<status status="PASS" starttime="20210408 19:11:34.902" endtime="20210408 19:11:34.903"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>List Should Contain Value</arg>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<assign>
<var>${IsPresentInList}</var>
</assign>
<kw name="List Should Contain Value" library="Collections">
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<arguments>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:34.956" endtime="20210408 19:11:34.956"></status>
</kw>
<msg timestamp="20210408 19:11:34.956" level="INFO">${IsPresentInList} = True</msg>
<status status="PASS" starttime="20210408 19:11:34.954" endtime="20210408 19:11:34.957"></status>
</kw>
<kw name="Check if Row Value Exists on List as Int" library="GenericKeywords">
<doc>This keyword is used to check if value exists on a list as a string
@author: hstone 13APR2020 Initial Create</doc>
<arguments>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<assign>
<var>${IsPresentInList_As_Int}</var>
<var>${RowValue_Int}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${False}</arg>
</arguments>
<assign>
<var>${IsPresentInList}</var>
</assign>
<msg timestamp="20210408 19:11:35.063" level="INFO">${IsPresentInList} = False</msg>
<status status="PASS" starttime="20210408 19:11:35.062" endtime="20210408 19:11:35.063"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Convert To Integer</arg>
<arg>${sValue}</arg>
</arguments>
<assign>
<var>${IsIntConvPassed}</var>
</assign>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${sValue}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:35.117" endtime="20210408 19:11:35.117"></status>
</kw>
<msg timestamp="20210408 19:11:35.118" level="INFO">${IsIntConvPassed} = True</msg>
<status status="PASS" starttime="20210408 19:11:35.115" endtime="20210408 19:11:35.118"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${IsIntConvPassed}==${True}</arg>
<arg>Check if a String Exists as Int on a List</arg>
<arg>${lTarget_List}</arg>
<arg>${sValue}</arg>
</arguments>
<assign>
<var>${IsPresentInList}</var>
<var>${RowValue_Int}</var>
</assign>
<kw name="Check if a String Exists as Int on a List" library="GenericKeywords">
<doc>This keyword is used to check if a string exists as an integer on a list.
@author: hstone 13APR2020 Initial Create</doc>
<arguments>
<arg>${lTarget_List}</arg>
<arg>${sValue}</arg>
</arguments>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${sValue}</arg>
</arguments>
<assign>
<var>${Value_Int}</var>
</assign>
<msg timestamp="20210408 19:11:35.227" level="INFO">${Value_Int} = 1</msg>
<status status="PASS" starttime="20210408 19:11:35.227" endtime="20210408 19:11:35.228"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>List Should Contain Value</arg>
<arg>${lTarget_List}</arg>
<arg>${Value_Int}</arg>
</arguments>
<assign>
<var>${IsPresentInList}</var>
</assign>
<kw name="List Should Contain Value" library="Collections">
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<arguments>
<arg>${lTarget_List}</arg>
<arg>${Value_Int}</arg>
</arguments>
<msg timestamp="20210408 19:11:35.281" level="FAIL">[ rowid | 1 | 2 ] does not contain value '1'.</msg>
<status status="FAIL" starttime="20210408 19:11:35.281" endtime="20210408 19:11:35.330"></status>
</kw>
<msg timestamp="20210408 19:11:35.331" level="INFO">${IsPresentInList} = False</msg>
<status status="PASS" starttime="20210408 19:11:35.279" endtime="20210408 19:11:35.331"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:35.174" endtime="20210408 19:11:35.331"></status>
</kw>
<msg timestamp="20210408 19:11:35.331" level="INFO">${IsPresentInList} = False</msg>
<msg timestamp="20210408 19:11:35.332" level="INFO">${RowValue_Int} = 1</msg>
<status status="PASS" starttime="20210408 19:11:35.173" endtime="20210408 19:11:35.332"></status>
</kw>
<msg timestamp="20210408 19:11:35.332" level="INFO">${IsPresentInList_As_Int} = False</msg>
<msg timestamp="20210408 19:11:35.332" level="INFO">${RowValue_Int} = 1</msg>
<status status="PASS" starttime="20210408 19:11:35.008" endtime="20210408 19:11:35.332"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${IsPresentInList}==${True}</arg>
<arg>Get Index From List</arg>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
<arg>ELSE IF</arg>
<arg>${IsPresentInList_As_Int}==${True}</arg>
<arg>Get Index From List</arg>
<arg>${DataRow_List}</arg>
<arg>${RowValue_Int}</arg>
<arg>ELSE</arg>
<arg>Get Index From List</arg>
<arg>${DataRowId_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<assign>
<var>${DataRowName_Index}</var>
</assign>
<kw name="Get Index From List" library="Collections">
<doc>Returns the index of the first occurrence of the ``value`` on the list.</doc>
<arguments>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:35.384" endtime="20210408 19:11:35.385"></status>
</kw>
<msg timestamp="20210408 19:11:35.385" level="INFO">${DataRowName_Index} = 1</msg>
<status status="PASS" starttime="20210408 19:11:35.382" endtime="20210408 19:11:35.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Row Name Index for '${sRowValue}' : '${DataRowName_Index}'</arg>
</arguments>
<msg timestamp="20210408 19:11:35.437" level="INFO">Row Name Index for '1' : '1'</msg>
<status status="PASS" starttime="20210408 19:11:35.436" endtime="20210408 19:11:35.437"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${DataRowName_Index}&lt;0</arg>
<arg>Fail</arg>
<arg>'${sRowValue}' is not found at '${DataRow_List}' Data Row Values.</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:35.488" endtime="20210408 19:11:35.489"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${DataRowName_Index}+1</arg>
</arguments>
<assign>
<var>${DataRowValue_Index}</var>
</assign>
<msg timestamp="20210408 19:11:35.539" level="INFO">${DataRowValue_Index} = 2</msg>
<status status="PASS" starttime="20210408 19:11:35.539" endtime="20210408 19:11:35.539"></status>
</kw>
<msg timestamp="20210408 19:11:35.540" level="INFO">${RowId_Index} = 2</msg>
<status status="PASS" starttime="20210408 19:11:34.628" endtime="20210408 19:11:35.540"></status>
</kw>
<kw name="Read Excel Cell" library="ExcelLibrary">
<doc>Returns content of a cell.</doc>
<arguments>
<arg>${RowId_Index}</arg>
<arg>${ColumnHeader_Index}</arg>
<arg>${sSheetName}</arg>
</arguments>
<assign>
<var>${Cell_Data}</var>
</assign>
<msg timestamp="20210408 19:11:35.592" level="INFO">${Cell_Data} = ARR_LIBORSC308042021190438PNT</msg>
<status status="PASS" starttime="20210408 19:11:35.592" endtime="20210408 19:11:35.593"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:33.826" endtime="20210408 19:11:35.593"></status>
</kw>
<msg timestamp="20210408 19:11:35.593" level="INFO">${sData} = ARR_LIBORSC308042021190438PNT</msg>
<status status="PASS" starttime="20210408 19:11:33.824" endtime="20210408 19:11:35.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Excel Date Read from Excel : '${sData}'</arg>
</arguments>
<msg timestamp="20210408 19:11:35.647" level="INFO">Excel Date Read from Excel : 'ARR_LIBORSC308042021190438PNT'</msg>
<status status="PASS" starttime="20210408 19:11:35.646" endtime="20210408 19:11:35.647"></status>
</kw>
<kw name="Close Current Excel Document" library="ExcelLibrary">
<doc>Closes current document.</doc>
<status status="PASS" starttime="20210408 19:11:35.698" endtime="20210408 19:11:35.699"></status>
</kw>
<msg timestamp="20210408 19:11:35.699" level="INFO">${Deal_Name} = ARR_LIBORSC308042021190438PNT</msg>
<status status="PASS" starttime="20210408 19:11:33.626" endtime="20210408 19:11:35.699"></status>
</kw>
<kw name="Add New Facility" library="Facility_Notebook">
<doc>Goes to Facility Navigator from the Deal Notebook and adds a new Facility.</doc>
<arguments>
<arg>${Deal_Name}</arg>
<arg>${FacilityName}</arg>
<arg>&amp;{ExcelPath}[Facility_Type]</arg>
<arg>&amp;{ExcelPath}[Facility_ProposedCmtAmt]</arg>
<arg>&amp;{ExcelPath}[Facility_Currency]</arg>
<arg>&amp;{ExcelPath}[Facility_SubType]</arg>
<arg>&amp;{ExcelPath}[Facility_ANSIID]</arg>
</arguments>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sDeal_Name}</arg>
</arguments>
<assign>
<var>${Deal_Name}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:35.972" endtime="20210408 19:11:35.972"></status>
</kw>
<msg timestamp="20210408 19:11:35.973" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:11:35.970" endtime="20210408 19:11:35.973"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:11:36.195" level="INFO">${List_Argument_Excel_Value} = ['ARR_LIBORSC308042021190438PNT']</msg>
<status status="PASS" starttime="20210408 19:11:36.194" endtime="20210408 19:11:36.195"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:11:36.245" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:11:36.246" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:11:36.245" endtime="20210408 19:11:36.246"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:11:36.297" level="INFO">${Arg_User_Input} = ARR_LIBORSC308042021190438PNT</msg>
<status status="PASS" starttime="20210408 19:11:36.296" endtime="20210408 19:11:36.297"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:11:36.353" level="INFO">${Arg_User_Input} = ARR_LIBORSC308042021190438PNT</msg>
<status status="PASS" starttime="20210408 19:11:36.352" endtime="20210408 19:11:36.353"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:11:36.407" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:36.406" endtime="20210408 19:11:36.407"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:11:36.458" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:36.458" endtime="20210408 19:11:36.458"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:11:36.510" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:36.509" endtime="20210408 19:11:36.510"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:36.564" endtime="20210408 19:11:36.564"></status>
</kw>
<msg timestamp="20210408 19:11:36.565" level="INFO">${Extracted_Argument_Value} = ARR_LIBORSC308042021190438PNT</msg>
<status status="PASS" starttime="20210408 19:11:36.561" endtime="20210408 19:11:36.565"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:36.140" endtime="20210408 19:11:36.565"></status>
</kw>
<msg timestamp="20210408 19:11:36.565" level="INFO">${Extracted_Argument_Value} = ARR_LIBORSC308042021190438PNT</msg>
<status status="PASS" starttime="20210408 19:11:36.032" endtime="20210408 19:11:36.565"></status>
</kw>
<msg timestamp="20210408 19:11:36.566" level="INFO">${Deal_Name} = ARR_LIBORSC308042021190438PNT</msg>
<status status="PASS" starttime="20210408 19:11:35.913" endtime="20210408 19:11:36.566"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sFacility_Name}</arg>
<arg>${ARG_TYPE_UNIQUE_NAME_VALUE}</arg>
</arguments>
<assign>
<var>${Facility_Name}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:36.780" endtime="20210408 19:11:36.780"></status>
</kw>
<msg timestamp="20210408 19:11:36.780" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:11:36.778" endtime="20210408 19:11:36.780"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:11:36.989" level="INFO">${List_Argument_Excel_Value} = ['ARR_TERM08042021191133']</msg>
<status status="PASS" starttime="20210408 19:11:36.989" endtime="20210408 19:11:36.989"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:11:37.043" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:11:37.043" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:11:37.042" endtime="20210408 19:11:37.043"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:11:37.095" level="INFO">${Arg_User_Input} = ARR_TERM08042021191133</msg>
<status status="PASS" starttime="20210408 19:11:37.094" endtime="20210408 19:11:37.095"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:11:37.150" level="INFO">${Arg_User_Input} = ARR_TERM08042021191133</msg>
<status status="PASS" starttime="20210408 19:11:37.149" endtime="20210408 19:11:37.150"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:11:37.204" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:37.203" endtime="20210408 19:11:37.204"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:11:37.254" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:37.253" endtime="20210408 19:11:37.254"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:11:37.305" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:37.305" endtime="20210408 19:11:37.305"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:37.361" endtime="20210408 19:11:37.361"></status>
</kw>
<msg timestamp="20210408 19:11:37.361" level="INFO">${Extracted_Argument_Value} = ARR_TERM08042021191133</msg>
<status status="PASS" starttime="20210408 19:11:37.358" endtime="20210408 19:11:37.361"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:36.936" endtime="20210408 19:11:37.362"></status>
</kw>
<msg timestamp="20210408 19:11:37.362" level="INFO">${Extracted_Argument_Value} = ARR_TERM08042021191133</msg>
<status status="PASS" starttime="20210408 19:11:36.832" endtime="20210408 19:11:37.362"></status>
</kw>
<msg timestamp="20210408 19:11:37.362" level="INFO">${Facility_Name} = ARR_TERM08042021191133</msg>
<status status="PASS" starttime="20210408 19:11:36.727" endtime="20210408 19:11:37.362"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sFacility_Type}</arg>
</arguments>
<assign>
<var>${Facility_Type}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:37.568" endtime="20210408 19:11:37.569"></status>
</kw>
<msg timestamp="20210408 19:11:37.569" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:11:37.567" endtime="20210408 19:11:37.569"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:11:37.777" level="INFO">${List_Argument_Excel_Value} = ['Term Loan']</msg>
<status status="PASS" starttime="20210408 19:11:37.776" endtime="20210408 19:11:37.777"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:11:37.827" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:11:37.827" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:11:37.827" endtime="20210408 19:11:37.828"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:11:37.879" level="INFO">${Arg_User_Input} = TERM LOAN</msg>
<status status="PASS" starttime="20210408 19:11:37.878" endtime="20210408 19:11:37.879"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:11:37.931" level="INFO">${Arg_User_Input} = TERM LOAN</msg>
<status status="PASS" starttime="20210408 19:11:37.930" endtime="20210408 19:11:37.931"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:11:38.093" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:38.092" endtime="20210408 19:11:38.093"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:11:38.151" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:38.150" endtime="20210408 19:11:38.151"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:11:38.205" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:38.204" endtime="20210408 19:11:38.205"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:38.259" endtime="20210408 19:11:38.260"></status>
</kw>
<msg timestamp="20210408 19:11:38.260" level="INFO">${Extracted_Argument_Value} = Term Loan</msg>
<status status="PASS" starttime="20210408 19:11:38.256" endtime="20210408 19:11:38.260"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:37.725" endtime="20210408 19:11:38.260"></status>
</kw>
<msg timestamp="20210408 19:11:38.261" level="INFO">${Extracted_Argument_Value} = Term Loan</msg>
<status status="PASS" starttime="20210408 19:11:37.619" endtime="20210408 19:11:38.261"></status>
</kw>
<msg timestamp="20210408 19:11:38.261" level="INFO">${Facility_Type} = Term Loan</msg>
<status status="PASS" starttime="20210408 19:11:37.515" endtime="20210408 19:11:38.262"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sFacility_Subtype}</arg>
</arguments>
<assign>
<var>${Facility_Subtype}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:38.472" endtime="20210408 19:11:38.472"></status>
</kw>
<msg timestamp="20210408 19:11:38.473" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:11:38.470" endtime="20210408 19:11:38.473"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:11:38.680" level="INFO">${List_Argument_Excel_Value} = ['Committed']</msg>
<status status="PASS" starttime="20210408 19:11:38.679" endtime="20210408 19:11:38.680"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:11:38.733" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:11:38.733" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:11:38.732" endtime="20210408 19:11:38.733"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:11:38.785" level="INFO">${Arg_User_Input} = COMMITTED</msg>
<status status="PASS" starttime="20210408 19:11:38.784" endtime="20210408 19:11:38.785"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:11:38.836" level="INFO">${Arg_User_Input} = COMMITTED</msg>
<status status="PASS" starttime="20210408 19:11:38.835" endtime="20210408 19:11:38.836"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:11:38.891" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:38.890" endtime="20210408 19:11:38.891"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:11:38.943" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:38.943" endtime="20210408 19:11:38.944"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:11:38.996" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:38.996" endtime="20210408 19:11:38.996"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:39.050" endtime="20210408 19:11:39.051"></status>
</kw>
<msg timestamp="20210408 19:11:39.051" level="INFO">${Extracted_Argument_Value} = Committed</msg>
<status status="PASS" starttime="20210408 19:11:39.048" endtime="20210408 19:11:39.051"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:38.628" endtime="20210408 19:11:39.051"></status>
</kw>
<msg timestamp="20210408 19:11:39.052" level="INFO">${Extracted_Argument_Value} = Committed</msg>
<status status="PASS" starttime="20210408 19:11:38.523" endtime="20210408 19:11:39.052"></status>
</kw>
<msg timestamp="20210408 19:11:39.052" level="INFO">${Facility_Subtype} = Committed</msg>
<status status="PASS" starttime="20210408 19:11:38.417" endtime="20210408 19:11:39.052"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sFacility_CmtAmt}</arg>
</arguments>
<assign>
<var>${Facility_CmtAmt}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:39.265" endtime="20210408 19:11:39.266"></status>
</kw>
<msg timestamp="20210408 19:11:39.266" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:11:39.264" endtime="20210408 19:11:39.266"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:11:39.475" level="INFO">${List_Argument_Excel_Value} = ['300,000,000.00']</msg>
<status status="PASS" starttime="20210408 19:11:39.474" endtime="20210408 19:11:39.475"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:11:39.527" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:11:39.527" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:11:39.526" endtime="20210408 19:11:39.527"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:11:39.579" level="INFO">${Arg_User_Input} = 300,000,000.00</msg>
<status status="PASS" starttime="20210408 19:11:39.578" endtime="20210408 19:11:39.579"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:11:39.630" level="INFO">${Arg_User_Input} = 300,000,000.00</msg>
<status status="PASS" starttime="20210408 19:11:39.630" endtime="20210408 19:11:39.630"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:11:39.704" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:39.703" endtime="20210408 19:11:39.704"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:11:39.774" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:39.774" endtime="20210408 19:11:39.774"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:11:39.826" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:39.825" endtime="20210408 19:11:39.826"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:39.882" endtime="20210408 19:11:39.882"></status>
</kw>
<msg timestamp="20210408 19:11:39.883" level="INFO">${Extracted_Argument_Value} = 300,000,000.00</msg>
<status status="PASS" starttime="20210408 19:11:39.880" endtime="20210408 19:11:39.883"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:39.424" endtime="20210408 19:11:39.883"></status>
</kw>
<msg timestamp="20210408 19:11:39.884" level="INFO">${Extracted_Argument_Value} = 300,000,000.00</msg>
<status status="PASS" starttime="20210408 19:11:39.319" endtime="20210408 19:11:39.884"></status>
</kw>
<msg timestamp="20210408 19:11:39.884" level="INFO">${Facility_CmtAmt} = 300,000,000.00</msg>
<status status="PASS" starttime="20210408 19:11:39.213" endtime="20210408 19:11:39.885"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sFacility_Currency}</arg>
</arguments>
<assign>
<var>${Facility_Currency}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:40.108" endtime="20210408 19:11:40.108"></status>
</kw>
<msg timestamp="20210408 19:11:40.108" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:11:40.106" endtime="20210408 19:11:40.109"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:11:40.312" level="INFO">${List_Argument_Excel_Value} = ['USD']</msg>
<status status="PASS" starttime="20210408 19:11:40.311" endtime="20210408 19:11:40.312"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:11:40.362" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:11:40.363" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:11:40.362" endtime="20210408 19:11:40.363"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:11:40.412" level="INFO">${Arg_User_Input} = USD</msg>
<status status="PASS" starttime="20210408 19:11:40.412" endtime="20210408 19:11:40.412"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:11:40.466" level="INFO">${Arg_User_Input} = USD</msg>
<status status="PASS" starttime="20210408 19:11:40.466" endtime="20210408 19:11:40.466"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:11:40.623" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:40.623" endtime="20210408 19:11:40.623"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:11:40.675" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:40.675" endtime="20210408 19:11:40.675"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:11:40.727" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:40.726" endtime="20210408 19:11:40.727"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:40.782" endtime="20210408 19:11:40.783"></status>
</kw>
<msg timestamp="20210408 19:11:40.783" level="INFO">${Extracted_Argument_Value} = USD</msg>
<status status="PASS" starttime="20210408 19:11:40.780" endtime="20210408 19:11:40.783"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:40.260" endtime="20210408 19:11:40.783"></status>
</kw>
<msg timestamp="20210408 19:11:40.784" level="INFO">${Extracted_Argument_Value} = USD</msg>
<status status="PASS" starttime="20210408 19:11:40.162" endtime="20210408 19:11:40.784"></status>
</kw>
<msg timestamp="20210408 19:11:40.784" level="INFO">${Facility_Currency} = USD</msg>
<status status="PASS" starttime="20210408 19:11:40.053" endtime="20210408 19:11:40.784"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sFacility_ANSIID}</arg>
</arguments>
<assign>
<var>${Facility_ANSIID}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:41.002" endtime="20210408 19:11:41.003"></status>
</kw>
<msg timestamp="20210408 19:11:41.003" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:11:41.001" endtime="20210408 19:11:41.003"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:11:41.226" level="INFO">${List_Argument_Excel_Value} = ['']</msg>
<status status="PASS" starttime="20210408 19:11:41.225" endtime="20210408 19:11:41.226"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:11:41.280" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:11:41.280" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:11:41.279" endtime="20210408 19:11:41.280"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:11:41.349" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:11:41.349" endtime="20210408 19:11:41.349"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:11:41.425" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:11:41.425" endtime="20210408 19:11:41.425"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:11:41.481" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:41.480" endtime="20210408 19:11:41.481"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:11:41.534" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:41.533" endtime="20210408 19:11:41.534"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:11:41.590" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:11:41.590" endtime="20210408 19:11:41.590"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:41.657" endtime="20210408 19:11:41.657"></status>
</kw>
<msg timestamp="20210408 19:11:41.657" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:11:41.655" endtime="20210408 19:11:41.658"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:41.169" endtime="20210408 19:11:41.658"></status>
</kw>
<msg timestamp="20210408 19:11:41.658" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:11:41.066" endtime="20210408 19:11:41.658"></status>
</kw>
<msg timestamp="20210408 19:11:41.658" level="INFO">${Facility_ANSIID} = </msg>
<status status="PASS" starttime="20210408 19:11:40.948" endtime="20210408 19:11:41.658"></status>
</kw>
<kw name="Mx LoanIQ Activate Window" library="LoanIQ">
<doc>| Usage |
To activate existing window if present.</doc>
<arguments>
<arg>${LIQ_DealNotebook_Window}</arg>
</arguments>
<msg timestamp="20210408 19:11:41.784" level="INFO">Window : JavaWindow("title:=Deal Notebook -.*","displayed:=1") is activated</msg>
<status status="PASS" starttime="20210408 19:11:41.715" endtime="20210408 19:11:41.785"></status>
</kw>
<kw name="Mx LoanIQ Select" library="LoanIQ">
<doc>| Usage |
Used to select the element.</doc>
<arguments>
<arg>${LIQ_DealNotebook_Options_Facilities}</arg>
</arguments>
<msg timestamp="20210408 19:11:42.557" level="INFO">JavaWindow("title:=Deal Notebook.*").JavaMenu("label:=Options").JavaMenu("label:=Facilities...") is selected with data: NONE</msg>
<status status="PASS" starttime="20210408 19:11:41.835" endtime="20210408 19:11:42.557"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Wait Until Keyword Succeeds</arg>
<arg>3x</arg>
<arg>5s</arg>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_FacilityNavigator_Window}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<assign>
<var>${Status}</var>
</assign>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3x</arg>
<arg>5s</arg>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_FacilityNavigator_Window}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_FacilityNavigator_Window}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:11:42.987" level="INFO">Locator = 'JavaWindow("title:=Facility Navigator -.*")' exists.</msg>
<status status="PASS" starttime="20210408 19:11:42.639" endtime="20210408 19:11:42.987"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:42.636" endtime="20210408 19:11:42.988"></status>
</kw>
<msg timestamp="20210408 19:11:42.988" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20210408 19:11:42.634" endtime="20210408 19:11:42.988"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${Status}'=='${TRUE}'</arg>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>JavaWindow("title:=Facility Navigator - ${Deal_Name} in ${Facility_Currency}")</arg>
<arg>title%Facility Navigator - ${Deal_Name} in ${Facility_Currency}</arg>
</arguments>
<assign>
<var>${Verify}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Status}'=='${TRUE}'</arg>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>JavaWindow("title:=Facility Navigator - ${Deal_Name} in ${Facility_Currency}")</arg>
<arg>title%Facility Navigator - ${Deal_Name} in ${Facility_Currency}</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>JavaWindow("title:=Facility Navigator - ${Deal_Name} in ${Facility_Currency}")</arg>
<arg>title%Facility Navigator - ${Deal_Name} in ${Facility_Currency}</arg>
</arguments>
<msg timestamp="20210408 19:11:43.167" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:11:43.064" endtime="20210408 19:11:43.168"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:43.063" endtime="20210408 19:11:43.168"></status>
</kw>
<msg timestamp="20210408 19:11:43.168" level="INFO">${Verify} = True</msg>
<status status="PASS" starttime="20210408 19:11:43.061" endtime="20210408 19:11:43.168"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Verify}'=='${TRUE}'</arg>
<arg>Run Keywords</arg>
<arg>Log</arg>
<arg>Facility Navigator Name verified from Deal Name</arg>
<arg>AND</arg>
<arg>Mx LoanIQ Activate Window</arg>
<arg>${LIQ_FacilityNavigator_Window}</arg>
<arg>AND</arg>
<arg>Mx LoanIQ Click</arg>
<arg>${LIQ_FacilityNavigator_Add_Button}</arg>
<arg>AND</arg>
<arg>Run Keyword If</arg>
<arg>'${Facility_Name}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Enter</arg>
<arg>${LIQ_FacilitySelect_FacilityName_Text}</arg>
<arg>${Facility_Name}</arg>
<arg>AND</arg>
<arg>Run Keyword If</arg>
<arg>'${Facility_Type}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Select Combo Box Value</arg>
<arg>${LIQ_FacilitySelect_FacilityType_Combobox}</arg>
<arg>${Facility_Type}</arg>
<arg>AND</arg>
<arg>Run Keyword If</arg>
<arg>'${Facility_Subtype}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Select Combo Box Value</arg>
<arg>${LIQ_FacilitySelect_FacilitySubType_Combobox}</arg>
<arg>${Facility_Subtype}</arg>
<arg>AND</arg>
<arg>Run Keyword If</arg>
<arg>'${Facility_CmtAmt}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Enter</arg>
<arg>${LIQ_FacilitySelect_ProposedCmt_Textfield}</arg>
<arg>${Facility_CmtAmt}</arg>
<arg>AND</arg>
<arg>Run Keyword If</arg>
<arg>'${Facility_ANSIID}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Enter</arg>
<arg>${LIQ_FacilitySelect_ANSI_Textfield}</arg>
<arg>${Facility_ANSIID}</arg>
<arg>AND</arg>
<arg>Run Keyword If</arg>
<arg>'${Facility_Currency}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Select Combo Box Value</arg>
<arg>${LIQ_FacilitySelect_Currency_List}</arg>
<arg>${Facility_Currency}</arg>
<arg>AND</arg>
<arg>Validate Loan IQ Details</arg>
<arg>${Facility_Name}</arg>
<arg>${LIQ_FacilitySelect_FacilityName_Text}</arg>
<arg>AND</arg>
<arg>Validate Loan IQ Details</arg>
<arg>${Facility_Type}</arg>
<arg>${LIQ_FacilitySelect_FacilityType_Combobox}</arg>
<arg>AND</arg>
<arg>Validate Loan IQ Details</arg>
<arg>${Facility_Subtype}</arg>
<arg>${LIQ_FacilitySelect_FacilitySubType_Combobox}</arg>
<arg>AND</arg>
<arg>Validate Loan IQ Details</arg>
<arg>${Facility_CmtAmt}</arg>
<arg>${LIQ_FacilitySelect_ProposedCmt_Textfield}</arg>
<arg>AND</arg>
<arg>Validate Loan IQ Details</arg>
<arg>${Facility_Currency}</arg>
<arg>${LIQ_FacilitySelect_Currency_List}</arg>
<arg>AND</arg>
<arg>Take Screenshot with text into test document</arg>
<arg>Facility Select Window</arg>
<arg>AND</arg>
<arg>Mx LoanIQ Click</arg>
<arg>${LIQ_FacilitySelect_OK_Button}</arg>
<arg>AND</arg>
<arg>Validate Facility Window Summary Tab Details</arg>
<arg>${Facility_Name}</arg>
<arg>${Facility_CmtAmt}</arg>
</arguments>
<kw name="Run Keywords" library="BuiltIn">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>Log</arg>
<arg>Facility Navigator Name verified from Deal Name</arg>
<arg>AND</arg>
<arg>Mx LoanIQ Activate Window</arg>
<arg>${LIQ_FacilityNavigator_Window}</arg>
<arg>AND</arg>
<arg>Mx LoanIQ Click</arg>
<arg>${LIQ_FacilityNavigator_Add_Button}</arg>
<arg>AND</arg>
<arg>Run Keyword If</arg>
<arg>'${Facility_Name}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Enter</arg>
<arg>${LIQ_FacilitySelect_FacilityName_Text}</arg>
<arg>${Facility_Name}</arg>
<arg>AND</arg>
<arg>Run Keyword If</arg>
<arg>'${Facility_Type}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Select Combo Box Value</arg>
<arg>${LIQ_FacilitySelect_FacilityType_Combobox}</arg>
<arg>${Facility_Type}</arg>
<arg>AND</arg>
<arg>Run Keyword If</arg>
<arg>'${Facility_Subtype}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Select Combo Box Value</arg>
<arg>${LIQ_FacilitySelect_FacilitySubType_Combobox}</arg>
<arg>${Facility_Subtype}</arg>
<arg>AND</arg>
<arg>Run Keyword If</arg>
<arg>'${Facility_CmtAmt}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Enter</arg>
<arg>${LIQ_FacilitySelect_ProposedCmt_Textfield}</arg>
<arg>${Facility_CmtAmt}</arg>
<arg>AND</arg>
<arg>Run Keyword If</arg>
<arg>'${Facility_ANSIID}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Enter</arg>
<arg>${LIQ_FacilitySelect_ANSI_Textfield}</arg>
<arg>${Facility_ANSIID}</arg>
<arg>AND</arg>
<arg>Run Keyword If</arg>
<arg>'${Facility_Currency}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Select Combo Box Value</arg>
<arg>${LIQ_FacilitySelect_Currency_List}</arg>
<arg>${Facility_Currency}</arg>
<arg>AND</arg>
<arg>Validate Loan IQ Details</arg>
<arg>${Facility_Name}</arg>
<arg>${LIQ_FacilitySelect_FacilityName_Text}</arg>
<arg>AND</arg>
<arg>Validate Loan IQ Details</arg>
<arg>${Facility_Type}</arg>
<arg>${LIQ_FacilitySelect_FacilityType_Combobox}</arg>
<arg>AND</arg>
<arg>Validate Loan IQ Details</arg>
<arg>${Facility_Subtype}</arg>
<arg>${LIQ_FacilitySelect_FacilitySubType_Combobox}</arg>
<arg>AND</arg>
<arg>Validate Loan IQ Details</arg>
<arg>${Facility_CmtAmt}</arg>
<arg>${LIQ_FacilitySelect_ProposedCmt_Textfield}</arg>
<arg>AND</arg>
<arg>Validate Loan IQ Details</arg>
<arg>${Facility_Currency}</arg>
<arg>${LIQ_FacilitySelect_Currency_List}</arg>
<arg>AND</arg>
<arg>Take Screenshot with text into test document</arg>
<arg>Facility Select Window</arg>
<arg>AND</arg>
<arg>Mx LoanIQ Click</arg>
<arg>${LIQ_FacilitySelect_OK_Button}</arg>
<arg>AND</arg>
<arg>Validate Facility Window Summary Tab Details</arg>
<arg>${Facility_Name}</arg>
<arg>${Facility_CmtAmt}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Facility Navigator Name verified from Deal Name</arg>
</arguments>
<msg timestamp="20210408 19:11:43.241" level="INFO">Facility Navigator Name verified from Deal Name</msg>
<status status="PASS" starttime="20210408 19:11:43.240" endtime="20210408 19:11:43.241"></status>
</kw>
<kw name="Mx LoanIQ Activate Window" library="LoanIQ">
<doc>| Usage |
To activate existing window if present.</doc>
<arguments>
<arg>${LIQ_FacilityNavigator_Window}</arg>
</arguments>
<msg timestamp="20210408 19:11:43.358" level="INFO">Window : JavaWindow("title:=Facility Navigator -.*") is activated</msg>
<status status="PASS" starttime="20210408 19:11:43.243" endtime="20210408 19:11:43.358"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_FacilityNavigator_Add_Button}</arg>
</arguments>
<msg timestamp="20210408 19:11:44.797" level="INFO">JavaWindow("title:=Facility Navigator.*").JavaButton("label:=Add") is clicked.</msg>
<status status="PASS" starttime="20210408 19:11:43.361" endtime="20210408 19:11:44.798"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Facility_Name}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Enter</arg>
<arg>${LIQ_FacilitySelect_FacilityName_Text}</arg>
<arg>${Facility_Name}</arg>
</arguments>
<kw name="Mx LoanIQ Enter" library="LoanIQ">
<doc>| Usage |
To enter the data to the element specified by 'locator'.</doc>
<arguments>
<arg>${LIQ_FacilitySelect_FacilityName_Text}</arg>
<arg>${Facility_Name}</arg>
</arguments>
<msg timestamp="20210408 19:11:44.994" level="INFO">Input= ARR_TERM08042021191133 is entered in element= JavaWindow("title:=Facility Select").JavaEdit("attached text:=Facility Name:")</msg>
<status status="PASS" starttime="20210408 19:11:44.802" endtime="20210408 19:11:44.995"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:44.801" endtime="20210408 19:11:44.995"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Facility_Type}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Select Combo Box Value</arg>
<arg>${LIQ_FacilitySelect_FacilityType_Combobox}</arg>
<arg>${Facility_Type}</arg>
</arguments>
<kw name="Mx LoanIQ Select Combo Box Value" library="LoanIQ">
<doc>| Usage |
Used to select data in JavaList</doc>
<arguments>
<arg>${LIQ_FacilitySelect_FacilityType_Combobox}</arg>
<arg>${Facility_Type}</arg>
</arguments>
<msg timestamp="20210408 19:11:45.385" level="INFO">Selected value = 'Term Loan' from Combo box object = 'JavaWindow("title:=Facility Select").JavaList("tagname:=Combo","attached text:=")'.</msg>
<status status="PASS" starttime="20210408 19:11:44.999" endtime="20210408 19:11:45.385"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:44.997" endtime="20210408 19:11:45.386"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Facility_Subtype}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Select Combo Box Value</arg>
<arg>${LIQ_FacilitySelect_FacilitySubType_Combobox}</arg>
<arg>${Facility_Subtype}</arg>
</arguments>
<kw name="Mx LoanIQ Select Combo Box Value" library="LoanIQ">
<doc>| Usage |
Used to select data in JavaList</doc>
<arguments>
<arg>${LIQ_FacilitySelect_FacilitySubType_Combobox}</arg>
<arg>${Facility_Subtype}</arg>
</arguments>
<msg timestamp="20210408 19:11:45.503" level="INFO">Selected value = 'Committed' from Combo box object = 'JavaWindow("title:=Facility Select").JavaList("attached text:=Facility Subtype:")'.</msg>
<status status="PASS" starttime="20210408 19:11:45.389" endtime="20210408 19:11:45.503"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:45.387" endtime="20210408 19:11:45.503"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Facility_CmtAmt}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Enter</arg>
<arg>${LIQ_FacilitySelect_ProposedCmt_Textfield}</arg>
<arg>${Facility_CmtAmt}</arg>
</arguments>
<kw name="Mx LoanIQ Enter" library="LoanIQ">
<doc>| Usage |
To enter the data to the element specified by 'locator'.</doc>
<arguments>
<arg>${LIQ_FacilitySelect_ProposedCmt_Textfield}</arg>
<arg>${Facility_CmtAmt}</arg>
</arguments>
<msg timestamp="20210408 19:11:45.678" level="INFO">Input= 300,000,000.00 is entered in element= JavaWindow("title:=Facility Select").JavaEdit("tagname:=Text","index:=4")</msg>
<status status="PASS" starttime="20210408 19:11:45.506" endtime="20210408 19:11:45.678"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:45.505" endtime="20210408 19:11:45.678"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Facility_ANSIID}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Enter</arg>
<arg>${LIQ_FacilitySelect_ANSI_Textfield}</arg>
<arg>${Facility_ANSIID}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:45.681" endtime="20210408 19:11:45.682"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Facility_Currency}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Select Combo Box Value</arg>
<arg>${LIQ_FacilitySelect_Currency_List}</arg>
<arg>${Facility_Currency}</arg>
</arguments>
<kw name="Mx LoanIQ Select Combo Box Value" library="LoanIQ">
<doc>| Usage |
Used to select data in JavaList</doc>
<arguments>
<arg>${LIQ_FacilitySelect_Currency_List}</arg>
<arg>${Facility_Currency}</arg>
</arguments>
<msg timestamp="20210408 19:11:45.789" level="INFO">Selected value = 'USD' from Combo box object = 'JavaWindow("title:=Facility Select").JavaList("attached text:=Currency:")'.</msg>
<status status="PASS" starttime="20210408 19:11:45.685" endtime="20210408 19:11:45.790"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:45.683" endtime="20210408 19:11:45.790"></status>
</kw>
<kw name="Validate Loan IQ Details" library="GenericKeywords">
<doc>This keyword validates the displayed Loan IQ details in the application vs the data in excel
@author: jcdelacruz/ghabal
@update: bernchua Added property 'value' in Mx LoanIQ Get Data keyword.
@update: jdelacru 13DEC2019 - Changed the argument in getting value for UI</doc>
<arguments>
<arg>${Facility_Name}</arg>
<arg>${LIQ_FacilitySelect_FacilityName_Text}</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Get Data</arg>
<arg>${Value_fromUI}</arg>
<arg>value%Value_fromUI</arg>
</arguments>
<assign>
<var>${Value_fromUI}</var>
</assign>
<kw name="Mx LoanIQ Get Data" library="LoanIQ">
<doc>| Usage |
Used to returns the text of object identified by `locator'</doc>
<arguments>
<arg>${Value_fromUI}</arg>
<arg>value%Value_fromUI</arg>
</arguments>
<msg timestamp="20210408 19:11:45.925" level="INFO">Fetching value from object: JavaWindow("title:=Facility Select").JavaEdit("attached text:=Facility Name:") 
 Value = : ARR_TERM08042021191133</msg>
<msg timestamp="20210408 19:11:45.925" level="INFO">${Value_fromUI} = ARR_TERM08042021191133</msg>
<status status="PASS" starttime="20210408 19:11:45.854" endtime="20210408 19:11:45.925"></status>
</kw>
<msg timestamp="20210408 19:11:45.926" level="INFO">${Value_fromUI} = ARR_TERM08042021191133</msg>
<status status="PASS" starttime="20210408 19:11:45.852" endtime="20210408 19:11:45.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Value_fromExcel} - This is the data retrieved from Excel Sheet</arg>
</arguments>
<msg timestamp="20210408 19:11:45.985" level="INFO">ARR_TERM08042021191133 - This is the data retrieved from Excel Sheet</msg>
<status status="PASS" starttime="20210408 19:11:45.985" endtime="20210408 19:11:45.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Value_fromUI} - This is the data displayed in the UI/application</arg>
</arguments>
<msg timestamp="20210408 19:11:46.041" level="INFO">ARR_TERM08042021191133 - This is the data displayed in the UI/application</msg>
<status status="PASS" starttime="20210408 19:11:46.040" endtime="20210408 19:11:46.041"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:46.095" endtime="20210408 19:11:46.095"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:46.093" endtime="20210408 19:11:46.096"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Should Be Equal</arg>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:46.165" endtime="20210408 19:11:46.165"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:46.162" endtime="20210408 19:11:46.165"></status>
</kw>
<msg timestamp="20210408 19:11:46.166" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:11:46.161" endtime="20210408 19:11:46.166"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>"${Value_fromExcel}" - data retrieved from Excel Sheet MATCHES "${Value_fromUI}" - the data displayed in the UI/application</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>"${Value_fromExcel}" - data retrieved from Excel Sheet DOES NOT MATCH "${Value_fromUI}" - the data displayed in the UI/application</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"${Value_fromExcel}" - data retrieved from Excel Sheet MATCHES "${Value_fromUI}" - the data displayed in the UI/application</arg>
</arguments>
<msg timestamp="20210408 19:11:46.220" level="INFO">"ARR_TERM08042021191133" - data retrieved from Excel Sheet MATCHES "ARR_TERM08042021191133" - the data displayed in the UI/application</msg>
<status status="PASS" starttime="20210408 19:11:46.220" endtime="20210408 19:11:46.221"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:46.218" endtime="20210408 19:11:46.221"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:45.791" endtime="20210408 19:11:46.221"></status>
</kw>
<kw name="Validate Loan IQ Details" library="GenericKeywords">
<doc>This keyword validates the displayed Loan IQ details in the application vs the data in excel
@author: jcdelacruz/ghabal
@update: bernchua Added property 'value' in Mx LoanIQ Get Data keyword.
@update: jdelacru 13DEC2019 - Changed the argument in getting value for UI</doc>
<arguments>
<arg>${Facility_Type}</arg>
<arg>${LIQ_FacilitySelect_FacilityType_Combobox}</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Get Data</arg>
<arg>${Value_fromUI}</arg>
<arg>value%Value_fromUI</arg>
</arguments>
<assign>
<var>${Value_fromUI}</var>
</assign>
<kw name="Mx LoanIQ Get Data" library="LoanIQ">
<doc>| Usage |
Used to returns the text of object identified by `locator'</doc>
<arguments>
<arg>${Value_fromUI}</arg>
<arg>value%Value_fromUI</arg>
</arguments>
<msg timestamp="20210408 19:11:46.349" level="INFO">Fetching value from object: JavaWindow("title:=Facility Select").JavaList("tagname:=Combo","attached text:=") 
 Value = : Term Loan</msg>
<msg timestamp="20210408 19:11:46.350" level="INFO">${Value_fromUI} = Term Loan</msg>
<status status="PASS" starttime="20210408 19:11:46.276" endtime="20210408 19:11:46.350"></status>
</kw>
<msg timestamp="20210408 19:11:46.350" level="INFO">${Value_fromUI} = Term Loan</msg>
<status status="PASS" starttime="20210408 19:11:46.274" endtime="20210408 19:11:46.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Value_fromExcel} - This is the data retrieved from Excel Sheet</arg>
</arguments>
<msg timestamp="20210408 19:11:46.402" level="INFO">Term Loan - This is the data retrieved from Excel Sheet</msg>
<status status="PASS" starttime="20210408 19:11:46.401" endtime="20210408 19:11:46.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Value_fromUI} - This is the data displayed in the UI/application</arg>
</arguments>
<msg timestamp="20210408 19:11:46.454" level="INFO">Term Loan - This is the data displayed in the UI/application</msg>
<status status="PASS" starttime="20210408 19:11:46.453" endtime="20210408 19:11:46.454"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:46.505" endtime="20210408 19:11:46.506"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:46.504" endtime="20210408 19:11:46.506"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Should Be Equal</arg>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:46.559" endtime="20210408 19:11:46.560"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:46.558" endtime="20210408 19:11:46.560"></status>
</kw>
<msg timestamp="20210408 19:11:46.560" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:11:46.556" endtime="20210408 19:11:46.560"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>"${Value_fromExcel}" - data retrieved from Excel Sheet MATCHES "${Value_fromUI}" - the data displayed in the UI/application</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>"${Value_fromExcel}" - data retrieved from Excel Sheet DOES NOT MATCH "${Value_fromUI}" - the data displayed in the UI/application</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"${Value_fromExcel}" - data retrieved from Excel Sheet MATCHES "${Value_fromUI}" - the data displayed in the UI/application</arg>
</arguments>
<msg timestamp="20210408 19:11:46.612" level="INFO">"Term Loan" - data retrieved from Excel Sheet MATCHES "Term Loan" - the data displayed in the UI/application</msg>
<status status="PASS" starttime="20210408 19:11:46.612" endtime="20210408 19:11:46.613"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:46.610" endtime="20210408 19:11:46.613"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:46.222" endtime="20210408 19:11:46.613"></status>
</kw>
<kw name="Validate Loan IQ Details" library="GenericKeywords">
<doc>This keyword validates the displayed Loan IQ details in the application vs the data in excel
@author: jcdelacruz/ghabal
@update: bernchua Added property 'value' in Mx LoanIQ Get Data keyword.
@update: jdelacru 13DEC2019 - Changed the argument in getting value for UI</doc>
<arguments>
<arg>${Facility_Subtype}</arg>
<arg>${LIQ_FacilitySelect_FacilitySubType_Combobox}</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Get Data</arg>
<arg>${Value_fromUI}</arg>
<arg>value%Value_fromUI</arg>
</arguments>
<assign>
<var>${Value_fromUI}</var>
</assign>
<kw name="Mx LoanIQ Get Data" library="LoanIQ">
<doc>| Usage |
Used to returns the text of object identified by `locator'</doc>
<arguments>
<arg>${Value_fromUI}</arg>
<arg>value%Value_fromUI</arg>
</arguments>
<msg timestamp="20210408 19:11:46.741" level="INFO">Fetching value from object: JavaWindow("title:=Facility Select").JavaList("attached text:=Facility Subtype:") 
 Value = : Committed</msg>
<msg timestamp="20210408 19:11:46.741" level="INFO">${Value_fromUI} = Committed</msg>
<status status="PASS" starttime="20210408 19:11:46.667" endtime="20210408 19:11:46.742"></status>
</kw>
<msg timestamp="20210408 19:11:46.742" level="INFO">${Value_fromUI} = Committed</msg>
<status status="PASS" starttime="20210408 19:11:46.666" endtime="20210408 19:11:46.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Value_fromExcel} - This is the data retrieved from Excel Sheet</arg>
</arguments>
<msg timestamp="20210408 19:11:46.809" level="INFO">Committed - This is the data retrieved from Excel Sheet</msg>
<status status="PASS" starttime="20210408 19:11:46.808" endtime="20210408 19:11:46.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Value_fromUI} - This is the data displayed in the UI/application</arg>
</arguments>
<msg timestamp="20210408 19:11:46.862" level="INFO">Committed - This is the data displayed in the UI/application</msg>
<status status="PASS" starttime="20210408 19:11:46.861" endtime="20210408 19:11:46.862"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:46.914" endtime="20210408 19:11:46.915"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:46.913" endtime="20210408 19:11:46.915"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Should Be Equal</arg>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:46.969" endtime="20210408 19:11:46.969"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:46.967" endtime="20210408 19:11:46.969"></status>
</kw>
<msg timestamp="20210408 19:11:46.969" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:11:46.966" endtime="20210408 19:11:46.970"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>"${Value_fromExcel}" - data retrieved from Excel Sheet MATCHES "${Value_fromUI}" - the data displayed in the UI/application</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>"${Value_fromExcel}" - data retrieved from Excel Sheet DOES NOT MATCH "${Value_fromUI}" - the data displayed in the UI/application</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"${Value_fromExcel}" - data retrieved from Excel Sheet MATCHES "${Value_fromUI}" - the data displayed in the UI/application</arg>
</arguments>
<msg timestamp="20210408 19:11:47.128" level="INFO">"Committed" - data retrieved from Excel Sheet MATCHES "Committed" - the data displayed in the UI/application</msg>
<status status="PASS" starttime="20210408 19:11:47.128" endtime="20210408 19:11:47.129"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:47.126" endtime="20210408 19:11:47.129"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:46.614" endtime="20210408 19:11:47.129"></status>
</kw>
<kw name="Validate Loan IQ Details" library="GenericKeywords">
<doc>This keyword validates the displayed Loan IQ details in the application vs the data in excel
@author: jcdelacruz/ghabal
@update: bernchua Added property 'value' in Mx LoanIQ Get Data keyword.
@update: jdelacru 13DEC2019 - Changed the argument in getting value for UI</doc>
<arguments>
<arg>${Facility_CmtAmt}</arg>
<arg>${LIQ_FacilitySelect_ProposedCmt_Textfield}</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Get Data</arg>
<arg>${Value_fromUI}</arg>
<arg>value%Value_fromUI</arg>
</arguments>
<assign>
<var>${Value_fromUI}</var>
</assign>
<kw name="Mx LoanIQ Get Data" library="LoanIQ">
<doc>| Usage |
Used to returns the text of object identified by `locator'</doc>
<arguments>
<arg>${Value_fromUI}</arg>
<arg>value%Value_fromUI</arg>
</arguments>
<msg timestamp="20210408 19:11:47.260" level="INFO">Fetching value from object: JavaWindow("title:=Facility Select").JavaEdit("tagname:=Text","index:=4") 
 Value = : 300,000,000.00</msg>
<msg timestamp="20210408 19:11:47.261" level="INFO">${Value_fromUI} = 300,000,000.00</msg>
<status status="PASS" starttime="20210408 19:11:47.183" endtime="20210408 19:11:47.261"></status>
</kw>
<msg timestamp="20210408 19:11:47.261" level="INFO">${Value_fromUI} = 300,000,000.00</msg>
<status status="PASS" starttime="20210408 19:11:47.182" endtime="20210408 19:11:47.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Value_fromExcel} - This is the data retrieved from Excel Sheet</arg>
</arguments>
<msg timestamp="20210408 19:11:47.317" level="INFO">300,000,000.00 - This is the data retrieved from Excel Sheet</msg>
<status status="PASS" starttime="20210408 19:11:47.316" endtime="20210408 19:11:47.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Value_fromUI} - This is the data displayed in the UI/application</arg>
</arguments>
<msg timestamp="20210408 19:11:47.377" level="INFO">300,000,000.00 - This is the data displayed in the UI/application</msg>
<status status="PASS" starttime="20210408 19:11:47.376" endtime="20210408 19:11:47.377"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:47.445" endtime="20210408 19:11:47.446"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:47.443" endtime="20210408 19:11:47.446"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Should Be Equal</arg>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:47.512" endtime="20210408 19:11:47.513"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:47.509" endtime="20210408 19:11:47.513"></status>
</kw>
<msg timestamp="20210408 19:11:47.513" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:11:47.506" endtime="20210408 19:11:47.514"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>"${Value_fromExcel}" - data retrieved from Excel Sheet MATCHES "${Value_fromUI}" - the data displayed in the UI/application</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>"${Value_fromExcel}" - data retrieved from Excel Sheet DOES NOT MATCH "${Value_fromUI}" - the data displayed in the UI/application</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"${Value_fromExcel}" - data retrieved from Excel Sheet MATCHES "${Value_fromUI}" - the data displayed in the UI/application</arg>
</arguments>
<msg timestamp="20210408 19:11:47.574" level="INFO">"300,000,000.00" - data retrieved from Excel Sheet MATCHES "300,000,000.00" - the data displayed in the UI/application</msg>
<status status="PASS" starttime="20210408 19:11:47.573" endtime="20210408 19:11:47.574"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:47.571" endtime="20210408 19:11:47.574"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:47.130" endtime="20210408 19:11:47.574"></status>
</kw>
<kw name="Validate Loan IQ Details" library="GenericKeywords">
<doc>This keyword validates the displayed Loan IQ details in the application vs the data in excel
@author: jcdelacruz/ghabal
@update: bernchua Added property 'value' in Mx LoanIQ Get Data keyword.
@update: jdelacru 13DEC2019 - Changed the argument in getting value for UI</doc>
<arguments>
<arg>${Facility_Currency}</arg>
<arg>${LIQ_FacilitySelect_Currency_List}</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Get Data</arg>
<arg>${Value_fromUI}</arg>
<arg>value%Value_fromUI</arg>
</arguments>
<assign>
<var>${Value_fromUI}</var>
</assign>
<kw name="Mx LoanIQ Get Data" library="LoanIQ">
<doc>| Usage |
Used to returns the text of object identified by `locator'</doc>
<arguments>
<arg>${Value_fromUI}</arg>
<arg>value%Value_fromUI</arg>
</arguments>
<msg timestamp="20210408 19:11:47.719" level="INFO">Fetching value from object: JavaWindow("title:=Facility Select").JavaList("attached text:=Currency:") 
 Value = : USD</msg>
<msg timestamp="20210408 19:11:47.719" level="INFO">${Value_fromUI} = USD</msg>
<status status="PASS" starttime="20210408 19:11:47.641" endtime="20210408 19:11:47.720"></status>
</kw>
<msg timestamp="20210408 19:11:47.720" level="INFO">${Value_fromUI} = USD</msg>
<status status="PASS" starttime="20210408 19:11:47.638" endtime="20210408 19:11:47.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Value_fromExcel} - This is the data retrieved from Excel Sheet</arg>
</arguments>
<msg timestamp="20210408 19:11:47.774" level="INFO">USD - This is the data retrieved from Excel Sheet</msg>
<status status="PASS" starttime="20210408 19:11:47.773" endtime="20210408 19:11:47.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Value_fromUI} - This is the data displayed in the UI/application</arg>
</arguments>
<msg timestamp="20210408 19:11:47.828" level="INFO">USD - This is the data displayed in the UI/application</msg>
<status status="PASS" starttime="20210408 19:11:47.828" endtime="20210408 19:11:47.828"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:47.891" endtime="20210408 19:11:47.891"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:47.889" endtime="20210408 19:11:47.891"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Should Be Equal</arg>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:47.945" endtime="20210408 19:11:47.945"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:47.944" endtime="20210408 19:11:47.946"></status>
</kw>
<msg timestamp="20210408 19:11:47.946" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:11:47.942" endtime="20210408 19:11:47.946"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>"${Value_fromExcel}" - data retrieved from Excel Sheet MATCHES "${Value_fromUI}" - the data displayed in the UI/application</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>"${Value_fromExcel}" - data retrieved from Excel Sheet DOES NOT MATCH "${Value_fromUI}" - the data displayed in the UI/application</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"${Value_fromExcel}" - data retrieved from Excel Sheet MATCHES "${Value_fromUI}" - the data displayed in the UI/application</arg>
</arguments>
<msg timestamp="20210408 19:11:48.001" level="INFO">"USD" - data retrieved from Excel Sheet MATCHES "USD" - the data displayed in the UI/application</msg>
<status status="PASS" starttime="20210408 19:11:48.000" endtime="20210408 19:11:48.001"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:47.998" endtime="20210408 19:11:48.001"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:47.575" endtime="20210408 19:11:48.001"></status>
</kw>
<kw name="Take Screenshot with text into Test Document" library="ReportMaker_Keywords">
<doc>This keyword is used to add screenshot with image filename as description into test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Facility Select Window</arg>
</arguments>
<kw name="Take Screenshot" library="Screenshot">
<doc>Takes a screenshot in JPEG format and embeds it into the log file.</doc>
<arguments>
<arg>${imageName}</arg>
</arguments>
<msg timestamp="20210408 19:11:48.153" level="INFO" html="yes">&lt;a href="Results/LoanIQ/TC02%20-%20Validate%20ARR%20Interest%20Pricing%20Option%20at%20Facility%20Level%20-%20Term___2021-04-08%2019-11-32.788/Facility%20Select%20Window_1.jpg"&gt;&lt;img src="Results/LoanIQ/TC02%20-%20Validate%20ARR%20Interest%20Pricing%20Option%20at%20Facility%20Level%20-%20Term___2021-04-08%2019-11-32.788/Facility%20Select%20Window_1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210408 19:11:48.054" endtime="20210408 19:11:48.153"></status>
</kw>
<kw name="Get Latest File" library="ReportMaker">
<arguments>
<arg>${getfilePath}</arg>
</arguments>
<assign>
<var>${imagePath}</var>
</assign>
<msg timestamp="20210408 19:11:48.206" level="INFO">${imagePath} = C:\Git_Evergreen\transform_arr\Results\LoanIQ\TC02 - Validate ARR Interest Pricing Option at Facility Level - Term___2021-04-08 19-11-32.788\Facility Select Window_1.jpg</msg>
<status status="PASS" starttime="20210408 19:11:48.205" endtime="20210408 19:11:48.206"></status>
</kw>
<kw name="Put Screenshot With Text" library="ReportMaker">
<arguments>
<arg>${imagePath}</arg>
<arg>${imageName}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:11:48.255" endtime="20210408 19:11:48.264"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:48.002" endtime="20210408 19:11:48.264"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_FacilitySelect_OK_Button}</arg>
</arguments>
<msg timestamp="20210408 19:11:48.530" level="INFO">JavaWindow("title:=Facility Select").JavaButton("label:=OK") is clicked.</msg>
<status status="PASS" starttime="20210408 19:11:48.265" endtime="20210408 19:11:48.531"></status>
</kw>
<kw name="Validate Facility Window Summary Tab Details" library="Facility_Notebook">
<doc>This keyword validates the Facility Cmt and Facility Name
@author: bernchua
@update: hstone 27AUG2019 Added Facility Current Cmt Amount Validation</doc>
<arguments>
<arg>${Facility_Name}</arg>
<arg>${Facility_CmtAmt}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3x</arg>
<arg>5s</arg>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_FacilityNotebook_Window}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_FacilityNotebook_Window}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:12:09.878" level="INFO">Locator = 'JavaWindow("title:=Facility -.*","displayed:=1")' exists.</msg>
<status status="PASS" starttime="20210408 19:11:48.622" endtime="20210408 19:12:09.878"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:48.621" endtime="20210408 19:12:09.878"></status>
</kw>
<kw name="Validate Loan IQ Details" library="GenericKeywords">
<doc>This keyword validates the displayed Loan IQ details in the application vs the data in excel
@author: jcdelacruz/ghabal
@update: bernchua Added property 'value' in Mx LoanIQ Get Data keyword.
@update: jdelacru 13DEC2019 - Changed the argument in getting value for UI</doc>
<arguments>
<arg>${Facility_CmtAmt}</arg>
<arg>${LIQ_FacilitySummary_ProposedCmt_Textfield}</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Get Data</arg>
<arg>${Value_fromUI}</arg>
<arg>value%Value_fromUI</arg>
</arguments>
<assign>
<var>${Value_fromUI}</var>
</assign>
<kw name="Mx LoanIQ Get Data" library="LoanIQ">
<doc>| Usage |
Used to returns the text of object identified by `locator'</doc>
<arguments>
<arg>${Value_fromUI}</arg>
<arg>value%Value_fromUI</arg>
</arguments>
<msg timestamp="20210408 19:12:10.181" level="INFO">Fetching value from object: JavaWindow("title:=Facility -.*").JavaEdit("attached text:=Proposed Cmt:","labeled_containers_path:=.*Global Facility Amounts.*") 
 Value = : 300,000,000.00</msg>
<msg timestamp="20210408 19:12:10.182" level="INFO">${Value_fromUI} = 300,000,000.00</msg>
<status status="PASS" starttime="20210408 19:12:09.997" endtime="20210408 19:12:10.182"></status>
</kw>
<msg timestamp="20210408 19:12:10.183" level="INFO">${Value_fromUI} = 300,000,000.00</msg>
<status status="PASS" starttime="20210408 19:12:09.996" endtime="20210408 19:12:10.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Value_fromExcel} - This is the data retrieved from Excel Sheet</arg>
</arguments>
<msg timestamp="20210408 19:12:10.233" level="INFO">300,000,000.00 - This is the data retrieved from Excel Sheet</msg>
<status status="PASS" starttime="20210408 19:12:10.232" endtime="20210408 19:12:10.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Value_fromUI} - This is the data displayed in the UI/application</arg>
</arguments>
<msg timestamp="20210408 19:12:10.295" level="INFO">300,000,000.00 - This is the data displayed in the UI/application</msg>
<status status="PASS" starttime="20210408 19:12:10.294" endtime="20210408 19:12:10.295"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:12:10.349" endtime="20210408 19:12:10.350"></status>
</kw>
<status status="PASS" starttime="20210408 19:12:10.348" endtime="20210408 19:12:10.350"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Should Be Equal</arg>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:12:10.406" endtime="20210408 19:12:10.406"></status>
</kw>
<status status="PASS" starttime="20210408 19:12:10.405" endtime="20210408 19:12:10.407"></status>
</kw>
<msg timestamp="20210408 19:12:10.407" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:12:10.403" endtime="20210408 19:12:10.407"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>"${Value_fromExcel}" - data retrieved from Excel Sheet MATCHES "${Value_fromUI}" - the data displayed in the UI/application</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>"${Value_fromExcel}" - data retrieved from Excel Sheet DOES NOT MATCH "${Value_fromUI}" - the data displayed in the UI/application</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"${Value_fromExcel}" - data retrieved from Excel Sheet MATCHES "${Value_fromUI}" - the data displayed in the UI/application</arg>
</arguments>
<msg timestamp="20210408 19:12:10.458" level="INFO">"300,000,000.00" - data retrieved from Excel Sheet MATCHES "300,000,000.00" - the data displayed in the UI/application</msg>
<status status="PASS" starttime="20210408 19:12:10.458" endtime="20210408 19:12:10.458"></status>
</kw>
<status status="PASS" starttime="20210408 19:12:10.456" endtime="20210408 19:12:10.458"></status>
</kw>
<status status="PASS" starttime="20210408 19:12:09.930" endtime="20210408 19:12:10.459"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${sFacility_CurrAmt}'!='None'</arg>
<arg>Validate Loan IQ Details</arg>
<arg>${sFacility_CurrAmt}</arg>
<arg>${LIQ_FacilitySummary_CurrentCmt_Textfield}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:12:10.510" endtime="20210408 19:12:10.511"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>JavaWindow("title:=Facility -.*").JavaStaticText("text:=${Facility_Name}")</arg>
<arg>text%${Facility_Name}</arg>
</arguments>
<assign>
<var>${Verify_FacilityName}</var>
</assign>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>JavaWindow("title:=Facility -.*").JavaStaticText("text:=${Facility_Name}")</arg>
<arg>text%${Facility_Name}</arg>
</arguments>
<msg timestamp="20210408 19:12:10.890" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:12:10.562" endtime="20210408 19:12:10.890"></status>
</kw>
<msg timestamp="20210408 19:12:10.890" level="INFO">${Verify_FacilityName} = True</msg>
<status status="PASS" starttime="20210408 19:12:10.561" endtime="20210408 19:12:10.890"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Verify_FacilityName} == True</arg>
<arg>Log</arg>
<arg>Facility Name Verified</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Facility Name Verified</arg>
</arguments>
<msg timestamp="20210408 19:12:10.947" level="INFO">Facility Name Verified</msg>
<status status="PASS" starttime="20210408 19:12:10.946" endtime="20210408 19:12:10.947"></status>
</kw>
<status status="PASS" starttime="20210408 19:12:10.945" endtime="20210408 19:12:10.947"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:48.532" endtime="20210408 19:12:10.947"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:43.237" endtime="20210408 19:12:10.947"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:43.234" endtime="20210408 19:12:10.948"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:35.749" endtime="20210408 19:12:10.948"></status>
</kw>
<kw name="Verify Main SG Details" library="Facility_Notebook">
<doc>This keyword verifies the Main SG details.
@author: fmamaril
@update: bernchua: Added condition if MainSG does not contain value, and added 'Facility_SGLocation' argument for adding MainSG details.
@update: bernchua: Returns the Facility Main SG name.
Set default value of 'Facility_SGLocation' to 
@update: jdelacru 13DEC2019 - Added for loop logic in clicking Main SG button
@update: clanding 28JUL2020 - Added pre-processing/post-processing keywords; refactor arguments
- Updated ${Facility_SGLocation} to ${Facility_ServicingGroup} in selecting in servicing group
@update: jloretiz 10JUL2020 - add clicking of information message if object is present</doc>
<arguments>
<arg>&amp;{ExcelPath}[Facility_ServicingGroup]</arg>
<arg>&amp;{ExcelPath}[Facility_Customer]</arg>
<arg>&amp;{ExcelPath}[Facility_SGLocation]</arg>
</arguments>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sFacility_ServicingGroup}</arg>
</arguments>
<assign>
<var>${Facility_ServicingGroup}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:12:11.348" endtime="20210408 19:12:11.349"></status>
</kw>
<msg timestamp="20210408 19:12:11.349" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:12:11.347" endtime="20210408 19:12:11.349"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:12:11.569" level="INFO">${List_Argument_Excel_Value} = ['CANADA CORPORATE BANKING']</msg>
<status status="PASS" starttime="20210408 19:12:11.568" endtime="20210408 19:12:11.569"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:12:11.621" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:12:11.621" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:12:11.621" endtime="20210408 19:12:11.622"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:12:11.674" level="INFO">${Arg_User_Input} = CANADA CORPORATE BANKING</msg>
<status status="PASS" starttime="20210408 19:12:11.673" endtime="20210408 19:12:11.674"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:12:11.742" level="INFO">${Arg_User_Input} = CANADA CORPORATE BANKING</msg>
<status status="PASS" starttime="20210408 19:12:11.742" endtime="20210408 19:12:11.743"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:12:11.794" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:12:11.793" endtime="20210408 19:12:11.794"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:12:11.846" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:12:11.845" endtime="20210408 19:12:11.846"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:12:11.898" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:12:11.897" endtime="20210408 19:12:11.898"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:12:11.952" endtime="20210408 19:12:11.953"></status>
</kw>
<msg timestamp="20210408 19:12:11.953" level="INFO">${Extracted_Argument_Value} = CANADA CORPORATE BANKING</msg>
<status status="PASS" starttime="20210408 19:12:11.950" endtime="20210408 19:12:11.953"></status>
</kw>
<status status="PASS" starttime="20210408 19:12:11.508" endtime="20210408 19:12:11.954"></status>
</kw>
<msg timestamp="20210408 19:12:11.954" level="INFO">${Extracted_Argument_Value} = CANADA CORPORATE BANKING</msg>
<status status="PASS" starttime="20210408 19:12:11.402" endtime="20210408 19:12:11.954"></status>
</kw>
<msg timestamp="20210408 19:12:11.954" level="INFO">${Facility_ServicingGroup} = CANADA CORPORATE BANKING</msg>
<status status="PASS" starttime="20210408 19:12:11.294" endtime="20210408 19:12:11.954"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sFacility_Customer}</arg>
</arguments>
<assign>
<var>${Facility_Customer}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:12:12.177" endtime="20210408 19:12:12.177"></status>
</kw>
<msg timestamp="20210408 19:12:12.177" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:12:12.175" endtime="20210408 19:12:12.177"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:12:12.390" level="INFO">${List_Argument_Excel_Value} = ['BNS CANADA CORPORATE BANKING']</msg>
<status status="PASS" starttime="20210408 19:12:12.389" endtime="20210408 19:12:12.390"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:12:12.440" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:12:12.441" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:12:12.440" endtime="20210408 19:12:12.441"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:12:12.491" level="INFO">${Arg_User_Input} = BNS CANADA CORPORATE BANKING</msg>
<status status="PASS" starttime="20210408 19:12:12.491" endtime="20210408 19:12:12.491"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:12:12.542" level="INFO">${Arg_User_Input} = BNS CANADA CORPORATE BANKING</msg>
<status status="PASS" starttime="20210408 19:12:12.541" endtime="20210408 19:12:12.542"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:12:12.591" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:12:12.591" endtime="20210408 19:12:12.591"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:12:12.753" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:12:12.753" endtime="20210408 19:12:12.754"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:12:12.805" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:12:12.804" endtime="20210408 19:12:12.805"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:12:12.857" endtime="20210408 19:12:12.857"></status>
</kw>
<msg timestamp="20210408 19:12:12.858" level="INFO">${Extracted_Argument_Value} = BNS CANADA CORPORATE BANKING</msg>
<status status="PASS" starttime="20210408 19:12:12.855" endtime="20210408 19:12:12.858"></status>
</kw>
<status status="PASS" starttime="20210408 19:12:12.330" endtime="20210408 19:12:12.858"></status>
</kw>
<msg timestamp="20210408 19:12:12.858" level="INFO">${Extracted_Argument_Value} = BNS CANADA CORPORATE BANKING</msg>
<status status="PASS" starttime="20210408 19:12:12.228" endtime="20210408 19:12:12.858"></status>
</kw>
<msg timestamp="20210408 19:12:12.859" level="INFO">${Facility_Customer} = BNS CANADA CORPORATE BANKING</msg>
<status status="PASS" starttime="20210408 19:12:12.122" endtime="20210408 19:12:12.859"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sFacility_SGLocation}</arg>
</arguments>
<assign>
<var>${Facility_SGLocation}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:12:13.074" endtime="20210408 19:12:13.075"></status>
</kw>
<msg timestamp="20210408 19:12:13.075" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:12:13.073" endtime="20210408 19:12:13.075"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:12:13.281" level="INFO">${List_Argument_Excel_Value} = ['Toronto, Canada']</msg>
<status status="PASS" starttime="20210408 19:12:13.281" endtime="20210408 19:12:13.282"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:12:13.331" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:12:13.332" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:12:13.331" endtime="20210408 19:12:13.332"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:12:13.383" level="INFO">${Arg_User_Input} = TORONTO, CANADA</msg>
<status status="PASS" starttime="20210408 19:12:13.382" endtime="20210408 19:12:13.383"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:12:13.435" level="INFO">${Arg_User_Input} = TORONTO, CANADA</msg>
<status status="PASS" starttime="20210408 19:12:13.435" endtime="20210408 19:12:13.435"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:12:13.489" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:12:13.488" endtime="20210408 19:12:13.489"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:12:13.539" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:12:13.538" endtime="20210408 19:12:13.539"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:12:13.589" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:12:13.589" endtime="20210408 19:12:13.590"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:12:13.642" endtime="20210408 19:12:13.643"></status>
</kw>
<msg timestamp="20210408 19:12:13.643" level="INFO">${Extracted_Argument_Value} = Toronto, Canada</msg>
<status status="PASS" starttime="20210408 19:12:13.640" endtime="20210408 19:12:13.643"></status>
</kw>
<status status="PASS" starttime="20210408 19:12:13.229" endtime="20210408 19:12:13.644"></status>
</kw>
<msg timestamp="20210408 19:12:13.644" level="INFO">${Extracted_Argument_Value} = Toronto, Canada</msg>
<status status="PASS" starttime="20210408 19:12:13.125" endtime="20210408 19:12:13.644"></status>
</kw>
<msg timestamp="20210408 19:12:13.644" level="INFO">${Facility_SGLocation} = Toronto, Canada</msg>
<status status="PASS" starttime="20210408 19:12:13.021" endtime="20210408 19:12:13.644"></status>
</kw>
<kw name="Mx LoanIQ Click Element If Present" library="LoanIQ">
<doc>| Usage |
Click on element identified by `locator` only if that element is present.
It passes if the element is not present.</doc>
<arguments>
<arg>${LIQ_Information_OK_Button}</arg>
</arguments>
<msg timestamp="20210408 19:12:18.916" level="INFO">JavaWindow("title:=Informational Message.*","displayed:=1").JavaButton("label:=OK"): is clicked, or skipped if not present.</msg>
<status status="PASS" starttime="20210408 19:12:13.694" endtime="20210408 19:12:18.917"></status>
</kw>
<kw name="Mx LoanIQ Activate Window" library="LoanIQ">
<doc>| Usage |
To activate existing window if present.</doc>
<arguments>
<arg>${LIQ_FacilityNotebook_Window}</arg>
</arguments>
<msg timestamp="20210408 19:12:19.089" level="INFO">Window : JavaWindow("title:=Facility -.*","displayed:=1") is activated</msg>
<status status="PASS" starttime="20210408 19:12:18.970" endtime="20210408 19:12:19.089"></status>
</kw>
<kw name="${Index} IN RANGE [ 3 ]" type="for">
<kw name="${Index} = 0" type="foritem">
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_FacilitySummary_MainSG_Button}</arg>
</arguments>
<msg timestamp="20210408 19:12:19.737" level="INFO">JavaWindow("title:=Facility -.*").JavaButton("attached text:=Main SG") is clicked.</msg>
<status status="PASS" starttime="20210408 19:12:19.220" endtime="20210408 19:12:19.738"></status>
</kw>
<kw name="Mx LoanIQ Click Element If Present" library="LoanIQ">
<doc>| Usage |
Click on element identified by `locator` only if that element is present.
It passes if the element is not present.</doc>
<arguments>
<arg>${LIQ_Warning_Yes_Button}</arg>
</arguments>
<msg timestamp="20210408 19:12:28.209" level="INFO">JavaWindow("title:=Warning.*", "displayed:=1").JavaButton("label:=Yes"): is clicked, or skipped if not present.</msg>
<status status="PASS" starttime="20210408 19:12:19.812" endtime="20210408 19:12:28.210"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_MainCustomer_Window}</arg>
</arguments>
<assign>
<var>${MainSGWindow_Status}</var>
</assign>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_MainCustomer_Window}</arg>
</arguments>
<msg timestamp="20210408 19:12:28.320" level="INFO">Locator = 'JavaWindow("title:=Main Customer.*")' exists.</msg>
<status status="PASS" starttime="20210408 19:12:28.267" endtime="20210408 19:12:28.320"></status>
</kw>
<msg timestamp="20210408 19:12:28.321" level="INFO">${MainSGWindow_Status} = True</msg>
<status status="PASS" starttime="20210408 19:12:28.265" endtime="20210408 19:12:28.321"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${MainSGWindow_Status}==${TRUE}</arg>
</arguments>
<msg timestamp="20210408 19:12:28.377" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210408 19:12:28.377" endtime="20210408 19:12:28.426"></status>
</kw>
<status status="PASS" starttime="20210408 19:12:19.151" endtime="20210408 19:12:28.475"></status>
</kw>
<status status="PASS" starttime="20210408 19:12:19.150" endtime="20210408 19:12:28.475"></status>
</kw>
<kw name="Mx LoanIQ Activate Window" library="LoanIQ">
<doc>| Usage |
To activate existing window if present.</doc>
<arguments>
<arg>${LIQ_MainCustomer_Window}</arg>
</arguments>
<msg timestamp="20210408 19:12:28.630" level="INFO">Window : JavaWindow("title:=Main Customer.*") is activated</msg>
<status status="PASS" starttime="20210408 19:12:28.525" endtime="20210408 19:12:28.630"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Validate Loan IQ Details</arg>
<arg>${Facility_Customer}</arg>
<arg>${LIQ_MainCustomer_Customer_List}</arg>
</arguments>
<assign>
<var>${MainSG_Status}</var>
</assign>
<kw name="Validate Loan IQ Details" library="GenericKeywords">
<doc>This keyword validates the displayed Loan IQ details in the application vs the data in excel
@author: jcdelacruz/ghabal
@update: bernchua Added property 'value' in Mx LoanIQ Get Data keyword.
@update: jdelacru 13DEC2019 - Changed the argument in getting value for UI</doc>
<arguments>
<arg>${Facility_Customer}</arg>
<arg>${LIQ_MainCustomer_Customer_List}</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Get Data</arg>
<arg>${Value_fromUI}</arg>
<arg>value%Value_fromUI</arg>
</arguments>
<assign>
<var>${Value_fromUI}</var>
</assign>
<kw name="Mx LoanIQ Get Data" library="LoanIQ">
<doc>| Usage |
Used to returns the text of object identified by `locator'</doc>
<arguments>
<arg>${Value_fromUI}</arg>
<arg>value%Value_fromUI</arg>
</arguments>
<msg timestamp="20210408 19:12:28.813" level="INFO">Fetching value from object: JavaWindow("title:=Main Customer.*").JavaList("attached text:=Customer:","enabled:=0") 
 Value = : BNS CANADA CORPORATE BANKING</msg>
<msg timestamp="20210408 19:12:28.813" level="INFO">${Value_fromUI} = BNS CANADA CORPORATE BANKING</msg>
<status status="PASS" starttime="20210408 19:12:28.750" endtime="20210408 19:12:28.813"></status>
</kw>
<msg timestamp="20210408 19:12:28.813" level="INFO">${Value_fromUI} = BNS CANADA CORPORATE BANKING</msg>
<status status="PASS" starttime="20210408 19:12:28.747" endtime="20210408 19:12:28.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Value_fromExcel} - This is the data retrieved from Excel Sheet</arg>
</arguments>
<msg timestamp="20210408 19:12:28.894" level="INFO">BNS CANADA CORPORATE BANKING - This is the data retrieved from Excel Sheet</msg>
<status status="PASS" starttime="20210408 19:12:28.893" endtime="20210408 19:12:28.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Value_fromUI} - This is the data displayed in the UI/application</arg>
</arguments>
<msg timestamp="20210408 19:12:28.949" level="INFO">BNS CANADA CORPORATE BANKING - This is the data displayed in the UI/application</msg>
<status status="PASS" starttime="20210408 19:12:28.948" endtime="20210408 19:12:28.949"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:12:29.007" endtime="20210408 19:12:29.008"></status>
</kw>
<status status="PASS" starttime="20210408 19:12:29.006" endtime="20210408 19:12:29.008"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Should Be Equal</arg>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:12:29.062" endtime="20210408 19:12:29.062"></status>
</kw>
<status status="PASS" starttime="20210408 19:12:29.060" endtime="20210408 19:12:29.062"></status>
</kw>
<msg timestamp="20210408 19:12:29.062" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:12:29.059" endtime="20210408 19:12:29.063"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>"${Value_fromExcel}" - data retrieved from Excel Sheet MATCHES "${Value_fromUI}" - the data displayed in the UI/application</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>"${Value_fromExcel}" - data retrieved from Excel Sheet DOES NOT MATCH "${Value_fromUI}" - the data displayed in the UI/application</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"${Value_fromExcel}" - data retrieved from Excel Sheet MATCHES "${Value_fromUI}" - the data displayed in the UI/application</arg>
</arguments>
<msg timestamp="20210408 19:12:29.114" level="INFO">"BNS CANADA CORPORATE BANKING" - data retrieved from Excel Sheet MATCHES "BNS CANADA CORPORATE BANKING" - the data displayed in the UI/application</msg>
<status status="PASS" starttime="20210408 19:12:29.114" endtime="20210408 19:12:29.115"></status>
</kw>
<status status="PASS" starttime="20210408 19:12:29.112" endtime="20210408 19:12:29.115"></status>
</kw>
<status status="PASS" starttime="20210408 19:12:28.687" endtime="20210408 19:12:29.115"></status>
</kw>
<msg timestamp="20210408 19:12:29.115" level="INFO">${MainSG_Status} = True</msg>
<status status="PASS" starttime="20210408 19:12:28.685" endtime="20210408 19:12:29.115"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${MainSG_Status}'=='${TRUE}'</arg>
<arg>Run Keywords</arg>
<arg>Validate Loan IQ Details</arg>
<arg>${Facility_Customer}</arg>
<arg>${LIQ_MainCustomer_Customer_List}</arg>
<arg>AND</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Verify If Text Value Exist as Static Text on Page</arg>
<arg>Main Customer</arg>
<arg>${Facility_ServicingGroup}</arg>
<arg>ELSE</arg>
<arg>Run Keywords</arg>
<arg>Mx LoanIQ Select Combo Box Value</arg>
<arg>${LIQ_MainCustomer_Customer_List}</arg>
<arg>${Facility_Customer}</arg>
<arg>AND</arg>
<arg>Mx LoanIQ Click</arg>
<arg>${LIQ_MainCustomer_ServicingGroup_Button}</arg>
<arg>AND</arg>
<arg>Mx LoanIQ Select String</arg>
<arg>${LIQ_MainCustomer_ServicingGroups_Location_Tree}</arg>
<arg>${Facility_ServicingGroup}</arg>
<arg>AND</arg>
<arg>Mx LoanIQ Click</arg>
<arg>${LIQ_ServicingGroup_OK_Button}</arg>
<arg>AND</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Verify If Text Value Exist as Static Text on Page</arg>
<arg>Main Customer</arg>
<arg>${Facility_ServicingGroup}</arg>
</arguments>
<kw name="Run Keywords" library="BuiltIn">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>Validate Loan IQ Details</arg>
<arg>${Facility_Customer}</arg>
<arg>${LIQ_MainCustomer_Customer_List}</arg>
<arg>AND</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Verify If Text Value Exist as Static Text on Page</arg>
<arg>Main Customer</arg>
<arg>${Facility_ServicingGroup}</arg>
</arguments>
<kw name="Validate Loan IQ Details" library="GenericKeywords">
<doc>This keyword validates the displayed Loan IQ details in the application vs the data in excel
@author: jcdelacruz/ghabal
@update: bernchua Added property 'value' in Mx LoanIQ Get Data keyword.
@update: jdelacru 13DEC2019 - Changed the argument in getting value for UI</doc>
<arguments>
<arg>${Facility_Customer}</arg>
<arg>${LIQ_MainCustomer_Customer_List}</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Get Data</arg>
<arg>${Value_fromUI}</arg>
<arg>value%Value_fromUI</arg>
</arguments>
<assign>
<var>${Value_fromUI}</var>
</assign>
<kw name="Mx LoanIQ Get Data" library="LoanIQ">
<doc>| Usage |
Used to returns the text of object identified by `locator'</doc>
<arguments>
<arg>${Value_fromUI}</arg>
<arg>value%Value_fromUI</arg>
</arguments>
<msg timestamp="20210408 19:12:29.271" level="INFO">Fetching value from object: JavaWindow("title:=Main Customer.*").JavaList("attached text:=Customer:","enabled:=0") 
 Value = : BNS CANADA CORPORATE BANKING</msg>
<msg timestamp="20210408 19:12:29.271" level="INFO">${Value_fromUI} = BNS CANADA CORPORATE BANKING</msg>
<status status="PASS" starttime="20210408 19:12:29.222" endtime="20210408 19:12:29.272"></status>
</kw>
<msg timestamp="20210408 19:12:29.272" level="INFO">${Value_fromUI} = BNS CANADA CORPORATE BANKING</msg>
<status status="PASS" starttime="20210408 19:12:29.220" endtime="20210408 19:12:29.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Value_fromExcel} - This is the data retrieved from Excel Sheet</arg>
</arguments>
<msg timestamp="20210408 19:12:29.323" level="INFO">BNS CANADA CORPORATE BANKING - This is the data retrieved from Excel Sheet</msg>
<status status="PASS" starttime="20210408 19:12:29.323" endtime="20210408 19:12:29.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Value_fromUI} - This is the data displayed in the UI/application</arg>
</arguments>
<msg timestamp="20210408 19:12:29.375" level="INFO">BNS CANADA CORPORATE BANKING - This is the data displayed in the UI/application</msg>
<status status="PASS" starttime="20210408 19:12:29.375" endtime="20210408 19:12:29.375"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:12:29.429" endtime="20210408 19:12:29.430"></status>
</kw>
<status status="PASS" starttime="20210408 19:12:29.428" endtime="20210408 19:12:29.430"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Should Be Equal</arg>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:12:29.485" endtime="20210408 19:12:29.485"></status>
</kw>
<status status="PASS" starttime="20210408 19:12:29.484" endtime="20210408 19:12:29.486"></status>
</kw>
<msg timestamp="20210408 19:12:29.486" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:12:29.482" endtime="20210408 19:12:29.486"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>"${Value_fromExcel}" - data retrieved from Excel Sheet MATCHES "${Value_fromUI}" - the data displayed in the UI/application</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>"${Value_fromExcel}" - data retrieved from Excel Sheet DOES NOT MATCH "${Value_fromUI}" - the data displayed in the UI/application</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"${Value_fromExcel}" - data retrieved from Excel Sheet MATCHES "${Value_fromUI}" - the data displayed in the UI/application</arg>
</arguments>
<msg timestamp="20210408 19:12:29.537" level="INFO">"BNS CANADA CORPORATE BANKING" - data retrieved from Excel Sheet MATCHES "BNS CANADA CORPORATE BANKING" - the data displayed in the UI/application</msg>
<status status="PASS" starttime="20210408 19:12:29.537" endtime="20210408 19:12:29.537"></status>
</kw>
<status status="PASS" starttime="20210408 19:12:29.535" endtime="20210408 19:12:29.537"></status>
</kw>
<status status="PASS" starttime="20210408 19:12:29.169" endtime="20210408 19:12:29.538"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify If Text Value Exist as Static Text on Page</arg>
<arg>Main Customer</arg>
<arg>${Facility_ServicingGroup}</arg>
</arguments>
<kw name="Verify If Text Value Exist as Static Text on Page" library="GenericKeywords">
<doc>This keyword verifies if static object exist in page
@author: fmamaril
@update: bernchua Added wildcard before and after validated static text.
@update: bernchua Added "displayed:=1" property in JavaWindow locator.
@update: hstone 04AUG2020 - Else Routine Update: Replaced 'Log' with 'Run Keyword And Continue On Failure Fail "${Text to Validate}" is not displayed on ${WindowName} window.'</doc>
<arguments>
<arg>Main Customer</arg>
<arg>${Facility_ServicingGroup}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${sContaining_Flag}'=='Y'</arg>
<arg>Run Keyword And Return Status</arg>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>JavaWindow("title:=.*${WindowName}.*","displayed:=1").JavaStaticText("attached text:=.*${Text to Validate}.*")</arg>
<arg>VerificationData="Yes"</arg>
<arg>Processtimeout=5</arg>
<arg>ELSE IF</arg>
<arg>'${sContaining_Flag}'=='N'</arg>
<arg>Run Keyword And Return Status</arg>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>JavaWindow("title:=.*${WindowName}.*","displayed:=1").JavaStaticText("attached text:=${Text to Validate}")</arg>
<arg>VerificationData="Yes"</arg>
<arg>Processtimeout=5</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>sContaining_Flag Value is not accepted. Valid Values: 'Y', 'N'. Please see 'Verify If Text Value Exist as Static Text on Page' keyword.</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>JavaWindow("title:=.*${WindowName}.*","displayed:=1").JavaStaticText("attached text:=.*${Text to Validate}.*")</arg>
<arg>VerificationData="Yes"</arg>
<arg>Processtimeout=5</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>JavaWindow("title:=.*${WindowName}.*","displayed:=1").JavaStaticText("attached text:=.*${Text to Validate}.*")</arg>
<arg>VerificationData="Yes"</arg>
<arg>Processtimeout=5</arg>
</arguments>
<msg timestamp="20210408 19:12:29.769" level="INFO">Locator = 'JavaWindow("title:=.*Main Customer.*","displayed:=1").JavaStaticText("attached text:=.*CANADA CORPORATE BANKING.*")' exists.</msg>
<status status="PASS" starttime="20210408 19:12:29.699" endtime="20210408 19:12:29.770"></status>
</kw>
<status status="PASS" starttime="20210408 19:12:29.697" endtime="20210408 19:12:29.770"></status>
</kw>
<msg timestamp="20210408 19:12:29.770" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:12:29.695" endtime="20210408 19:12:29.770"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>"${Text to Validate}" is displayed on ${WindowName} window.</arg>
<arg>ELSE</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Fail</arg>
<arg>"${Text to Validate}" is not displayed on ${WindowName} window.</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"${Text to Validate}" is displayed on ${WindowName} window.</arg>
</arguments>
<msg timestamp="20210408 19:12:29.943" level="INFO">"CANADA CORPORATE BANKING" is displayed on Main Customer window.</msg>
<status status="PASS" starttime="20210408 19:12:29.942" endtime="20210408 19:12:29.943"></status>
</kw>
<status status="PASS" starttime="20210408 19:12:29.941" endtime="20210408 19:12:29.943"></status>
</kw>
<status status="PASS" starttime="20210408 19:12:29.643" endtime="20210408 19:12:29.943"></status>
</kw>
<status status="PASS" starttime="20210408 19:12:29.539" endtime="20210408 19:12:29.943"></status>
</kw>
<status status="PASS" starttime="20210408 19:12:29.168" endtime="20210408 19:12:29.944"></status>
</kw>
<status status="PASS" starttime="20210408 19:12:29.166" endtime="20210408 19:12:29.944"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_MainCustomer_OK_Button}</arg>
</arguments>
<msg timestamp="20210408 19:12:30.356" level="INFO">JavaWindow("title:=Main Customer.*").JavaButton("label:=OK") is clicked.</msg>
<status status="PASS" starttime="20210408 19:12:29.997" endtime="20210408 19:12:30.356"></status>
</kw>
<kw name="Mx LoanIQ Activate Window" library="LoanIQ">
<doc>| Usage |
To activate existing window if present.</doc>
<arguments>
<arg>${LIQ_FacilityNotebook_Window}</arg>
</arguments>
<msg timestamp="20210408 19:12:30.694" level="INFO">Window : JavaWindow("title:=Facility -.*","displayed:=1") is activated</msg>
<status status="PASS" starttime="20210408 19:12:30.443" endtime="20210408 19:12:30.694"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify If Text Value Exist as Static Text on Page</arg>
<arg>Facility -</arg>
<arg>${Facility_Customer} / ${Facility_ServicingGroup}</arg>
</arguments>
<kw name="Verify If Text Value Exist as Static Text on Page" library="GenericKeywords">
<doc>This keyword verifies if static object exist in page
@author: fmamaril
@update: bernchua Added wildcard before and after validated static text.
@update: bernchua Added "displayed:=1" property in JavaWindow locator.
@update: hstone 04AUG2020 - Else Routine Update: Replaced 'Log' with 'Run Keyword And Continue On Failure Fail "${Text to Validate}" is not displayed on ${WindowName} window.'</doc>
<arguments>
<arg>Facility -</arg>
<arg>${Facility_Customer} / ${Facility_ServicingGroup}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${sContaining_Flag}'=='Y'</arg>
<arg>Run Keyword And Return Status</arg>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>JavaWindow("title:=.*${WindowName}.*","displayed:=1").JavaStaticText("attached text:=.*${Text to Validate}.*")</arg>
<arg>VerificationData="Yes"</arg>
<arg>Processtimeout=5</arg>
<arg>ELSE IF</arg>
<arg>'${sContaining_Flag}'=='N'</arg>
<arg>Run Keyword And Return Status</arg>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>JavaWindow("title:=.*${WindowName}.*","displayed:=1").JavaStaticText("attached text:=${Text to Validate}")</arg>
<arg>VerificationData="Yes"</arg>
<arg>Processtimeout=5</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>sContaining_Flag Value is not accepted. Valid Values: 'Y', 'N'. Please see 'Verify If Text Value Exist as Static Text on Page' keyword.</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>JavaWindow("title:=.*${WindowName}.*","displayed:=1").JavaStaticText("attached text:=.*${Text to Validate}.*")</arg>
<arg>VerificationData="Yes"</arg>
<arg>Processtimeout=5</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>JavaWindow("title:=.*${WindowName}.*","displayed:=1").JavaStaticText("attached text:=.*${Text to Validate}.*")</arg>
<arg>VerificationData="Yes"</arg>
<arg>Processtimeout=5</arg>
</arguments>
<msg timestamp="20210408 19:12:31.159" level="INFO">Locator = 'JavaWindow("title:=.*Facility -.*","displayed:=1").JavaStaticText("attached text:=.*BNS CANADA CORPORATE BANKING / CANADA CORPORATE BANKING.*")' exists.</msg>
<status status="PASS" starttime="20210408 19:12:30.934" endtime="20210408 19:12:31.159"></status>
</kw>
<status status="PASS" starttime="20210408 19:12:30.932" endtime="20210408 19:12:31.160"></status>
</kw>
<msg timestamp="20210408 19:12:31.160" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:12:30.930" endtime="20210408 19:12:31.160"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>"${Text to Validate}" is displayed on ${WindowName} window.</arg>
<arg>ELSE</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Fail</arg>
<arg>"${Text to Validate}" is not displayed on ${WindowName} window.</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"${Text to Validate}" is displayed on ${WindowName} window.</arg>
</arguments>
<msg timestamp="20210408 19:12:31.220" level="INFO">"BNS CANADA CORPORATE BANKING / CANADA CORPORATE BANKING" is displayed on Facility - window.</msg>
<status status="PASS" starttime="20210408 19:12:31.219" endtime="20210408 19:12:31.220"></status>
</kw>
<status status="PASS" starttime="20210408 19:12:31.216" endtime="20210408 19:12:31.220"></status>
</kw>
<status status="PASS" starttime="20210408 19:12:30.875" endtime="20210408 19:12:31.220"></status>
</kw>
<status status="PASS" starttime="20210408 19:12:30.769" endtime="20210408 19:12:31.221"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${Facility_Customer} / ${Facility_ServicingGroup}</arg>
</arguments>
<assign>
<var>${MainSG_Name}</var>
</assign>
<msg timestamp="20210408 19:12:31.273" level="INFO">${MainSG_Name} = BNS CANADA CORPORATE BANKING / CANADA CORPORATE BANKING</msg>
<status status="PASS" starttime="20210408 19:12:31.273" endtime="20210408 19:12:31.273"></status>
</kw>
<kw name="Take Screenshot with text into Test Document" library="ReportMaker_Keywords">
<doc>This keyword is used to add screenshot with image filename as description into test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Facility Window - Summary</arg>
</arguments>
<kw name="Take Screenshot" library="Screenshot">
<doc>Takes a screenshot in JPEG format and embeds it into the log file.</doc>
<arguments>
<arg>${imageName}</arg>
</arguments>
<msg timestamp="20210408 19:12:31.483" level="INFO" html="yes">&lt;a href="Results/LoanIQ/TC02%20-%20Validate%20ARR%20Interest%20Pricing%20Option%20at%20Facility%20Level%20-%20Term___2021-04-08%2019-11-32.788/Facility%20Window%20-%20Summary_1.jpg"&gt;&lt;img src="Results/LoanIQ/TC02%20-%20Validate%20ARR%20Interest%20Pricing%20Option%20at%20Facility%20Level%20-%20Term___2021-04-08%2019-11-32.788/Facility%20Window%20-%20Summary_1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210408 19:12:31.377" endtime="20210408 19:12:31.483"></status>
</kw>
<kw name="Get Latest File" library="ReportMaker">
<arguments>
<arg>${getfilePath}</arg>
</arguments>
<assign>
<var>${imagePath}</var>
</assign>
<msg timestamp="20210408 19:12:31.541" level="INFO">${imagePath} = C:\Git_Evergreen\transform_arr\Results\LoanIQ\TC02 - Validate ARR Interest Pricing Option at Facility Level - Term___2021-04-08 19-11-32.788\Facility Window - Summary_1.jpg</msg>
<status status="PASS" starttime="20210408 19:12:31.540" endtime="20210408 19:12:31.542"></status>
</kw>
<kw name="Put Screenshot With Text" library="ReportMaker">
<arguments>
<arg>${imagePath}</arg>
<arg>${imageName}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:12:31.592" endtime="20210408 19:12:31.600"></status>
</kw>
<status status="PASS" starttime="20210408 19:12:31.326" endtime="20210408 19:12:31.601"></status>
</kw>
<status status="PASS" starttime="20210408 19:12:11.128" endtime="20210408 19:12:31.601"></status>
</kw>
<kw name="Get System Date" library="GenericKeywords">
<doc>This keyword gets the LIQ System Date
@update: hstone 28APR2020 - Added Keyword Post-process: Save Runtime Value
- Added Optional Argument: ${sRunTimeVar_SystemDate}</doc>
<assign>
<var>${SystemDate}</var>
</assign>
<kw name="Mx LoanIQ Get Data" library="LoanIQ">
<doc>| Usage |
Used to returns the text of object identified by `locator'</doc>
<arguments>
<arg>${LIQ_Window}</arg>
<arg>title%temp</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20210408 19:12:31.816" level="INFO">Fetching value from object: JavaWindow("title:=Fusion Loan IQ.*Business Date.*") 
 Value = : Fusion Loan IQ - Nikita Inputter - Business Date: 26-Oct-2016</msg>
<msg timestamp="20210408 19:12:31.816" level="INFO">${temp} = Fusion Loan IQ - Nikita Inputter - Business Date: 26-Oct-2016</msg>
<msg timestamp="20210408 19:12:31.816" level="INFO">${temp} = Fusion Loan IQ - Nikita Inputter - Business Date: 26-Oct-2016</msg>
<status status="PASS" starttime="20210408 19:12:31.767" endtime="20210408 19:12:31.816"></status>
</kw>
<kw name="Fetch From Right" library="String">
<doc>Returns contents of the ``string`` after the last occurrence of ``marker``.</doc>
<arguments>
<arg>${temp}</arg>
<arg>:${SPACE}</arg>
</arguments>
<assign>
<var>${SystemDate}</var>
</assign>
<msg timestamp="20210408 19:12:31.880" level="INFO">${SystemDate} = 26-Oct-2016</msg>
<status status="PASS" starttime="20210408 19:12:31.879" endtime="20210408 19:12:31.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>System Date: ${SystemDate}</arg>
</arguments>
<msg timestamp="20210408 19:12:31.931" level="INFO">System Date: 26-Oct-2016</msg>
<status status="PASS" starttime="20210408 19:12:31.930" endtime="20210408 19:12:31.931"></status>
</kw>
<kw name="Save Values of Runtime Execution on Excel File" library="GenericKeywords">
<doc>This keyword is used to save the generated values of runtime to the excel file.
@author: amansuet 31MAR2020 - initial create</doc>
<arguments>
<arg>${sRunTimeVar_SystemDate}</arg>
<arg>${SystemDate}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:12:32.044" level="INFO">${List_Argument_Excel_Value} = ['None']</msg>
<status status="PASS" starttime="20210408 19:12:32.043" endtime="20210408 19:12:32.044"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:12:32.096" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:12:32.096" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:12:32.095" endtime="20210408 19:12:32.096"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:12:32.147" level="INFO">${Arg_User_Input} = NONE</msg>
<status status="PASS" starttime="20210408 19:12:32.147" endtime="20210408 19:12:32.147"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}&gt;=2</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:12:32.200" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:12:32.200" endtime="20210408 19:12:32.201"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}'</arg>
<arg>Log</arg>
<arg>User input non-runtime value.</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}&gt;=2 and '${Arg_User_Input}'=='${RUNTIME}' and '${Variable_Name_Input}'!=''</arg>
<arg>Write Data to Runtime Excel File</arg>
<arg>${SCENARIONAME_CURRENT}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>${sExtracted_Argument_Value}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Invalid Argument Value for Runtime. Runtime format should be = 'Runtime:&lt;VariableName&gt;' or 'Runtime:&lt;VariableName&gt;:&lt;Prefix&gt;'.</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>User input non-runtime value.</arg>
</arguments>
<msg timestamp="20210408 19:12:32.257" level="INFO">User input non-runtime value.</msg>
<status status="PASS" starttime="20210408 19:12:32.256" endtime="20210408 19:12:32.257"></status>
</kw>
<status status="PASS" starttime="20210408 19:12:32.254" endtime="20210408 19:12:32.257"></status>
</kw>
<status status="PASS" starttime="20210408 19:12:31.992" endtime="20210408 19:12:32.258"></status>
</kw>
<msg timestamp="20210408 19:12:32.258" level="INFO">${SystemDate} = 26-Oct-2016</msg>
<status status="PASS" starttime="20210408 19:12:31.714" endtime="20210408 19:12:32.258"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'&amp;{ExcelPath}[Facility_AdjustmentSettings]'=='${PAST}'</arg>
<arg>Subtract Days to Date</arg>
<arg>${SystemDate}</arg>
<arg>&amp;{ExcelPath}[Facility_AgreementDateAdjustment]</arg>
<arg>ELSE IF</arg>
<arg>'&amp;{ExcelPath}[Facility_AdjustmentSettings]'=='${FUTURE}'</arg>
<arg>Add Days to Date</arg>
<arg>${SystemDate}</arg>
<arg>&amp;{ExcelPath}[Facility_AgreementDateAdjustment]</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${SystemDate}</arg>
</arguments>
<assign>
<var>${Facility_AgreementDate}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${SystemDate}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:12:32.311" endtime="20210408 19:12:32.311"></status>
</kw>
<msg timestamp="20210408 19:12:32.311" level="INFO">${Facility_AgreementDate} = 26-Oct-2016</msg>
<status status="PASS" starttime="20210408 19:12:32.309" endtime="20210408 19:12:32.311"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'&amp;{ExcelPath}[Facility_AdjustmentSettings]'=='${PAST}'</arg>
<arg>Subtract Days to Date</arg>
<arg>${SystemDate}</arg>
<arg>&amp;{ExcelPath}[Facility_EffectiveDateAdjustment]</arg>
<arg>ELSE IF</arg>
<arg>'&amp;{ExcelPath}[Facility_AdjustmentSettings]'=='${FUTURE}'</arg>
<arg>Add Days to Date</arg>
<arg>${SystemDate}</arg>
<arg>&amp;{ExcelPath}[Facility_EffectiveDateAdjustment]</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${SystemDate}</arg>
</arguments>
<assign>
<var>${Facility_EffectiveDate}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${SystemDate}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:12:32.366" endtime="20210408 19:12:32.367"></status>
</kw>
<msg timestamp="20210408 19:12:32.367" level="INFO">${Facility_EffectiveDate} = 26-Oct-2016</msg>
<status status="PASS" starttime="20210408 19:12:32.364" endtime="20210408 19:12:32.367"></status>
</kw>
<kw name="Add Days to Date" library="GenericKeywords">
<doc>This will add a number of days in the current date
@author: ritragel</doc>
<arguments>
<arg>${Facility_EffectiveDate}</arg>
<arg>&amp;{ExcelPath}[Facility_ExpiryDateAdjustment]</arg>
</arguments>
<assign>
<var>${Facility_ExpiryDate}</var>
</assign>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${Date}</arg>
<arg>date_format=%d-%b-%Y</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20210408 19:12:32.478" level="INFO">${Date} = 2016-10-26 00:00:00.000</msg>
<status status="PASS" starttime="20210408 19:12:32.472" endtime="20210408 19:12:32.478"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${Date}</arg>
<arg>${NumberOfDaysToAdd} days</arg>
<arg>result_format=%d-%b-%Y</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20210408 19:12:32.532" level="INFO">${Date} = 26-Oct-2019</msg>
<status status="PASS" starttime="20210408 19:12:32.531" endtime="20210408 19:12:32.532"></status>
</kw>
<msg timestamp="20210408 19:12:32.532" level="INFO">${Facility_ExpiryDate} = 26-Oct-2019</msg>
<status status="PASS" starttime="20210408 19:12:32.420" endtime="20210408 19:12:32.533"></status>
</kw>
<kw name="Add Days to Date" library="GenericKeywords">
<doc>This will add a number of days in the current date
@author: ritragel</doc>
<arguments>
<arg>${Facility_EffectiveDate}</arg>
<arg>&amp;{ExcelPath}[Facility_MaturityDateAdjustment]</arg>
</arguments>
<assign>
<var>${Facility_MaturityDate}</var>
</assign>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${Date}</arg>
<arg>date_format=%d-%b-%Y</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20210408 19:12:32.638" level="INFO">${Date} = 2016-10-26 00:00:00.000</msg>
<status status="PASS" starttime="20210408 19:12:32.637" endtime="20210408 19:12:32.638"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${Date}</arg>
<arg>${NumberOfDaysToAdd} days</arg>
<arg>result_format=%d-%b-%Y</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20210408 19:12:32.688" level="INFO">${Date} = 26-Oct-2019</msg>
<status status="PASS" starttime="20210408 19:12:32.688" endtime="20210408 19:12:32.689"></status>
</kw>
<msg timestamp="20210408 19:12:32.689" level="INFO">${Facility_MaturityDate} = 26-Oct-2019</msg>
<status status="PASS" starttime="20210408 19:12:32.583" endtime="20210408 19:12:32.689"></status>
</kw>
<kw name="Set Facility Dates" library="Facility_Notebook">
<doc>Sets the Agreement, Effective, Expiry &amp; Final Maturity dates of a Facility.
@author: bernchua DDMMMYYYY - initial create
@update: ehugo 29MAY2020 - added keyword pre-processing; added screenshot
@update: jloretiz 11FEB2021 - added condition for empty data</doc>
<arguments>
<arg>${Facility_AgreementDate}</arg>
<arg>${Facility_EffectiveDate}</arg>
<arg>${Facility_ExpiryDate}</arg>
<arg>${Facility_MaturityDate}</arg>
</arguments>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sAgreementDate}</arg>
</arguments>
<assign>
<var>${AgreementDate}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:12:33.025" endtime="20210408 19:12:33.026"></status>
</kw>
<msg timestamp="20210408 19:12:33.026" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:12:33.023" endtime="20210408 19:12:33.026"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:12:33.243" level="INFO">${List_Argument_Excel_Value} = ['26-Oct-2016']</msg>
<status status="PASS" starttime="20210408 19:12:33.242" endtime="20210408 19:12:33.243"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:12:33.403" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:12:33.403" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:12:33.402" endtime="20210408 19:12:33.403"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:12:33.452" level="INFO">${Arg_User_Input} = 26-OCT-2016</msg>
<status status="PASS" starttime="20210408 19:12:33.452" endtime="20210408 19:12:33.453"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:12:33.509" level="INFO">${Arg_User_Input} = 26-OCT-2016</msg>
<status status="PASS" starttime="20210408 19:12:33.509" endtime="20210408 19:12:33.509"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:12:33.562" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:12:33.561" endtime="20210408 19:12:33.562"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:12:33.616" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:12:33.615" endtime="20210408 19:12:33.616"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:12:33.673" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:12:33.672" endtime="20210408 19:12:33.673"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:12:33.727" endtime="20210408 19:12:33.728"></status>
</kw>
<msg timestamp="20210408 19:12:33.728" level="INFO">${Extracted_Argument_Value} = 26-Oct-2016</msg>
<status status="PASS" starttime="20210408 19:12:33.725" endtime="20210408 19:12:33.728"></status>
</kw>
<status status="PASS" starttime="20210408 19:12:33.190" endtime="20210408 19:12:33.728"></status>
</kw>
<msg timestamp="20210408 19:12:33.729" level="INFO">${Extracted_Argument_Value} = 26-Oct-2016</msg>
<status status="PASS" starttime="20210408 19:12:33.087" endtime="20210408 19:12:33.729"></status>
</kw>
<msg timestamp="20210408 19:12:33.729" level="INFO">${AgreementDate} = 26-Oct-2016</msg>
<status status="PASS" starttime="20210408 19:12:32.947" endtime="20210408 19:12:33.729"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sEffectiveDate}</arg>
</arguments>
<assign>
<var>${EffectiveDate}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:12:33.936" endtime="20210408 19:12:33.936"></status>
</kw>
<msg timestamp="20210408 19:12:33.936" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:12:33.934" endtime="20210408 19:12:33.937"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:12:34.147" level="INFO">${List_Argument_Excel_Value} = ['26-Oct-2016']</msg>
<status status="PASS" starttime="20210408 19:12:34.147" endtime="20210408 19:12:34.147"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:12:34.198" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:12:34.198" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:12:34.197" endtime="20210408 19:12:34.198"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:12:34.250" level="INFO">${Arg_User_Input} = 26-OCT-2016</msg>
<status status="PASS" starttime="20210408 19:12:34.250" endtime="20210408 19:12:34.250"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:12:34.301" level="INFO">${Arg_User_Input} = 26-OCT-2016</msg>
<status status="PASS" starttime="20210408 19:12:34.300" endtime="20210408 19:12:34.301"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:12:34.356" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:12:34.356" endtime="20210408 19:12:34.357"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:12:34.408" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:12:34.408" endtime="20210408 19:12:34.409"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:12:34.460" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:12:34.460" endtime="20210408 19:12:34.460"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:12:34.515" endtime="20210408 19:12:34.515"></status>
</kw>
<msg timestamp="20210408 19:12:34.515" level="INFO">${Extracted_Argument_Value} = 26-Oct-2016</msg>
<status status="PASS" starttime="20210408 19:12:34.513" endtime="20210408 19:12:34.516"></status>
</kw>
<status status="PASS" starttime="20210408 19:12:34.092" endtime="20210408 19:12:34.516"></status>
</kw>
<msg timestamp="20210408 19:12:34.516" level="INFO">${Extracted_Argument_Value} = 26-Oct-2016</msg>
<status status="PASS" starttime="20210408 19:12:33.986" endtime="20210408 19:12:34.516"></status>
</kw>
<msg timestamp="20210408 19:12:34.516" level="INFO">${EffectiveDate} = 26-Oct-2016</msg>
<status status="PASS" starttime="20210408 19:12:33.881" endtime="20210408 19:12:34.517"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sExpiryDate}</arg>
</arguments>
<assign>
<var>${ExpiryDate}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:12:34.727" endtime="20210408 19:12:34.728"></status>
</kw>
<msg timestamp="20210408 19:12:34.728" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:12:34.725" endtime="20210408 19:12:34.728"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:12:34.932" level="INFO">${List_Argument_Excel_Value} = ['26-Oct-2019']</msg>
<status status="PASS" starttime="20210408 19:12:34.931" endtime="20210408 19:12:34.932"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:12:34.983" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:12:34.983" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:12:34.983" endtime="20210408 19:12:34.983"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:12:35.035" level="INFO">${Arg_User_Input} = 26-OCT-2019</msg>
<status status="PASS" starttime="20210408 19:12:35.034" endtime="20210408 19:12:35.035"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:12:35.087" level="INFO">${Arg_User_Input} = 26-OCT-2019</msg>
<status status="PASS" starttime="20210408 19:12:35.087" endtime="20210408 19:12:35.088"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:12:35.139" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:12:35.138" endtime="20210408 19:12:35.139"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:12:35.191" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:12:35.190" endtime="20210408 19:12:35.191"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:12:35.242" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:12:35.241" endtime="20210408 19:12:35.242"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:12:35.296" endtime="20210408 19:12:35.297"></status>
</kw>
<msg timestamp="20210408 19:12:35.297" level="INFO">${Extracted_Argument_Value} = 26-Oct-2019</msg>
<status status="PASS" starttime="20210408 19:12:35.295" endtime="20210408 19:12:35.297"></status>
</kw>
<status status="PASS" starttime="20210408 19:12:34.881" endtime="20210408 19:12:35.297"></status>
</kw>
<msg timestamp="20210408 19:12:35.297" level="INFO">${Extracted_Argument_Value} = 26-Oct-2019</msg>
<status status="PASS" starttime="20210408 19:12:34.779" endtime="20210408 19:12:35.297"></status>
</kw>
<msg timestamp="20210408 19:12:35.298" level="INFO">${ExpiryDate} = 26-Oct-2019</msg>
<status status="PASS" starttime="20210408 19:12:34.673" endtime="20210408 19:12:35.298"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sFinalMaturityDate}</arg>
</arguments>
<assign>
<var>${FinalMaturityDate}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:12:35.509" endtime="20210408 19:12:35.509"></status>
</kw>
<msg timestamp="20210408 19:12:35.509" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:12:35.507" endtime="20210408 19:12:35.509"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:12:35.710" level="INFO">${List_Argument_Excel_Value} = ['26-Oct-2019']</msg>
<status status="PASS" starttime="20210408 19:12:35.709" endtime="20210408 19:12:35.710"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:12:35.762" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:12:35.762" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:12:35.762" endtime="20210408 19:12:35.763"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:12:35.830" level="INFO">${Arg_User_Input} = 26-OCT-2019</msg>
<status status="PASS" starttime="20210408 19:12:35.829" endtime="20210408 19:12:35.830"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:12:35.882" level="INFO">${Arg_User_Input} = 26-OCT-2019</msg>
<status status="PASS" starttime="20210408 19:12:35.882" endtime="20210408 19:12:35.883"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:12:35.934" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:12:35.933" endtime="20210408 19:12:35.934"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:12:35.986" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:12:35.985" endtime="20210408 19:12:35.986"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:12:36.037" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:12:36.036" endtime="20210408 19:12:36.037"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:12:36.112" endtime="20210408 19:12:36.112"></status>
</kw>
<msg timestamp="20210408 19:12:36.112" level="INFO">${Extracted_Argument_Value} = 26-Oct-2019</msg>
<status status="PASS" starttime="20210408 19:12:36.109" endtime="20210408 19:12:36.112"></status>
</kw>
<status status="PASS" starttime="20210408 19:12:35.658" endtime="20210408 19:12:36.113"></status>
</kw>
<msg timestamp="20210408 19:12:36.113" level="INFO">${Extracted_Argument_Value} = 26-Oct-2019</msg>
<status status="PASS" starttime="20210408 19:12:35.559" endtime="20210408 19:12:36.113"></status>
</kw>
<msg timestamp="20210408 19:12:36.113" level="INFO">${FinalMaturityDate} = 26-Oct-2019</msg>
<status status="PASS" starttime="20210408 19:12:35.453" endtime="20210408 19:12:36.113"></status>
</kw>
<kw name="Mx LoanIQ Click Element If Present" library="LoanIQ">
<doc>| Usage |
Click on element identified by `locator` only if that element is present.
It passes if the element is not present.</doc>
<arguments>
<arg>${LIQ_Information_OK_Button}</arg>
</arguments>
<msg timestamp="20210408 19:12:41.378" level="INFO">JavaWindow("title:=Informational Message.*","displayed:=1").JavaButton("label:=OK"): is clicked, or skipped if not present.</msg>
<status status="PASS" starttime="20210408 19:12:36.178" endtime="20210408 19:12:41.378"></status>
</kw>
<kw name="Mx LoanIQ Click Element If Present" library="LoanIQ">
<doc>| Usage |
Click on element identified by `locator` only if that element is present.
It passes if the element is not present.</doc>
<arguments>
<arg>${LIQ_Information_OK_Button}</arg>
</arguments>
<msg timestamp="20210408 19:12:46.564" level="INFO">JavaWindow("title:=Informational Message.*","displayed:=1").JavaButton("label:=OK"): is clicked, or skipped if not present.</msg>
<status status="PASS" starttime="20210408 19:12:41.429" endtime="20210408 19:12:46.565"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${AgreementDate}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Enter</arg>
<arg>${LIQ_FacilitySummary_AgreementDate_Datefield}</arg>
<arg>${AgreementDate}</arg>
</arguments>
<kw name="Mx LoanIQ Enter" library="LoanIQ">
<doc>| Usage |
To enter the data to the element specified by 'locator'.</doc>
<arguments>
<arg>${LIQ_FacilitySummary_AgreementDate_Datefield}</arg>
<arg>${AgreementDate}</arg>
</arguments>
<msg timestamp="20210408 19:12:47.039" level="INFO">Input= 26-Oct-2016 is entered in element= JavaWindow("title:=Facility -.*").JavaEdit("attached text:=Agreement:")</msg>
<status status="PASS" starttime="20210408 19:12:46.625" endtime="20210408 19:12:47.039"></status>
</kw>
<status status="PASS" starttime="20210408 19:12:46.623" endtime="20210408 19:12:47.039"></status>
</kw>
<kw name="Mx LoanIQ Click Element If Present" library="LoanIQ">
<doc>| Usage |
Click on element identified by `locator` only if that element is present.
It passes if the element is not present.</doc>
<arguments>
<arg>${LIQ_Warning_Yes_Button}</arg>
</arguments>
<msg timestamp="20210408 19:12:55.513" level="INFO">JavaWindow("title:=Warning.*", "displayed:=1").JavaButton("label:=Yes"): is clicked, or skipped if not present.</msg>
<status status="PASS" starttime="20210408 19:12:47.108" endtime="20210408 19:12:55.513"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${EffectiveDate}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Enter</arg>
<arg>${LIQ_FacilitySummary_EffectiveDate_Datefield}</arg>
<arg>${EffectiveDate}</arg>
</arguments>
<kw name="Mx LoanIQ Enter" library="LoanIQ">
<doc>| Usage |
To enter the data to the element specified by 'locator'.</doc>
<arguments>
<arg>${LIQ_FacilitySummary_EffectiveDate_Datefield}</arg>
<arg>${EffectiveDate}</arg>
</arguments>
<msg timestamp="20210408 19:12:57.220" level="INFO">Input= 26-Oct-2016 is entered in element= JavaWindow("title:=Facility -.*").JavaEdit("attached text:=Effective:")</msg>
<status status="PASS" starttime="20210408 19:12:55.579" endtime="20210408 19:12:57.221"></status>
</kw>
<status status="PASS" starttime="20210408 19:12:55.577" endtime="20210408 19:12:57.221"></status>
</kw>
<kw name="Mx LoanIQ Click Element If Present" library="LoanIQ">
<doc>| Usage |
Click on element identified by `locator` only if that element is present.
It passes if the element is not present.</doc>
<arguments>
<arg>${LIQ_Warning_Yes_Button}</arg>
</arguments>
<msg timestamp="20210408 19:13:05.714" level="INFO">JavaWindow("title:=Warning.*", "displayed:=1").JavaButton("label:=Yes"): is clicked, or skipped if not present.</msg>
<status status="PASS" starttime="20210408 19:12:57.395" endtime="20210408 19:13:05.714"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ExpiryDate}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Enter</arg>
<arg>${LIQ_FacilitySummary_ExpiryDate_Datefield}</arg>
<arg>${ExpiryDate}</arg>
</arguments>
<kw name="Mx LoanIQ Enter" library="LoanIQ">
<doc>| Usage |
To enter the data to the element specified by 'locator'.</doc>
<arguments>
<arg>${LIQ_FacilitySummary_ExpiryDate_Datefield}</arg>
<arg>${ExpiryDate}</arg>
</arguments>
<msg timestamp="20210408 19:13:06.660" level="INFO">Input= 26-Oct-2019 is entered in element= JavaWindow("title:=Facility -.*").JavaEdit("attached text:=Expiry:")</msg>
<status status="PASS" starttime="20210408 19:13:05.781" endtime="20210408 19:13:06.660"></status>
</kw>
<status status="PASS" starttime="20210408 19:13:05.779" endtime="20210408 19:13:06.660"></status>
</kw>
<kw name="Mx LoanIQ Click Element If Present" library="LoanIQ">
<doc>| Usage |
Click on element identified by `locator` only if that element is present.
It passes if the element is not present.</doc>
<arguments>
<arg>${LIQ_Warning_Yes_Button}</arg>
</arguments>
<msg timestamp="20210408 19:13:15.034" level="INFO">JavaWindow("title:=Warning.*", "displayed:=1").JavaButton("label:=Yes"): is clicked, or skipped if not present.</msg>
<status status="PASS" starttime="20210408 19:13:06.717" endtime="20210408 19:13:15.034"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${FinalMaturityDate}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Enter</arg>
<arg>${LIQ_FacilitySummary_FinalMaturityDate_Datefield}</arg>
<arg>${FinalMaturityDate}</arg>
</arguments>
<kw name="Mx LoanIQ Enter" library="LoanIQ">
<doc>| Usage |
To enter the data to the element specified by 'locator'.</doc>
<arguments>
<arg>${LIQ_FacilitySummary_FinalMaturityDate_Datefield}</arg>
<arg>${FinalMaturityDate}</arg>
</arguments>
<msg timestamp="20210408 19:13:15.640" level="INFO">Input= 26-Oct-2019 is entered in element= JavaWindow("title:=Facility -.*").JavaEdit("attached text:=Final Maturity:")</msg>
<status status="PASS" starttime="20210408 19:13:15.089" endtime="20210408 19:13:15.640"></status>
</kw>
<status status="PASS" starttime="20210408 19:13:15.087" endtime="20210408 19:13:15.641"></status>
</kw>
<kw name="Mx LoanIQ Click Element If Present" library="LoanIQ">
<doc>| Usage |
Click on element identified by `locator` only if that element is present.
It passes if the element is not present.</doc>
<arguments>
<arg>${LIQ_Warning_Yes_Button}</arg>
</arguments>
<msg timestamp="20210408 19:13:19.118" level="INFO">JavaWindow("title:=Warning.*", "displayed:=1").JavaButton("label:=Yes"): is clicked, or skipped if not present.</msg>
<status status="PASS" starttime="20210408 19:13:15.762" endtime="20210408 19:13:19.118"></status>
</kw>
<kw name="Take Screenshot with text into Test Document" library="ReportMaker_Keywords">
<doc>This keyword is used to add screenshot with image filename as description into test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Facility Notebook - Facility Dates</arg>
</arguments>
<kw name="Take Screenshot" library="Screenshot">
<doc>Takes a screenshot in JPEG format and embeds it into the log file.</doc>
<arguments>
<arg>${imageName}</arg>
</arguments>
<msg timestamp="20210408 19:13:19.340" level="INFO" html="yes">&lt;a href="Results/LoanIQ/TC02%20-%20Validate%20ARR%20Interest%20Pricing%20Option%20at%20Facility%20Level%20-%20Term___2021-04-08%2019-11-32.788/Facility%20Notebook%20-%20Facility%20Dates_1.jpg"&gt;&lt;img src="Results/LoanIQ/TC02%20-%20Validate%20ARR%20Interest%20Pricing%20Option%20at%20Facility%20Level%20-%20Term___2021-04-08%2019-11-32.788/Facility%20Notebook%20-%20Facility%20Dates_1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210408 19:13:19.238" endtime="20210408 19:13:19.341"></status>
</kw>
<kw name="Get Latest File" library="ReportMaker">
<arguments>
<arg>${getfilePath}</arg>
</arguments>
<assign>
<var>${imagePath}</var>
</assign>
<msg timestamp="20210408 19:13:19.407" level="INFO">${imagePath} = C:\Git_Evergreen\transform_arr\Results\LoanIQ\TC02 - Validate ARR Interest Pricing Option at Facility Level - Term___2021-04-08 19-11-32.788\Facility Notebook - Facility Dates_1.jpg</msg>
<status status="PASS" starttime="20210408 19:13:19.406" endtime="20210408 19:13:19.407"></status>
</kw>
<kw name="Put Screenshot With Text" library="ReportMaker">
<arguments>
<arg>${imagePath}</arg>
<arg>${imageName}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:13:19.480" endtime="20210408 19:13:19.488"></status>
</kw>
<status status="PASS" starttime="20210408 19:13:19.182" endtime="20210408 19:13:19.489"></status>
</kw>
<status status="PASS" starttime="20210408 19:12:32.740" endtime="20210408 19:13:19.489"></status>
</kw>
<kw name="Write Data To Excel" library="GenericKeywords">
<doc>This keyword is used to Write Data To Excel.
@author: hstone 21FEB2020 - Initial Create
@update: hstone 17MAR2020 - Updated 'Run Keyword If '${multipleValue}'=='N'' to '... ELSE IF '${multipleValue}'=='N''
@update: jloretiz 15JUN2020 - add argument for column reference choice</doc>
<arguments>
<arg>CRED02_FacilitySetup</arg>
<arg>Facility_Name</arg>
<arg>&amp;{ExcelPath}[rowid]</arg>
<arg>${FacilityName}</arg>
<arg>sColumnReference=rowid</arg>
</arguments>
<kw name="Open Excel Document" library="ExcelLibrary">
<doc>Opens xlsx document file.</doc>
<arguments>
<arg>${sFilePath}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20210408 19:13:19.700" endtime="20210408 19:13:19.742"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${multipleValue}'=='Y'</arg>
<arg>Write Data To All Column Rows</arg>
<arg>${sSheetName}</arg>
<arg>${sColumnName}</arg>
<arg>${newValue}</arg>
<arg>ELSE IF</arg>
<arg>'${multipleValue}'=='N'</arg>
<arg>Write Data To Cell</arg>
<arg>${sSheetName}</arg>
<arg>${sColumnName}</arg>
<arg>${rowid}</arg>
<arg>${newValue}</arg>
<arg>${bTestCaseColumn}</arg>
<arg>${sColumnReference}</arg>
</arguments>
<kw name="Write Data To Cell" library="GenericKeywords">
<doc>This keyword will be used for writing data to single excel cell.
@author: hstone 20FEB2020 Initial Create
@update: jloretiz 15JUN2020 - add argument for column reference choice</doc>
<arguments>
<arg>${sSheetName}</arg>
<arg>${sColumnName}</arg>
<arg>${rowid}</arg>
<arg>${newValue}</arg>
<arg>${bTestCaseColumn}</arg>
<arg>${sColumnReference}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${sColumnReference}</arg>
</arguments>
<msg timestamp="20210408 19:13:19.852" level="INFO">rowid</msg>
<status status="PASS" starttime="20210408 19:13:19.852" endtime="20210408 19:13:19.852"></status>
</kw>
<kw name="Get Column Header Index" library="GenericKeywords">
<doc>This keyword is used to get the Column Header Index of Test_Case and given Column Name at the Excel Sheet.
@author: hstone 19FEB2020 Initial Create</doc>
<arguments>
<arg>${sSheetName}</arg>
<arg>${sColumnName}</arg>
<arg>${bTestCaseColumn}</arg>
<arg>${sColumnReference}</arg>
</arguments>
<assign>
<var>${TestCaseHeader_Index}</var>
<var>${ColumnHeader_Index}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>(Get Column Header Index) sTestCaseColReference = '${sTestCaseColReference}'</arg>
</arguments>
<msg timestamp="20210408 19:13:19.954" level="INFO">(Get Column Header Index) sTestCaseColReference = 'rowid'</msg>
<status status="PASS" starttime="20210408 19:13:19.954" endtime="20210408 19:13:19.954"></status>
</kw>
<kw name="Read Excel Row" library="ExcelLibrary">
<doc>Returns content of a row from the current sheet of the document.</doc>
<arguments>
<arg>1</arg>
<arg>sheet_name=${sSheetName}</arg>
</arguments>
<assign>
<var>${DataColumn_List}</var>
</assign>
<msg timestamp="20210408 19:13:20.008" level="INFO">${DataColumn_List} = ['rowid', 'Test_Case', 'Facility_NamePrefix', 'Deal_Name', 'Facility_Name', 'Facility_AgreementDate', 'Facility_EffectiveDate', 'Facility_ExpiryDate', 'Facility_MaturityDate', 'Facility_Currency', 'Fa...</msg>
<status status="PASS" starttime="20210408 19:13:20.008" endtime="20210408 19:13:20.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Data Set Sheet Name: '${sSheetName}'</arg>
</arguments>
<msg timestamp="20210408 19:13:20.058" level="INFO">Data Set Sheet Name: 'CRED02_FacilitySetup'</msg>
<status status="PASS" starttime="20210408 19:13:20.058" endtime="20210408 19:13:20.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Data Set Sheet Column Names: '${DataColumn_List}'</arg>
</arguments>
<msg timestamp="20210408 19:13:20.111" level="INFO">Data Set Sheet Column Names: '['rowid', 'Test_Case', 'Facility_NamePrefix', 'Deal_Name', 'Facility_Name', 'Facility_AgreementDate', 'Facility_EffectiveDate', 'Facility_ExpiryDate', 'Facility_MaturityDate', 'Facility_Currency', 'Facility_Type', 'Facility_ProposedCmtAmt', 'Facility_SubType', 'Facility_ANSIID', 'Facility_ServicingGroup', 'Facility_Customer', 'Facility_SGLocation', 'Facility_AdjustmentSettings', 'Facility_AgreementDateAdjustment', 'Facility_EffectiveDateAdjustment', 'Facility_ExpiryDateAdjustment', 'Facility_MaturityDateAdjustment', 'Facility_RiskType', 'Facility_RiskTypeLimit', 'Facility_LoanPurposeType', 'Facility_GlobalLimit', 'Facility_PricingOption', 'Facility_ARRObservationPeriod', 'Facility_LookbackDays', 'Facility_LockoutDays', 'Facility_RateBasis', 'Facility_CalculationMethod', 'MIS_Code', 'MIS_Value']'</msg>
<status status="PASS" starttime="20210408 19:13:20.110" endtime="20210408 19:13:20.111"></status>
</kw>
<kw name="Get Index From List" library="Collections">
<doc>Returns the index of the first occurrence of the ``value`` on the list.</doc>
<arguments>
<arg>${DataColumn_List}</arg>
<arg>${sTestCaseColReference}</arg>
</arguments>
<assign>
<var>${TestCaseHeaderName_Index}</var>
</assign>
<msg timestamp="20210408 19:13:20.169" level="INFO">${TestCaseHeaderName_Index} = 0</msg>
<status status="PASS" starttime="20210408 19:13:20.168" endtime="20210408 19:13:20.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Fetched Test Case Column Index : '${TestCaseHeaderName_Index}'</arg>
</arguments>
<msg timestamp="20210408 19:13:20.224" level="INFO">Fetched Test Case Column Index : '0'</msg>
<status status="PASS" starttime="20210408 19:13:20.223" endtime="20210408 19:13:20.224"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${TestCaseHeaderName_Index}&lt;0 and '${bTestCaseColumn}'=='False'</arg>
<arg>Set Variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>Evaluate</arg>
<arg>${TestCaseHeaderName_Index}+1</arg>
</arguments>
<assign>
<var>${TestCaseHeaderName_Index}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${TestCaseHeaderName_Index}+1</arg>
</arguments>
<status status="PASS" starttime="20210408 19:13:20.276" endtime="20210408 19:13:20.276"></status>
</kw>
<msg timestamp="20210408 19:13:20.277" level="INFO">${TestCaseHeaderName_Index} = 1</msg>
<status status="PASS" starttime="20210408 19:13:20.274" endtime="20210408 19:13:20.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Evaluated Test Case Column Index : '${TestCaseHeaderName_Index}'</arg>
</arguments>
<msg timestamp="20210408 19:13:20.328" level="INFO">Evaluated Test Case Column Index : '1'</msg>
<status status="PASS" starttime="20210408 19:13:20.327" endtime="20210408 19:13:20.328"></status>
</kw>
<kw name="Get Index From List" library="Collections">
<doc>Returns the index of the first occurrence of the ``value`` on the list.</doc>
<arguments>
<arg>${DataColumn_List}</arg>
<arg>${sColumnName}</arg>
</arguments>
<assign>
<var>${ColumnName_Index}</var>
</assign>
<msg timestamp="20210408 19:13:20.380" level="INFO">${ColumnName_Index} = 4</msg>
<status status="PASS" starttime="20210408 19:13:20.380" endtime="20210408 19:13:20.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Column Name Index : '${ColumnName_Index}'</arg>
</arguments>
<msg timestamp="20210408 19:13:20.433" level="INFO">Column Name Index : '4'</msg>
<status status="PASS" starttime="20210408 19:13:20.432" endtime="20210408 19:13:20.433"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${ColumnName_Index}&lt;0</arg>
<arg>Fail</arg>
<arg>'${sColumnName}' is not found at '${DataColumn_List}' Data Column Values.</arg>
</arguments>
<status status="PASS" starttime="20210408 19:13:20.483" endtime="20210408 19:13:20.483"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ColumnName_Index}+1</arg>
</arguments>
<assign>
<var>${ColumnName_Index}</var>
</assign>
<msg timestamp="20210408 19:13:20.535" level="INFO">${ColumnName_Index} = 5</msg>
<status status="PASS" starttime="20210408 19:13:20.535" endtime="20210408 19:13:20.536"></status>
</kw>
<msg timestamp="20210408 19:13:20.536" level="INFO">${TestCaseHeader_Index} = 1</msg>
<msg timestamp="20210408 19:13:20.536" level="INFO">${ColumnHeader_Index} = 5</msg>
<status status="PASS" starttime="20210408 19:13:19.903" endtime="20210408 19:13:20.536"></status>
</kw>
<kw name="Get Index of a Row Value using a Reference Header Index" library="GenericKeywords">
<doc>This keyword is used to get index of a row value using a reference header index
@author: hstone 19FEB2020 Initial Create</doc>
<arguments>
<arg>${sSheetName}</arg>
<arg>${rowid}</arg>
<arg>${TestCaseHeader_Index}</arg>
</arguments>
<assign>
<var>${RowId_Index}</var>
</assign>
<kw name="Read Excel Column" library="ExcelLibrary">
<doc>Returns content of a column from the current sheet of the document.</doc>
<arguments>
<arg>${sReferenceHeader_Index}</arg>
<arg>sheet_name=${sSheetName}</arg>
</arguments>
<assign>
<var>${DataRow_List}</var>
</assign>
<msg timestamp="20210408 19:13:20.641" level="INFO">${DataRow_List} = ['rowid', '1', '2']</msg>
<status status="PASS" starttime="20210408 19:13:20.640" endtime="20210408 19:13:20.641"></status>
</kw>
<kw name="Read Excel Column" library="ExcelLibrary">
<doc>Returns content of a column from the current sheet of the document.</doc>
<arguments>
<arg>1</arg>
<arg>sheet_name=${sSheetName}</arg>
</arguments>
<assign>
<var>${DataRowId_List}</var>
</assign>
<msg timestamp="20210408 19:13:20.692" level="INFO">${DataRowId_List} = ['rowid', '1', '2']</msg>
<status status="PASS" starttime="20210408 19:13:20.691" endtime="20210408 19:13:20.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Row Names Under Reference Header with Index '${sReferenceHeader_Index}' : '${DataRow_List}'</arg>
</arguments>
<msg timestamp="20210408 19:13:20.742" level="INFO">Row Names Under Reference Header with Index '1' : '['rowid', '1', '2']'</msg>
<status status="PASS" starttime="20210408 19:13:20.741" endtime="20210408 19:13:20.742"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>List Should Contain Value</arg>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<assign>
<var>${IsPresentInList}</var>
</assign>
<kw name="List Should Contain Value" library="Collections">
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<arguments>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:13:20.794" endtime="20210408 19:13:20.795"></status>
</kw>
<msg timestamp="20210408 19:13:20.795" level="INFO">${IsPresentInList} = True</msg>
<status status="PASS" starttime="20210408 19:13:20.793" endtime="20210408 19:13:20.795"></status>
</kw>
<kw name="Check if Row Value Exists on List as Int" library="GenericKeywords">
<doc>This keyword is used to check if value exists on a list as a string
@author: hstone 13APR2020 Initial Create</doc>
<arguments>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<assign>
<var>${IsPresentInList_As_Int}</var>
<var>${RowValue_Int}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${False}</arg>
</arguments>
<assign>
<var>${IsPresentInList}</var>
</assign>
<msg timestamp="20210408 19:13:20.900" level="INFO">${IsPresentInList} = False</msg>
<status status="PASS" starttime="20210408 19:13:20.900" endtime="20210408 19:13:20.900"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Convert To Integer</arg>
<arg>${sValue}</arg>
</arguments>
<assign>
<var>${IsIntConvPassed}</var>
</assign>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${sValue}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:13:20.952" endtime="20210408 19:13:20.952"></status>
</kw>
<msg timestamp="20210408 19:13:20.952" level="INFO">${IsIntConvPassed} = True</msg>
<status status="PASS" starttime="20210408 19:13:20.950" endtime="20210408 19:13:20.952"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${IsIntConvPassed}==${True}</arg>
<arg>Check if a String Exists as Int on a List</arg>
<arg>${lTarget_List}</arg>
<arg>${sValue}</arg>
</arguments>
<assign>
<var>${IsPresentInList}</var>
<var>${RowValue_Int}</var>
</assign>
<kw name="Check if a String Exists as Int on a List" library="GenericKeywords">
<doc>This keyword is used to check if a string exists as an integer on a list.
@author: hstone 13APR2020 Initial Create</doc>
<arguments>
<arg>${lTarget_List}</arg>
<arg>${sValue}</arg>
</arguments>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${sValue}</arg>
</arguments>
<assign>
<var>${Value_Int}</var>
</assign>
<msg timestamp="20210408 19:13:21.057" level="INFO">${Value_Int} = 1</msg>
<status status="PASS" starttime="20210408 19:13:21.056" endtime="20210408 19:13:21.057"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>List Should Contain Value</arg>
<arg>${lTarget_List}</arg>
<arg>${Value_Int}</arg>
</arguments>
<assign>
<var>${IsPresentInList}</var>
</assign>
<kw name="List Should Contain Value" library="Collections">
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<arguments>
<arg>${lTarget_List}</arg>
<arg>${Value_Int}</arg>
</arguments>
<msg timestamp="20210408 19:13:21.110" level="FAIL">[ rowid | 1 | 2 ] does not contain value '1'.</msg>
<status status="FAIL" starttime="20210408 19:13:21.109" endtime="20210408 19:13:21.161"></status>
</kw>
<msg timestamp="20210408 19:13:21.161" level="INFO">${IsPresentInList} = False</msg>
<status status="PASS" starttime="20210408 19:13:21.108" endtime="20210408 19:13:21.161"></status>
</kw>
<status status="PASS" starttime="20210408 19:13:21.005" endtime="20210408 19:13:21.161"></status>
</kw>
<msg timestamp="20210408 19:13:21.162" level="INFO">${IsPresentInList} = False</msg>
<msg timestamp="20210408 19:13:21.162" level="INFO">${RowValue_Int} = 1</msg>
<status status="PASS" starttime="20210408 19:13:21.003" endtime="20210408 19:13:21.162"></status>
</kw>
<msg timestamp="20210408 19:13:21.162" level="INFO">${IsPresentInList_As_Int} = False</msg>
<msg timestamp="20210408 19:13:21.162" level="INFO">${RowValue_Int} = 1</msg>
<status status="PASS" starttime="20210408 19:13:20.847" endtime="20210408 19:13:21.162"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${IsPresentInList}==${True}</arg>
<arg>Get Index From List</arg>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
<arg>ELSE IF</arg>
<arg>${IsPresentInList_As_Int}==${True}</arg>
<arg>Get Index From List</arg>
<arg>${DataRow_List}</arg>
<arg>${RowValue_Int}</arg>
<arg>ELSE</arg>
<arg>Get Index From List</arg>
<arg>${DataRowId_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<assign>
<var>${DataRowName_Index}</var>
</assign>
<kw name="Get Index From List" library="Collections">
<doc>Returns the index of the first occurrence of the ``value`` on the list.</doc>
<arguments>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:13:21.216" endtime="20210408 19:13:21.217"></status>
</kw>
<msg timestamp="20210408 19:13:21.217" level="INFO">${DataRowName_Index} = 1</msg>
<status status="PASS" starttime="20210408 19:13:21.214" endtime="20210408 19:13:21.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Row Name Index for '${sRowValue}' : '${DataRowName_Index}'</arg>
</arguments>
<msg timestamp="20210408 19:13:21.268" level="INFO">Row Name Index for '1' : '1'</msg>
<status status="PASS" starttime="20210408 19:13:21.267" endtime="20210408 19:13:21.268"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${DataRowName_Index}&lt;0</arg>
<arg>Fail</arg>
<arg>'${sRowValue}' is not found at '${DataRow_List}' Data Row Values.</arg>
</arguments>
<status status="PASS" starttime="20210408 19:13:21.319" endtime="20210408 19:13:21.320"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${DataRowName_Index}+1</arg>
</arguments>
<assign>
<var>${DataRowValue_Index}</var>
</assign>
<msg timestamp="20210408 19:13:21.371" level="INFO">${DataRowValue_Index} = 2</msg>
<status status="PASS" starttime="20210408 19:13:21.370" endtime="20210408 19:13:21.371"></status>
</kw>
<msg timestamp="20210408 19:13:21.372" level="INFO">${RowId_Index} = 2</msg>
<status status="PASS" starttime="20210408 19:13:20.588" endtime="20210408 19:13:21.372"></status>
</kw>
<kw name="Write Excel Cell" library="ExcelLibrary">
<doc>Writes value to the cell.</doc>
<arguments>
<arg>${RowId_Index}</arg>
<arg>${ColumnHeader_Index}</arg>
<arg>${sData}</arg>
<arg>${sSheetName}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:13:21.423" endtime="20210408 19:13:21.424"></status>
</kw>
<status status="PASS" starttime="20210408 19:13:19.797" endtime="20210408 19:13:21.425"></status>
</kw>
<status status="PASS" starttime="20210408 19:13:19.795" endtime="20210408 19:13:21.425"></status>
</kw>
<kw name="Save Excel Document" library="ExcelLibrary">
<doc>Saves the current document to disk.</doc>
<arguments>
<arg>${sFilePath}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:13:21.473" endtime="20210408 19:13:21.509"></status>
</kw>
<kw name="Close Current Excel Document" library="ExcelLibrary">
<doc>Closes current document.</doc>
<status status="PASS" starttime="20210408 19:13:21.567" endtime="20210408 19:13:21.567"></status>
</kw>
<status status="PASS" starttime="20210408 19:13:19.645" endtime="20210408 19:13:21.568"></status>
</kw>
<kw name="Write Data To Excel" library="GenericKeywords">
<doc>This keyword is used to Write Data To Excel.
@author: hstone 21FEB2020 - Initial Create
@update: hstone 17MAR2020 - Updated 'Run Keyword If '${multipleValue}'=='N'' to '... ELSE IF '${multipleValue}'=='N''
@update: jloretiz 15JUN2020 - add argument for column reference choice</doc>
<arguments>
<arg>CRED02_FacilitySetup</arg>
<arg>Facility_ExpiryDate</arg>
<arg>&amp;{ExcelPath}[rowid]</arg>
<arg>${Facility_ExpiryDate}</arg>
<arg>sColumnReference=rowid</arg>
</arguments>
<kw name="Open Excel Document" library="ExcelLibrary">
<doc>Opens xlsx document file.</doc>
<arguments>
<arg>${sFilePath}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20210408 19:13:21.901" endtime="20210408 19:13:21.953"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${multipleValue}'=='Y'</arg>
<arg>Write Data To All Column Rows</arg>
<arg>${sSheetName}</arg>
<arg>${sColumnName}</arg>
<arg>${newValue}</arg>
<arg>ELSE IF</arg>
<arg>'${multipleValue}'=='N'</arg>
<arg>Write Data To Cell</arg>
<arg>${sSheetName}</arg>
<arg>${sColumnName}</arg>
<arg>${rowid}</arg>
<arg>${newValue}</arg>
<arg>${bTestCaseColumn}</arg>
<arg>${sColumnReference}</arg>
</arguments>
<kw name="Write Data To Cell" library="GenericKeywords">
<doc>This keyword will be used for writing data to single excel cell.
@author: hstone 20FEB2020 Initial Create
@update: jloretiz 15JUN2020 - add argument for column reference choice</doc>
<arguments>
<arg>${sSheetName}</arg>
<arg>${sColumnName}</arg>
<arg>${rowid}</arg>
<arg>${newValue}</arg>
<arg>${bTestCaseColumn}</arg>
<arg>${sColumnReference}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${sColumnReference}</arg>
</arguments>
<msg timestamp="20210408 19:13:22.059" level="INFO">rowid</msg>
<status status="PASS" starttime="20210408 19:13:22.058" endtime="20210408 19:13:22.059"></status>
</kw>
<kw name="Get Column Header Index" library="GenericKeywords">
<doc>This keyword is used to get the Column Header Index of Test_Case and given Column Name at the Excel Sheet.
@author: hstone 19FEB2020 Initial Create</doc>
<arguments>
<arg>${sSheetName}</arg>
<arg>${sColumnName}</arg>
<arg>${bTestCaseColumn}</arg>
<arg>${sColumnReference}</arg>
</arguments>
<assign>
<var>${TestCaseHeader_Index}</var>
<var>${ColumnHeader_Index}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>(Get Column Header Index) sTestCaseColReference = '${sTestCaseColReference}'</arg>
</arguments>
<msg timestamp="20210408 19:13:22.166" level="INFO">(Get Column Header Index) sTestCaseColReference = 'rowid'</msg>
<status status="PASS" starttime="20210408 19:13:22.166" endtime="20210408 19:13:22.167"></status>
</kw>
<kw name="Read Excel Row" library="ExcelLibrary">
<doc>Returns content of a row from the current sheet of the document.</doc>
<arguments>
<arg>1</arg>
<arg>sheet_name=${sSheetName}</arg>
</arguments>
<assign>
<var>${DataColumn_List}</var>
</assign>
<msg timestamp="20210408 19:13:22.221" level="INFO">${DataColumn_List} = ['rowid', 'Test_Case', 'Facility_NamePrefix', 'Deal_Name', 'Facility_Name', 'Facility_AgreementDate', 'Facility_EffectiveDate', 'Facility_ExpiryDate', 'Facility_MaturityDate', 'Facility_Currency', 'Fa...</msg>
<status status="PASS" starttime="20210408 19:13:22.221" endtime="20210408 19:13:22.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Data Set Sheet Name: '${sSheetName}'</arg>
</arguments>
<msg timestamp="20210408 19:13:22.271" level="INFO">Data Set Sheet Name: 'CRED02_FacilitySetup'</msg>
<status status="PASS" starttime="20210408 19:13:22.271" endtime="20210408 19:13:22.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Data Set Sheet Column Names: '${DataColumn_List}'</arg>
</arguments>
<msg timestamp="20210408 19:13:22.325" level="INFO">Data Set Sheet Column Names: '['rowid', 'Test_Case', 'Facility_NamePrefix', 'Deal_Name', 'Facility_Name', 'Facility_AgreementDate', 'Facility_EffectiveDate', 'Facility_ExpiryDate', 'Facility_MaturityDate', 'Facility_Currency', 'Facility_Type', 'Facility_ProposedCmtAmt', 'Facility_SubType', 'Facility_ANSIID', 'Facility_ServicingGroup', 'Facility_Customer', 'Facility_SGLocation', 'Facility_AdjustmentSettings', 'Facility_AgreementDateAdjustment', 'Facility_EffectiveDateAdjustment', 'Facility_ExpiryDateAdjustment', 'Facility_MaturityDateAdjustment', 'Facility_RiskType', 'Facility_RiskTypeLimit', 'Facility_LoanPurposeType', 'Facility_GlobalLimit', 'Facility_PricingOption', 'Facility_ARRObservationPeriod', 'Facility_LookbackDays', 'Facility_LockoutDays', 'Facility_RateBasis', 'Facility_CalculationMethod', 'MIS_Code', 'MIS_Value']'</msg>
<status status="PASS" starttime="20210408 19:13:22.325" endtime="20210408 19:13:22.326"></status>
</kw>
<kw name="Get Index From List" library="Collections">
<doc>Returns the index of the first occurrence of the ``value`` on the list.</doc>
<arguments>
<arg>${DataColumn_List}</arg>
<arg>${sTestCaseColReference}</arg>
</arguments>
<assign>
<var>${TestCaseHeaderName_Index}</var>
</assign>
<msg timestamp="20210408 19:13:22.377" level="INFO">${TestCaseHeaderName_Index} = 0</msg>
<status status="PASS" starttime="20210408 19:13:22.376" endtime="20210408 19:13:22.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Fetched Test Case Column Index : '${TestCaseHeaderName_Index}'</arg>
</arguments>
<msg timestamp="20210408 19:13:22.428" level="INFO">Fetched Test Case Column Index : '0'</msg>
<status status="PASS" starttime="20210408 19:13:22.428" endtime="20210408 19:13:22.428"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${TestCaseHeaderName_Index}&lt;0 and '${bTestCaseColumn}'=='False'</arg>
<arg>Set Variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>Evaluate</arg>
<arg>${TestCaseHeaderName_Index}+1</arg>
</arguments>
<assign>
<var>${TestCaseHeaderName_Index}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${TestCaseHeaderName_Index}+1</arg>
</arguments>
<status status="PASS" starttime="20210408 19:13:22.489" endtime="20210408 19:13:22.489"></status>
</kw>
<msg timestamp="20210408 19:13:22.489" level="INFO">${TestCaseHeaderName_Index} = 1</msg>
<status status="PASS" starttime="20210408 19:13:22.487" endtime="20210408 19:13:22.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Evaluated Test Case Column Index : '${TestCaseHeaderName_Index}'</arg>
</arguments>
<msg timestamp="20210408 19:13:22.541" level="INFO">Evaluated Test Case Column Index : '1'</msg>
<status status="PASS" starttime="20210408 19:13:22.540" endtime="20210408 19:13:22.541"></status>
</kw>
<kw name="Get Index From List" library="Collections">
<doc>Returns the index of the first occurrence of the ``value`` on the list.</doc>
<arguments>
<arg>${DataColumn_List}</arg>
<arg>${sColumnName}</arg>
</arguments>
<assign>
<var>${ColumnName_Index}</var>
</assign>
<msg timestamp="20210408 19:13:22.608" level="INFO">${ColumnName_Index} = 7</msg>
<status status="PASS" starttime="20210408 19:13:22.607" endtime="20210408 19:13:22.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Column Name Index : '${ColumnName_Index}'</arg>
</arguments>
<msg timestamp="20210408 19:13:22.674" level="INFO">Column Name Index : '7'</msg>
<status status="PASS" starttime="20210408 19:13:22.673" endtime="20210408 19:13:22.674"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${ColumnName_Index}&lt;0</arg>
<arg>Fail</arg>
<arg>'${sColumnName}' is not found at '${DataColumn_List}' Data Column Values.</arg>
</arguments>
<status status="PASS" starttime="20210408 19:13:22.728" endtime="20210408 19:13:22.729"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ColumnName_Index}+1</arg>
</arguments>
<assign>
<var>${ColumnName_Index}</var>
</assign>
<msg timestamp="20210408 19:13:22.780" level="INFO">${ColumnName_Index} = 8</msg>
<status status="PASS" starttime="20210408 19:13:22.779" endtime="20210408 19:13:22.780"></status>
</kw>
<msg timestamp="20210408 19:13:22.780" level="INFO">${TestCaseHeader_Index} = 1</msg>
<msg timestamp="20210408 19:13:22.781" level="INFO">${ColumnHeader_Index} = 8</msg>
<status status="PASS" starttime="20210408 19:13:22.111" endtime="20210408 19:13:22.781"></status>
</kw>
<kw name="Get Index of a Row Value using a Reference Header Index" library="GenericKeywords">
<doc>This keyword is used to get index of a row value using a reference header index
@author: hstone 19FEB2020 Initial Create</doc>
<arguments>
<arg>${sSheetName}</arg>
<arg>${rowid}</arg>
<arg>${TestCaseHeader_Index}</arg>
</arguments>
<assign>
<var>${RowId_Index}</var>
</assign>
<kw name="Read Excel Column" library="ExcelLibrary">
<doc>Returns content of a column from the current sheet of the document.</doc>
<arguments>
<arg>${sReferenceHeader_Index}</arg>
<arg>sheet_name=${sSheetName}</arg>
</arguments>
<assign>
<var>${DataRow_List}</var>
</assign>
<msg timestamp="20210408 19:13:22.891" level="INFO">${DataRow_List} = ['rowid', '1', '2']</msg>
<status status="PASS" starttime="20210408 19:13:22.890" endtime="20210408 19:13:22.891"></status>
</kw>
<kw name="Read Excel Column" library="ExcelLibrary">
<doc>Returns content of a column from the current sheet of the document.</doc>
<arguments>
<arg>1</arg>
<arg>sheet_name=${sSheetName}</arg>
</arguments>
<assign>
<var>${DataRowId_List}</var>
</assign>
<msg timestamp="20210408 19:13:22.943" level="INFO">${DataRowId_List} = ['rowid', '1', '2']</msg>
<status status="PASS" starttime="20210408 19:13:22.942" endtime="20210408 19:13:22.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Row Names Under Reference Header with Index '${sReferenceHeader_Index}' : '${DataRow_List}'</arg>
</arguments>
<msg timestamp="20210408 19:13:22.997" level="INFO">Row Names Under Reference Header with Index '1' : '['rowid', '1', '2']'</msg>
<status status="PASS" starttime="20210408 19:13:22.996" endtime="20210408 19:13:22.997"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>List Should Contain Value</arg>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<assign>
<var>${IsPresentInList}</var>
</assign>
<kw name="List Should Contain Value" library="Collections">
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<arguments>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:13:23.050" endtime="20210408 19:13:23.050"></status>
</kw>
<msg timestamp="20210408 19:13:23.050" level="INFO">${IsPresentInList} = True</msg>
<status status="PASS" starttime="20210408 19:13:23.048" endtime="20210408 19:13:23.050"></status>
</kw>
<kw name="Check if Row Value Exists on List as Int" library="GenericKeywords">
<doc>This keyword is used to check if value exists on a list as a string
@author: hstone 13APR2020 Initial Create</doc>
<arguments>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<assign>
<var>${IsPresentInList_As_Int}</var>
<var>${RowValue_Int}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${False}</arg>
</arguments>
<assign>
<var>${IsPresentInList}</var>
</assign>
<msg timestamp="20210408 19:13:23.167" level="INFO">${IsPresentInList} = False</msg>
<status status="PASS" starttime="20210408 19:13:23.166" endtime="20210408 19:13:23.167"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Convert To Integer</arg>
<arg>${sValue}</arg>
</arguments>
<assign>
<var>${IsIntConvPassed}</var>
</assign>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${sValue}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:13:23.224" endtime="20210408 19:13:23.225"></status>
</kw>
<msg timestamp="20210408 19:13:23.225" level="INFO">${IsIntConvPassed} = True</msg>
<status status="PASS" starttime="20210408 19:13:23.222" endtime="20210408 19:13:23.225"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${IsIntConvPassed}==${True}</arg>
<arg>Check if a String Exists as Int on a List</arg>
<arg>${lTarget_List}</arg>
<arg>${sValue}</arg>
</arguments>
<assign>
<var>${IsPresentInList}</var>
<var>${RowValue_Int}</var>
</assign>
<kw name="Check if a String Exists as Int on a List" library="GenericKeywords">
<doc>This keyword is used to check if a string exists as an integer on a list.
@author: hstone 13APR2020 Initial Create</doc>
<arguments>
<arg>${lTarget_List}</arg>
<arg>${sValue}</arg>
</arguments>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${sValue}</arg>
</arguments>
<assign>
<var>${Value_Int}</var>
</assign>
<msg timestamp="20210408 19:13:23.331" level="INFO">${Value_Int} = 1</msg>
<status status="PASS" starttime="20210408 19:13:23.330" endtime="20210408 19:13:23.331"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>List Should Contain Value</arg>
<arg>${lTarget_List}</arg>
<arg>${Value_Int}</arg>
</arguments>
<assign>
<var>${IsPresentInList}</var>
</assign>
<kw name="List Should Contain Value" library="Collections">
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<arguments>
<arg>${lTarget_List}</arg>
<arg>${Value_Int}</arg>
</arguments>
<msg timestamp="20210408 19:13:23.385" level="FAIL">[ rowid | 1 | 2 ] does not contain value '1'.</msg>
<status status="FAIL" starttime="20210408 19:13:23.385" endtime="20210408 19:13:23.434"></status>
</kw>
<msg timestamp="20210408 19:13:23.434" level="INFO">${IsPresentInList} = False</msg>
<status status="PASS" starttime="20210408 19:13:23.383" endtime="20210408 19:13:23.435"></status>
</kw>
<status status="PASS" starttime="20210408 19:13:23.277" endtime="20210408 19:13:23.435"></status>
</kw>
<msg timestamp="20210408 19:13:23.435" level="INFO">${IsPresentInList} = False</msg>
<msg timestamp="20210408 19:13:23.435" level="INFO">${RowValue_Int} = 1</msg>
<status status="PASS" starttime="20210408 19:13:23.275" endtime="20210408 19:13:23.435"></status>
</kw>
<msg timestamp="20210408 19:13:23.436" level="INFO">${IsPresentInList_As_Int} = False</msg>
<msg timestamp="20210408 19:13:23.436" level="INFO">${RowValue_Int} = 1</msg>
<status status="PASS" starttime="20210408 19:13:23.115" endtime="20210408 19:13:23.436"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${IsPresentInList}==${True}</arg>
<arg>Get Index From List</arg>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
<arg>ELSE IF</arg>
<arg>${IsPresentInList_As_Int}==${True}</arg>
<arg>Get Index From List</arg>
<arg>${DataRow_List}</arg>
<arg>${RowValue_Int}</arg>
<arg>ELSE</arg>
<arg>Get Index From List</arg>
<arg>${DataRowId_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<assign>
<var>${DataRowName_Index}</var>
</assign>
<kw name="Get Index From List" library="Collections">
<doc>Returns the index of the first occurrence of the ``value`` on the list.</doc>
<arguments>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:13:23.490" endtime="20210408 19:13:23.490"></status>
</kw>
<msg timestamp="20210408 19:13:23.490" level="INFO">${DataRowName_Index} = 1</msg>
<status status="PASS" starttime="20210408 19:13:23.488" endtime="20210408 19:13:23.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Row Name Index for '${sRowValue}' : '${DataRowName_Index}'</arg>
</arguments>
<msg timestamp="20210408 19:13:23.545" level="INFO">Row Name Index for '1' : '1'</msg>
<status status="PASS" starttime="20210408 19:13:23.545" endtime="20210408 19:13:23.545"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${DataRowName_Index}&lt;0</arg>
<arg>Fail</arg>
<arg>'${sRowValue}' is not found at '${DataRow_List}' Data Row Values.</arg>
</arguments>
<status status="PASS" starttime="20210408 19:13:23.613" endtime="20210408 19:13:23.614"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${DataRowName_Index}+1</arg>
</arguments>
<assign>
<var>${DataRowValue_Index}</var>
</assign>
<msg timestamp="20210408 19:13:23.704" level="INFO">${DataRowValue_Index} = 2</msg>
<status status="PASS" starttime="20210408 19:13:23.703" endtime="20210408 19:13:23.704"></status>
</kw>
<msg timestamp="20210408 19:13:23.704" level="INFO">${RowId_Index} = 2</msg>
<status status="PASS" starttime="20210408 19:13:22.836" endtime="20210408 19:13:23.704"></status>
</kw>
<kw name="Write Excel Cell" library="ExcelLibrary">
<doc>Writes value to the cell.</doc>
<arguments>
<arg>${RowId_Index}</arg>
<arg>${ColumnHeader_Index}</arg>
<arg>${sData}</arg>
<arg>${sSheetName}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:13:23.772" endtime="20210408 19:13:23.773"></status>
</kw>
<status status="PASS" starttime="20210408 19:13:22.006" endtime="20210408 19:13:23.773"></status>
</kw>
<status status="PASS" starttime="20210408 19:13:22.004" endtime="20210408 19:13:23.774"></status>
</kw>
<kw name="Save Excel Document" library="ExcelLibrary">
<doc>Saves the current document to disk.</doc>
<arguments>
<arg>${sFilePath}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:13:23.826" endtime="20210408 19:13:23.861"></status>
</kw>
<kw name="Close Current Excel Document" library="ExcelLibrary">
<doc>Closes current document.</doc>
<status status="PASS" starttime="20210408 19:13:23.912" endtime="20210408 19:13:23.913"></status>
</kw>
<status status="PASS" starttime="20210408 19:13:21.849" endtime="20210408 19:13:23.913"></status>
</kw>
<kw name="Write Data To Excel" library="GenericKeywords">
<doc>This keyword is used to Write Data To Excel.
@author: hstone 21FEB2020 - Initial Create
@update: hstone 17MAR2020 - Updated 'Run Keyword If '${multipleValue}'=='N'' to '... ELSE IF '${multipleValue}'=='N''
@update: jloretiz 15JUN2020 - add argument for column reference choice</doc>
<arguments>
<arg>CRED02_FacilitySetup</arg>
<arg>Facility_MaturityDate</arg>
<arg>&amp;{ExcelPath}[rowid]</arg>
<arg>${Facility_MaturityDate}</arg>
<arg>sColumnReference=rowid</arg>
</arguments>
<kw name="Open Excel Document" library="ExcelLibrary">
<doc>Opens xlsx document file.</doc>
<arguments>
<arg>${sFilePath}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20210408 19:13:24.234" endtime="20210408 19:13:24.285"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${multipleValue}'=='Y'</arg>
<arg>Write Data To All Column Rows</arg>
<arg>${sSheetName}</arg>
<arg>${sColumnName}</arg>
<arg>${newValue}</arg>
<arg>ELSE IF</arg>
<arg>'${multipleValue}'=='N'</arg>
<arg>Write Data To Cell</arg>
<arg>${sSheetName}</arg>
<arg>${sColumnName}</arg>
<arg>${rowid}</arg>
<arg>${newValue}</arg>
<arg>${bTestCaseColumn}</arg>
<arg>${sColumnReference}</arg>
</arguments>
<kw name="Write Data To Cell" library="GenericKeywords">
<doc>This keyword will be used for writing data to single excel cell.
@author: hstone 20FEB2020 Initial Create
@update: jloretiz 15JUN2020 - add argument for column reference choice</doc>
<arguments>
<arg>${sSheetName}</arg>
<arg>${sColumnName}</arg>
<arg>${rowid}</arg>
<arg>${newValue}</arg>
<arg>${bTestCaseColumn}</arg>
<arg>${sColumnReference}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${sColumnReference}</arg>
</arguments>
<msg timestamp="20210408 19:13:24.392" level="INFO">rowid</msg>
<status status="PASS" starttime="20210408 19:13:24.392" endtime="20210408 19:13:24.392"></status>
</kw>
<kw name="Get Column Header Index" library="GenericKeywords">
<doc>This keyword is used to get the Column Header Index of Test_Case and given Column Name at the Excel Sheet.
@author: hstone 19FEB2020 Initial Create</doc>
<arguments>
<arg>${sSheetName}</arg>
<arg>${sColumnName}</arg>
<arg>${bTestCaseColumn}</arg>
<arg>${sColumnReference}</arg>
</arguments>
<assign>
<var>${TestCaseHeader_Index}</var>
<var>${ColumnHeader_Index}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>(Get Column Header Index) sTestCaseColReference = '${sTestCaseColReference}'</arg>
</arguments>
<msg timestamp="20210408 19:13:24.495" level="INFO">(Get Column Header Index) sTestCaseColReference = 'rowid'</msg>
<status status="PASS" starttime="20210408 19:13:24.494" endtime="20210408 19:13:24.495"></status>
</kw>
<kw name="Read Excel Row" library="ExcelLibrary">
<doc>Returns content of a row from the current sheet of the document.</doc>
<arguments>
<arg>1</arg>
<arg>sheet_name=${sSheetName}</arg>
</arguments>
<assign>
<var>${DataColumn_List}</var>
</assign>
<msg timestamp="20210408 19:13:24.551" level="INFO">${DataColumn_List} = ['rowid', 'Test_Case', 'Facility_NamePrefix', 'Deal_Name', 'Facility_Name', 'Facility_AgreementDate', 'Facility_EffectiveDate', 'Facility_ExpiryDate', 'Facility_MaturityDate', 'Facility_Currency', 'Fa...</msg>
<status status="PASS" starttime="20210408 19:13:24.550" endtime="20210408 19:13:24.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Data Set Sheet Name: '${sSheetName}'</arg>
</arguments>
<msg timestamp="20210408 19:13:24.604" level="INFO">Data Set Sheet Name: 'CRED02_FacilitySetup'</msg>
<status status="PASS" starttime="20210408 19:13:24.603" endtime="20210408 19:13:24.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Data Set Sheet Column Names: '${DataColumn_List}'</arg>
</arguments>
<msg timestamp="20210408 19:13:24.655" level="INFO">Data Set Sheet Column Names: '['rowid', 'Test_Case', 'Facility_NamePrefix', 'Deal_Name', 'Facility_Name', 'Facility_AgreementDate', 'Facility_EffectiveDate', 'Facility_ExpiryDate', 'Facility_MaturityDate', 'Facility_Currency', 'Facility_Type', 'Facility_ProposedCmtAmt', 'Facility_SubType', 'Facility_ANSIID', 'Facility_ServicingGroup', 'Facility_Customer', 'Facility_SGLocation', 'Facility_AdjustmentSettings', 'Facility_AgreementDateAdjustment', 'Facility_EffectiveDateAdjustment', 'Facility_ExpiryDateAdjustment', 'Facility_MaturityDateAdjustment', 'Facility_RiskType', 'Facility_RiskTypeLimit', 'Facility_LoanPurposeType', 'Facility_GlobalLimit', 'Facility_PricingOption', 'Facility_ARRObservationPeriod', 'Facility_LookbackDays', 'Facility_LockoutDays', 'Facility_RateBasis', 'Facility_CalculationMethod', 'MIS_Code', 'MIS_Value']'</msg>
<status status="PASS" starttime="20210408 19:13:24.654" endtime="20210408 19:13:24.655"></status>
</kw>
<kw name="Get Index From List" library="Collections">
<doc>Returns the index of the first occurrence of the ``value`` on the list.</doc>
<arguments>
<arg>${DataColumn_List}</arg>
<arg>${sTestCaseColReference}</arg>
</arguments>
<assign>
<var>${TestCaseHeaderName_Index}</var>
</assign>
<msg timestamp="20210408 19:13:24.708" level="INFO">${TestCaseHeaderName_Index} = 0</msg>
<status status="PASS" starttime="20210408 19:13:24.708" endtime="20210408 19:13:24.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Fetched Test Case Column Index : '${TestCaseHeaderName_Index}'</arg>
</arguments>
<msg timestamp="20210408 19:13:24.759" level="INFO">Fetched Test Case Column Index : '0'</msg>
<status status="PASS" starttime="20210408 19:13:24.759" endtime="20210408 19:13:24.759"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${TestCaseHeaderName_Index}&lt;0 and '${bTestCaseColumn}'=='False'</arg>
<arg>Set Variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>Evaluate</arg>
<arg>${TestCaseHeaderName_Index}+1</arg>
</arguments>
<assign>
<var>${TestCaseHeaderName_Index}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${TestCaseHeaderName_Index}+1</arg>
</arguments>
<status status="PASS" starttime="20210408 19:13:24.811" endtime="20210408 19:13:24.812"></status>
</kw>
<msg timestamp="20210408 19:13:24.812" level="INFO">${TestCaseHeaderName_Index} = 1</msg>
<status status="PASS" starttime="20210408 19:13:24.810" endtime="20210408 19:13:24.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Evaluated Test Case Column Index : '${TestCaseHeaderName_Index}'</arg>
</arguments>
<msg timestamp="20210408 19:13:24.864" level="INFO">Evaluated Test Case Column Index : '1'</msg>
<status status="PASS" starttime="20210408 19:13:24.863" endtime="20210408 19:13:24.864"></status>
</kw>
<kw name="Get Index From List" library="Collections">
<doc>Returns the index of the first occurrence of the ``value`` on the list.</doc>
<arguments>
<arg>${DataColumn_List}</arg>
<arg>${sColumnName}</arg>
</arguments>
<assign>
<var>${ColumnName_Index}</var>
</assign>
<msg timestamp="20210408 19:13:24.916" level="INFO">${ColumnName_Index} = 8</msg>
<status status="PASS" starttime="20210408 19:13:24.916" endtime="20210408 19:13:24.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Column Name Index : '${ColumnName_Index}'</arg>
</arguments>
<msg timestamp="20210408 19:13:24.967" level="INFO">Column Name Index : '8'</msg>
<status status="PASS" starttime="20210408 19:13:24.967" endtime="20210408 19:13:24.968"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${ColumnName_Index}&lt;0</arg>
<arg>Fail</arg>
<arg>'${sColumnName}' is not found at '${DataColumn_List}' Data Column Values.</arg>
</arguments>
<status status="PASS" starttime="20210408 19:13:25.020" endtime="20210408 19:13:25.021"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ColumnName_Index}+1</arg>
</arguments>
<assign>
<var>${ColumnName_Index}</var>
</assign>
<msg timestamp="20210408 19:13:25.071" level="INFO">${ColumnName_Index} = 9</msg>
<status status="PASS" starttime="20210408 19:13:25.070" endtime="20210408 19:13:25.071"></status>
</kw>
<msg timestamp="20210408 19:13:25.071" level="INFO">${TestCaseHeader_Index} = 1</msg>
<msg timestamp="20210408 19:13:25.071" level="INFO">${ColumnHeader_Index} = 9</msg>
<status status="PASS" starttime="20210408 19:13:24.442" endtime="20210408 19:13:25.071"></status>
</kw>
<kw name="Get Index of a Row Value using a Reference Header Index" library="GenericKeywords">
<doc>This keyword is used to get index of a row value using a reference header index
@author: hstone 19FEB2020 Initial Create</doc>
<arguments>
<arg>${sSheetName}</arg>
<arg>${rowid}</arg>
<arg>${TestCaseHeader_Index}</arg>
</arguments>
<assign>
<var>${RowId_Index}</var>
</assign>
<kw name="Read Excel Column" library="ExcelLibrary">
<doc>Returns content of a column from the current sheet of the document.</doc>
<arguments>
<arg>${sReferenceHeader_Index}</arg>
<arg>sheet_name=${sSheetName}</arg>
</arguments>
<assign>
<var>${DataRow_List}</var>
</assign>
<msg timestamp="20210408 19:13:25.175" level="INFO">${DataRow_List} = ['rowid', '1', '2']</msg>
<status status="PASS" starttime="20210408 19:13:25.174" endtime="20210408 19:13:25.175"></status>
</kw>
<kw name="Read Excel Column" library="ExcelLibrary">
<doc>Returns content of a column from the current sheet of the document.</doc>
<arguments>
<arg>1</arg>
<arg>sheet_name=${sSheetName}</arg>
</arguments>
<assign>
<var>${DataRowId_List}</var>
</assign>
<msg timestamp="20210408 19:13:25.227" level="INFO">${DataRowId_List} = ['rowid', '1', '2']</msg>
<status status="PASS" starttime="20210408 19:13:25.226" endtime="20210408 19:13:25.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Row Names Under Reference Header with Index '${sReferenceHeader_Index}' : '${DataRow_List}'</arg>
</arguments>
<msg timestamp="20210408 19:13:25.278" level="INFO">Row Names Under Reference Header with Index '1' : '['rowid', '1', '2']'</msg>
<status status="PASS" starttime="20210408 19:13:25.277" endtime="20210408 19:13:25.278"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>List Should Contain Value</arg>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<assign>
<var>${IsPresentInList}</var>
</assign>
<kw name="List Should Contain Value" library="Collections">
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<arguments>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:13:25.340" endtime="20210408 19:13:25.340"></status>
</kw>
<msg timestamp="20210408 19:13:25.340" level="INFO">${IsPresentInList} = True</msg>
<status status="PASS" starttime="20210408 19:13:25.338" endtime="20210408 19:13:25.340"></status>
</kw>
<kw name="Check if Row Value Exists on List as Int" library="GenericKeywords">
<doc>This keyword is used to check if value exists on a list as a string
@author: hstone 13APR2020 Initial Create</doc>
<arguments>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<assign>
<var>${IsPresentInList_As_Int}</var>
<var>${RowValue_Int}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${False}</arg>
</arguments>
<assign>
<var>${IsPresentInList}</var>
</assign>
<msg timestamp="20210408 19:13:25.443" level="INFO">${IsPresentInList} = False</msg>
<status status="PASS" starttime="20210408 19:13:25.442" endtime="20210408 19:13:25.443"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Convert To Integer</arg>
<arg>${sValue}</arg>
</arguments>
<assign>
<var>${IsIntConvPassed}</var>
</assign>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${sValue}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:13:25.495" endtime="20210408 19:13:25.495"></status>
</kw>
<msg timestamp="20210408 19:13:25.495" level="INFO">${IsIntConvPassed} = True</msg>
<status status="PASS" starttime="20210408 19:13:25.493" endtime="20210408 19:13:25.495"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${IsIntConvPassed}==${True}</arg>
<arg>Check if a String Exists as Int on a List</arg>
<arg>${lTarget_List}</arg>
<arg>${sValue}</arg>
</arguments>
<assign>
<var>${IsPresentInList}</var>
<var>${RowValue_Int}</var>
</assign>
<kw name="Check if a String Exists as Int on a List" library="GenericKeywords">
<doc>This keyword is used to check if a string exists as an integer on a list.
@author: hstone 13APR2020 Initial Create</doc>
<arguments>
<arg>${lTarget_List}</arg>
<arg>${sValue}</arg>
</arguments>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${sValue}</arg>
</arguments>
<assign>
<var>${Value_Int}</var>
</assign>
<msg timestamp="20210408 19:13:25.598" level="INFO">${Value_Int} = 1</msg>
<status status="PASS" starttime="20210408 19:13:25.598" endtime="20210408 19:13:25.599"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>List Should Contain Value</arg>
<arg>${lTarget_List}</arg>
<arg>${Value_Int}</arg>
</arguments>
<assign>
<var>${IsPresentInList}</var>
</assign>
<kw name="List Should Contain Value" library="Collections">
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<arguments>
<arg>${lTarget_List}</arg>
<arg>${Value_Int}</arg>
</arguments>
<msg timestamp="20210408 19:13:25.651" level="FAIL">[ rowid | 1 | 2 ] does not contain value '1'.</msg>
<status status="FAIL" starttime="20210408 19:13:25.651" endtime="20210408 19:13:25.700"></status>
</kw>
<msg timestamp="20210408 19:13:25.701" level="INFO">${IsPresentInList} = False</msg>
<status status="PASS" starttime="20210408 19:13:25.649" endtime="20210408 19:13:25.701"></status>
</kw>
<status status="PASS" starttime="20210408 19:13:25.546" endtime="20210408 19:13:25.701"></status>
</kw>
<msg timestamp="20210408 19:13:25.702" level="INFO">${IsPresentInList} = False</msg>
<msg timestamp="20210408 19:13:25.702" level="INFO">${RowValue_Int} = 1</msg>
<status status="PASS" starttime="20210408 19:13:25.545" endtime="20210408 19:13:25.702"></status>
</kw>
<msg timestamp="20210408 19:13:25.702" level="INFO">${IsPresentInList_As_Int} = False</msg>
<msg timestamp="20210408 19:13:25.702" level="INFO">${RowValue_Int} = 1</msg>
<status status="PASS" starttime="20210408 19:13:25.391" endtime="20210408 19:13:25.702"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${IsPresentInList}==${True}</arg>
<arg>Get Index From List</arg>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
<arg>ELSE IF</arg>
<arg>${IsPresentInList_As_Int}==${True}</arg>
<arg>Get Index From List</arg>
<arg>${DataRow_List}</arg>
<arg>${RowValue_Int}</arg>
<arg>ELSE</arg>
<arg>Get Index From List</arg>
<arg>${DataRowId_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<assign>
<var>${DataRowName_Index}</var>
</assign>
<kw name="Get Index From List" library="Collections">
<doc>Returns the index of the first occurrence of the ``value`` on the list.</doc>
<arguments>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:13:25.754" endtime="20210408 19:13:25.754"></status>
</kw>
<msg timestamp="20210408 19:13:25.754" level="INFO">${DataRowName_Index} = 1</msg>
<status status="PASS" starttime="20210408 19:13:25.752" endtime="20210408 19:13:25.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Row Name Index for '${sRowValue}' : '${DataRowName_Index}'</arg>
</arguments>
<msg timestamp="20210408 19:13:25.806" level="INFO">Row Name Index for '1' : '1'</msg>
<status status="PASS" starttime="20210408 19:13:25.805" endtime="20210408 19:13:25.806"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${DataRowName_Index}&lt;0</arg>
<arg>Fail</arg>
<arg>'${sRowValue}' is not found at '${DataRow_List}' Data Row Values.</arg>
</arguments>
<status status="PASS" starttime="20210408 19:13:25.856" endtime="20210408 19:13:25.857"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${DataRowName_Index}+1</arg>
</arguments>
<assign>
<var>${DataRowValue_Index}</var>
</assign>
<msg timestamp="20210408 19:13:25.907" level="INFO">${DataRowValue_Index} = 2</msg>
<status status="PASS" starttime="20210408 19:13:25.907" endtime="20210408 19:13:25.908"></status>
</kw>
<msg timestamp="20210408 19:13:25.908" level="INFO">${RowId_Index} = 2</msg>
<status status="PASS" starttime="20210408 19:13:25.123" endtime="20210408 19:13:25.908"></status>
</kw>
<kw name="Write Excel Cell" library="ExcelLibrary">
<doc>Writes value to the cell.</doc>
<arguments>
<arg>${RowId_Index}</arg>
<arg>${ColumnHeader_Index}</arg>
<arg>${sData}</arg>
<arg>${sSheetName}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:13:25.957" endtime="20210408 19:13:25.957"></status>
</kw>
<status status="PASS" starttime="20210408 19:13:24.339" endtime="20210408 19:13:25.958"></status>
</kw>
<status status="PASS" starttime="20210408 19:13:24.337" endtime="20210408 19:13:25.958"></status>
</kw>
<kw name="Save Excel Document" library="ExcelLibrary">
<doc>Saves the current document to disk.</doc>
<arguments>
<arg>${sFilePath}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:13:26.011" endtime="20210408 19:13:26.047"></status>
</kw>
<kw name="Close Current Excel Document" library="ExcelLibrary">
<doc>Closes current document.</doc>
<status status="PASS" starttime="20210408 19:13:26.100" endtime="20210408 19:13:26.100"></status>
</kw>
<status status="PASS" starttime="20210408 19:13:24.182" endtime="20210408 19:13:26.100"></status>
</kw>
<kw name="Write Data To Excel" library="GenericKeywords">
<doc>This keyword is used to Write Data To Excel.
@author: hstone 21FEB2020 - Initial Create
@update: hstone 17MAR2020 - Updated 'Run Keyword If '${multipleValue}'=='N'' to '... ELSE IF '${multipleValue}'=='N''
@update: jloretiz 15JUN2020 - add argument for column reference choice</doc>
<arguments>
<arg>CRED02_FacilitySetup</arg>
<arg>Facility_AgreementDate</arg>
<arg>&amp;{ExcelPath}[rowid]</arg>
<arg>${Facility_AgreementDate}</arg>
<arg>sColumnReference=rowid</arg>
</arguments>
<kw name="Open Excel Document" library="ExcelLibrary">
<doc>Opens xlsx document file.</doc>
<arguments>
<arg>${sFilePath}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20210408 19:13:26.326" endtime="20210408 19:13:26.377"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${multipleValue}'=='Y'</arg>
<arg>Write Data To All Column Rows</arg>
<arg>${sSheetName}</arg>
<arg>${sColumnName}</arg>
<arg>${newValue}</arg>
<arg>ELSE IF</arg>
<arg>'${multipleValue}'=='N'</arg>
<arg>Write Data To Cell</arg>
<arg>${sSheetName}</arg>
<arg>${sColumnName}</arg>
<arg>${rowid}</arg>
<arg>${newValue}</arg>
<arg>${bTestCaseColumn}</arg>
<arg>${sColumnReference}</arg>
</arguments>
<kw name="Write Data To Cell" library="GenericKeywords">
<doc>This keyword will be used for writing data to single excel cell.
@author: hstone 20FEB2020 Initial Create
@update: jloretiz 15JUN2020 - add argument for column reference choice</doc>
<arguments>
<arg>${sSheetName}</arg>
<arg>${sColumnName}</arg>
<arg>${rowid}</arg>
<arg>${newValue}</arg>
<arg>${bTestCaseColumn}</arg>
<arg>${sColumnReference}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${sColumnReference}</arg>
</arguments>
<msg timestamp="20210408 19:13:26.490" level="INFO">rowid</msg>
<status status="PASS" starttime="20210408 19:13:26.489" endtime="20210408 19:13:26.490"></status>
</kw>
<kw name="Get Column Header Index" library="GenericKeywords">
<doc>This keyword is used to get the Column Header Index of Test_Case and given Column Name at the Excel Sheet.
@author: hstone 19FEB2020 Initial Create</doc>
<arguments>
<arg>${sSheetName}</arg>
<arg>${sColumnName}</arg>
<arg>${bTestCaseColumn}</arg>
<arg>${sColumnReference}</arg>
</arguments>
<assign>
<var>${TestCaseHeader_Index}</var>
<var>${ColumnHeader_Index}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>(Get Column Header Index) sTestCaseColReference = '${sTestCaseColReference}'</arg>
</arguments>
<msg timestamp="20210408 19:13:26.595" level="INFO">(Get Column Header Index) sTestCaseColReference = 'rowid'</msg>
<status status="PASS" starttime="20210408 19:13:26.595" endtime="20210408 19:13:26.596"></status>
</kw>
<kw name="Read Excel Row" library="ExcelLibrary">
<doc>Returns content of a row from the current sheet of the document.</doc>
<arguments>
<arg>1</arg>
<arg>sheet_name=${sSheetName}</arg>
</arguments>
<assign>
<var>${DataColumn_List}</var>
</assign>
<msg timestamp="20210408 19:13:26.649" level="INFO">${DataColumn_List} = ['rowid', 'Test_Case', 'Facility_NamePrefix', 'Deal_Name', 'Facility_Name', 'Facility_AgreementDate', 'Facility_EffectiveDate', 'Facility_ExpiryDate', 'Facility_MaturityDate', 'Facility_Currency', 'Fa...</msg>
<status status="PASS" starttime="20210408 19:13:26.648" endtime="20210408 19:13:26.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Data Set Sheet Name: '${sSheetName}'</arg>
</arguments>
<msg timestamp="20210408 19:13:26.702" level="INFO">Data Set Sheet Name: 'CRED02_FacilitySetup'</msg>
<status status="PASS" starttime="20210408 19:13:26.701" endtime="20210408 19:13:26.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Data Set Sheet Column Names: '${DataColumn_List}'</arg>
</arguments>
<msg timestamp="20210408 19:13:26.754" level="INFO">Data Set Sheet Column Names: '['rowid', 'Test_Case', 'Facility_NamePrefix', 'Deal_Name', 'Facility_Name', 'Facility_AgreementDate', 'Facility_EffectiveDate', 'Facility_ExpiryDate', 'Facility_MaturityDate', 'Facility_Currency', 'Facility_Type', 'Facility_ProposedCmtAmt', 'Facility_SubType', 'Facility_ANSIID', 'Facility_ServicingGroup', 'Facility_Customer', 'Facility_SGLocation', 'Facility_AdjustmentSettings', 'Facility_AgreementDateAdjustment', 'Facility_EffectiveDateAdjustment', 'Facility_ExpiryDateAdjustment', 'Facility_MaturityDateAdjustment', 'Facility_RiskType', 'Facility_RiskTypeLimit', 'Facility_LoanPurposeType', 'Facility_GlobalLimit', 'Facility_PricingOption', 'Facility_ARRObservationPeriod', 'Facility_LookbackDays', 'Facility_LockoutDays', 'Facility_RateBasis', 'Facility_CalculationMethod', 'MIS_Code', 'MIS_Value']'</msg>
<status status="PASS" starttime="20210408 19:13:26.754" endtime="20210408 19:13:26.755"></status>
</kw>
<kw name="Get Index From List" library="Collections">
<doc>Returns the index of the first occurrence of the ``value`` on the list.</doc>
<arguments>
<arg>${DataColumn_List}</arg>
<arg>${sTestCaseColReference}</arg>
</arguments>
<assign>
<var>${TestCaseHeaderName_Index}</var>
</assign>
<msg timestamp="20210408 19:13:26.806" level="INFO">${TestCaseHeaderName_Index} = 0</msg>
<status status="PASS" starttime="20210408 19:13:26.805" endtime="20210408 19:13:26.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Fetched Test Case Column Index : '${TestCaseHeaderName_Index}'</arg>
</arguments>
<msg timestamp="20210408 19:13:26.859" level="INFO">Fetched Test Case Column Index : '0'</msg>
<status status="PASS" starttime="20210408 19:13:26.859" endtime="20210408 19:13:26.859"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${TestCaseHeaderName_Index}&lt;0 and '${bTestCaseColumn}'=='False'</arg>
<arg>Set Variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>Evaluate</arg>
<arg>${TestCaseHeaderName_Index}+1</arg>
</arguments>
<assign>
<var>${TestCaseHeaderName_Index}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${TestCaseHeaderName_Index}+1</arg>
</arguments>
<status status="PASS" starttime="20210408 19:13:26.913" endtime="20210408 19:13:26.913"></status>
</kw>
<msg timestamp="20210408 19:13:26.913" level="INFO">${TestCaseHeaderName_Index} = 1</msg>
<status status="PASS" starttime="20210408 19:13:26.911" endtime="20210408 19:13:26.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Evaluated Test Case Column Index : '${TestCaseHeaderName_Index}'</arg>
</arguments>
<msg timestamp="20210408 19:13:26.964" level="INFO">Evaluated Test Case Column Index : '1'</msg>
<status status="PASS" starttime="20210408 19:13:26.963" endtime="20210408 19:13:26.964"></status>
</kw>
<kw name="Get Index From List" library="Collections">
<doc>Returns the index of the first occurrence of the ``value`` on the list.</doc>
<arguments>
<arg>${DataColumn_List}</arg>
<arg>${sColumnName}</arg>
</arguments>
<assign>
<var>${ColumnName_Index}</var>
</assign>
<msg timestamp="20210408 19:13:27.022" level="INFO">${ColumnName_Index} = 5</msg>
<status status="PASS" starttime="20210408 19:13:27.021" endtime="20210408 19:13:27.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Column Name Index : '${ColumnName_Index}'</arg>
</arguments>
<msg timestamp="20210408 19:13:27.182" level="INFO">Column Name Index : '5'</msg>
<status status="PASS" starttime="20210408 19:13:27.181" endtime="20210408 19:13:27.182"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${ColumnName_Index}&lt;0</arg>
<arg>Fail</arg>
<arg>'${sColumnName}' is not found at '${DataColumn_List}' Data Column Values.</arg>
</arguments>
<status status="PASS" starttime="20210408 19:13:27.233" endtime="20210408 19:13:27.234"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ColumnName_Index}+1</arg>
</arguments>
<assign>
<var>${ColumnName_Index}</var>
</assign>
<msg timestamp="20210408 19:13:27.286" level="INFO">${ColumnName_Index} = 6</msg>
<status status="PASS" starttime="20210408 19:13:27.285" endtime="20210408 19:13:27.286"></status>
</kw>
<msg timestamp="20210408 19:13:27.286" level="INFO">${TestCaseHeader_Index} = 1</msg>
<msg timestamp="20210408 19:13:27.286" level="INFO">${ColumnHeader_Index} = 6</msg>
<status status="PASS" starttime="20210408 19:13:26.542" endtime="20210408 19:13:27.286"></status>
</kw>
<kw name="Get Index of a Row Value using a Reference Header Index" library="GenericKeywords">
<doc>This keyword is used to get index of a row value using a reference header index
@author: hstone 19FEB2020 Initial Create</doc>
<arguments>
<arg>${sSheetName}</arg>
<arg>${rowid}</arg>
<arg>${TestCaseHeader_Index}</arg>
</arguments>
<assign>
<var>${RowId_Index}</var>
</assign>
<kw name="Read Excel Column" library="ExcelLibrary">
<doc>Returns content of a column from the current sheet of the document.</doc>
<arguments>
<arg>${sReferenceHeader_Index}</arg>
<arg>sheet_name=${sSheetName}</arg>
</arguments>
<assign>
<var>${DataRow_List}</var>
</assign>
<msg timestamp="20210408 19:13:27.398" level="INFO">${DataRow_List} = ['rowid', '1', '2']</msg>
<status status="PASS" starttime="20210408 19:13:27.398" endtime="20210408 19:13:27.398"></status>
</kw>
<kw name="Read Excel Column" library="ExcelLibrary">
<doc>Returns content of a column from the current sheet of the document.</doc>
<arguments>
<arg>1</arg>
<arg>sheet_name=${sSheetName}</arg>
</arguments>
<assign>
<var>${DataRowId_List}</var>
</assign>
<msg timestamp="20210408 19:13:27.449" level="INFO">${DataRowId_List} = ['rowid', '1', '2']</msg>
<status status="PASS" starttime="20210408 19:13:27.448" endtime="20210408 19:13:27.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Row Names Under Reference Header with Index '${sReferenceHeader_Index}' : '${DataRow_List}'</arg>
</arguments>
<msg timestamp="20210408 19:13:27.499" level="INFO">Row Names Under Reference Header with Index '1' : '['rowid', '1', '2']'</msg>
<status status="PASS" starttime="20210408 19:13:27.499" endtime="20210408 19:13:27.500"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>List Should Contain Value</arg>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<assign>
<var>${IsPresentInList}</var>
</assign>
<kw name="List Should Contain Value" library="Collections">
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<arguments>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:13:27.551" endtime="20210408 19:13:27.552"></status>
</kw>
<msg timestamp="20210408 19:13:27.552" level="INFO">${IsPresentInList} = True</msg>
<status status="PASS" starttime="20210408 19:13:27.550" endtime="20210408 19:13:27.552"></status>
</kw>
<kw name="Check if Row Value Exists on List as Int" library="GenericKeywords">
<doc>This keyword is used to check if value exists on a list as a string
@author: hstone 13APR2020 Initial Create</doc>
<arguments>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<assign>
<var>${IsPresentInList_As_Int}</var>
<var>${RowValue_Int}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${False}</arg>
</arguments>
<assign>
<var>${IsPresentInList}</var>
</assign>
<msg timestamp="20210408 19:13:27.653" level="INFO">${IsPresentInList} = False</msg>
<status status="PASS" starttime="20210408 19:13:27.653" endtime="20210408 19:13:27.653"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Convert To Integer</arg>
<arg>${sValue}</arg>
</arguments>
<assign>
<var>${IsIntConvPassed}</var>
</assign>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${sValue}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:13:27.723" endtime="20210408 19:13:27.724"></status>
</kw>
<msg timestamp="20210408 19:13:27.724" level="INFO">${IsIntConvPassed} = True</msg>
<status status="PASS" starttime="20210408 19:13:27.721" endtime="20210408 19:13:27.724"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${IsIntConvPassed}==${True}</arg>
<arg>Check if a String Exists as Int on a List</arg>
<arg>${lTarget_List}</arg>
<arg>${sValue}</arg>
</arguments>
<assign>
<var>${IsPresentInList}</var>
<var>${RowValue_Int}</var>
</assign>
<kw name="Check if a String Exists as Int on a List" library="GenericKeywords">
<doc>This keyword is used to check if a string exists as an integer on a list.
@author: hstone 13APR2020 Initial Create</doc>
<arguments>
<arg>${lTarget_List}</arg>
<arg>${sValue}</arg>
</arguments>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${sValue}</arg>
</arguments>
<assign>
<var>${Value_Int}</var>
</assign>
<msg timestamp="20210408 19:13:27.836" level="INFO">${Value_Int} = 1</msg>
<status status="PASS" starttime="20210408 19:13:27.835" endtime="20210408 19:13:27.836"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>List Should Contain Value</arg>
<arg>${lTarget_List}</arg>
<arg>${Value_Int}</arg>
</arguments>
<assign>
<var>${IsPresentInList}</var>
</assign>
<kw name="List Should Contain Value" library="Collections">
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<arguments>
<arg>${lTarget_List}</arg>
<arg>${Value_Int}</arg>
</arguments>
<msg timestamp="20210408 19:13:27.893" level="FAIL">[ rowid | 1 | 2 ] does not contain value '1'.</msg>
<status status="FAIL" starttime="20210408 19:13:27.893" endtime="20210408 19:13:27.943"></status>
</kw>
<msg timestamp="20210408 19:13:27.943" level="INFO">${IsPresentInList} = False</msg>
<status status="PASS" starttime="20210408 19:13:27.891" endtime="20210408 19:13:27.943"></status>
</kw>
<status status="PASS" starttime="20210408 19:13:27.784" endtime="20210408 19:13:27.944"></status>
</kw>
<msg timestamp="20210408 19:13:27.944" level="INFO">${IsPresentInList} = False</msg>
<msg timestamp="20210408 19:13:27.944" level="INFO">${RowValue_Int} = 1</msg>
<status status="PASS" starttime="20210408 19:13:27.783" endtime="20210408 19:13:27.944"></status>
</kw>
<msg timestamp="20210408 19:13:27.944" level="INFO">${IsPresentInList_As_Int} = False</msg>
<msg timestamp="20210408 19:13:27.944" level="INFO">${RowValue_Int} = 1</msg>
<status status="PASS" starttime="20210408 19:13:27.602" endtime="20210408 19:13:27.945"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${IsPresentInList}==${True}</arg>
<arg>Get Index From List</arg>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
<arg>ELSE IF</arg>
<arg>${IsPresentInList_As_Int}==${True}</arg>
<arg>Get Index From List</arg>
<arg>${DataRow_List}</arg>
<arg>${RowValue_Int}</arg>
<arg>ELSE</arg>
<arg>Get Index From List</arg>
<arg>${DataRowId_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<assign>
<var>${DataRowName_Index}</var>
</assign>
<kw name="Get Index From List" library="Collections">
<doc>Returns the index of the first occurrence of the ``value`` on the list.</doc>
<arguments>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:13:27.999" endtime="20210408 19:13:27.999"></status>
</kw>
<msg timestamp="20210408 19:13:27.999" level="INFO">${DataRowName_Index} = 1</msg>
<status status="PASS" starttime="20210408 19:13:27.997" endtime="20210408 19:13:27.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Row Name Index for '${sRowValue}' : '${DataRowName_Index}'</arg>
</arguments>
<msg timestamp="20210408 19:13:28.051" level="INFO">Row Name Index for '1' : '1'</msg>
<status status="PASS" starttime="20210408 19:13:28.051" endtime="20210408 19:13:28.051"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${DataRowName_Index}&lt;0</arg>
<arg>Fail</arg>
<arg>'${sRowValue}' is not found at '${DataRow_List}' Data Row Values.</arg>
</arguments>
<status status="PASS" starttime="20210408 19:13:28.103" endtime="20210408 19:13:28.104"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${DataRowName_Index}+1</arg>
</arguments>
<assign>
<var>${DataRowValue_Index}</var>
</assign>
<msg timestamp="20210408 19:13:28.155" level="INFO">${DataRowValue_Index} = 2</msg>
<status status="PASS" starttime="20210408 19:13:28.154" endtime="20210408 19:13:28.155"></status>
</kw>
<msg timestamp="20210408 19:13:28.155" level="INFO">${RowId_Index} = 2</msg>
<status status="PASS" starttime="20210408 19:13:27.346" endtime="20210408 19:13:28.156"></status>
</kw>
<kw name="Write Excel Cell" library="ExcelLibrary">
<doc>Writes value to the cell.</doc>
<arguments>
<arg>${RowId_Index}</arg>
<arg>${ColumnHeader_Index}</arg>
<arg>${sData}</arg>
<arg>${sSheetName}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:13:28.208" endtime="20210408 19:13:28.208"></status>
</kw>
<status status="PASS" starttime="20210408 19:13:26.438" endtime="20210408 19:13:28.209"></status>
</kw>
<status status="PASS" starttime="20210408 19:13:26.436" endtime="20210408 19:13:28.209"></status>
</kw>
<kw name="Save Excel Document" library="ExcelLibrary">
<doc>Saves the current document to disk.</doc>
<arguments>
<arg>${sFilePath}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:13:28.262" endtime="20210408 19:13:28.304"></status>
</kw>
<kw name="Close Current Excel Document" library="ExcelLibrary">
<doc>Closes current document.</doc>
<status status="PASS" starttime="20210408 19:13:28.368" endtime="20210408 19:13:28.369"></status>
</kw>
<status status="PASS" starttime="20210408 19:13:26.271" endtime="20210408 19:13:28.369"></status>
</kw>
<kw name="Write Data To Excel" library="GenericKeywords">
<doc>This keyword is used to Write Data To Excel.
@author: hstone 21FEB2020 - Initial Create
@update: hstone 17MAR2020 - Updated 'Run Keyword If '${multipleValue}'=='N'' to '... ELSE IF '${multipleValue}'=='N''
@update: jloretiz 15JUN2020 - add argument for column reference choice</doc>
<arguments>
<arg>CRED02_FacilitySetup</arg>
<arg>Facility_EffectiveDate</arg>
<arg>&amp;{ExcelPath}[rowid]</arg>
<arg>${Facility_EffectiveDate}</arg>
<arg>sColumnReference=rowid</arg>
</arguments>
<kw name="Open Excel Document" library="ExcelLibrary">
<doc>Opens xlsx document file.</doc>
<arguments>
<arg>${sFilePath}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20210408 19:13:28.583" endtime="20210408 19:13:28.633"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${multipleValue}'=='Y'</arg>
<arg>Write Data To All Column Rows</arg>
<arg>${sSheetName}</arg>
<arg>${sColumnName}</arg>
<arg>${newValue}</arg>
<arg>ELSE IF</arg>
<arg>'${multipleValue}'=='N'</arg>
<arg>Write Data To Cell</arg>
<arg>${sSheetName}</arg>
<arg>${sColumnName}</arg>
<arg>${rowid}</arg>
<arg>${newValue}</arg>
<arg>${bTestCaseColumn}</arg>
<arg>${sColumnReference}</arg>
</arguments>
<kw name="Write Data To Cell" library="GenericKeywords">
<doc>This keyword will be used for writing data to single excel cell.
@author: hstone 20FEB2020 Initial Create
@update: jloretiz 15JUN2020 - add argument for column reference choice</doc>
<arguments>
<arg>${sSheetName}</arg>
<arg>${sColumnName}</arg>
<arg>${rowid}</arg>
<arg>${newValue}</arg>
<arg>${bTestCaseColumn}</arg>
<arg>${sColumnReference}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${sColumnReference}</arg>
</arguments>
<msg timestamp="20210408 19:13:28.739" level="INFO">rowid</msg>
<status status="PASS" starttime="20210408 19:13:28.738" endtime="20210408 19:13:28.739"></status>
</kw>
<kw name="Get Column Header Index" library="GenericKeywords">
<doc>This keyword is used to get the Column Header Index of Test_Case and given Column Name at the Excel Sheet.
@author: hstone 19FEB2020 Initial Create</doc>
<arguments>
<arg>${sSheetName}</arg>
<arg>${sColumnName}</arg>
<arg>${bTestCaseColumn}</arg>
<arg>${sColumnReference}</arg>
</arguments>
<assign>
<var>${TestCaseHeader_Index}</var>
<var>${ColumnHeader_Index}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>(Get Column Header Index) sTestCaseColReference = '${sTestCaseColReference}'</arg>
</arguments>
<msg timestamp="20210408 19:13:28.844" level="INFO">(Get Column Header Index) sTestCaseColReference = 'rowid'</msg>
<status status="PASS" starttime="20210408 19:13:28.843" endtime="20210408 19:13:28.844"></status>
</kw>
<kw name="Read Excel Row" library="ExcelLibrary">
<doc>Returns content of a row from the current sheet of the document.</doc>
<arguments>
<arg>1</arg>
<arg>sheet_name=${sSheetName}</arg>
</arguments>
<assign>
<var>${DataColumn_List}</var>
</assign>
<msg timestamp="20210408 19:13:28.897" level="INFO">${DataColumn_List} = ['rowid', 'Test_Case', 'Facility_NamePrefix', 'Deal_Name', 'Facility_Name', 'Facility_AgreementDate', 'Facility_EffectiveDate', 'Facility_ExpiryDate', 'Facility_MaturityDate', 'Facility_Currency', 'Fa...</msg>
<status status="PASS" starttime="20210408 19:13:28.896" endtime="20210408 19:13:28.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Data Set Sheet Name: '${sSheetName}'</arg>
</arguments>
<msg timestamp="20210408 19:13:28.947" level="INFO">Data Set Sheet Name: 'CRED02_FacilitySetup'</msg>
<status status="PASS" starttime="20210408 19:13:28.947" endtime="20210408 19:13:28.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Data Set Sheet Column Names: '${DataColumn_List}'</arg>
</arguments>
<msg timestamp="20210408 19:13:28.999" level="INFO">Data Set Sheet Column Names: '['rowid', 'Test_Case', 'Facility_NamePrefix', 'Deal_Name', 'Facility_Name', 'Facility_AgreementDate', 'Facility_EffectiveDate', 'Facility_ExpiryDate', 'Facility_MaturityDate', 'Facility_Currency', 'Facility_Type', 'Facility_ProposedCmtAmt', 'Facility_SubType', 'Facility_ANSIID', 'Facility_ServicingGroup', 'Facility_Customer', 'Facility_SGLocation', 'Facility_AdjustmentSettings', 'Facility_AgreementDateAdjustment', 'Facility_EffectiveDateAdjustment', 'Facility_ExpiryDateAdjustment', 'Facility_MaturityDateAdjustment', 'Facility_RiskType', 'Facility_RiskTypeLimit', 'Facility_LoanPurposeType', 'Facility_GlobalLimit', 'Facility_PricingOption', 'Facility_ARRObservationPeriod', 'Facility_LookbackDays', 'Facility_LockoutDays', 'Facility_RateBasis', 'Facility_CalculationMethod', 'MIS_Code', 'MIS_Value']'</msg>
<status status="PASS" starttime="20210408 19:13:28.999" endtime="20210408 19:13:28.999"></status>
</kw>
<kw name="Get Index From List" library="Collections">
<doc>Returns the index of the first occurrence of the ``value`` on the list.</doc>
<arguments>
<arg>${DataColumn_List}</arg>
<arg>${sTestCaseColReference}</arg>
</arguments>
<assign>
<var>${TestCaseHeaderName_Index}</var>
</assign>
<msg timestamp="20210408 19:13:29.061" level="INFO">${TestCaseHeaderName_Index} = 0</msg>
<status status="PASS" starttime="20210408 19:13:29.060" endtime="20210408 19:13:29.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Fetched Test Case Column Index : '${TestCaseHeaderName_Index}'</arg>
</arguments>
<msg timestamp="20210408 19:13:29.119" level="INFO">Fetched Test Case Column Index : '0'</msg>
<status status="PASS" starttime="20210408 19:13:29.119" endtime="20210408 19:13:29.120"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${TestCaseHeaderName_Index}&lt;0 and '${bTestCaseColumn}'=='False'</arg>
<arg>Set Variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>Evaluate</arg>
<arg>${TestCaseHeaderName_Index}+1</arg>
</arguments>
<assign>
<var>${TestCaseHeaderName_Index}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${TestCaseHeaderName_Index}+1</arg>
</arguments>
<status status="PASS" starttime="20210408 19:13:29.192" endtime="20210408 19:13:29.192"></status>
</kw>
<msg timestamp="20210408 19:13:29.193" level="INFO">${TestCaseHeaderName_Index} = 1</msg>
<status status="PASS" starttime="20210408 19:13:29.189" endtime="20210408 19:13:29.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Evaluated Test Case Column Index : '${TestCaseHeaderName_Index}'</arg>
</arguments>
<msg timestamp="20210408 19:13:29.257" level="INFO">Evaluated Test Case Column Index : '1'</msg>
<status status="PASS" starttime="20210408 19:13:29.256" endtime="20210408 19:13:29.257"></status>
</kw>
<kw name="Get Index From List" library="Collections">
<doc>Returns the index of the first occurrence of the ``value`` on the list.</doc>
<arguments>
<arg>${DataColumn_List}</arg>
<arg>${sColumnName}</arg>
</arguments>
<assign>
<var>${ColumnName_Index}</var>
</assign>
<msg timestamp="20210408 19:13:29.322" level="INFO">${ColumnName_Index} = 6</msg>
<status status="PASS" starttime="20210408 19:13:29.321" endtime="20210408 19:13:29.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Column Name Index : '${ColumnName_Index}'</arg>
</arguments>
<msg timestamp="20210408 19:13:29.373" level="INFO">Column Name Index : '6'</msg>
<status status="PASS" starttime="20210408 19:13:29.373" endtime="20210408 19:13:29.373"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${ColumnName_Index}&lt;0</arg>
<arg>Fail</arg>
<arg>'${sColumnName}' is not found at '${DataColumn_List}' Data Column Values.</arg>
</arguments>
<status status="PASS" starttime="20210408 19:13:29.432" endtime="20210408 19:13:29.433"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ColumnName_Index}+1</arg>
</arguments>
<assign>
<var>${ColumnName_Index}</var>
</assign>
<msg timestamp="20210408 19:13:29.485" level="INFO">${ColumnName_Index} = 7</msg>
<status status="PASS" starttime="20210408 19:13:29.484" endtime="20210408 19:13:29.485"></status>
</kw>
<msg timestamp="20210408 19:13:29.486" level="INFO">${TestCaseHeader_Index} = 1</msg>
<msg timestamp="20210408 19:13:29.486" level="INFO">${ColumnHeader_Index} = 7</msg>
<status status="PASS" starttime="20210408 19:13:28.788" endtime="20210408 19:13:29.486"></status>
</kw>
<kw name="Get Index of a Row Value using a Reference Header Index" library="GenericKeywords">
<doc>This keyword is used to get index of a row value using a reference header index
@author: hstone 19FEB2020 Initial Create</doc>
<arguments>
<arg>${sSheetName}</arg>
<arg>${rowid}</arg>
<arg>${TestCaseHeader_Index}</arg>
</arguments>
<assign>
<var>${RowId_Index}</var>
</assign>
<kw name="Read Excel Column" library="ExcelLibrary">
<doc>Returns content of a column from the current sheet of the document.</doc>
<arguments>
<arg>${sReferenceHeader_Index}</arg>
<arg>sheet_name=${sSheetName}</arg>
</arguments>
<assign>
<var>${DataRow_List}</var>
</assign>
<msg timestamp="20210408 19:13:29.599" level="INFO">${DataRow_List} = ['rowid', '1', '2']</msg>
<status status="PASS" starttime="20210408 19:13:29.599" endtime="20210408 19:13:29.599"></status>
</kw>
<kw name="Read Excel Column" library="ExcelLibrary">
<doc>Returns content of a column from the current sheet of the document.</doc>
<arguments>
<arg>1</arg>
<arg>sheet_name=${sSheetName}</arg>
</arguments>
<assign>
<var>${DataRowId_List}</var>
</assign>
<msg timestamp="20210408 19:13:29.762" level="INFO">${DataRowId_List} = ['rowid', '1', '2']</msg>
<status status="PASS" starttime="20210408 19:13:29.762" endtime="20210408 19:13:29.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Row Names Under Reference Header with Index '${sReferenceHeader_Index}' : '${DataRow_List}'</arg>
</arguments>
<msg timestamp="20210408 19:13:29.817" level="INFO">Row Names Under Reference Header with Index '1' : '['rowid', '1', '2']'</msg>
<status status="PASS" starttime="20210408 19:13:29.816" endtime="20210408 19:13:29.817"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>List Should Contain Value</arg>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<assign>
<var>${IsPresentInList}</var>
</assign>
<kw name="List Should Contain Value" library="Collections">
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<arguments>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:13:29.869" endtime="20210408 19:13:29.870"></status>
</kw>
<msg timestamp="20210408 19:13:29.870" level="INFO">${IsPresentInList} = True</msg>
<status status="PASS" starttime="20210408 19:13:29.867" endtime="20210408 19:13:29.870"></status>
</kw>
<kw name="Check if Row Value Exists on List as Int" library="GenericKeywords">
<doc>This keyword is used to check if value exists on a list as a string
@author: hstone 13APR2020 Initial Create</doc>
<arguments>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<assign>
<var>${IsPresentInList_As_Int}</var>
<var>${RowValue_Int}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${False}</arg>
</arguments>
<assign>
<var>${IsPresentInList}</var>
</assign>
<msg timestamp="20210408 19:13:29.973" level="INFO">${IsPresentInList} = False</msg>
<status status="PASS" starttime="20210408 19:13:29.972" endtime="20210408 19:13:29.973"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Convert To Integer</arg>
<arg>${sValue}</arg>
</arguments>
<assign>
<var>${IsIntConvPassed}</var>
</assign>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${sValue}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:13:30.026" endtime="20210408 19:13:30.026"></status>
</kw>
<msg timestamp="20210408 19:13:30.026" level="INFO">${IsIntConvPassed} = True</msg>
<status status="PASS" starttime="20210408 19:13:30.024" endtime="20210408 19:13:30.027"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${IsIntConvPassed}==${True}</arg>
<arg>Check if a String Exists as Int on a List</arg>
<arg>${lTarget_List}</arg>
<arg>${sValue}</arg>
</arguments>
<assign>
<var>${IsPresentInList}</var>
<var>${RowValue_Int}</var>
</assign>
<kw name="Check if a String Exists as Int on a List" library="GenericKeywords">
<doc>This keyword is used to check if a string exists as an integer on a list.
@author: hstone 13APR2020 Initial Create</doc>
<arguments>
<arg>${lTarget_List}</arg>
<arg>${sValue}</arg>
</arguments>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${sValue}</arg>
</arguments>
<assign>
<var>${Value_Int}</var>
</assign>
<msg timestamp="20210408 19:13:30.130" level="INFO">${Value_Int} = 1</msg>
<status status="PASS" starttime="20210408 19:13:30.130" endtime="20210408 19:13:30.130"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>List Should Contain Value</arg>
<arg>${lTarget_List}</arg>
<arg>${Value_Int}</arg>
</arguments>
<assign>
<var>${IsPresentInList}</var>
</assign>
<kw name="List Should Contain Value" library="Collections">
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<arguments>
<arg>${lTarget_List}</arg>
<arg>${Value_Int}</arg>
</arguments>
<msg timestamp="20210408 19:13:30.184" level="FAIL">[ rowid | 1 | 2 ] does not contain value '1'.</msg>
<status status="FAIL" starttime="20210408 19:13:30.183" endtime="20210408 19:13:30.232"></status>
</kw>
<msg timestamp="20210408 19:13:30.233" level="INFO">${IsPresentInList} = False</msg>
<status status="PASS" starttime="20210408 19:13:30.181" endtime="20210408 19:13:30.233"></status>
</kw>
<status status="PASS" starttime="20210408 19:13:30.077" endtime="20210408 19:13:30.233"></status>
</kw>
<msg timestamp="20210408 19:13:30.233" level="INFO">${IsPresentInList} = False</msg>
<msg timestamp="20210408 19:13:30.234" level="INFO">${RowValue_Int} = 1</msg>
<status status="PASS" starttime="20210408 19:13:30.076" endtime="20210408 19:13:30.234"></status>
</kw>
<msg timestamp="20210408 19:13:30.234" level="INFO">${IsPresentInList_As_Int} = False</msg>
<msg timestamp="20210408 19:13:30.234" level="INFO">${RowValue_Int} = 1</msg>
<status status="PASS" starttime="20210408 19:13:29.921" endtime="20210408 19:13:30.234"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${IsPresentInList}==${True}</arg>
<arg>Get Index From List</arg>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
<arg>ELSE IF</arg>
<arg>${IsPresentInList_As_Int}==${True}</arg>
<arg>Get Index From List</arg>
<arg>${DataRow_List}</arg>
<arg>${RowValue_Int}</arg>
<arg>ELSE</arg>
<arg>Get Index From List</arg>
<arg>${DataRowId_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<assign>
<var>${DataRowName_Index}</var>
</assign>
<kw name="Get Index From List" library="Collections">
<doc>Returns the index of the first occurrence of the ``value`` on the list.</doc>
<arguments>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:13:30.293" endtime="20210408 19:13:30.294"></status>
</kw>
<msg timestamp="20210408 19:13:30.294" level="INFO">${DataRowName_Index} = 1</msg>
<status status="PASS" starttime="20210408 19:13:30.290" endtime="20210408 19:13:30.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Row Name Index for '${sRowValue}' : '${DataRowName_Index}'</arg>
</arguments>
<msg timestamp="20210408 19:13:30.346" level="INFO">Row Name Index for '1' : '1'</msg>
<status status="PASS" starttime="20210408 19:13:30.346" endtime="20210408 19:13:30.346"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${DataRowName_Index}&lt;0</arg>
<arg>Fail</arg>
<arg>'${sRowValue}' is not found at '${DataRow_List}' Data Row Values.</arg>
</arguments>
<status status="PASS" starttime="20210408 19:13:30.396" endtime="20210408 19:13:30.397"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${DataRowName_Index}+1</arg>
</arguments>
<assign>
<var>${DataRowValue_Index}</var>
</assign>
<msg timestamp="20210408 19:13:30.447" level="INFO">${DataRowValue_Index} = 2</msg>
<status status="PASS" starttime="20210408 19:13:30.447" endtime="20210408 19:13:30.447"></status>
</kw>
<msg timestamp="20210408 19:13:30.448" level="INFO">${RowId_Index} = 2</msg>
<status status="PASS" starttime="20210408 19:13:29.544" endtime="20210408 19:13:30.448"></status>
</kw>
<kw name="Write Excel Cell" library="ExcelLibrary">
<doc>Writes value to the cell.</doc>
<arguments>
<arg>${RowId_Index}</arg>
<arg>${ColumnHeader_Index}</arg>
<arg>${sData}</arg>
<arg>${sSheetName}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:13:30.499" endtime="20210408 19:13:30.499"></status>
</kw>
<status status="PASS" starttime="20210408 19:13:28.686" endtime="20210408 19:13:30.500"></status>
</kw>
<status status="PASS" starttime="20210408 19:13:28.684" endtime="20210408 19:13:30.500"></status>
</kw>
<kw name="Save Excel Document" library="ExcelLibrary">
<doc>Saves the current document to disk.</doc>
<arguments>
<arg>${sFilePath}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:13:30.555" endtime="20210408 19:13:30.592"></status>
</kw>
<kw name="Close Current Excel Document" library="ExcelLibrary">
<doc>Closes current document.</doc>
<status status="PASS" starttime="20210408 19:13:30.647" endtime="20210408 19:13:30.647"></status>
</kw>
<status status="PASS" starttime="20210408 19:13:28.532" endtime="20210408 19:13:30.647"></status>
</kw>
<status status="PASS" starttime="20210408 19:11:33.196" endtime="20210408 19:13:30.648"></status>
</kw>
<msg timestamp="20210408 19:13:30.648" level="INFO">Mx Execute Template With Multiple Data keyword passed for all the data</msg>
<status status="PASS" starttime="20210408 19:11:33.171" endtime="20210408 19:13:30.648"></status>
</kw>
<kw name="Mx Execute Template With Multiple Data" library="GenericLib">
<doc>| Usage |
 This keyword is used to run template with multiple data.</doc>
<arguments>
<arg>Input Facility Risk Type at Types/Purpose Tab</arg>
<arg>${ExcelPath}</arg>
<arg>${Facility_1}</arg>
<arg>CRED02_FacilitySetup</arg>
</arguments>
<kw name="Input Facility Risk Type at Types/Purpose Tab" library="CRED01_DealSetUpWithoutOrigination">
<doc>This keyword is used to Add Facility Risk Type
@author: hstone 24NOV2020 - initial create</doc>
<arguments>
<arg>OrderedDict([('rowid', '1'), ('Test_Case', 'ARR_Scenario3'), ('Facility_NamePrefix', 'ARR_TERM'), ('Deal_Name', ''), ('Facility_Name', 'ARR_TERM08042021191133'), ('Facility_AgreementDate', '26-Oct-2016'), ('Facility_EffectiveDate', '26-Oct-2016'), ('Facility_ExpiryDate', '26-Oct-2019'), ('Facility_MaturityDate', '26-Oct-2019'), ('Facility_Currency', 'USD'), ('Facility_Type', 'Term Loan'), ('Facility_ProposedCmtAmt', '300,000,000.00'), ('Facility_SubType', 'Committed'), ('Facility_ANSIID', ''), ('Facility_ServicingGroup', 'CANADA CORPORATE BANKING'), ('Facility_Customer', 'BNS CANADA CORPORATE BANKING'), ('Facility_SGLocation', 'Toronto, Canada'), ('Facility_AdjustmentSettings', 'Present'), ('Facility_AgreementDateAdjustment', '30'), ('Facility_EffectiveDateAdjustment', '30'), ('Facility_ExpiryDateAdjustment', '1095'), ('Facility_MaturityDateAdjustment', '1095'), ('Facility_RiskType', 'Demand Loan'), ('Facility_RiskTypeLimit', 'FLOAT'), ('Facility_LoanPurposeType', 'General'), ('Facility_GlobalLimit', 'FLOAT'), ('Facility_PricingOption', 'SOFR Daily Compounding W OPS Not Overridable'), ('Facility_ARRObservationPeriod', 'ON'), ('Facility_LookbackDays', '5'), ('Facility_LockoutDays', '0'), ('Facility_RateBasis', 'Actual/360'), ('Facility_CalculationMethod', 'Daily Rate With Compounding'), ('MIS_Code', 'Origination Type'), ('MIS_Value', 'Syndication- BNS Agent')])</arg>
</arguments>
<kw name="Report Sub Header" library="ReportMaker_Keywords">
<doc>This keyword is used to add given argument as sub header in test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Input Facility Risk Type at Types/Purpose Tab</arg>
</arguments>
<kw name="Set Report Sub Header" library="ReportMaker">
<arguments>
<arg>${SubHeader}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:13:30.843" endtime="20210408 19:13:30.845"></status>
</kw>
<status status="PASS" starttime="20210408 19:13:30.786" endtime="20210408 19:13:30.845"></status>
</kw>
<kw name="Set Facility Risk Type" library="Facility_Notebook">
<doc>Adds a Risk Type to the Facility
@author: bernchua DDMMMYYYY - initial create
@update: bernchua DDMMMYYYY - Added 'RiskType_Limit' argument with FLOAT default value
@update: ehugo 29MAY2020 - added keyword pre-processing; added screenshot
- used ${RiskType_Limit) variable for populating the field\n@update: clanding 28JUL2020 - refactor ${RiskType_Limit}
@update: clanding 30JUL2020 - updated hard coded values to global variables</doc>
<arguments>
<arg>&amp;{ExcelPath}[Facility_RiskType]</arg>
<arg>&amp;{ExcelPath}[Facility_RiskTypeLimit]</arg>
</arguments>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sRiskType}</arg>
</arguments>
<assign>
<var>${RiskType}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:13:31.116" endtime="20210408 19:13:31.117"></status>
</kw>
<msg timestamp="20210408 19:13:31.117" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:13:31.115" endtime="20210408 19:13:31.117"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:13:31.330" level="INFO">${List_Argument_Excel_Value} = ['Demand Loan']</msg>
<status status="PASS" starttime="20210408 19:13:31.329" endtime="20210408 19:13:31.330"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:13:31.381" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:13:31.381" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:13:31.380" endtime="20210408 19:13:31.381"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:13:31.433" level="INFO">${Arg_User_Input} = DEMAND LOAN</msg>
<status status="PASS" starttime="20210408 19:13:31.432" endtime="20210408 19:13:31.433"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:13:31.483" level="INFO">${Arg_User_Input} = DEMAND LOAN</msg>
<status status="PASS" starttime="20210408 19:13:31.482" endtime="20210408 19:13:31.483"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:13:31.534" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:13:31.533" endtime="20210408 19:13:31.534"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:13:31.584" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:13:31.583" endtime="20210408 19:13:31.584"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:13:31.635" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:13:31.634" endtime="20210408 19:13:31.635"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:13:31.687" endtime="20210408 19:13:31.687"></status>
</kw>
<msg timestamp="20210408 19:13:31.688" level="INFO">${Extracted_Argument_Value} = Demand Loan</msg>
<status status="PASS" starttime="20210408 19:13:31.685" endtime="20210408 19:13:31.688"></status>
</kw>
<status status="PASS" starttime="20210408 19:13:31.278" endtime="20210408 19:13:31.688"></status>
</kw>
<msg timestamp="20210408 19:13:31.688" level="INFO">${Extracted_Argument_Value} = Demand Loan</msg>
<status status="PASS" starttime="20210408 19:13:31.171" endtime="20210408 19:13:31.688"></status>
</kw>
<msg timestamp="20210408 19:13:31.689" level="INFO">${RiskType} = Demand Loan</msg>
<status status="PASS" starttime="20210408 19:13:31.060" endtime="20210408 19:13:31.689"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sRiskType_Limit}</arg>
</arguments>
<assign>
<var>${RiskType_Limit}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:13:31.897" endtime="20210408 19:13:31.898"></status>
</kw>
<msg timestamp="20210408 19:13:31.898" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:13:31.896" endtime="20210408 19:13:31.898"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:13:32.100" level="INFO">${List_Argument_Excel_Value} = ['FLOAT']</msg>
<status status="PASS" starttime="20210408 19:13:32.099" endtime="20210408 19:13:32.100"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:13:32.151" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:13:32.151" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:13:32.151" endtime="20210408 19:13:32.152"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:13:32.204" level="INFO">${Arg_User_Input} = FLOAT</msg>
<status status="PASS" starttime="20210408 19:13:32.204" endtime="20210408 19:13:32.205"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:13:32.255" level="INFO">${Arg_User_Input} = FLOAT</msg>
<status status="PASS" starttime="20210408 19:13:32.254" endtime="20210408 19:13:32.255"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:13:32.306" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:13:32.306" endtime="20210408 19:13:32.307"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:13:32.359" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:13:32.359" endtime="20210408 19:13:32.360"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:13:32.410" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:13:32.410" endtime="20210408 19:13:32.411"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:13:32.465" endtime="20210408 19:13:32.465"></status>
</kw>
<msg timestamp="20210408 19:13:32.465" level="INFO">${Extracted_Argument_Value} = FLOAT</msg>
<status status="PASS" starttime="20210408 19:13:32.462" endtime="20210408 19:13:32.465"></status>
</kw>
<status status="PASS" starttime="20210408 19:13:32.049" endtime="20210408 19:13:32.466"></status>
</kw>
<msg timestamp="20210408 19:13:32.466" level="INFO">${Extracted_Argument_Value} = FLOAT</msg>
<status status="PASS" starttime="20210408 19:13:31.948" endtime="20210408 19:13:32.466"></status>
</kw>
<msg timestamp="20210408 19:13:32.466" level="INFO">${RiskType_Limit} = FLOAT</msg>
<status status="PASS" starttime="20210408 19:13:31.841" endtime="20210408 19:13:32.466"></status>
</kw>
<kw name="Mx LoanIQ Select Window Tab" library="LoanIQ">
<doc>| Usage |
Used to select the Java window tab</doc>
<arguments>
<arg>${LIQ_FacilityNotebook_Tab}</arg>
<arg>${TAB_TYPES_PURPOSE}</arg>
</arguments>
<msg timestamp="20210408 19:13:37.409" level="INFO">Window Tab = 'Types/Purpose' is selected from the element = 'JavaWindow("title:=Facility -.*").JavaTab("tagname:=TabFolder")'</msg>
<status status="PASS" starttime="20210408 19:13:32.516" endtime="20210408 19:13:37.409"></status>
</kw>
<kw name="Mx LoanIQ Click Element If Present" library="LoanIQ">
<doc>| Usage |
Click on element identified by `locator` only if that element is present.
It passes if the element is not present.</doc>
<arguments>
<arg>${LIQ_Warning_Yes_Button}</arg>
</arguments>
<msg timestamp="20210408 19:13:46.194" level="INFO">JavaWindow("title:=Warning.*", "displayed:=1").JavaButton("label:=Yes"): is clicked, or skipped if not present.</msg>
<status status="PASS" starttime="20210408 19:13:37.501" endtime="20210408 19:13:46.194"></status>
</kw>
<kw name="Mx LoanIQ Select Window Tab" library="LoanIQ">
<doc>| Usage |
Used to select the Java window tab</doc>
<arguments>
<arg>${LIQ_FacilityNotebook_Tab}</arg>
<arg>${TAB_SUMMARY}</arg>
</arguments>
<msg timestamp="20210408 19:13:51.237" level="INFO">Window Tab = 'Summary' is selected from the element = 'JavaWindow("title:=Facility -.*").JavaTab("tagname:=TabFolder")'</msg>
<status status="PASS" starttime="20210408 19:13:46.274" endtime="20210408 19:13:51.237"></status>
</kw>
<kw name="Mx LoanIQ Select Window Tab" library="LoanIQ">
<doc>| Usage |
Used to select the Java window tab</doc>
<arguments>
<arg>${LIQ_FacilityNotebook_Tab}</arg>
<arg>${TAB_TYPES_PURPOSE}</arg>
</arguments>
<msg timestamp="20210408 19:13:56.176" level="INFO">Window Tab = 'Types/Purpose' is selected from the element = 'JavaWindow("title:=Facility -.*").JavaTab("tagname:=TabFolder")'</msg>
<status status="PASS" starttime="20210408 19:13:51.290" endtime="20210408 19:13:56.176"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_FacilityTypesPurpose_RiskType_Add_Button}</arg>
</arguments>
<msg timestamp="20210408 19:13:56.693" level="INFO">JavaWindow("title:=Facility -.*").JavaButton("attached text:=Add...") is clicked.</msg>
<status status="PASS" starttime="20210408 19:13:56.237" endtime="20210408 19:13:56.693"></status>
</kw>
<kw name="Mx LoanIQ Click Element If Present" library="LoanIQ">
<doc>| Usage |
Click on element identified by `locator` only if that element is present.
It passes if the element is not present.</doc>
<arguments>
<arg>${LIQ_Warning_Yes_Button}</arg>
</arguments>
<msg timestamp="20210408 19:14:02.450" level="INFO">JavaWindow("title:=Warning.*", "displayed:=1").JavaButton("label:=Yes"): is clicked, or skipped if not present.</msg>
<status status="PASS" starttime="20210408 19:13:56.928" endtime="20210408 19:14:02.451"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${RiskType}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Select Combo Box Value</arg>
<arg>${LIQ_FacilityTypesPurpose_RiskType_ComboBox}</arg>
<arg>${RiskType}</arg>
</arguments>
<kw name="Mx LoanIQ Select Combo Box Value" library="LoanIQ">
<doc>| Usage |
Used to select data in JavaList</doc>
<arguments>
<arg>${LIQ_FacilityTypesPurpose_RiskType_ComboBox}</arg>
<arg>${RiskType}</arg>
</arguments>
<msg timestamp="20210408 19:14:02.629" level="INFO">Selected value = 'Demand Loan' from Combo box object = 'JavaWindow("title:=Risk Type Details").JavaList("attached text:=Risk Type:")'.</msg>
<status status="PASS" starttime="20210408 19:14:02.538" endtime="20210408 19:14:02.629"></status>
</kw>
<status status="PASS" starttime="20210408 19:14:02.534" endtime="20210408 19:14:02.630"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${RiskType_Limit}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Enter</arg>
<arg>${LIQ_RiskType_Limit_Field}</arg>
<arg>${RiskType_Limit}</arg>
</arguments>
<kw name="Mx LoanIQ Enter" library="LoanIQ">
<doc>| Usage |
To enter the data to the element specified by 'locator'.</doc>
<arguments>
<arg>${LIQ_RiskType_Limit_Field}</arg>
<arg>${RiskType_Limit}</arg>
</arguments>
<msg timestamp="20210408 19:14:02.841" level="INFO">Input= FLOAT is entered in element= JavaWindow("title:=Risk Type Details").JavaEdit("attached text:=Limit:")</msg>
<status status="PASS" starttime="20210408 19:14:02.686" endtime="20210408 19:14:02.842"></status>
</kw>
<status status="PASS" starttime="20210408 19:14:02.684" endtime="20210408 19:14:02.842"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${LIQ_RiskType_Active_Checkbox}</arg>
<arg>enabled%1</arg>
</arguments>
<assign>
<var>${Active_CheckboxEnabled}</var>
</assign>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${LIQ_RiskType_Active_Checkbox}</arg>
<arg>enabled%1</arg>
</arguments>
<msg timestamp="20210408 19:14:03.046" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:14:02.918" endtime="20210408 19:14:03.046"></status>
</kw>
<msg timestamp="20210408 19:14:03.046" level="INFO">${Active_CheckboxEnabled} = True</msg>
<status status="PASS" starttime="20210408 19:14:02.916" endtime="20210408 19:14:03.046"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Active_CheckboxEnabled}'=='${FALSE}'</arg>
<arg>Mx LoanIQ Set</arg>
<arg>${LIQ_RiskType_Active_Checkbox}</arg>
<arg>${ON}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:14:03.101" endtime="20210408 19:14:03.102"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_FacilityTypesPurpose_RiskTypeDetails_OK_Button}</arg>
</arguments>
<msg timestamp="20210408 19:14:03.459" level="INFO">JavaWindow("title:=Risk Type Details").JavaButton("attached text:=OK") is clicked.</msg>
<status status="PASS" starttime="20210408 19:14:03.158" endtime="20210408 19:14:03.460"></status>
</kw>
<kw name="Take Screenshot with text into Test Document" library="ReportMaker_Keywords">
<doc>This keyword is used to add screenshot with image filename as description into test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Facility Notebook - Types Purpose Tab - Risk Type</arg>
</arguments>
<kw name="Take Screenshot" library="Screenshot">
<doc>Takes a screenshot in JPEG format and embeds it into the log file.</doc>
<arguments>
<arg>${imageName}</arg>
</arguments>
<msg timestamp="20210408 19:14:03.684" level="INFO" html="yes">&lt;a href="Results/LoanIQ/TC02%20-%20Validate%20ARR%20Interest%20Pricing%20Option%20at%20Facility%20Level%20-%20Term___2021-04-08%2019-11-32.788/Facility%20Notebook%20-%20Types%20Purpose%20Tab%20-%20Risk%20Type_1.jpg"&gt;&lt;img src="Results/LoanIQ/TC02%20-%20Validate%20ARR%20Interest%20Pricing%20Option%20at%20Facility%20Level%20-%20Term___2021-04-08%2019-11-32.788/Facility%20Notebook%20-%20Types%20Purpose%20Tab%20-%20Risk%20Type_1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210408 19:14:03.587" endtime="20210408 19:14:03.684"></status>
</kw>
<kw name="Get Latest File" library="ReportMaker">
<arguments>
<arg>${getfilePath}</arg>
</arguments>
<assign>
<var>${imagePath}</var>
</assign>
<msg timestamp="20210408 19:14:03.787" level="INFO">${imagePath} = C:\Git_Evergreen\transform_arr\Results\LoanIQ\TC02 - Validate ARR Interest Pricing Option at Facility Level - Term___2021-04-08 19-11-32.788\Facility Notebook - Types Purpose Tab - Risk Type_1.jpg</msg>
<status status="PASS" starttime="20210408 19:14:03.786" endtime="20210408 19:14:03.787"></status>
</kw>
<kw name="Put Screenshot With Text" library="ReportMaker">
<arguments>
<arg>${imagePath}</arg>
<arg>${imageName}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:14:03.875" endtime="20210408 19:14:03.885"></status>
</kw>
<status status="PASS" starttime="20210408 19:14:03.526" endtime="20210408 19:14:03.886"></status>
</kw>
<status status="PASS" starttime="20210408 19:13:30.900" endtime="20210408 19:14:03.886"></status>
</kw>
<status status="PASS" starttime="20210408 19:13:30.732" endtime="20210408 19:14:03.886"></status>
</kw>
<msg timestamp="20210408 19:14:03.887" level="INFO">Mx Execute Template With Multiple Data keyword passed for all the data</msg>
<status status="PASS" starttime="20210408 19:13:30.703" endtime="20210408 19:14:03.887"></status>
</kw>
<kw name="Mx Execute Template With Multiple Data" library="GenericLib">
<doc>| Usage |
 This keyword is used to run template with multiple data.</doc>
<arguments>
<arg>Input Facility Loan Purpose Type at Types/Purpose Tab</arg>
<arg>${ExcelPath}</arg>
<arg>${Facility_1}</arg>
<arg>CRED02_FacilitySetup</arg>
</arguments>
<kw name="Input Facility Loan Purpose Type at Types/Purpose Tab" library="CRED01_DealSetUpWithoutOrigination">
<doc>This keyword is used to Add Facility Loan Purpose Type
@author: hstone 24NOV2020 - initial create</doc>
<arguments>
<arg>OrderedDict([('rowid', '1'), ('Test_Case', 'ARR_Scenario3'), ('Facility_NamePrefix', 'ARR_TERM'), ('Deal_Name', ''), ('Facility_Name', 'ARR_TERM08042021191133'), ('Facility_AgreementDate', '26-Oct-2016'), ('Facility_EffectiveDate', '26-Oct-2016'), ('Facility_ExpiryDate', '26-Oct-2019'), ('Facility_MaturityDate', '26-Oct-2019'), ('Facility_Currency', 'USD'), ('Facility_Type', 'Term Loan'), ('Facility_ProposedCmtAmt', '300,000,000.00'), ('Facility_SubType', 'Committed'), ('Facility_ANSIID', ''), ('Facility_ServicingGroup', 'CANADA CORPORATE BANKING'), ('Facility_Customer', 'BNS CANADA CORPORATE BANKING'), ('Facility_SGLocation', 'Toronto, Canada'), ('Facility_AdjustmentSettings', 'Present'), ('Facility_AgreementDateAdjustment', '30'), ('Facility_EffectiveDateAdjustment', '30'), ('Facility_ExpiryDateAdjustment', '1095'), ('Facility_MaturityDateAdjustment', '1095'), ('Facility_RiskType', 'Demand Loan'), ('Facility_RiskTypeLimit', 'FLOAT'), ('Facility_LoanPurposeType', 'General'), ('Facility_GlobalLimit', 'FLOAT'), ('Facility_PricingOption', 'SOFR Daily Compounding W OPS Not Overridable'), ('Facility_ARRObservationPeriod', 'ON'), ('Facility_LookbackDays', '5'), ('Facility_LockoutDays', '0'), ('Facility_RateBasis', 'Actual/360'), ('Facility_CalculationMethod', 'Daily Rate With Compounding'), ('MIS_Code', 'Origination Type'), ('MIS_Value', 'Syndication- BNS Agent')])</arg>
</arguments>
<kw name="Report Sub Header" library="ReportMaker_Keywords">
<doc>This keyword is used to add given argument as sub header in test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Input Facility Loan Purpose Type at Types/Purpose Tab</arg>
</arguments>
<kw name="Set Report Sub Header" library="ReportMaker">
<arguments>
<arg>${SubHeader}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:14:04.101" endtime="20210408 19:14:04.103"></status>
</kw>
<status status="PASS" starttime="20210408 19:14:04.050" endtime="20210408 19:14:04.103"></status>
</kw>
<kw name="Set Facility Loan Purpose Type" library="Facility_Notebook">
<doc>Sets the Facility's Loan Purpose Type.
@author: bernchua DDMMMYYYY - initial create
@update: ehugo 29MAY2020 - added keyword pre-processing; added screenshot</doc>
<arguments>
<arg>&amp;{ExcelPath}[Facility_LoanPurposeType]</arg>
</arguments>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sLoanPurposeType}</arg>
</arguments>
<assign>
<var>${LoanPurposeType}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:14:04.375" endtime="20210408 19:14:04.376"></status>
</kw>
<msg timestamp="20210408 19:14:04.376" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:14:04.372" endtime="20210408 19:14:04.376"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:14:04.601" level="INFO">${List_Argument_Excel_Value} = ['General']</msg>
<status status="PASS" starttime="20210408 19:14:04.600" endtime="20210408 19:14:04.601"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:14:04.652" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:14:04.652" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:14:04.651" endtime="20210408 19:14:04.652"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:14:04.702" level="INFO">${Arg_User_Input} = GENERAL</msg>
<status status="PASS" starttime="20210408 19:14:04.701" endtime="20210408 19:14:04.702"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:14:04.753" level="INFO">${Arg_User_Input} = GENERAL</msg>
<status status="PASS" starttime="20210408 19:14:04.752" endtime="20210408 19:14:04.753"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:14:04.803" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:14:04.803" endtime="20210408 19:14:04.804"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:14:04.855" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:14:04.854" endtime="20210408 19:14:04.855"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:14:04.906" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:14:04.905" endtime="20210408 19:14:04.906"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:14:04.958" endtime="20210408 19:14:04.959"></status>
</kw>
<msg timestamp="20210408 19:14:04.959" level="INFO">${Extracted_Argument_Value} = General</msg>
<status status="PASS" starttime="20210408 19:14:04.956" endtime="20210408 19:14:04.959"></status>
</kw>
<status status="PASS" starttime="20210408 19:14:04.536" endtime="20210408 19:14:04.959"></status>
</kw>
<msg timestamp="20210408 19:14:04.959" level="INFO">${Extracted_Argument_Value} = General</msg>
<status status="PASS" starttime="20210408 19:14:04.428" endtime="20210408 19:14:04.959"></status>
</kw>
<msg timestamp="20210408 19:14:04.960" level="INFO">${LoanPurposeType} = General</msg>
<status status="PASS" starttime="20210408 19:14:04.321" endtime="20210408 19:14:04.960"></status>
</kw>
<kw name="Mx LoanIQ Select Window Tab" library="LoanIQ">
<doc>| Usage |
Used to select the Java window tab</doc>
<arguments>
<arg>${LIQ_FacilityNotebook_Tab}</arg>
<arg>${TAB_TYPES_PURPOSE}</arg>
</arguments>
<msg timestamp="20210408 19:14:09.845" level="INFO">Window Tab = 'Types/Purpose' is selected from the element = 'JavaWindow("title:=Facility -.*").JavaTab("tagname:=TabFolder")'</msg>
<status status="PASS" starttime="20210408 19:14:05.010" endtime="20210408 19:14:09.846"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_FacilityTypesPurpose_LoanPurposeTypes_Button}</arg>
</arguments>
<msg timestamp="20210408 19:14:10.768" level="INFO">JavaWindow("title:=Facility -.*").JavaButton("label:=Loan Purpose Types") is clicked.</msg>
<status status="PASS" starttime="20210408 19:14:09.907" endtime="20210408 19:14:10.768"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${LoanPurposeType}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Select String</arg>
<arg>${LIQ_LoanPurposeTypesSelection_JavaList}</arg>
<arg>${LoanPurposeType}</arg>
</arguments>
<kw name="Mx LoanIQ Select String" library="LoanIQ">
<doc>| Usage |
Used to select the given string in JavaTree</doc>
<arguments>
<arg>${LIQ_LoanPurposeTypesSelection_JavaList}</arg>
<arg>${LoanPurposeType}</arg>
</arguments>
<msg timestamp="20210408 19:14:13.509" level="INFO">Selected 'General' from 'JavaWindow("title:=Loan Purpose Types Selection List").JavaTree("attached text:=Available")' object.</msg>
<status status="PASS" starttime="20210408 19:14:10.863" endtime="20210408 19:14:13.509"></status>
</kw>
<status status="PASS" starttime="20210408 19:14:10.860" endtime="20210408 19:14:13.510"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_FacilityTypesPurpose_LoanPurpose_OK_Button}</arg>
</arguments>
<msg timestamp="20210408 19:14:13.861" level="INFO">JavaWindow("title:=Loan Purpose Types Selection List").JavaButton("text:=&amp;OK") is clicked.</msg>
<status status="PASS" starttime="20210408 19:14:13.568" endtime="20210408 19:14:13.862"></status>
</kw>
<kw name="Take Screenshot with text into Test Document" library="ReportMaker_Keywords">
<doc>This keyword is used to add screenshot with image filename as description into test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Facility Notebook - Types Purpose Tab - Loan Purpose Type</arg>
</arguments>
<kw name="Take Screenshot" library="Screenshot">
<doc>Takes a screenshot in JPEG format and embeds it into the log file.</doc>
<arguments>
<arg>${imageName}</arg>
</arguments>
<msg timestamp="20210408 19:14:14.099" level="INFO" html="yes">&lt;a href="Results/LoanIQ/TC02%20-%20Validate%20ARR%20Interest%20Pricing%20Option%20at%20Facility%20Level%20-%20Term___2021-04-08%2019-11-32.788/Facility%20Notebook%20-%20Types%20Purpose%20Tab%20-%20Loan%20Purpose%20Type_1.jpg"&gt;&lt;img src="Results/LoanIQ/TC02%20-%20Validate%20ARR%20Interest%20Pricing%20Option%20at%20Facility%20Level%20-%20Term___2021-04-08%2019-11-32.788/Facility%20Notebook%20-%20Types%20Purpose%20Tab%20-%20Loan%20Purpose%20Type_1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210408 19:14:13.993" endtime="20210408 19:14:14.099"></status>
</kw>
<kw name="Get Latest File" library="ReportMaker">
<arguments>
<arg>${getfilePath}</arg>
</arguments>
<assign>
<var>${imagePath}</var>
</assign>
<msg timestamp="20210408 19:14:14.161" level="INFO">${imagePath} = C:\Git_Evergreen\transform_arr\Results\LoanIQ\TC02 - Validate ARR Interest Pricing Option at Facility Level - Term___2021-04-08 19-11-32.788\Facility Notebook - Types Purpose Tab - Loan Purpose Type_1...</msg>
<status status="PASS" starttime="20210408 19:14:14.160" endtime="20210408 19:14:14.161"></status>
</kw>
<kw name="Put Screenshot With Text" library="ReportMaker">
<arguments>
<arg>${imagePath}</arg>
<arg>${imageName}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:14:14.212" endtime="20210408 19:14:14.222"></status>
</kw>
<status status="PASS" starttime="20210408 19:14:13.925" endtime="20210408 19:14:14.223"></status>
</kw>
<status status="PASS" starttime="20210408 19:14:04.154" endtime="20210408 19:14:14.223"></status>
</kw>
<status status="PASS" starttime="20210408 19:14:03.991" endtime="20210408 19:14:14.223"></status>
</kw>
<msg timestamp="20210408 19:14:14.224" level="INFO">Mx Execute Template With Multiple Data keyword passed for all the data</msg>
<status status="PASS" starttime="20210408 19:14:03.966" endtime="20210408 19:14:14.224"></status>
</kw>
<kw name="Mx Execute Template With Multiple Data" library="GenericLib">
<doc>| Usage |
 This keyword is used to run template with multiple data.</doc>
<arguments>
<arg>Input Facility MIS at MIS Codes Tab</arg>
<arg>${ExcelPath}</arg>
<arg>${Facility_1}</arg>
<arg>CRED02_FacilitySetup</arg>
</arguments>
<kw name="Input Facility MIS at MIS Codes Tab" library="CRED01_DealSetUpWithoutOrigination">
<doc>This keyword is used to Add Facility Loan Purpose Type
@author: jloretiz 04FEB2021 - initial create</doc>
<arguments>
<arg>OrderedDict([('rowid', '1'), ('Test_Case', 'ARR_Scenario3'), ('Facility_NamePrefix', 'ARR_TERM'), ('Deal_Name', ''), ('Facility_Name', 'ARR_TERM08042021191133'), ('Facility_AgreementDate', '26-Oct-2016'), ('Facility_EffectiveDate', '26-Oct-2016'), ('Facility_ExpiryDate', '26-Oct-2019'), ('Facility_MaturityDate', '26-Oct-2019'), ('Facility_Currency', 'USD'), ('Facility_Type', 'Term Loan'), ('Facility_ProposedCmtAmt', '300,000,000.00'), ('Facility_SubType', 'Committed'), ('Facility_ANSIID', ''), ('Facility_ServicingGroup', 'CANADA CORPORATE BANKING'), ('Facility_Customer', 'BNS CANADA CORPORATE BANKING'), ('Facility_SGLocation', 'Toronto, Canada'), ('Facility_AdjustmentSettings', 'Present'), ('Facility_AgreementDateAdjustment', '30'), ('Facility_EffectiveDateAdjustment', '30'), ('Facility_ExpiryDateAdjustment', '1095'), ('Facility_MaturityDateAdjustment', '1095'), ('Facility_RiskType', 'Demand Loan'), ('Facility_RiskTypeLimit', 'FLOAT'), ('Facility_LoanPurposeType', 'General'), ('Facility_GlobalLimit', 'FLOAT'), ('Facility_PricingOption', 'SOFR Daily Compounding W OPS Not Overridable'), ('Facility_ARRObservationPeriod', 'ON'), ('Facility_LookbackDays', '5'), ('Facility_LockoutDays', '0'), ('Facility_RateBasis', 'Actual/360'), ('Facility_CalculationMethod', 'Daily Rate With Compounding'), ('MIS_Code', 'Origination Type'), ('MIS_Value', 'Syndication- BNS Agent')])</arg>
</arguments>
<kw name="Report Sub Header" library="ReportMaker_Keywords">
<doc>This keyword is used to add given argument as sub header in test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Input Facility MIS at MIS Codes Tab</arg>
</arguments>
<kw name="Set Report Sub Header" library="ReportMaker">
<arguments>
<arg>${SubHeader}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:14:14.417" endtime="20210408 19:14:14.419"></status>
</kw>
<status status="PASS" starttime="20210408 19:14:14.360" endtime="20210408 19:14:14.419"></status>
</kw>
<kw name="Add MIS Code" library="Facility_Notebook">
<doc>This keyword is used to add MIS Codes at the Facility Notebook
@author: henstone 14AUG2019 - Initial create
@update: jloretiz 26JUL2020 - added field to populate
@update: hstone 22OCT2020 - Added keyword pre-processing
- Updated MIS Value Check
@update: jloretiz 11FEB2021 - added condition for empty data
@update: cmcordero 05MAR2021 - added take screenshot keyword</doc>
<arguments>
<arg>&amp;{ExcelPath}[MIS_Code]</arg>
<arg>&amp;{ExcelPath}[MIS_Value]</arg>
</arguments>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sMIS_Code}</arg>
</arguments>
<assign>
<var>${MIS_Code}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:14:14.703" endtime="20210408 19:14:14.704"></status>
</kw>
<msg timestamp="20210408 19:14:14.704" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:14:14.701" endtime="20210408 19:14:14.704"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:14:14.929" level="INFO">${List_Argument_Excel_Value} = ['Origination Type']</msg>
<status status="PASS" starttime="20210408 19:14:14.929" endtime="20210408 19:14:14.930"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:14:15.015" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:14:15.015" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:14:15.014" endtime="20210408 19:14:15.015"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:14:15.104" level="INFO">${Arg_User_Input} = ORIGINATION TYPE</msg>
<status status="PASS" starttime="20210408 19:14:15.103" endtime="20210408 19:14:15.104"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:14:15.161" level="INFO">${Arg_User_Input} = ORIGINATION TYPE</msg>
<status status="PASS" starttime="20210408 19:14:15.161" endtime="20210408 19:14:15.161"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:14:15.214" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:14:15.213" endtime="20210408 19:14:15.214"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:14:15.272" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:14:15.271" endtime="20210408 19:14:15.272"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:14:15.328" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:14:15.327" endtime="20210408 19:14:15.328"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:14:15.494" endtime="20210408 19:14:15.495"></status>
</kw>
<msg timestamp="20210408 19:14:15.495" level="INFO">${Extracted_Argument_Value} = Origination Type</msg>
<status status="PASS" starttime="20210408 19:14:15.492" endtime="20210408 19:14:15.495"></status>
</kw>
<status status="PASS" starttime="20210408 19:14:14.876" endtime="20210408 19:14:15.496"></status>
</kw>
<msg timestamp="20210408 19:14:15.496" level="INFO">${Extracted_Argument_Value} = Origination Type</msg>
<status status="PASS" starttime="20210408 19:14:14.763" endtime="20210408 19:14:15.496"></status>
</kw>
<msg timestamp="20210408 19:14:15.496" level="INFO">${MIS_Code} = Origination Type</msg>
<status status="PASS" starttime="20210408 19:14:14.648" endtime="20210408 19:14:15.496"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sValue}</arg>
</arguments>
<assign>
<var>${Value}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:14:15.707" endtime="20210408 19:14:15.707"></status>
</kw>
<msg timestamp="20210408 19:14:15.708" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:14:15.706" endtime="20210408 19:14:15.708"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:14:15.908" level="INFO">${List_Argument_Excel_Value} = ['Syndication- BNS Agent']</msg>
<status status="PASS" starttime="20210408 19:14:15.908" endtime="20210408 19:14:15.909"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:14:15.959" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:14:15.959" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:14:15.958" endtime="20210408 19:14:15.959"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:14:16.010" level="INFO">${Arg_User_Input} = SYNDICATION- BNS AGENT</msg>
<status status="PASS" starttime="20210408 19:14:16.009" endtime="20210408 19:14:16.010"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:14:16.061" level="INFO">${Arg_User_Input} = SYNDICATION- BNS AGENT</msg>
<status status="PASS" starttime="20210408 19:14:16.061" endtime="20210408 19:14:16.061"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:14:16.112" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:14:16.112" endtime="20210408 19:14:16.112"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:14:16.163" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:14:16.162" endtime="20210408 19:14:16.163"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:14:16.213" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:14:16.213" endtime="20210408 19:14:16.214"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:14:16.266" endtime="20210408 19:14:16.267"></status>
</kw>
<msg timestamp="20210408 19:14:16.267" level="INFO">${Extracted_Argument_Value} = Syndication- BNS Agent</msg>
<status status="PASS" starttime="20210408 19:14:16.264" endtime="20210408 19:14:16.267"></status>
</kw>
<status status="PASS" starttime="20210408 19:14:15.856" endtime="20210408 19:14:16.267"></status>
</kw>
<msg timestamp="20210408 19:14:16.267" level="INFO">${Extracted_Argument_Value} = Syndication- BNS Agent</msg>
<status status="PASS" starttime="20210408 19:14:15.758" endtime="20210408 19:14:16.267"></status>
</kw>
<msg timestamp="20210408 19:14:16.268" level="INFO">${Value} = Syndication- BNS Agent</msg>
<status status="PASS" starttime="20210408 19:14:15.653" endtime="20210408 19:14:16.268"></status>
</kw>
<kw name="Mx LoanIQ Activate Window" library="LoanIQ">
<doc>| Usage |
To activate existing window if present.</doc>
<arguments>
<arg>${LIQ_FacilityNotebook_Window}</arg>
</arguments>
<msg timestamp="20210408 19:14:16.401" level="INFO">Window : JavaWindow("title:=Facility -.*","displayed:=1") is activated</msg>
<status status="PASS" starttime="20210408 19:14:16.318" endtime="20210408 19:14:16.401"></status>
</kw>
<kw name="Mx LoanIQ Select Window Tab" library="LoanIQ">
<doc>| Usage |
Used to select the Java window tab</doc>
<arguments>
<arg>${LIQ_FacilityNotebook_Tab}</arg>
<arg>${TAB_MIS}</arg>
</arguments>
<msg timestamp="20210408 19:14:21.437" level="INFO">Window Tab = 'MIS Codes' is selected from the element = 'JavaWindow("title:=Facility -.*").JavaTab("tagname:=TabFolder")'</msg>
<status status="PASS" starttime="20210408 19:14:16.458" endtime="20210408 19:14:21.438"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_FacilityMISCodes_Add_Button}</arg>
</arguments>
<msg timestamp="20210408 19:14:22.997" level="INFO">JavaWindow("title:=Facility -.*").JavaButton("attached text:=Add...") is clicked.</msg>
<status status="PASS" starttime="20210408 19:14:21.539" endtime="20210408 19:14:22.998"></status>
</kw>
<kw name="Mx LoanIQ Activate Window" library="LoanIQ">
<doc>| Usage |
To activate existing window if present.</doc>
<arguments>
<arg>${LIQ_FacilityMISCodes_FacilityMISCodeDetails_Window}</arg>
</arguments>
<msg timestamp="20210408 19:14:23.171" level="INFO">Window : JavaWindow("text:=Facility MIS Code Details") is activated</msg>
<status status="PASS" starttime="20210408 19:14:23.056" endtime="20210408 19:14:23.171"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${MIS_Code}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Select Combo Box Value</arg>
<arg>${LIQ_FacilityMISCodes_MISCode_List}</arg>
<arg>${MIS_Code}</arg>
</arguments>
<kw name="Mx LoanIQ Select Combo Box Value" library="LoanIQ">
<doc>| Usage |
Used to select data in JavaList</doc>
<arguments>
<arg>${LIQ_FacilityMISCodes_MISCode_List}</arg>
<arg>${MIS_Code}</arg>
</arguments>
<msg timestamp="20210408 19:14:23.687" level="INFO">Selected value = 'Origination Type' from Combo box object = 'JavaWindow("title:=Facility MIS Code Details").JavaList("attached text:=MIS Code:")'.</msg>
<status status="PASS" starttime="20210408 19:14:23.248" endtime="20210408 19:14:23.687"></status>
</kw>
<status status="PASS" starttime="20210408 19:14:23.245" endtime="20210408 19:14:23.688"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Value}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Select Combo Box Value</arg>
<arg>${LIQ_FacilityMISCodes_MISValue_List}</arg>
<arg>${Value}</arg>
</arguments>
<kw name="Mx LoanIQ Select Combo Box Value" library="LoanIQ">
<doc>| Usage |
Used to select data in JavaList</doc>
<arguments>
<arg>${LIQ_FacilityMISCodes_MISValue_List}</arg>
<arg>${Value}</arg>
</arguments>
<msg timestamp="20210408 19:14:23.853" level="INFO">Selected value = 'Syndication- BNS Agent' from Combo box object = 'JavaWindow("title:=Facility MIS Code Details").JavaList("attached text:=Value:")'.</msg>
<status status="PASS" starttime="20210408 19:14:23.742" endtime="20210408 19:14:23.853"></status>
</kw>
<status status="PASS" starttime="20210408 19:14:23.739" endtime="20210408 19:14:23.853"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${LIQ_FacilityMISCodes_Value_Field}</arg>
<arg>MIS_Value%${Value}</arg>
</arguments>
<assign>
<var>${VerifyResult}</var>
</assign>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${LIQ_FacilityMISCodes_Value_Field}</arg>
<arg>MIS_Value%${Value}</arg>
</arguments>
<msg timestamp="20210408 19:14:29.335" level="INFO" html="yes">&lt;a href="screenshot_32.jpg"&gt;&lt;img src="screenshot_32.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20210408 19:14:29.335" level="INFO">Keyword Details-------------------------------------------------
Action = VERIFYRUNTIMEPROPERTY
Input = None
Object = JavaWindow("text:=Facility MIS Code Details").JavaEdit("attached text:=Value:")
Verification Data = MIS_Value%Syndication- BNS Agent</msg>
<msg timestamp="20210408 19:14:29.336" level="FAIL">Error Number: -110037 Error Description: Object did not find, check object exists VerifyRuntimeProperty. Retried for:  0 times. </msg>
<status status="FAIL" starttime="20210408 19:14:23.905" endtime="20210408 19:14:29.422"></status>
</kw>
<msg timestamp="20210408 19:14:29.422" level="INFO">${VerifyResult} = False</msg>
<status status="PASS" starttime="20210408 19:14:23.904" endtime="20210408 19:14:29.423"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VerifyResult}'==${TRUE}</arg>
<arg>Log</arg>
<arg>MIS Value Field Verified</arg>
</arguments>
<status status="PASS" starttime="20210408 19:14:29.492" endtime="20210408 19:14:29.492"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_FacilityMISCodes_OK_Button}</arg>
</arguments>
<msg timestamp="20210408 19:14:29.929" level="INFO">JavaWindow("text:=Facility MIS Code Details").JavaButton("attached text:=OK") is clicked.</msg>
<status status="PASS" starttime="20210408 19:14:29.587" endtime="20210408 19:14:29.929"></status>
</kw>
<kw name="Mx LoanIQ Store TableCell To Clipboard" library="LoanIQ">
<doc>| Usage |
Used to store table cell value identified by row name and column name in clipboard.</doc>
<arguments>
<arg>${LIQ_FacilityMISCodes_MISCodes_JavaTree}</arg>
<arg>${MIS_Code}%Value%value</arg>
</arguments>
<assign>
<var>${MIS_Value_JavaTree}</var>
</assign>
<msg timestamp="20210408 19:14:32.327" level="INFO">Fetching value from object: JavaWindow("title:=Facility -.*").JavaTree("attached text:=Drill down for details") 
 Value = : Syndication- BNS Agent</msg>
<msg timestamp="20210408 19:14:32.328" level="INFO">${value} = Syndication- BNS Agent</msg>
<msg timestamp="20210408 19:14:32.328" level="INFO">${MIS_Value_JavaTree} = Syndication- BNS Agent</msg>
<status status="PASS" starttime="20210408 19:14:30.018" endtime="20210408 19:14:32.328"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${MIS_Value_JavaTree}</arg>
<arg>${Value}</arg>
</arguments>
<assign>
<var>${Result}</var>
</assign>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${MIS_Value_JavaTree}</arg>
<arg>${Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:14:32.406" endtime="20210408 19:14:32.407"></status>
</kw>
<msg timestamp="20210408 19:14:32.407" level="INFO">${Result} = True</msg>
<status status="PASS" starttime="20210408 19:14:32.404" endtime="20210408 19:14:32.407"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Result}'=='${TRUE}'</arg>
<arg>Log</arg>
<arg>MIS Code Value is Verified</arg>
<arg>level=INFO</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>MIS Code Value is Verified</arg>
<arg>level=INFO</arg>
</arguments>
<msg timestamp="20210408 19:14:32.462" level="INFO">MIS Code Value is Verified</msg>
<status status="PASS" starttime="20210408 19:14:32.462" endtime="20210408 19:14:32.463"></status>
</kw>
<status status="PASS" starttime="20210408 19:14:32.461" endtime="20210408 19:14:32.463"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Result}'=='${FALSE}'</arg>
<arg>Log</arg>
<arg>MIS Code Value is ${MIS_Value_JavaTree} instead of ${Value}</arg>
<arg>level=ERROR</arg>
</arguments>
<status status="PASS" starttime="20210408 19:14:32.517" endtime="20210408 19:14:32.517"></status>
</kw>
<kw name="Take Screenshot with text into Test Document" library="ReportMaker_Keywords">
<doc>This keyword is used to add screenshot with image filename as description into test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>MIS Codes</arg>
</arguments>
<kw name="Take Screenshot" library="Screenshot">
<doc>Takes a screenshot in JPEG format and embeds it into the log file.</doc>
<arguments>
<arg>${imageName}</arg>
</arguments>
<msg timestamp="20210408 19:14:32.722" level="INFO" html="yes">&lt;a href="Results/LoanIQ/TC02%20-%20Validate%20ARR%20Interest%20Pricing%20Option%20at%20Facility%20Level%20-%20Term___2021-04-08%2019-11-32.788/MIS%20Codes_1.jpg"&gt;&lt;img src="Results/LoanIQ/TC02%20-%20Validate%20ARR%20Interest%20Pricing%20Option%20at%20Facility%20Level%20-%20Term___2021-04-08%2019-11-32.788/MIS%20Codes_1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210408 19:14:32.636" endtime="20210408 19:14:32.723"></status>
</kw>
<kw name="Get Latest File" library="ReportMaker">
<arguments>
<arg>${getfilePath}</arg>
</arguments>
<assign>
<var>${imagePath}</var>
</assign>
<msg timestamp="20210408 19:14:32.778" level="INFO">${imagePath} = C:\Git_Evergreen\transform_arr\Results\LoanIQ\TC02 - Validate ARR Interest Pricing Option at Facility Level - Term___2021-04-08 19-11-32.788\MIS Codes_1.jpg</msg>
<status status="PASS" starttime="20210408 19:14:32.777" endtime="20210408 19:14:32.778"></status>
</kw>
<kw name="Put Screenshot With Text" library="ReportMaker">
<arguments>
<arg>${imagePath}</arg>
<arg>${imageName}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:14:32.830" endtime="20210408 19:14:32.840"></status>
</kw>
<status status="PASS" starttime="20210408 19:14:32.580" endtime="20210408 19:14:32.841"></status>
</kw>
<status status="PASS" starttime="20210408 19:14:14.482" endtime="20210408 19:14:32.841"></status>
</kw>
<status status="PASS" starttime="20210408 19:14:14.307" endtime="20210408 19:14:32.841"></status>
</kw>
<msg timestamp="20210408 19:14:32.841" level="INFO">Mx Execute Template With Multiple Data keyword passed for all the data</msg>
<status status="PASS" starttime="20210408 19:14:14.284" endtime="20210408 19:14:32.841"></status>
</kw>
<kw name="Mx Execute Template With Multiple Data" library="GenericLib">
<doc>| Usage |
 This keyword is used to run template with multiple data.</doc>
<arguments>
<arg>Proceed With Add All For Borrower/Depositor at Sublimit/Cust Tab</arg>
<arg>${ExcelPath}</arg>
<arg>${Facility_1}</arg>
<arg>CRED02_FacilitySetup</arg>
</arguments>
<kw name="Proceed With Add All For Borrower/Depositor at Sublimit/Cust Tab" library="CRED01_DealSetUpWithoutOrigination">
<doc>This keyword is used to Add Borrower/Depositor and select Add All
@author: jloretiz 05FEB2021 - initial create</doc>
<arguments>
<arg>OrderedDict([('rowid', '1'), ('Test_Case', 'ARR_Scenario3'), ('Facility_NamePrefix', 'ARR_TERM'), ('Deal_Name', ''), ('Facility_Name', 'ARR_TERM08042021191133'), ('Facility_AgreementDate', '26-Oct-2016'), ('Facility_EffectiveDate', '26-Oct-2016'), ('Facility_ExpiryDate', '26-Oct-2019'), ('Facility_MaturityDate', '26-Oct-2019'), ('Facility_Currency', 'USD'), ('Facility_Type', 'Term Loan'), ('Facility_ProposedCmtAmt', '300,000,000.00'), ('Facility_SubType', 'Committed'), ('Facility_ANSIID', ''), ('Facility_ServicingGroup', 'CANADA CORPORATE BANKING'), ('Facility_Customer', 'BNS CANADA CORPORATE BANKING'), ('Facility_SGLocation', 'Toronto, Canada'), ('Facility_AdjustmentSettings', 'Present'), ('Facility_AgreementDateAdjustment', '30'), ('Facility_EffectiveDateAdjustment', '30'), ('Facility_ExpiryDateAdjustment', '1095'), ('Facility_MaturityDateAdjustment', '1095'), ('Facility_RiskType', 'Demand Loan'), ('Facility_RiskTypeLimit', 'FLOAT'), ('Facility_LoanPurposeType', 'General'), ('Facility_GlobalLimit', 'FLOAT'), ('Facility_PricingOption', 'SOFR Daily Compounding W OPS Not Overridable'), ('Facility_ARRObservationPeriod', 'ON'), ('Facility_LookbackDays', '5'), ('Facility_LockoutDays', '0'), ('Facility_RateBasis', 'Actual/360'), ('Facility_CalculationMethod', 'Daily Rate With Compounding'), ('MIS_Code', 'Origination Type'), ('MIS_Value', 'Syndication- BNS Agent')])</arg>
</arguments>
<kw name="Report Sub Header" library="ReportMaker_Keywords">
<doc>This keyword is used to add given argument as sub header in test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Proceed With Add All For Borrower/Depositor at Sublimit/Cust Tab</arg>
</arguments>
<kw name="Set Report Sub Header" library="ReportMaker">
<arguments>
<arg>${SubHeader}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:14:33.029" endtime="20210408 19:14:33.030"></status>
</kw>
<status status="PASS" starttime="20210408 19:14:32.973" endtime="20210408 19:14:33.031"></status>
</kw>
<kw name="Add Borrower/Depositor Using Add All" library="Facility_Notebook">
<doc>This keyword adds a borrower in Facility and select add all
@author: jloretiz 05FEB2021 - initial create</doc>
<kw name="Mx LoanIQ Activate Window" library="LoanIQ">
<doc>| Usage |
To activate existing window if present.</doc>
<arguments>
<arg>${LIQ_FacilityNotebook_Window}</arg>
</arguments>
<msg timestamp="20210408 19:14:33.204" level="INFO">Window : JavaWindow("title:=Facility -.*","displayed:=1") is activated</msg>
<status status="PASS" starttime="20210408 19:14:33.131" endtime="20210408 19:14:33.204"></status>
</kw>
<kw name="Mx LoanIQ Select Window Tab" library="LoanIQ">
<doc>| Usage |
Used to select the Java window tab</doc>
<arguments>
<arg>${LIQ_FacilityNotebook_Tab}</arg>
<arg>${TAB_SUBLIMIT_CUST}</arg>
</arguments>
<msg timestamp="20210408 19:14:38.129" level="INFO">Window Tab = 'Sublimit/Cust' is selected from the element = 'JavaWindow("title:=Facility -.*").JavaTab("tagname:=TabFolder")'</msg>
<status status="PASS" starttime="20210408 19:14:33.263" endtime="20210408 19:14:38.130"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_FacilitySublimitCust_AddBorrower_Button}</arg>
</arguments>
<msg timestamp="20210408 19:14:39.873" level="INFO">JavaWindow("title:=Facility -.*").JavaButton("attached text:=Add Borrower / Depositor") is clicked.</msg>
<status status="PASS" starttime="20210408 19:14:38.267" endtime="20210408 19:14:39.874"></status>
</kw>
<kw name="Mx LoanIQ Click Element If Present" library="LoanIQ">
<doc>| Usage |
Click on element identified by `locator` only if that element is present.
It passes if the element is not present.</doc>
<arguments>
<arg>${LIQ_Warning_Yes_Button}</arg>
</arguments>
<msg timestamp="20210408 19:14:48.286" level="INFO">JavaWindow("title:=Warning.*", "displayed:=1").JavaButton("label:=Yes"): is clicked, or skipped if not present.</msg>
<status status="PASS" starttime="20210408 19:14:39.964" endtime="20210408 19:14:48.287"></status>
</kw>
<kw name="Mx LoanIQ Activate" library="LoanIQ">
<doc>|Usage|</doc>
<arguments>
<arg>${LIQ_BorrowerDepositorSelect_Window}</arg>
</arguments>
<msg timestamp="20210408 19:14:49.603" level="INFO">Object = 'JavaWindow("title:=Borrower/Depositor Select")' is activated</msg>
<status status="PASS" starttime="20210408 19:14:48.362" endtime="20210408 19:14:49.604"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_BorrowerDepositorSelect_AddBorrower_AddAll_Button}</arg>
</arguments>
<msg timestamp="20210408 19:14:50.000" level="INFO">JavaWindow("title:=Borrower/Depositor Select").JavaButton("attached text:=Add All") is clicked.</msg>
<status status="PASS" starttime="20210408 19:14:49.664" endtime="20210408 19:14:50.001"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_BorrowerDepositorSelect_AddBorrower_OK_Button}</arg>
</arguments>
<msg timestamp="20210408 19:14:52.217" level="INFO">JavaWindow("title:=Borrower/Depositor.*").JavaButton("attached text:=OK") is clicked.</msg>
<status status="PASS" starttime="20210408 19:14:50.098" endtime="20210408 19:14:52.218"></status>
</kw>
<kw name="Mx LoanIQ Click Element If Present" library="LoanIQ">
<doc>| Usage |
Click on element identified by `locator` only if that element is present.
It passes if the element is not present.</doc>
<arguments>
<arg>${LIQ_Warning_Yes_Button}</arg>
</arguments>
<msg timestamp="20210408 19:15:00.740" level="INFO">JavaWindow("title:=Warning.*", "displayed:=1").JavaButton("label:=Yes"): is clicked, or skipped if not present.</msg>
<status status="PASS" starttime="20210408 19:14:52.344" endtime="20210408 19:15:00.741"></status>
</kw>
<kw name="Take Screenshot with text into Test Document" library="ReportMaker_Keywords">
<doc>This keyword is used to add screenshot with image filename as description into test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Borrower - Depositor</arg>
</arguments>
<kw name="Take Screenshot" library="Screenshot">
<doc>Takes a screenshot in JPEG format and embeds it into the log file.</doc>
<arguments>
<arg>${imageName}</arg>
</arguments>
<msg timestamp="20210408 19:15:00.968" level="INFO" html="yes">&lt;a href="Results/LoanIQ/TC02%20-%20Validate%20ARR%20Interest%20Pricing%20Option%20at%20Facility%20Level%20-%20Term___2021-04-08%2019-11-32.788/Borrower%20-%20Depositor_1.jpg"&gt;&lt;img src="Results/LoanIQ/TC02%20-%20Validate%20ARR%20Interest%20Pricing%20Option%20at%20Facility%20Level%20-%20Term___2021-04-08%2019-11-32.788/Borrower%20-%20Depositor_1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210408 19:15:00.848" endtime="20210408 19:15:00.968"></status>
</kw>
<kw name="Get Latest File" library="ReportMaker">
<arguments>
<arg>${getfilePath}</arg>
</arguments>
<assign>
<var>${imagePath}</var>
</assign>
<msg timestamp="20210408 19:15:01.022" level="INFO">${imagePath} = C:\Git_Evergreen\transform_arr\Results\LoanIQ\TC02 - Validate ARR Interest Pricing Option at Facility Level - Term___2021-04-08 19-11-32.788\Borrower - Depositor_1.jpg</msg>
<status status="PASS" starttime="20210408 19:15:01.020" endtime="20210408 19:15:01.022"></status>
</kw>
<kw name="Put Screenshot With Text" library="ReportMaker">
<arguments>
<arg>${imagePath}</arg>
<arg>${imageName}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:15:01.073" endtime="20210408 19:15:01.084"></status>
</kw>
<status status="PASS" starttime="20210408 19:15:00.793" endtime="20210408 19:15:01.085"></status>
</kw>
<status status="PASS" starttime="20210408 19:14:33.081" endtime="20210408 19:15:01.085"></status>
</kw>
<status status="PASS" starttime="20210408 19:14:32.919" endtime="20210408 19:15:01.085"></status>
</kw>
<msg timestamp="20210408 19:15:01.085" level="INFO">Mx Execute Template With Multiple Data keyword passed for all the data</msg>
<status status="PASS" starttime="20210408 19:14:32.892" endtime="20210408 19:15:01.085"></status>
</kw>
<kw name="Mx Execute Template With Multiple Data" library="GenericLib">
<doc>| Usage |
 This keyword is used to run template with multiple data.</doc>
<arguments>
<arg>Validate Facility ARR Parameters at Pricing Rules Tab</arg>
<arg>${ExcelPath}</arg>
<arg>${Facility_1}</arg>
<arg>CRED02_FacilitySetup</arg>
</arguments>
<kw name="Validate Facility ARR Parameters at Pricing Rules Tab" library="CRED01_DealSetUpWithoutOrigination">
<doc>This keyword is used to Validate ARR Pricing Options at Pricing Rules Tab at Facility Level
@author: rjlingat 08Apr2021 - initial create</doc>
<arguments>
<arg>OrderedDict([('rowid', '1'), ('Test_Case', 'ARR_Scenario3'), ('Facility_NamePrefix', 'ARR_TERM'), ('Deal_Name', ''), ('Facility_Name', 'ARR_TERM08042021191133'), ('Facility_AgreementDate', '26-Oct-2016'), ('Facility_EffectiveDate', '26-Oct-2016'), ('Facility_ExpiryDate', '26-Oct-2019'), ('Facility_MaturityDate', '26-Oct-2019'), ('Facility_Currency', 'USD'), ('Facility_Type', 'Term Loan'), ('Facility_ProposedCmtAmt', '300,000,000.00'), ('Facility_SubType', 'Committed'), ('Facility_ANSIID', ''), ('Facility_ServicingGroup', 'CANADA CORPORATE BANKING'), ('Facility_Customer', 'BNS CANADA CORPORATE BANKING'), ('Facility_SGLocation', 'Toronto, Canada'), ('Facility_AdjustmentSettings', 'Present'), ('Facility_AgreementDateAdjustment', '30'), ('Facility_EffectiveDateAdjustment', '30'), ('Facility_ExpiryDateAdjustment', '1095'), ('Facility_MaturityDateAdjustment', '1095'), ('Facility_RiskType', 'Demand Loan'), ('Facility_RiskTypeLimit', 'FLOAT'), ('Facility_LoanPurposeType', 'General'), ('Facility_GlobalLimit', 'FLOAT'), ('Facility_PricingOption', 'SOFR Daily Compounding W OPS Not Overridable'), ('Facility_ARRObservationPeriod', 'ON'), ('Facility_LookbackDays', '5'), ('Facility_LockoutDays', '0'), ('Facility_RateBasis', 'Actual/360'), ('Facility_CalculationMethod', 'Daily Rate With Compounding'), ('MIS_Code', 'Origination Type'), ('MIS_Value', 'Syndication- BNS Agent')])</arg>
</arguments>
<kw name="Validate Facility ARR Pricing Option Details" library="Facility_Notebook">
<doc>This keyword will validate the ARR Pricing Options Details in Facility Notebook.
@author: rjlingat 08Apr2021 -initial create</doc>
<arguments>
<arg>&amp;{ExcelPath}[Facility_PricingOption]</arg>
<arg>&amp;{ExcelPath}[Facility_ARRObservationPeriod]</arg>
<arg>&amp;{ExcelPath}[Facility_LookbackDays]</arg>
<arg>&amp;{ExcelPath}[Facility_LockoutDays]</arg>
<arg>&amp;{ExcelPath}[Facility_RateBasis]</arg>
<arg>${ExcelPath}[Facility_CalculationMethod]</arg>
</arguments>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sPricingRule_Option}</arg>
</arguments>
<assign>
<var>${PricingRule_Option}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:15:01.560" endtime="20210408 19:15:01.560"></status>
</kw>
<msg timestamp="20210408 19:15:01.560" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:15:01.557" endtime="20210408 19:15:01.561"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:15:01.765" level="INFO">${List_Argument_Excel_Value} = ['SOFR Daily Compounding W OPS Not Overridable']</msg>
<status status="PASS" starttime="20210408 19:15:01.764" endtime="20210408 19:15:01.765"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:15:01.819" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:15:01.819" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:15:01.818" endtime="20210408 19:15:01.819"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:15:01.871" level="INFO">${Arg_User_Input} = SOFR DAILY COMPOUNDING W OPS NOT OVERRIDABLE</msg>
<status status="PASS" starttime="20210408 19:15:01.870" endtime="20210408 19:15:01.871"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:15:01.923" level="INFO">${Arg_User_Input} = SOFR DAILY COMPOUNDING W OPS NOT OVERRIDABLE</msg>
<status status="PASS" starttime="20210408 19:15:01.922" endtime="20210408 19:15:01.923"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:15:01.974" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:15:01.973" endtime="20210408 19:15:01.974"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:15:02.026" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:15:02.025" endtime="20210408 19:15:02.027"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:15:02.078" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:15:02.077" endtime="20210408 19:15:02.078"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:15:02.134" endtime="20210408 19:15:02.135"></status>
</kw>
<msg timestamp="20210408 19:15:02.135" level="INFO">${Extracted_Argument_Value} = SOFR Daily Compounding W OPS Not Overridable</msg>
<status status="PASS" starttime="20210408 19:15:02.132" endtime="20210408 19:15:02.135"></status>
</kw>
<status status="PASS" starttime="20210408 19:15:01.713" endtime="20210408 19:15:02.135"></status>
</kw>
<msg timestamp="20210408 19:15:02.136" level="INFO">${Extracted_Argument_Value} = SOFR Daily Compounding W OPS Not Overridable</msg>
<status status="PASS" starttime="20210408 19:15:01.612" endtime="20210408 19:15:02.136"></status>
</kw>
<msg timestamp="20210408 19:15:02.136" level="INFO">${PricingRule_Option} = SOFR Daily Compounding W OPS Not Overridable</msg>
<status status="PASS" starttime="20210408 19:15:01.490" endtime="20210408 19:15:02.136"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sLookbackDays}</arg>
</arguments>
<assign>
<var>${LookbackDays}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:15:02.348" endtime="20210408 19:15:02.348"></status>
</kw>
<msg timestamp="20210408 19:15:02.348" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:15:02.346" endtime="20210408 19:15:02.349"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:15:02.557" level="INFO">${List_Argument_Excel_Value} = ['5']</msg>
<status status="PASS" starttime="20210408 19:15:02.556" endtime="20210408 19:15:02.557"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:15:02.609" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:15:02.609" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:15:02.608" endtime="20210408 19:15:02.609"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:15:02.662" level="INFO">${Arg_User_Input} = 5</msg>
<status status="PASS" starttime="20210408 19:15:02.661" endtime="20210408 19:15:02.663"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:15:02.715" level="INFO">${Arg_User_Input} = 5</msg>
<status status="PASS" starttime="20210408 19:15:02.715" endtime="20210408 19:15:02.715"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:15:02.768" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:15:02.768" endtime="20210408 19:15:02.768"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:15:02.821" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:15:02.820" endtime="20210408 19:15:02.821"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:15:02.872" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:15:02.872" endtime="20210408 19:15:02.872"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:15:02.925" endtime="20210408 19:15:02.925"></status>
</kw>
<msg timestamp="20210408 19:15:02.926" level="INFO">${Extracted_Argument_Value} = 5</msg>
<status status="PASS" starttime="20210408 19:15:02.923" endtime="20210408 19:15:02.926"></status>
</kw>
<status status="PASS" starttime="20210408 19:15:02.504" endtime="20210408 19:15:02.926"></status>
</kw>
<msg timestamp="20210408 19:15:02.926" level="INFO">${Extracted_Argument_Value} = 5</msg>
<status status="PASS" starttime="20210408 19:15:02.400" endtime="20210408 19:15:02.926"></status>
</kw>
<msg timestamp="20210408 19:15:02.926" level="INFO">${LookbackDays} = 5</msg>
<status status="PASS" starttime="20210408 19:15:02.293" endtime="20210408 19:15:02.927"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sLookoutDays}</arg>
</arguments>
<assign>
<var>${LookoutDays}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:15:03.137" endtime="20210408 19:15:03.138"></status>
</kw>
<msg timestamp="20210408 19:15:03.138" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:15:03.136" endtime="20210408 19:15:03.138"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:15:03.343" level="INFO">${List_Argument_Excel_Value} = ['0']</msg>
<status status="PASS" starttime="20210408 19:15:03.342" endtime="20210408 19:15:03.343"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:15:03.394" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:15:03.394" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:15:03.394" endtime="20210408 19:15:03.394"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:15:03.444" level="INFO">${Arg_User_Input} = 0</msg>
<status status="PASS" starttime="20210408 19:15:03.443" endtime="20210408 19:15:03.444"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:15:03.503" level="INFO">${Arg_User_Input} = 0</msg>
<status status="PASS" starttime="20210408 19:15:03.502" endtime="20210408 19:15:03.503"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:15:03.578" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:15:03.577" endtime="20210408 19:15:03.578"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:15:03.640" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:15:03.639" endtime="20210408 19:15:03.640"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:15:03.693" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:15:03.692" endtime="20210408 19:15:03.693"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:15:03.746" endtime="20210408 19:15:03.747"></status>
</kw>
<msg timestamp="20210408 19:15:03.747" level="INFO">${Extracted_Argument_Value} = 0</msg>
<status status="PASS" starttime="20210408 19:15:03.744" endtime="20210408 19:15:03.747"></status>
</kw>
<status status="PASS" starttime="20210408 19:15:03.292" endtime="20210408 19:15:03.747"></status>
</kw>
<msg timestamp="20210408 19:15:03.748" level="INFO">${Extracted_Argument_Value} = 0</msg>
<status status="PASS" starttime="20210408 19:15:03.190" endtime="20210408 19:15:03.748"></status>
</kw>
<msg timestamp="20210408 19:15:03.748" level="INFO">${LookoutDays} = 0</msg>
<status status="PASS" starttime="20210408 19:15:03.084" endtime="20210408 19:15:03.748"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sRateBasis}</arg>
</arguments>
<assign>
<var>${RateBasis}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:15:04.069" endtime="20210408 19:15:04.069"></status>
</kw>
<msg timestamp="20210408 19:15:04.069" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:15:04.067" endtime="20210408 19:15:04.069"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:15:04.294" level="INFO">${List_Argument_Excel_Value} = ['Actual/360']</msg>
<status status="PASS" starttime="20210408 19:15:04.293" endtime="20210408 19:15:04.294"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:15:04.351" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:15:04.352" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:15:04.351" endtime="20210408 19:15:04.352"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:15:04.403" level="INFO">${Arg_User_Input} = ACTUAL/360</msg>
<status status="PASS" starttime="20210408 19:15:04.402" endtime="20210408 19:15:04.403"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:15:04.454" level="INFO">${Arg_User_Input} = ACTUAL/360</msg>
<status status="PASS" starttime="20210408 19:15:04.453" endtime="20210408 19:15:04.454"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:15:04.506" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:15:04.505" endtime="20210408 19:15:04.506"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:15:04.557" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:15:04.556" endtime="20210408 19:15:04.557"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:15:04.611" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:15:04.611" endtime="20210408 19:15:04.611"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:15:04.664" endtime="20210408 19:15:04.664"></status>
</kw>
<msg timestamp="20210408 19:15:04.664" level="INFO">${Extracted_Argument_Value} = Actual/360</msg>
<status status="PASS" starttime="20210408 19:15:04.662" endtime="20210408 19:15:04.664"></status>
</kw>
<status status="PASS" starttime="20210408 19:15:04.229" endtime="20210408 19:15:04.665"></status>
</kw>
<msg timestamp="20210408 19:15:04.665" level="INFO">${Extracted_Argument_Value} = Actual/360</msg>
<status status="PASS" starttime="20210408 19:15:04.122" endtime="20210408 19:15:04.665"></status>
</kw>
<msg timestamp="20210408 19:15:04.665" level="INFO">${RateBasis} = Actual/360</msg>
<status status="PASS" starttime="20210408 19:15:04.016" endtime="20210408 19:15:04.665"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sCalculationMethod}</arg>
</arguments>
<assign>
<var>${CalculationMethod}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:15:04.917" endtime="20210408 19:15:04.917"></status>
</kw>
<msg timestamp="20210408 19:15:04.917" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:15:04.915" endtime="20210408 19:15:04.917"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:15:05.127" level="INFO">${List_Argument_Excel_Value} = ['Daily Rate With Compounding']</msg>
<status status="PASS" starttime="20210408 19:15:05.126" endtime="20210408 19:15:05.127"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:15:05.196" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:15:05.196" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:15:05.196" endtime="20210408 19:15:05.197"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:15:05.250" level="INFO">${Arg_User_Input} = DAILY RATE WITH COMPOUNDING</msg>
<status status="PASS" starttime="20210408 19:15:05.249" endtime="20210408 19:15:05.250"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:15:05.303" level="INFO">${Arg_User_Input} = DAILY RATE WITH COMPOUNDING</msg>
<status status="PASS" starttime="20210408 19:15:05.303" endtime="20210408 19:15:05.304"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:15:05.358" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:15:05.357" endtime="20210408 19:15:05.358"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:15:05.410" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:15:05.409" endtime="20210408 19:15:05.410"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:15:05.463" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:15:05.462" endtime="20210408 19:15:05.463"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:15:05.518" endtime="20210408 19:15:05.519"></status>
</kw>
<msg timestamp="20210408 19:15:05.519" level="INFO">${Extracted_Argument_Value} = Daily Rate With Compounding</msg>
<status status="PASS" starttime="20210408 19:15:05.516" endtime="20210408 19:15:05.519"></status>
</kw>
<status status="PASS" starttime="20210408 19:15:05.069" endtime="20210408 19:15:05.519"></status>
</kw>
<msg timestamp="20210408 19:15:05.520" level="INFO">${Extracted_Argument_Value} = Daily Rate With Compounding</msg>
<status status="PASS" starttime="20210408 19:15:04.968" endtime="20210408 19:15:05.520"></status>
</kw>
<msg timestamp="20210408 19:15:05.520" level="INFO">${CalculationMethod} = Daily Rate With Compounding</msg>
<status status="PASS" starttime="20210408 19:15:04.864" endtime="20210408 19:15:05.520"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sObservationPeriod}</arg>
</arguments>
<assign>
<var>${ObservationPeriod}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:15:05.729" endtime="20210408 19:15:05.730"></status>
</kw>
<msg timestamp="20210408 19:15:05.730" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:15:05.728" endtime="20210408 19:15:05.730"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:15:05.945" level="INFO">${List_Argument_Excel_Value} = ['ON']</msg>
<status status="PASS" starttime="20210408 19:15:05.945" endtime="20210408 19:15:05.946"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:15:06.002" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:15:06.002" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:15:06.002" endtime="20210408 19:15:06.002"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:15:06.053" level="INFO">${Arg_User_Input} = ON</msg>
<status status="PASS" starttime="20210408 19:15:06.052" endtime="20210408 19:15:06.053"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:15:06.108" level="INFO">${Arg_User_Input} = ON</msg>
<status status="PASS" starttime="20210408 19:15:06.108" endtime="20210408 19:15:06.108"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:15:06.160" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:15:06.159" endtime="20210408 19:15:06.160"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:15:06.334" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:15:06.333" endtime="20210408 19:15:06.334"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:15:06.388" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:15:06.387" endtime="20210408 19:15:06.388"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:15:06.454" endtime="20210408 19:15:06.454"></status>
</kw>
<msg timestamp="20210408 19:15:06.454" level="INFO">${Extracted_Argument_Value} = ON</msg>
<status status="PASS" starttime="20210408 19:15:06.452" endtime="20210408 19:15:06.454"></status>
</kw>
<status status="PASS" starttime="20210408 19:15:05.892" endtime="20210408 19:15:06.454"></status>
</kw>
<msg timestamp="20210408 19:15:06.455" level="INFO">${Extracted_Argument_Value} = ON</msg>
<status status="PASS" starttime="20210408 19:15:05.782" endtime="20210408 19:15:06.455"></status>
</kw>
<msg timestamp="20210408 19:15:06.455" level="INFO">${ObservationPeriod} = ON</msg>
<status status="PASS" starttime="20210408 19:15:05.675" endtime="20210408 19:15:06.455"></status>
</kw>
<kw name="Mx LoanIQ Activate Window" library="LoanIQ">
<doc>| Usage |
To activate existing window if present.</doc>
<arguments>
<arg>${LIQ_FacilityNotebook_Window}</arg>
</arguments>
<msg timestamp="20210408 19:15:06.588" level="INFO">Window : JavaWindow("title:=Facility -.*","displayed:=1") is activated</msg>
<status status="PASS" starttime="20210408 19:15:06.507" endtime="20210408 19:15:06.589"></status>
</kw>
<kw name="Mx LoanIQ Select Window Tab" library="LoanIQ">
<doc>| Usage |
Used to select the Java window tab</doc>
<arguments>
<arg>${LIQ_FacilityNotebook_Tab}</arg>
<arg>${TAB_PRICING_RULES}</arg>
</arguments>
<msg timestamp="20210408 19:15:11.728" level="INFO">Window Tab = 'Pricing Rules' is selected from the element = 'JavaWindow("title:=Facility -.*").JavaTab("tagname:=TabFolder")'</msg>
<status status="PASS" starttime="20210408 19:15:06.665" endtime="20210408 19:15:11.728"></status>
</kw>
<kw name="Mx LoanIQ DoubleClick" library="LoanIQ">
<doc>| Usage |
 This keyword performs double click on a item in the JavaTree</doc>
<arguments>
<arg>${LIQ_Facility_Restriction_JavaTree}</arg>
<arg>${PricingRule_Option}</arg>
</arguments>
<msg timestamp="20210408 19:15:15.488" level="INFO">Double clicked on 'SOFR Daily Compounding W OPS Not Overridable' at object = 'JavaWindow("title:=Facility -.*").JavaTree("tagname:=Drill down to update")'.</msg>
<status status="PASS" starttime="20210408 19:15:11.834" endtime="20210408 19:15:15.489"></status>
</kw>
<kw name="Mx LoanIQ Activate Window" library="LoanIQ">
<doc>| Usage |
To activate existing window if present.</doc>
<arguments>
<arg>${LIQ_InterestPricingOption_Window}</arg>
</arguments>
<msg timestamp="20210408 19:15:15.645" level="INFO">Window : JavaWindow("title:=.*Interest Pricing Option.*") is activated</msg>
<status status="PASS" starttime="20210408 19:15:15.566" endtime="20210408 19:15:15.645"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_InterestPricingOption_ARRParameters_Button}</arg>
</arguments>
<msg timestamp="20210408 19:15:16.202" level="INFO">JavaWindow("title:=.*Interest Pricing Option.*").JavaButton("attached text:=ARR Parameters") is clicked.</msg>
<status status="PASS" starttime="20210408 19:15:15.702" endtime="20210408 19:15:16.203"></status>
</kw>
<kw name="Mx LoanIQ Activate Window" library="LoanIQ">
<doc>| Usage |
To activate existing window if present.</doc>
<arguments>
<arg>${LIQ_AlternativeReferenceRates_Window}</arg>
</arguments>
<msg timestamp="20210408 19:15:16.379" level="INFO">Window : JavaWindow("title:=Alternative Reference Rates .*") is activated</msg>
<status status="PASS" starttime="20210408 19:15:16.271" endtime="20210408 19:15:16.380"></status>
</kw>
<kw name="Mx LoanIQ Get Data" library="LoanIQ">
<doc>| Usage |
Used to returns the text of object identified by `locator'</doc>
<arguments>
<arg>${LIQ_AlternativeReferenceRates_LookbackDays_TextField}</arg>
<arg>value%test</arg>
</arguments>
<assign>
<var>${UI_LookbackDays}</var>
</assign>
<msg timestamp="20210408 19:15:16.498" level="INFO">Fetching value from object: JavaWindow("title:=Alternative Reference Rates .*").JavaEdit("attached text:=Lookback Days:") 
 Value = : 5</msg>
<msg timestamp="20210408 19:15:16.498" level="INFO">${test} = 5</msg>
<msg timestamp="20210408 19:15:16.499" level="INFO">${UI_LookbackDays} = 5</msg>
<status status="PASS" starttime="20210408 19:15:16.431" endtime="20210408 19:15:16.499"></status>
</kw>
<kw name="Mx LoanIQ Get Data" library="LoanIQ">
<doc>| Usage |
Used to returns the text of object identified by `locator'</doc>
<arguments>
<arg>${LIQ_AlternativeReferenceRates_LockoutDays_TextField}</arg>
<arg>value%test</arg>
</arguments>
<assign>
<var>${UI_LookoutDays}</var>
</assign>
<msg timestamp="20210408 19:15:16.631" level="INFO">Fetching value from object: JavaWindow("title:=Alternative Reference Rates .*").JavaEdit("attached text:=Lockout Days:") 
 Value = : 0</msg>
<msg timestamp="20210408 19:15:16.632" level="INFO">${test} = 0</msg>
<msg timestamp="20210408 19:15:16.632" level="INFO">${UI_LookoutDays} = 0</msg>
<status status="PASS" starttime="20210408 19:15:16.563" endtime="20210408 19:15:16.633"></status>
</kw>
<kw name="Mx LoanIQ Get Data" library="LoanIQ">
<doc>| Usage |
Used to returns the text of object identified by `locator'</doc>
<arguments>
<arg>${LIQ_AlternativeReferenceRates_RateBasis_Dropdown}</arg>
<arg>value%test</arg>
</arguments>
<assign>
<var>${UI_RateBasis}</var>
</assign>
<msg timestamp="20210408 19:15:16.851" level="INFO">Fetching value from object: JavaWindow("title:=Alternative Reference Rates .*").JavaList("attached text:=Rate Basis:") 
 Value = : Actual/360</msg>
<msg timestamp="20210408 19:15:16.852" level="INFO">${test} = Actual/360</msg>
<msg timestamp="20210408 19:15:16.852" level="INFO">${UI_RateBasis} = Actual/360</msg>
<status status="PASS" starttime="20210408 19:15:16.742" endtime="20210408 19:15:16.852"></status>
</kw>
<kw name="Mx LoanIQ Get Data" library="LoanIQ">
<doc>| Usage |
Used to returns the text of object identified by `locator'</doc>
<arguments>
<arg>${LIQ_AlternativeReferenceRates_CalculationMethod_Dropdown}</arg>
<arg>value%test</arg>
</arguments>
<assign>
<var>${UI_CalculationMethod}</var>
</assign>
<msg timestamp="20210408 19:15:16.990" level="INFO">Fetching value from object: JavaWindow("title:=Alternative Reference Rates .*").JavaList("attached text:=Calculation Method:") 
 Value = : Daily Rate With Compounding</msg>
<msg timestamp="20210408 19:15:16.991" level="INFO">${test} = Daily Rate With Compounding</msg>
<msg timestamp="20210408 19:15:16.991" level="INFO">${UI_CalculationMethod} = Daily Rate With Compounding</msg>
<status status="PASS" starttime="20210408 19:15:16.922" endtime="20210408 19:15:16.991"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Validate if Element is Disabled</arg>
<arg>${LIQ_AlternativeReferenceRates_ObservationPeriod_Checkbox}</arg>
<arg>disabled%1</arg>
</arguments>
<assign>
<var>${ButtonStatus_ObservationPeriod}</var>
</assign>
<kw name="Validate if Element is Disabled" library="GenericKeywords">
<doc>This keyword validates if Element is disabled
@author: ghabal</doc>
<arguments>
<arg>${LIQ_AlternativeReferenceRates_ObservationPeriod_Checkbox}</arg>
<arg>disabled%1</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%0</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>enabled%0</arg>
</arguments>
<msg timestamp="20210408 19:15:17.229" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:15:17.103" endtime="20210408 19:15:17.230"></status>
</kw>
<status status="PASS" starttime="20210408 19:15:17.101" endtime="20210408 19:15:17.230"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%0</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>enabled%0</arg>
</arguments>
<msg timestamp="20210408 19:15:17.393" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:15:17.286" endtime="20210408 19:15:17.393"></status>
</kw>
<status status="PASS" starttime="20210408 19:15:17.284" endtime="20210408 19:15:17.393"></status>
</kw>
<msg timestamp="20210408 19:15:17.394" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:15:17.282" endtime="20210408 19:15:17.394"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed disabled</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed enabled</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>'${Field_Label}' element is confirmed disabled</arg>
</arguments>
<msg timestamp="20210408 19:15:17.453" level="INFO">'disabled%1' element is confirmed disabled</msg>
<status status="PASS" starttime="20210408 19:15:17.453" endtime="20210408 19:15:17.454"></status>
</kw>
<status status="PASS" starttime="20210408 19:15:17.451" endtime="20210408 19:15:17.454"></status>
</kw>
<status status="PASS" starttime="20210408 19:15:17.046" endtime="20210408 19:15:17.454"></status>
</kw>
<msg timestamp="20210408 19:15:17.454" level="INFO">${ButtonStatus_ObservationPeriod} = True</msg>
<status status="PASS" starttime="20210408 19:15:17.045" endtime="20210408 19:15:17.454"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ObservationPeriod}'=='${ON}' and ${ButtonStatus_ObservationPeriod}==False</arg>
<arg>Mx LoanIQ Set</arg>
<arg>${LIQ_AlternativeReferenceRates_ObservationPeriod_Checkbox}</arg>
<arg>${ON}</arg>
<arg>ELSE IF</arg>
<arg>'${ObservationPeriod}'=='${OFF}' and ${ButtonStatus_ObservationPeriod}==False</arg>
<arg>Mx LoanIQ Set</arg>
<arg>${LIQ_AlternativeReferenceRates_ObservationPeriod_Checkbox}</arg>
<arg>${OFF}</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>ObservationPeriod is Disabled</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>ObservationPeriod is Disabled</arg>
</arguments>
<msg timestamp="20210408 19:15:17.510" level="INFO">ObservationPeriod is Disabled</msg>
<status status="PASS" starttime="20210408 19:15:17.510" endtime="20210408 19:15:17.510"></status>
</kw>
<status status="PASS" starttime="20210408 19:15:17.508" endtime="20210408 19:15:17.510"></status>
</kw>
<kw name="Take Screenshot with text into Test Document" library="ReportMaker_Keywords">
<doc>This keyword is used to add screenshot with image filename as description into test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Interest Pricing - Validate ARR Parameters</arg>
</arguments>
<kw name="Take Screenshot" library="Screenshot">
<doc>Takes a screenshot in JPEG format and embeds it into the log file.</doc>
<arguments>
<arg>${imageName}</arg>
</arguments>
<msg timestamp="20210408 19:15:17.726" level="INFO" html="yes">&lt;a href="Results/LoanIQ/TC02%20-%20Validate%20ARR%20Interest%20Pricing%20Option%20at%20Facility%20Level%20-%20Term___2021-04-08%2019-11-32.788/Interest%20Pricing%20-%20Validate%20ARR%20Parameters_1.jpg"&gt;&lt;img src="Results/LoanIQ/TC02%20-%20Validate%20ARR%20Interest%20Pricing%20Option%20at%20Facility%20Level%20-%20Term___2021-04-08%2019-11-32.788/Interest%20Pricing%20-%20Validate%20ARR%20Parameters_1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210408 19:15:17.617" endtime="20210408 19:15:17.726"></status>
</kw>
<kw name="Get Latest File" library="ReportMaker">
<arguments>
<arg>${getfilePath}</arg>
</arguments>
<assign>
<var>${imagePath}</var>
</assign>
<msg timestamp="20210408 19:15:17.780" level="INFO">${imagePath} = C:\Git_Evergreen\transform_arr\Results\LoanIQ\TC02 - Validate ARR Interest Pricing Option at Facility Level - Term___2021-04-08 19-11-32.788\Interest Pricing - Validate ARR Parameters_1.jpg</msg>
<status status="PASS" starttime="20210408 19:15:17.778" endtime="20210408 19:15:17.780"></status>
</kw>
<kw name="Put Screenshot With Text" library="ReportMaker">
<arguments>
<arg>${imagePath}</arg>
<arg>${imageName}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:15:17.831" endtime="20210408 19:15:17.846"></status>
</kw>
<status status="PASS" starttime="20210408 19:15:17.565" endtime="20210408 19:15:17.846"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${UI_LookbackDays}</arg>
<arg>${UI_LookbackDays}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:15:17.896" endtime="20210408 19:15:17.896"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${UI_LookoutDays}</arg>
<arg>${LookoutDays}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:15:17.948" endtime="20210408 19:15:17.948"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${UI_RateBasis}</arg>
<arg>${RateBasis}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:15:17.999" endtime="20210408 19:15:18.000"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${UI_CalculationMethod}</arg>
<arg>${CalculationMethod}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:15:18.050" endtime="20210408 19:15:18.050"></status>
</kw>
<kw name="Validate Deal ARR Parameters are Not Overridable" library="Deal_Notebook">
<doc>This will validate if the ARR Parameters are not Overridable
@author: rjlingat 08Apr-2021 - initial Create</doc>
<arguments>
<arg>${ButtonStatus_ObservationPeriod}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==True</arg>
<arg>Run Keywords</arg>
<arg>Validate if Element is Not Editable</arg>
<arg>${LIQ_AlternativeReferenceRates_LookbackDays_TextField}</arg>
<arg>LookbackDays</arg>
<arg>AND</arg>
<arg>Validate if Element is Not Editable</arg>
<arg>${LIQ_AlternativeReferenceRates_LockoutDays_TextField}</arg>
<arg>LookoutDays</arg>
<arg>AND</arg>
<arg>Validate if Element is Disabled</arg>
<arg>${LIQ_AlternativeReferenceRates_RateBasis_Dropdown}</arg>
<arg>RateBasis</arg>
<arg>AND</arg>
<arg>Validate if Element is Disabled</arg>
<arg>${LIQ_AlternativeReferenceRates_CalculationMethod_Dropdown}</arg>
<arg>CalculationMethod</arg>
<arg>AND</arg>
<arg>Validate if Element is Disabled</arg>
<arg>${LIQ_AlternativeReferenceRates_ObservationPeriod_Checkbox}</arg>
<arg>ObservationPeriod</arg>
<arg>AND</arg>
<arg>Take Screenshot with text into test document</arg>
<arg>Deal ARR Parameters - Not Overridable</arg>
<arg>AND</arg>
<arg>Mx LoanIQ Click</arg>
<arg>${LIQ_AlternativeReferenceRates_Cancel_Button}</arg>
<arg>ELSE</arg>
<arg>Mx LoanIQ Click</arg>
<arg>${LIQ_AlternativeReferenceRates_Ok_Button}</arg>
</arguments>
<kw name="Run Keywords" library="BuiltIn">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>Validate if Element is Not Editable</arg>
<arg>${LIQ_AlternativeReferenceRates_LookbackDays_TextField}</arg>
<arg>LookbackDays</arg>
<arg>AND</arg>
<arg>Validate if Element is Not Editable</arg>
<arg>${LIQ_AlternativeReferenceRates_LockoutDays_TextField}</arg>
<arg>LookoutDays</arg>
<arg>AND</arg>
<arg>Validate if Element is Disabled</arg>
<arg>${LIQ_AlternativeReferenceRates_RateBasis_Dropdown}</arg>
<arg>RateBasis</arg>
<arg>AND</arg>
<arg>Validate if Element is Disabled</arg>
<arg>${LIQ_AlternativeReferenceRates_CalculationMethod_Dropdown}</arg>
<arg>CalculationMethod</arg>
<arg>AND</arg>
<arg>Validate if Element is Disabled</arg>
<arg>${LIQ_AlternativeReferenceRates_ObservationPeriod_Checkbox}</arg>
<arg>ObservationPeriod</arg>
<arg>AND</arg>
<arg>Take Screenshot with text into test document</arg>
<arg>Deal ARR Parameters - Not Overridable</arg>
<arg>AND</arg>
<arg>Mx LoanIQ Click</arg>
<arg>${LIQ_AlternativeReferenceRates_Cancel_Button}</arg>
</arguments>
<kw name="Validate if Element is Not Editable" library="GenericKeywords">
<doc>This keyword validates if Element is disabled
@author: chanario DDMMMYYYY - initial create</doc>
<arguments>
<arg>${LIQ_AlternativeReferenceRates_LookbackDays_TextField}</arg>
<arg>LookbackDays</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>editable%0</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>editable%0</arg>
</arguments>
<msg timestamp="20210408 19:15:18.336" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:15:18.210" endtime="20210408 19:15:18.337"></status>
</kw>
<status status="PASS" starttime="20210408 19:15:18.208" endtime="20210408 19:15:18.337"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>editable%0</arg>
</arguments>
<assign>
<var>${Result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>editable%0</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>editable%0</arg>
</arguments>
<msg timestamp="20210408 19:15:18.495" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:15:18.390" endtime="20210408 19:15:18.496"></status>
</kw>
<status status="PASS" starttime="20210408 19:15:18.389" endtime="20210408 19:15:18.496"></status>
</kw>
<msg timestamp="20210408 19:15:18.496" level="INFO">${Result} = True</msg>
<status status="PASS" starttime="20210408 19:15:18.386" endtime="20210408 19:15:18.496"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Result}'=='${TRUE}'</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed disabled</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed enabled</arg>
<arg>level=ERROR</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>'${Field_Label}' element is confirmed disabled</arg>
</arguments>
<msg timestamp="20210408 19:15:18.572" level="INFO">'LookbackDays' element is confirmed disabled</msg>
<status status="PASS" starttime="20210408 19:15:18.572" endtime="20210408 19:15:18.573"></status>
</kw>
<status status="PASS" starttime="20210408 19:15:18.568" endtime="20210408 19:15:18.573"></status>
</kw>
<status status="PASS" starttime="20210408 19:15:18.156" endtime="20210408 19:15:18.573"></status>
</kw>
<kw name="Validate if Element is Not Editable" library="GenericKeywords">
<doc>This keyword validates if Element is disabled
@author: chanario DDMMMYYYY - initial create</doc>
<arguments>
<arg>${LIQ_AlternativeReferenceRates_LockoutDays_TextField}</arg>
<arg>LookoutDays</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>editable%0</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>editable%0</arg>
</arguments>
<msg timestamp="20210408 19:15:18.738" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:15:18.628" endtime="20210408 19:15:18.739"></status>
</kw>
<status status="PASS" starttime="20210408 19:15:18.627" endtime="20210408 19:15:18.739"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>editable%0</arg>
</arguments>
<assign>
<var>${Result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>editable%0</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>editable%0</arg>
</arguments>
<msg timestamp="20210408 19:15:18.912" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:15:18.797" endtime="20210408 19:15:18.913"></status>
</kw>
<status status="PASS" starttime="20210408 19:15:18.795" endtime="20210408 19:15:18.913"></status>
</kw>
<msg timestamp="20210408 19:15:18.913" level="INFO">${Result} = True</msg>
<status status="PASS" starttime="20210408 19:15:18.793" endtime="20210408 19:15:18.913"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Result}'=='${TRUE}'</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed disabled</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed enabled</arg>
<arg>level=ERROR</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>'${Field_Label}' element is confirmed disabled</arg>
</arguments>
<msg timestamp="20210408 19:15:18.970" level="INFO">'LookoutDays' element is confirmed disabled</msg>
<status status="PASS" starttime="20210408 19:15:18.969" endtime="20210408 19:15:18.970"></status>
</kw>
<status status="PASS" starttime="20210408 19:15:18.967" endtime="20210408 19:15:18.970"></status>
</kw>
<status status="PASS" starttime="20210408 19:15:18.575" endtime="20210408 19:15:18.970"></status>
</kw>
<kw name="Validate if Element is Disabled" library="GenericKeywords">
<doc>This keyword validates if Element is disabled
@author: ghabal</doc>
<arguments>
<arg>${LIQ_AlternativeReferenceRates_RateBasis_Dropdown}</arg>
<arg>RateBasis</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%0</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>enabled%0</arg>
</arguments>
<msg timestamp="20210408 19:15:19.133" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:15:19.025" endtime="20210408 19:15:19.134"></status>
</kw>
<status status="PASS" starttime="20210408 19:15:19.023" endtime="20210408 19:15:19.134"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%0</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>enabled%0</arg>
</arguments>
<msg timestamp="20210408 19:15:19.309" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:15:19.189" endtime="20210408 19:15:19.309"></status>
</kw>
<status status="PASS" starttime="20210408 19:15:19.187" endtime="20210408 19:15:19.310"></status>
</kw>
<msg timestamp="20210408 19:15:19.310" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:15:19.185" endtime="20210408 19:15:19.310"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed disabled</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed enabled</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>'${Field_Label}' element is confirmed disabled</arg>
</arguments>
<msg timestamp="20210408 19:15:19.371" level="INFO">'RateBasis' element is confirmed disabled</msg>
<status status="PASS" starttime="20210408 19:15:19.371" endtime="20210408 19:15:19.371"></status>
</kw>
<status status="PASS" starttime="20210408 19:15:19.368" endtime="20210408 19:15:19.372"></status>
</kw>
<status status="PASS" starttime="20210408 19:15:18.971" endtime="20210408 19:15:19.372"></status>
</kw>
<kw name="Validate if Element is Disabled" library="GenericKeywords">
<doc>This keyword validates if Element is disabled
@author: ghabal</doc>
<arguments>
<arg>${LIQ_AlternativeReferenceRates_CalculationMethod_Dropdown}</arg>
<arg>CalculationMethod</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%0</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>enabled%0</arg>
</arguments>
<msg timestamp="20210408 19:15:19.541" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:15:19.428" endtime="20210408 19:15:19.541"></status>
</kw>
<status status="PASS" starttime="20210408 19:15:19.426" endtime="20210408 19:15:19.541"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%0</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>enabled%0</arg>
</arguments>
<msg timestamp="20210408 19:15:19.705" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:15:19.594" endtime="20210408 19:15:19.705"></status>
</kw>
<status status="PASS" starttime="20210408 19:15:19.593" endtime="20210408 19:15:19.706"></status>
</kw>
<msg timestamp="20210408 19:15:19.706" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:15:19.591" endtime="20210408 19:15:19.706"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed disabled</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed enabled</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>'${Field_Label}' element is confirmed disabled</arg>
</arguments>
<msg timestamp="20210408 19:15:19.759" level="INFO">'CalculationMethod' element is confirmed disabled</msg>
<status status="PASS" starttime="20210408 19:15:19.758" endtime="20210408 19:15:19.759"></status>
</kw>
<status status="PASS" starttime="20210408 19:15:19.757" endtime="20210408 19:15:19.759"></status>
</kw>
<status status="PASS" starttime="20210408 19:15:19.373" endtime="20210408 19:15:19.759"></status>
</kw>
<kw name="Validate if Element is Disabled" library="GenericKeywords">
<doc>This keyword validates if Element is disabled
@author: ghabal</doc>
<arguments>
<arg>${LIQ_AlternativeReferenceRates_ObservationPeriod_Checkbox}</arg>
<arg>ObservationPeriod</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%0</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>enabled%0</arg>
</arguments>
<msg timestamp="20210408 19:15:19.922" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:15:19.815" endtime="20210408 19:15:19.922"></status>
</kw>
<status status="PASS" starttime="20210408 19:15:19.813" endtime="20210408 19:15:19.922"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${Field_fromUI}</arg>
<arg>enabled%0</arg>
</arguments>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${Field_fromUI}</arg>
<arg>enabled%0</arg>
</arguments>
<msg timestamp="20210408 19:15:20.087" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:15:19.981" endtime="20210408 19:15:20.087"></status>
</kw>
<status status="PASS" starttime="20210408 19:15:19.979" endtime="20210408 19:15:20.087"></status>
</kw>
<msg timestamp="20210408 19:15:20.088" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:15:19.978" endtime="20210408 19:15:20.088"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed disabled</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>'${Field_Label}' element is confirmed enabled</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>'${Field_Label}' element is confirmed disabled</arg>
</arguments>
<msg timestamp="20210408 19:15:20.151" level="INFO">'ObservationPeriod' element is confirmed disabled</msg>
<status status="PASS" starttime="20210408 19:15:20.151" endtime="20210408 19:15:20.151"></status>
</kw>
<status status="PASS" starttime="20210408 19:15:20.149" endtime="20210408 19:15:20.151"></status>
</kw>
<status status="PASS" starttime="20210408 19:15:19.761" endtime="20210408 19:15:20.152"></status>
</kw>
<kw name="Take Screenshot with text into Test Document" library="ReportMaker_Keywords">
<doc>This keyword is used to add screenshot with image filename as description into test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Deal ARR Parameters - Not Overridable</arg>
</arguments>
<kw name="Take Screenshot" library="Screenshot">
<doc>Takes a screenshot in JPEG format and embeds it into the log file.</doc>
<arguments>
<arg>${imageName}</arg>
</arguments>
<msg timestamp="20210408 19:15:20.306" level="INFO" html="yes">&lt;a href="Results/LoanIQ/TC02%20-%20Validate%20ARR%20Interest%20Pricing%20Option%20at%20Facility%20Level%20-%20Term___2021-04-08%2019-11-32.788/Deal%20ARR%20Parameters%20-%20Not%20Overridable_1.jpg"&gt;&lt;img src="Results/LoanIQ/TC02%20-%20Validate%20ARR%20Interest%20Pricing%20Option%20at%20Facility%20Level%20-%20Term___2021-04-08%2019-11-32.788/Deal%20ARR%20Parameters%20-%20Not%20Overridable_1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210408 19:15:20.208" endtime="20210408 19:15:20.307"></status>
</kw>
<kw name="Get Latest File" library="ReportMaker">
<arguments>
<arg>${getfilePath}</arg>
</arguments>
<assign>
<var>${imagePath}</var>
</assign>
<msg timestamp="20210408 19:15:20.359" level="INFO">${imagePath} = C:\Git_Evergreen\transform_arr\Results\LoanIQ\TC02 - Validate ARR Interest Pricing Option at Facility Level - Term___2021-04-08 19-11-32.788\Deal ARR Parameters - Not Overridable_1.jpg</msg>
<status status="PASS" starttime="20210408 19:15:20.357" endtime="20210408 19:15:20.359"></status>
</kw>
<kw name="Put Screenshot With Text" library="ReportMaker">
<arguments>
<arg>${imagePath}</arg>
<arg>${imageName}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:15:20.416" endtime="20210408 19:15:20.427"></status>
</kw>
<status status="PASS" starttime="20210408 19:15:20.153" endtime="20210408 19:15:20.428"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_AlternativeReferenceRates_Cancel_Button}</arg>
</arguments>
<msg timestamp="20210408 19:15:20.590" level="INFO">JavaWindow("title:=Alternative Reference Rates .*").JavaButton("attached text:=Cancel") is clicked.</msg>
<status status="PASS" starttime="20210408 19:15:20.429" endtime="20210408 19:15:20.590"></status>
</kw>
<status status="PASS" starttime="20210408 19:15:18.155" endtime="20210408 19:15:20.591"></status>
</kw>
<status status="PASS" starttime="20210408 19:15:18.153" endtime="20210408 19:15:20.591"></status>
</kw>
<status status="PASS" starttime="20210408 19:15:18.101" endtime="20210408 19:15:20.592"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_InterestPricingOption_Ok_Button}</arg>
</arguments>
<msg timestamp="20210408 19:15:21.115" level="INFO">JavaWindow("title:=.*Interest Pricing Option.*").JavaButton("attached text:=OK") is clicked.</msg>
<status status="PASS" starttime="20210408 19:15:20.678" endtime="20210408 19:15:21.116"></status>
</kw>
<kw name="Take Screenshot with text into Test Document" library="ReportMaker_Keywords">
<doc>This keyword is used to add screenshot with image filename as description into test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Interest Pricing Option - ${PricingRule_Option}</arg>
</arguments>
<kw name="Take Screenshot" library="Screenshot">
<doc>Takes a screenshot in JPEG format and embeds it into the log file.</doc>
<arguments>
<arg>${imageName}</arg>
</arguments>
<msg timestamp="20210408 19:15:21.397" level="INFO" html="yes">&lt;a href="Results/LoanIQ/TC02%20-%20Validate%20ARR%20Interest%20Pricing%20Option%20at%20Facility%20Level%20-%20Term___2021-04-08%2019-11-32.788/Interest%20Pricing%20Option%20-%20SOFR%20Daily%20Compounding%20W%20OPS%20Not%20Overridable_1.jpg"&gt;&lt;img src="Results/LoanIQ/TC02%20-%20Validate%20ARR%20Interest%20Pricing%20Option%20at%20Facility%20Level%20-%20Term___2021-04-08%2019-11-32.788/Interest%20Pricing%20Option%20-%20SOFR%20Daily%20Compounding%20W%20OPS%20Not%20Overridable_1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210408 19:15:21.261" endtime="20210408 19:15:21.397"></status>
</kw>
<kw name="Get Latest File" library="ReportMaker">
<arguments>
<arg>${getfilePath}</arg>
</arguments>
<assign>
<var>${imagePath}</var>
</assign>
<msg timestamp="20210408 19:15:21.512" level="INFO">${imagePath} = C:\Git_Evergreen\transform_arr\Results\LoanIQ\TC02 - Validate ARR Interest Pricing Option at Facility Level - Term___2021-04-08 19-11-32.788\Interest Pricing Option - SOFR Daily Compounding W OPS Not ...</msg>
<status status="PASS" starttime="20210408 19:15:21.510" endtime="20210408 19:15:21.512"></status>
</kw>
<kw name="Put Screenshot With Text" library="ReportMaker">
<arguments>
<arg>${imagePath}</arg>
<arg>${imageName}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:15:21.580" endtime="20210408 19:15:21.594"></status>
</kw>
<status status="PASS" starttime="20210408 19:15:21.186" endtime="20210408 19:15:21.594"></status>
</kw>
<status status="PASS" starttime="20210408 19:15:01.214" endtime="20210408 19:15:21.594"></status>
</kw>
<status status="PASS" starttime="20210408 19:15:01.161" endtime="20210408 19:15:21.595"></status>
</kw>
<msg timestamp="20210408 19:15:21.595" level="INFO">Mx Execute Template With Multiple Data keyword passed for all the data</msg>
<status status="PASS" starttime="20210408 19:15:01.138" endtime="20210408 19:15:21.595"></status>
</kw>
<kw name="Mx Execute Template With Multiple Data" library="GenericLib">
<doc>| Usage |
 This keyword is used to run template with multiple data.</doc>
<arguments>
<arg>Proceed with Facility Interest Pricing Setup</arg>
<arg>${ExcelPath}</arg>
<arg>${Facility_2}</arg>
<arg>CRED08_OngoingFeeSetup</arg>
</arguments>
<kw name="Proceed with Facility Interest Pricing Setup" library="CRED08_OngoingFeeSetup">
<doc>This keyword is used to Proceed with Facility Interest Pricing Setup
@author: hstone 25NOV2020 - initial create</doc>
<arguments>
<arg>OrderedDict([('rowid', '2'), ('Test_Case', 'ARR_Scenario3'), ('Interest_AddItem', 'Option'), ('Interest_OptionName', 'Libor Option'), ('Interest_RateBasis', 'Actual/360'), ('Interest_SpreadType', 'Percent'), ('Interest_SpreadValue', '1.8'), ('Interest_BaseRateCode', 'SOFR')])</arg>
</arguments>
<kw name="Report Sub Header" library="ReportMaker_Keywords">
<doc>This keyword is used to add given argument as sub header in test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Proceed with Facility Interest Pricing Setup</arg>
</arguments>
<kw name="Set Report Sub Header" library="ReportMaker">
<arguments>
<arg>${SubHeader}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:15:21.775" endtime="20210408 19:15:21.778"></status>
</kw>
<status status="PASS" starttime="20210408 19:15:21.723" endtime="20210408 19:15:21.778"></status>
</kw>
<kw name="Navigate to Interest Pricing Window" library="Facility_Notebook">
<doc>This keyword is used to Navigate to Interest Pricing Window
@author: hstone 25NOV2020 - initial create</doc>
<kw name="Mx LoanIQ Activate" library="LoanIQ">
<doc>|Usage|</doc>
<arguments>
<arg>${LIQ_FacilityNotebook_Window}</arg>
</arguments>
<msg timestamp="20210408 19:15:23.293" level="INFO">Object = 'JavaWindow("title:=Facility -.*","displayed:=1")' is activated</msg>
<status status="PASS" starttime="20210408 19:15:22.008" endtime="20210408 19:15:23.294"></status>
</kw>
<kw name="Mx LoanIQ Select Window Tab" library="LoanIQ">
<doc>| Usage |
Used to select the Java window tab</doc>
<arguments>
<arg>${LIQ_FacilityNotebook_Tab}</arg>
<arg>${TAB_PRICING}</arg>
</arguments>
<msg timestamp="20210408 19:15:28.345" level="INFO">Window Tab = 'Pricing' is selected from the element = 'JavaWindow("title:=Facility -.*").JavaTab("tagname:=TabFolder")'</msg>
<status status="PASS" starttime="20210408 19:15:23.348" endtime="20210408 19:15:28.346"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_FacilityPricing_ModifyInterestPricing_Button}</arg>
</arguments>
<msg timestamp="20210408 19:15:29.527" level="INFO">JavaWindow("title:=Facility -.*").JavaButton("attached text:=Modify Interest Pricing.*") is clicked.</msg>
<status status="PASS" starttime="20210408 19:15:28.439" endtime="20210408 19:15:29.527"></status>
</kw>
<kw name="Mx LoanIQ Click Element If Present" library="LoanIQ">
<doc>| Usage |
Click on element identified by `locator` only if that element is present.
It passes if the element is not present.</doc>
<arguments>
<arg>${LIQ_Warning_Yes_Button}</arg>
</arguments>
<msg timestamp="20210408 19:15:35.370" level="INFO">JavaWindow("title:=Warning.*", "displayed:=1").JavaButton("label:=Yes"): is clicked, or skipped if not present.</msg>
<status status="PASS" starttime="20210408 19:15:29.610" endtime="20210408 19:15:35.370"></status>
</kw>
<kw name="Take Screenshot with text into Test Document" library="ReportMaker_Keywords">
<doc>This keyword is used to add screenshot with image filename as description into test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Facility Notebook - Interest Pricing Window</arg>
</arguments>
<kw name="Take Screenshot" library="Screenshot">
<doc>Takes a screenshot in JPEG format and embeds it into the log file.</doc>
<arguments>
<arg>${imageName}</arg>
</arguments>
<msg timestamp="20210408 19:15:35.629" level="INFO" html="yes">&lt;a href="Results/LoanIQ/TC02%20-%20Validate%20ARR%20Interest%20Pricing%20Option%20at%20Facility%20Level%20-%20Term___2021-04-08%2019-11-32.788/Facility%20Notebook%20-%20Interest%20Pricing%20Window_1.jpg"&gt;&lt;img src="Results/LoanIQ/TC02%20-%20Validate%20ARR%20Interest%20Pricing%20Option%20at%20Facility%20Level%20-%20Term___2021-04-08%2019-11-32.788/Facility%20Notebook%20-%20Interest%20Pricing%20Window_1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210408 19:15:35.513" endtime="20210408 19:15:35.629"></status>
</kw>
<kw name="Get Latest File" library="ReportMaker">
<arguments>
<arg>${getfilePath}</arg>
</arguments>
<assign>
<var>${imagePath}</var>
</assign>
<msg timestamp="20210408 19:15:35.694" level="INFO">${imagePath} = C:\Git_Evergreen\transform_arr\Results\LoanIQ\TC02 - Validate ARR Interest Pricing Option at Facility Level - Term___2021-04-08 19-11-32.788\Facility Notebook - Interest Pricing Window_1.jpg</msg>
<status status="PASS" starttime="20210408 19:15:35.692" endtime="20210408 19:15:35.694"></status>
</kw>
<kw name="Put Screenshot With Text" library="ReportMaker">
<arguments>
<arg>${imagePath}</arg>
<arg>${imageName}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:15:35.769" endtime="20210408 19:15:35.782"></status>
</kw>
<status status="PASS" starttime="20210408 19:15:35.435" endtime="20210408 19:15:35.782"></status>
</kw>
<status status="PASS" starttime="20210408 19:15:21.833" endtime="20210408 19:15:35.782"></status>
</kw>
<status status="PASS" starttime="20210408 19:15:21.669" endtime="20210408 19:15:35.782"></status>
</kw>
<msg timestamp="20210408 19:15:35.782" level="INFO">Mx Execute Template With Multiple Data keyword passed for all the data</msg>
<status status="PASS" starttime="20210408 19:15:21.647" endtime="20210408 19:15:35.783"></status>
</kw>
<kw name="Mx Execute Template With Multiple Data" library="GenericLib">
<doc>| Usage |
 This keyword is used to run template with multiple data.</doc>
<arguments>
<arg>Add Facility Interest Pricing</arg>
<arg>${ExcelPath}</arg>
<arg>${Facility_2}</arg>
<arg>CRED08_OngoingFeeSetup</arg>
</arguments>
<kw name="Add Facility Interest Pricing" library="CRED08_OngoingFeeSetup">
<doc>This keyword is used to Setup Interest Pricing Interest
@author: hstone 25NOV2020 - initial create</doc>
<arguments>
<arg>OrderedDict([('rowid', '2'), ('Test_Case', 'ARR_Scenario3'), ('Interest_AddItem', 'Option'), ('Interest_OptionName', 'Libor Option'), ('Interest_RateBasis', 'Actual/360'), ('Interest_SpreadType', 'Percent'), ('Interest_SpreadValue', '1.8'), ('Interest_BaseRateCode', 'SOFR')])</arg>
</arguments>
<kw name="Report Sub Header" library="ReportMaker_Keywords">
<doc>This keyword is used to add given argument as sub header in test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Add Facility Interest Pricing</arg>
</arguments>
<kw name="Set Report Sub Header" library="ReportMaker">
<arguments>
<arg>${SubHeader}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:15:35.983" endtime="20210408 19:15:35.985"></status>
</kw>
<status status="PASS" starttime="20210408 19:15:35.914" endtime="20210408 19:15:35.985"></status>
</kw>
<kw name="Add Facility Interest" library="Facility_Notebook">
<doc>Set ups the Interest Pricing of the Facility Notebook.
@author: bernchua</doc>
<arguments>
<arg>&amp;{ExcelPath}[Interest_AddItem]</arg>
<arg>&amp;{ExcelPath}[Interest_OptionName]</arg>
<arg>&amp;{ExcelPath}[Interest_RateBasis]</arg>
<arg>&amp;{ExcelPath}[Interest_SpreadType]</arg>
<arg>&amp;{ExcelPath}[Interest_SpreadValue]</arg>
<arg>&amp;{ExcelPath}[Interest_BaseRateCode]</arg>
</arguments>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sInterest_Category}</arg>
</arguments>
<assign>
<var>${Interest_Category}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:15:36.259" endtime="20210408 19:15:36.260"></status>
</kw>
<msg timestamp="20210408 19:15:36.260" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:15:36.258" endtime="20210408 19:15:36.260"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:15:36.464" level="INFO">${List_Argument_Excel_Value} = ['Option']</msg>
<status status="PASS" starttime="20210408 19:15:36.463" endtime="20210408 19:15:36.464"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:15:36.516" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:15:36.516" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:15:36.515" endtime="20210408 19:15:36.516"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:15:36.568" level="INFO">${Arg_User_Input} = OPTION</msg>
<status status="PASS" starttime="20210408 19:15:36.568" endtime="20210408 19:15:36.569"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:15:36.623" level="INFO">${Arg_User_Input} = OPTION</msg>
<status status="PASS" starttime="20210408 19:15:36.623" endtime="20210408 19:15:36.623"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:15:36.677" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:15:36.676" endtime="20210408 19:15:36.677"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:15:36.730" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:15:36.729" endtime="20210408 19:15:36.730"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:15:36.782" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:15:36.781" endtime="20210408 19:15:36.782"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:15:36.835" endtime="20210408 19:15:36.835"></status>
</kw>
<msg timestamp="20210408 19:15:36.835" level="INFO">${Extracted_Argument_Value} = Option</msg>
<status status="PASS" starttime="20210408 19:15:36.833" endtime="20210408 19:15:36.836"></status>
</kw>
<status status="PASS" starttime="20210408 19:15:36.412" endtime="20210408 19:15:36.836"></status>
</kw>
<msg timestamp="20210408 19:15:36.836" level="INFO">${Extracted_Argument_Value} = Option</msg>
<status status="PASS" starttime="20210408 19:15:36.312" endtime="20210408 19:15:36.836"></status>
</kw>
<msg timestamp="20210408 19:15:36.836" level="INFO">${Interest_Category} = Option</msg>
<status status="PASS" starttime="20210408 19:15:36.207" endtime="20210408 19:15:36.836"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sInterest_OptionName}</arg>
</arguments>
<assign>
<var>${Interest_OptionName}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:15:37.051" endtime="20210408 19:15:37.051"></status>
</kw>
<msg timestamp="20210408 19:15:37.051" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:15:37.049" endtime="20210408 19:15:37.052"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:15:37.257" level="INFO">${List_Argument_Excel_Value} = ['Libor Option']</msg>
<status status="PASS" starttime="20210408 19:15:37.257" endtime="20210408 19:15:37.257"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:15:37.310" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:15:37.310" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:15:37.309" endtime="20210408 19:15:37.310"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:15:37.363" level="INFO">${Arg_User_Input} = LIBOR OPTION</msg>
<status status="PASS" starttime="20210408 19:15:37.362" endtime="20210408 19:15:37.363"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:15:37.414" level="INFO">${Arg_User_Input} = LIBOR OPTION</msg>
<status status="PASS" starttime="20210408 19:15:37.413" endtime="20210408 19:15:37.414"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:15:37.466" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:15:37.465" endtime="20210408 19:15:37.466"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:15:37.516" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:15:37.516" endtime="20210408 19:15:37.517"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:15:37.569" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:15:37.568" endtime="20210408 19:15:37.569"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:15:37.730" endtime="20210408 19:15:37.730"></status>
</kw>
<msg timestamp="20210408 19:15:37.730" level="INFO">${Extracted_Argument_Value} = Libor Option</msg>
<status status="PASS" starttime="20210408 19:15:37.728" endtime="20210408 19:15:37.731"></status>
</kw>
<status status="PASS" starttime="20210408 19:15:37.203" endtime="20210408 19:15:37.731"></status>
</kw>
<msg timestamp="20210408 19:15:37.731" level="INFO">${Extracted_Argument_Value} = Libor Option</msg>
<status status="PASS" starttime="20210408 19:15:37.102" endtime="20210408 19:15:37.731"></status>
</kw>
<msg timestamp="20210408 19:15:37.731" level="INFO">${Interest_OptionName} = Libor Option</msg>
<status status="PASS" starttime="20210408 19:15:36.996" endtime="20210408 19:15:37.731"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sInterest_RateBasis}</arg>
</arguments>
<assign>
<var>${Interest_RateBasis}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:15:37.954" endtime="20210408 19:15:37.954"></status>
</kw>
<msg timestamp="20210408 19:15:37.954" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:15:37.952" endtime="20210408 19:15:37.955"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:15:38.165" level="INFO">${List_Argument_Excel_Value} = ['Actual/360']</msg>
<status status="PASS" starttime="20210408 19:15:38.165" endtime="20210408 19:15:38.165"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:15:38.216" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:15:38.216" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:15:38.215" endtime="20210408 19:15:38.216"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:15:38.267" level="INFO">${Arg_User_Input} = ACTUAL/360</msg>
<status status="PASS" starttime="20210408 19:15:38.266" endtime="20210408 19:15:38.267"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:15:38.317" level="INFO">${Arg_User_Input} = ACTUAL/360</msg>
<status status="PASS" starttime="20210408 19:15:38.317" endtime="20210408 19:15:38.318"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:15:38.368" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:15:38.368" endtime="20210408 19:15:38.368"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:15:38.419" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:15:38.418" endtime="20210408 19:15:38.419"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:15:38.470" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:15:38.469" endtime="20210408 19:15:38.470"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:15:38.523" endtime="20210408 19:15:38.524"></status>
</kw>
<msg timestamp="20210408 19:15:38.524" level="INFO">${Extracted_Argument_Value} = Actual/360</msg>
<status status="PASS" starttime="20210408 19:15:38.521" endtime="20210408 19:15:38.524"></status>
</kw>
<status status="PASS" starttime="20210408 19:15:38.112" endtime="20210408 19:15:38.524"></status>
</kw>
<msg timestamp="20210408 19:15:38.525" level="INFO">${Extracted_Argument_Value} = Actual/360</msg>
<status status="PASS" starttime="20210408 19:15:38.009" endtime="20210408 19:15:38.525"></status>
</kw>
<msg timestamp="20210408 19:15:38.525" level="INFO">${Interest_RateBasis} = Actual/360</msg>
<status status="PASS" starttime="20210408 19:15:37.897" endtime="20210408 19:15:38.525"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sInterest_SpreadType}</arg>
</arguments>
<assign>
<var>${Interest_SpreadType}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:15:38.738" endtime="20210408 19:15:38.739"></status>
</kw>
<msg timestamp="20210408 19:15:38.739" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:15:38.737" endtime="20210408 19:15:38.739"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:15:38.950" level="INFO">${List_Argument_Excel_Value} = ['Percent']</msg>
<status status="PASS" starttime="20210408 19:15:38.950" endtime="20210408 19:15:38.951"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:15:39.002" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:15:39.002" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:15:39.001" endtime="20210408 19:15:39.002"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:15:39.052" level="INFO">${Arg_User_Input} = PERCENT</msg>
<status status="PASS" starttime="20210408 19:15:39.052" endtime="20210408 19:15:39.052"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:15:39.102" level="INFO">${Arg_User_Input} = PERCENT</msg>
<status status="PASS" starttime="20210408 19:15:39.102" endtime="20210408 19:15:39.103"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:15:39.166" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:15:39.166" endtime="20210408 19:15:39.166"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:15:39.240" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:15:39.239" endtime="20210408 19:15:39.240"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:15:39.315" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:15:39.314" endtime="20210408 19:15:39.315"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:15:39.393" endtime="20210408 19:15:39.394"></status>
</kw>
<msg timestamp="20210408 19:15:39.394" level="INFO">${Extracted_Argument_Value} = Percent</msg>
<status status="PASS" starttime="20210408 19:15:39.390" endtime="20210408 19:15:39.394"></status>
</kw>
<status status="PASS" starttime="20210408 19:15:38.899" endtime="20210408 19:15:39.394"></status>
</kw>
<msg timestamp="20210408 19:15:39.395" level="INFO">${Extracted_Argument_Value} = Percent</msg>
<status status="PASS" starttime="20210408 19:15:38.792" endtime="20210408 19:15:39.395"></status>
</kw>
<msg timestamp="20210408 19:15:39.395" level="INFO">${Interest_SpreadType} = Percent</msg>
<status status="PASS" starttime="20210408 19:15:38.685" endtime="20210408 19:15:39.395"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sInterest_SpreadValue}</arg>
</arguments>
<assign>
<var>${Interest_SpreadValue}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:15:39.654" endtime="20210408 19:15:39.655"></status>
</kw>
<msg timestamp="20210408 19:15:39.655" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:15:39.652" endtime="20210408 19:15:39.655"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:15:39.888" level="INFO">${List_Argument_Excel_Value} = ['1.8']</msg>
<status status="PASS" starttime="20210408 19:15:39.887" endtime="20210408 19:15:39.888"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:15:39.941" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:15:39.941" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:15:39.941" endtime="20210408 19:15:39.942"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:15:39.995" level="INFO">${Arg_User_Input} = 1.8</msg>
<status status="PASS" starttime="20210408 19:15:39.994" endtime="20210408 19:15:39.995"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:15:40.048" level="INFO">${Arg_User_Input} = 1.8</msg>
<status status="PASS" starttime="20210408 19:15:40.048" endtime="20210408 19:15:40.048"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:15:40.101" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:15:40.101" endtime="20210408 19:15:40.102"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:15:40.158" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:15:40.157" endtime="20210408 19:15:40.158"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:15:40.227" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:15:40.226" endtime="20210408 19:15:40.227"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:15:40.308" endtime="20210408 19:15:40.308"></status>
</kw>
<msg timestamp="20210408 19:15:40.308" level="INFO">${Extracted_Argument_Value} = 1.8</msg>
<status status="PASS" starttime="20210408 19:15:40.305" endtime="20210408 19:15:40.309"></status>
</kw>
<status status="PASS" starttime="20210408 19:15:39.831" endtime="20210408 19:15:40.309"></status>
</kw>
<msg timestamp="20210408 19:15:40.309" level="INFO">${Extracted_Argument_Value} = 1.8</msg>
<status status="PASS" starttime="20210408 19:15:39.705" endtime="20210408 19:15:40.309"></status>
</kw>
<msg timestamp="20210408 19:15:40.310" level="INFO">${Interest_SpreadValue} = 1.8</msg>
<status status="PASS" starttime="20210408 19:15:39.601" endtime="20210408 19:15:40.310"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sInterest_BaseRateCode}</arg>
</arguments>
<assign>
<var>${Interest_BaseRateCode}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:15:40.613" endtime="20210408 19:15:40.614"></status>
</kw>
<msg timestamp="20210408 19:15:40.614" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:15:40.612" endtime="20210408 19:15:40.614"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:15:40.891" level="INFO">${List_Argument_Excel_Value} = ['SOFR']</msg>
<status status="PASS" starttime="20210408 19:15:40.890" endtime="20210408 19:15:40.891"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:15:40.943" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:15:40.943" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:15:40.942" endtime="20210408 19:15:40.943"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:15:40.995" level="INFO">${Arg_User_Input} = SOFR</msg>
<status status="PASS" starttime="20210408 19:15:40.994" endtime="20210408 19:15:40.995"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:15:41.048" level="INFO">${Arg_User_Input} = SOFR</msg>
<status status="PASS" starttime="20210408 19:15:41.047" endtime="20210408 19:15:41.048"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:15:41.099" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:15:41.099" endtime="20210408 19:15:41.099"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:15:41.151" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:15:41.150" endtime="20210408 19:15:41.151"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:15:41.325" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:15:41.324" endtime="20210408 19:15:41.325"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:15:41.403" endtime="20210408 19:15:41.404"></status>
</kw>
<msg timestamp="20210408 19:15:41.404" level="INFO">${Extracted_Argument_Value} = SOFR</msg>
<status status="PASS" starttime="20210408 19:15:41.401" endtime="20210408 19:15:41.404"></status>
</kw>
<status status="PASS" starttime="20210408 19:15:40.834" endtime="20210408 19:15:41.404"></status>
</kw>
<msg timestamp="20210408 19:15:41.405" level="INFO">${Extracted_Argument_Value} = SOFR</msg>
<status status="PASS" starttime="20210408 19:15:40.688" endtime="20210408 19:15:41.405"></status>
</kw>
<msg timestamp="20210408 19:15:41.405" level="INFO">${Interest_BaseRateCode} = SOFR</msg>
<status status="PASS" starttime="20210408 19:15:40.538" endtime="20210408 19:15:41.405"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sRateFormula}</arg>
</arguments>
<assign>
<var>${RateFormula}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:15:41.690" endtime="20210408 19:15:41.690"></status>
</kw>
<msg timestamp="20210408 19:15:41.690" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:15:41.688" endtime="20210408 19:15:41.691"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:15:41.902" level="INFO">${List_Argument_Excel_Value} = ['']</msg>
<status status="PASS" starttime="20210408 19:15:41.901" endtime="20210408 19:15:41.902"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:15:41.952" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:15:41.953" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:15:41.952" endtime="20210408 19:15:41.953"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:15:42.006" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:15:42.006" endtime="20210408 19:15:42.006"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:15:42.061" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:15:42.060" endtime="20210408 19:15:42.061"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:15:42.114" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:15:42.113" endtime="20210408 19:15:42.114"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:15:42.166" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:15:42.165" endtime="20210408 19:15:42.166"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:15:42.221" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:15:42.220" endtime="20210408 19:15:42.221"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:15:42.275" endtime="20210408 19:15:42.276"></status>
</kw>
<msg timestamp="20210408 19:15:42.276" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:15:42.273" endtime="20210408 19:15:42.276"></status>
</kw>
<status status="PASS" starttime="20210408 19:15:41.846" endtime="20210408 19:15:42.276"></status>
</kw>
<msg timestamp="20210408 19:15:42.276" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:15:41.741" endtime="20210408 19:15:42.277"></status>
</kw>
<msg timestamp="20210408 19:15:42.277" level="INFO">${RateFormula} = </msg>
<status status="PASS" starttime="20210408 19:15:41.634" endtime="20210408 19:15:42.277"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sRateFormulaUsage}</arg>
</arguments>
<assign>
<var>${RateFormulaUsage}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:15:42.490" endtime="20210408 19:15:42.491"></status>
</kw>
<msg timestamp="20210408 19:15:42.491" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:15:42.488" endtime="20210408 19:15:42.491"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:15:42.699" level="INFO">${List_Argument_Excel_Value} = ['']</msg>
<status status="PASS" starttime="20210408 19:15:42.699" endtime="20210408 19:15:42.699"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:15:42.751" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:15:42.751" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:15:42.750" endtime="20210408 19:15:42.751"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:15:42.802" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:15:42.802" endtime="20210408 19:15:42.802"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:15:42.854" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:15:42.853" endtime="20210408 19:15:42.854"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:15:42.907" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:15:42.906" endtime="20210408 19:15:42.907"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:15:42.962" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:15:42.961" endtime="20210408 19:15:42.962"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:15:43.017" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:15:43.016" endtime="20210408 19:15:43.017"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:15:43.068" endtime="20210408 19:15:43.069"></status>
</kw>
<msg timestamp="20210408 19:15:43.069" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:15:43.066" endtime="20210408 19:15:43.069"></status>
</kw>
<status status="PASS" starttime="20210408 19:15:42.646" endtime="20210408 19:15:43.069"></status>
</kw>
<msg timestamp="20210408 19:15:43.069" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:15:42.542" endtime="20210408 19:15:43.069"></status>
</kw>
<msg timestamp="20210408 19:15:43.070" level="INFO">${RateFormulaUsage} = </msg>
<status status="PASS" starttime="20210408 19:15:42.434" endtime="20210408 19:15:43.070"></status>
</kw>
<kw name="Mx LoanIQ Activate" library="LoanIQ">
<doc>|Usage|</doc>
<arguments>
<arg>${LIQ_FacilityPricing_OngoingFeeInterest_Window}</arg>
</arguments>
<msg timestamp="20210408 19:15:44.462" level="INFO">Object = 'JavaWindow("title:=Facility.*Pricing")' is activated</msg>
<status status="PASS" starttime="20210408 19:15:43.123" endtime="20210408 19:15:44.462"></status>
</kw>
<kw name="Validate Interest Pricing Window for Add" library="Facility_Notebook">
<doc>This keyword validates if a previously added item is existing in the Facility Interest Pricing window, and if the "Option Condition" window exists.
@author: bernchua</doc>
<assign>
<var>${AddStatus}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>JavaWindow("title:=Facility.*Pricing").JavaTree("items count:=2")</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<assign>
<var>${JavaTree_ValueExist}</var>
</assign>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>JavaWindow("title:=Facility.*Pricing").JavaTree("items count:=2")</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:15:49.992" level="INFO" html="yes">&lt;a href="screenshot_33.jpg"&gt;&lt;img src="screenshot_33.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20210408 19:15:49.992" level="INFO">Keyword Details-------------------------------------------------
Action = VERIFYOBJECTEXIST
Input = None
Object = JavaWindow("title:=Facility.*Pricing").JavaTree("items count:=2")
Verification Data = Y</msg>
<msg timestamp="20210408 19:15:49.993" level="FAIL">Error Number: -110037 Error Description: Object doesnot Exist. JavaVerifyObjectExist. Retried for:  0 times. </msg>
<status status="FAIL" starttime="20210408 19:15:44.585" endtime="20210408 19:15:50.059"></status>
</kw>
<msg timestamp="20210408 19:15:50.060" level="INFO">${JavaTree_ValueExist} = False</msg>
<status status="PASS" starttime="20210408 19:15:44.583" endtime="20210408 19:15:50.060"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Validate if Option Condition Window Exist</arg>
</arguments>
<assign>
<var>${OptionCondition_WindowExists}</var>
</assign>
<kw name="Validate if Option Condition Window Exist" library="GenericKeywords">
<doc>This keyword checks if the Option Condition window exists.
@author: bernchua</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_FacilityPricing_Interest_OptionCondition_Window}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_FacilityPricing_Interest_OptionCondition_Window}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:15:55.548" level="INFO" html="yes">&lt;a href="screenshot_34.jpg"&gt;&lt;img src="screenshot_34.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20210408 19:15:55.549" level="INFO">Keyword Details-------------------------------------------------
Action = VERIFYOBJECTEXIST
Input = None
Object = JavaWindow("title:=Option Condition")
Verification Data = Y</msg>
<msg timestamp="20210408 19:15:55.549" level="FAIL">Error Number: -110037 Error Description: Object doesnot Exist. JavaVerifyObjectExist. Retried for:  0 times. </msg>
<status status="FAIL" starttime="20210408 19:15:50.168" endtime="20210408 19:15:55.613"></status>
</kw>
<msg timestamp="20210408 19:15:55.614" level="INFO">${status} = False</msg>
<status status="PASS" starttime="20210408 19:15:50.165" endtime="20210408 19:15:55.614"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<msg timestamp="20210408 19:15:55.681" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210408 19:15:55.681" endtime="20210408 19:15:55.748"></status>
</kw>
<status status="PASS" starttime="20210408 19:15:50.113" endtime="20210408 19:15:55.749"></status>
</kw>
<msg timestamp="20210408 19:15:55.749" level="INFO">${OptionCondition_WindowExists} = False</msg>
<status status="PASS" starttime="20210408 19:15:50.111" endtime="20210408 19:15:55.750"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>${JavaTree_ValueExist} == False and ${OptionCondition_WindowExists} == False</arg>
<arg>Initial Add</arg>
</arguments>
<msg timestamp="20210408 19:15:55.820" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210408 19:15:55.819" endtime="20210408 19:15:55.868"></status>
</kw>
<msg timestamp="20210408 19:15:55.869" level="INFO">${AddStatus} = Initial Add</msg>
<status status="PASS" starttime="20210408 19:15:44.514" endtime="20210408 19:15:55.869"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${AddStatus}</arg>
<arg>Initial Add</arg>
</arguments>
<assign>
<var>${InitialAdd}</var>
</assign>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${AddStatus}</arg>
<arg>Initial Add</arg>
</arguments>
<status status="PASS" starttime="20210408 19:15:55.926" endtime="20210408 19:15:55.927"></status>
</kw>
<msg timestamp="20210408 19:15:55.927" level="INFO">${InitialAdd} = True</msg>
<status status="PASS" starttime="20210408 19:15:55.925" endtime="20210408 19:15:55.927"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${AddStatus}</arg>
<arg>Next Add</arg>
</arguments>
<assign>
<var>${NextAdd}</var>
</assign>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${AddStatus}</arg>
<arg>Next Add</arg>
</arguments>
<msg timestamp="20210408 19:15:55.981" level="FAIL">Initial Add != Next Add</msg>
<status status="FAIL" starttime="20210408 19:15:55.981" endtime="20210408 19:15:56.138"></status>
</kw>
<msg timestamp="20210408 19:15:56.139" level="INFO">${NextAdd} = False</msg>
<status status="PASS" starttime="20210408 19:15:55.979" endtime="20210408 19:15:56.139"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${AddStatus}</arg>
<arg>New Add From Pricing</arg>
</arguments>
<assign>
<var>${NewAddFromPricing}</var>
</assign>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${AddStatus}</arg>
<arg>New Add From Pricing</arg>
</arguments>
<msg timestamp="20210408 19:15:56.192" level="FAIL">Initial Add != New Add From Pricing</msg>
<status status="FAIL" starttime="20210408 19:15:56.192" endtime="20210408 19:15:56.245"></status>
</kw>
<msg timestamp="20210408 19:15:56.246" level="INFO">${NewAddFromPricing} = False</msg>
<status status="PASS" starttime="20210408 19:15:56.190" endtime="20210408 19:15:56.246"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${InitialAdd} == True or ${NewAddFromPricing} == True</arg>
<arg>Add Item to Facility Ongoing Fee or Interest</arg>
<arg>${Interest_Category}</arg>
<arg>${Interest_OptionName}</arg>
<arg>ELSE IF</arg>
<arg>${NextAdd} == True</arg>
<arg>mx LoanIQ activate</arg>
<arg>${LIQ_FacilityPricing_Interest_OptionCondition_Window}</arg>
</arguments>
<kw name="Add Item to Facility Ongoing Fee or Interest" library="Facility_Notebook">
<doc>Adds a new Ongoing Fee or Interest in the Pricing tab of the Facility Notebook.
@author: bernchua
@update: hstone 26OCT2020 - Added Take Screenshot</doc>
<arguments>
<arg>${Interest_Category}</arg>
<arg>${Interest_OptionName}</arg>
</arguments>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>JavaWindow("title:=Facility.*Pricing").JavaTree("developer name:=.*Financial Ratio.*")</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<assign>
<var>${FinancialRatio_AddItem}</var>
</assign>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>JavaWindow("title:=Facility.*Pricing").JavaTree("developer name:=.*Financial Ratio.*")</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:16:01.829" level="INFO" html="yes">&lt;a href="screenshot_35.jpg"&gt;&lt;img src="screenshot_35.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20210408 19:16:01.829" level="INFO">Keyword Details-------------------------------------------------
Action = VERIFYOBJECTEXIST
Input = None
Object = JavaWindow("title:=Facility.*Pricing").JavaTree("developer name:=.*Financial Ratio.*")
Verification Data = Y</msg>
<msg timestamp="20210408 19:16:01.829" level="FAIL">Error Number: -110037 Error Description: Object doesnot Exist. JavaVerifyObjectExist. Retried for:  0 times. </msg>
<status status="FAIL" starttime="20210408 19:15:56.363" endtime="20210408 19:16:01.896"></status>
</kw>
<msg timestamp="20210408 19:16:01.897" level="INFO">${FinancialRatio_AddItem} = False</msg>
<status status="PASS" starttime="20210408 19:15:56.362" endtime="20210408 19:16:01.897"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FinancialRatio_AddItem}==False</arg>
<arg>mx LoanIQ click</arg>
<arg>${LIQ_FacilityPricing_OngoingFeeInterest_Add_Button}</arg>
<arg>ELSE IF</arg>
<arg>${FinancialRatio_AddItem}==True</arg>
<arg>mx LoanIQ click</arg>
<arg>${LIQ_FacilityPricing_OngoingFeeInterest_After_Button}</arg>
</arguments>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_FacilityPricing_OngoingFeeInterest_Add_Button}</arg>
</arguments>
<msg timestamp="20210408 19:16:02.782" level="INFO">JavaWindow("title:=Facility.*Pricing").JavaButton("label:=Add") is clicked.</msg>
<status status="PASS" starttime="20210408 19:16:01.957" endtime="20210408 19:16:02.782"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:01.955" endtime="20210408 19:16:02.783"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_AddItem_Window}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<assign>
<var>${AddItem_WindowExists}</var>
</assign>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_AddItem_Window}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:16:02.930" level="INFO">Locator = 'JavaWindow("title:=Add Item")' exists.</msg>
<status status="PASS" starttime="20210408 19:16:02.863" endtime="20210408 19:16:02.931"></status>
</kw>
<msg timestamp="20210408 19:16:02.931" level="INFO">${AddItem_WindowExists} = True</msg>
<status status="PASS" starttime="20210408 19:16:02.861" endtime="20210408 19:16:02.932"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${AddItem_WindowExists} == True</arg>
<arg>Mx LoanIQ Optional Select</arg>
<arg>${LIQ_AddItem_List}</arg>
<arg>${Fee_Interest_Category}</arg>
</arguments>
<kw name="Mx LoanIQ Optional Select" library="LoanIQ">
<doc>|Usage|</doc>
<arguments>
<arg>${LIQ_AddItem_List}</arg>
<arg>${Fee_Interest_Category}</arg>
</arguments>
<msg timestamp="20210408 19:16:03.187" level="INFO">Selected item = 'Option' with object = 'JavaWindow("title:=Add Item").JavaList("attached text:=")'.</msg>
<status status="PASS" starttime="20210408 19:16:03.032" endtime="20210408 19:16:03.187"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:03.028" endtime="20210408 19:16:03.187"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Check Add Item Type If Value Exists</arg>
<arg>${Fee_Interest_Type}</arg>
</arguments>
<assign>
<var>${ItemType_IsEmpty}</var>
</assign>
<kw name="Check Add Item Type If Value Exists" library="GenericKeywords">
<doc>This keyword checks the "Add Item" window if an item exists under 'Type' for add.
@author: bernchua</doc>
<arguments>
<arg>${Fee_Interest_Type}</arg>
</arguments>
<kw name="Mx LoanIQ Get Data" library="LoanIQ">
<doc>| Usage |
Used to returns the text of object identified by `locator'</doc>
<arguments>
<arg>${LIQ_AddItemType_List}</arg>
<arg>value%${AddItemType}</arg>
</arguments>
<assign>
<var>${AddItemType_Value}</var>
</assign>
<msg timestamp="20210408 19:16:03.414" level="INFO">Fetching value from object: JavaWindow("title:=Add Item").JavaList("attached text:=Type:") 
 Value = : Libor Option</msg>
<msg timestamp="20210408 19:16:03.472" level="INFO">${Libor Option} = Libor Option</msg>
<msg timestamp="20210408 19:16:03.472" level="INFO">${AddItemType_Value} = Libor Option</msg>
<status status="PASS" starttime="20210408 19:16:03.351" endtime="20210408 19:16:03.472"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${AddItemType_Value}</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${AddItemType_IsEmpty}</var>
</assign>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${AddItemType_Value}</arg>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20210408 19:16:03.541" level="FAIL">Libor Option != </msg>
<status status="FAIL" starttime="20210408 19:16:03.541" endtime="20210408 19:16:03.597"></status>
</kw>
<msg timestamp="20210408 19:16:03.598" level="INFO">${AddItemType_IsEmpty} = False</msg>
<status status="PASS" starttime="20210408 19:16:03.539" endtime="20210408 19:16:03.598"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>${AddItemType_IsEmpty}==True</arg>
<arg>True</arg>
</arguments>
<status status="PASS" starttime="20210408 19:16:03.652" endtime="20210408 19:16:03.653"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>${AddItemType_IsEmpty}==False</arg>
<arg>False</arg>
</arguments>
<msg timestamp="20210408 19:16:03.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210408 19:16:03.706" endtime="20210408 19:16:03.757"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:03.265" endtime="20210408 19:16:03.757"></status>
</kw>
<msg timestamp="20210408 19:16:03.757" level="INFO">${ItemType_IsEmpty} = False</msg>
<status status="PASS" starttime="20210408 19:16:03.263" endtime="20210408 19:16:03.757"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${ItemType_IsEmpty}==True</arg>
<arg>mx LoanIQ click</arg>
<arg>${LIQ_AddItem_Cancel_Button}</arg>
<arg>ELSE</arg>
<arg>Run Keywords</arg>
<arg>Mx LoanIQ Optional Select</arg>
<arg>${LIQ_AddItemType_List}</arg>
<arg>${Fee_Interest_Type}</arg>
<arg>AND</arg>
<arg>Take Screenshot with text into test document</arg>
<arg>Add Item</arg>
<arg>AND</arg>
<arg>mx LoanIQ click</arg>
<arg>${LIQ_AddItem_OK_Button}</arg>
<arg>AND</arg>
<arg>Return From Keyword</arg>
<arg>True</arg>
</arguments>
<kw name="Run Keywords" library="BuiltIn">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>Mx LoanIQ Optional Select</arg>
<arg>${LIQ_AddItemType_List}</arg>
<arg>${Fee_Interest_Type}</arg>
<arg>AND</arg>
<arg>Take Screenshot with text into test document</arg>
<arg>Add Item</arg>
<arg>AND</arg>
<arg>mx LoanIQ click</arg>
<arg>${LIQ_AddItem_OK_Button}</arg>
<arg>AND</arg>
<arg>Return From Keyword</arg>
<arg>True</arg>
</arguments>
<kw name="Mx LoanIQ Optional Select" library="LoanIQ">
<doc>|Usage|</doc>
<arguments>
<arg>${LIQ_AddItemType_List}</arg>
<arg>${Fee_Interest_Type}</arg>
</arguments>
<msg timestamp="20210408 19:16:03.970" level="INFO">Selected item = 'Libor Option' with object = 'JavaWindow("title:=Add Item").JavaList("attached text:=Type:")'.</msg>
<status status="PASS" starttime="20210408 19:16:03.811" endtime="20210408 19:16:03.971"></status>
</kw>
<kw name="Take Screenshot with text into Test Document" library="ReportMaker_Keywords">
<doc>This keyword is used to add screenshot with image filename as description into test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Add Item</arg>
</arguments>
<kw name="Take Screenshot" library="Screenshot">
<doc>Takes a screenshot in JPEG format and embeds it into the log file.</doc>
<arguments>
<arg>${imageName}</arg>
</arguments>
<msg timestamp="20210408 19:16:04.111" level="INFO" html="yes">&lt;a href="Results/LoanIQ/TC02%20-%20Validate%20ARR%20Interest%20Pricing%20Option%20at%20Facility%20Level%20-%20Term___2021-04-08%2019-11-32.788/Add%20Item_1.jpg"&gt;&lt;img src="Results/LoanIQ/TC02%20-%20Validate%20ARR%20Interest%20Pricing%20Option%20at%20Facility%20Level%20-%20Term___2021-04-08%2019-11-32.788/Add%20Item_1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210408 19:16:04.022" endtime="20210408 19:16:04.112"></status>
</kw>
<kw name="Get Latest File" library="ReportMaker">
<arguments>
<arg>${getfilePath}</arg>
</arguments>
<assign>
<var>${imagePath}</var>
</assign>
<msg timestamp="20210408 19:16:04.167" level="INFO">${imagePath} = C:\Git_Evergreen\transform_arr\Results\LoanIQ\TC02 - Validate ARR Interest Pricing Option at Facility Level - Term___2021-04-08 19-11-32.788\Add Item_1.jpg</msg>
<status status="PASS" starttime="20210408 19:16:04.165" endtime="20210408 19:16:04.167"></status>
</kw>
<kw name="Put Screenshot With Text" library="ReportMaker">
<arguments>
<arg>${imagePath}</arg>
<arg>${imageName}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:16:04.218" endtime="20210408 19:16:04.231"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:03.972" endtime="20210408 19:16:04.231"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_AddItem_OK_Button}</arg>
</arguments>
<msg timestamp="20210408 19:16:04.635" level="INFO">JavaWindow("title:=Add Item").JavaButton("label:=OK") is clicked.</msg>
<status status="PASS" starttime="20210408 19:16:04.232" endtime="20210408 19:16:04.635"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>True</arg>
</arguments>
<msg timestamp="20210408 19:16:04.637" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210408 19:16:04.636" endtime="20210408 19:16:04.718"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:03.810" endtime="20210408 19:16:04.778"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:03.807" endtime="20210408 19:16:04.835"></status>
</kw>
<status status="PASS" starttime="20210408 19:15:56.306" endtime="20210408 19:16:04.835"></status>
</kw>
<status status="PASS" starttime="20210408 19:15:56.303" endtime="20210408 19:16:04.835"></status>
</kw>
<kw name="Set Option Condition Details" library="GenericKeywords">
<doc>Sets the details in the Option Condition window.
@author: bernchua DDMMMYYYY - initial create
@update: jloretiz 11FEB2021 - added condition for empty data</doc>
<arguments>
<arg>${Interest_OptionName}</arg>
<arg>${Interest_RateBasis}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Interest_OptionName}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Select Combo Box Value</arg>
<arg>${LIQ_FacilityPricing_Interest_OptionCondition_OptionName_Combobox}</arg>
<arg>${Interest_OptionName}</arg>
</arguments>
<kw name="Mx LoanIQ Select Combo Box Value" library="LoanIQ">
<doc>| Usage |
Used to select data in JavaList</doc>
<arguments>
<arg>${LIQ_FacilityPricing_Interest_OptionCondition_OptionName_Combobox}</arg>
<arg>${Interest_OptionName}</arg>
</arguments>
<msg timestamp="20210408 19:16:05.055" level="INFO">Selected value = 'Libor Option' from Combo box object = 'JavaWindow("title:=Option Condition").JavaList("attached text:=Option Name:")'.</msg>
<status status="PASS" starttime="20210408 19:16:04.950" endtime="20210408 19:16:05.055"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:04.948" endtime="20210408 19:16:05.055"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Interest_RateBasis}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Select Combo Box Value</arg>
<arg>${LIQ_FacilityPricing_Interest_OptionCondition_RateBasis_Combobox}</arg>
<arg>${Interest_RateBasis}</arg>
</arguments>
<kw name="Mx LoanIQ Select Combo Box Value" library="LoanIQ">
<doc>| Usage |
Used to select data in JavaList</doc>
<arguments>
<arg>${LIQ_FacilityPricing_Interest_OptionCondition_RateBasis_Combobox}</arg>
<arg>${Interest_RateBasis}</arg>
</arguments>
<msg timestamp="20210408 19:16:05.212" level="INFO">Selected value = 'Actual/360' from Combo box object = 'JavaWindow("title:=Option Condition").JavaList("attached text:=Rate Basis:")'.</msg>
<status status="PASS" starttime="20210408 19:16:05.113" endtime="20210408 19:16:05.213"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:05.111" endtime="20210408 19:16:05.213"></status>
</kw>
<kw name="Validate Loan IQ Details" library="GenericKeywords">
<doc>This keyword validates the displayed Loan IQ details in the application vs the data in excel
@author: jcdelacruz/ghabal
@update: bernchua Added property 'value' in Mx LoanIQ Get Data keyword.
@update: jdelacru 13DEC2019 - Changed the argument in getting value for UI</doc>
<arguments>
<arg>${Interest_OptionName}</arg>
<arg>${LIQ_FacilityPricing_Interest_OptionCondition_OptionName_Combobox}</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Get Data</arg>
<arg>${Value_fromUI}</arg>
<arg>value%Value_fromUI</arg>
</arguments>
<assign>
<var>${Value_fromUI}</var>
</assign>
<kw name="Mx LoanIQ Get Data" library="LoanIQ">
<doc>| Usage |
Used to returns the text of object identified by `locator'</doc>
<arguments>
<arg>${Value_fromUI}</arg>
<arg>value%Value_fromUI</arg>
</arguments>
<msg timestamp="20210408 19:16:05.402" level="INFO">Fetching value from object: JavaWindow("title:=Option Condition").JavaList("attached text:=Option Name:") 
 Value = : Libor Option</msg>
<msg timestamp="20210408 19:16:05.402" level="INFO">${Value_fromUI} = Libor Option</msg>
<status status="PASS" starttime="20210408 19:16:05.337" endtime="20210408 19:16:05.402"></status>
</kw>
<msg timestamp="20210408 19:16:05.402" level="INFO">${Value_fromUI} = Libor Option</msg>
<status status="PASS" starttime="20210408 19:16:05.335" endtime="20210408 19:16:05.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Value_fromExcel} - This is the data retrieved from Excel Sheet</arg>
</arguments>
<msg timestamp="20210408 19:16:05.460" level="INFO">Libor Option - This is the data retrieved from Excel Sheet</msg>
<status status="PASS" starttime="20210408 19:16:05.459" endtime="20210408 19:16:05.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Value_fromUI} - This is the data displayed in the UI/application</arg>
</arguments>
<msg timestamp="20210408 19:16:05.513" level="INFO">Libor Option - This is the data displayed in the UI/application</msg>
<status status="PASS" starttime="20210408 19:16:05.513" endtime="20210408 19:16:05.514"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:16:05.572" endtime="20210408 19:16:05.572"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:05.570" endtime="20210408 19:16:05.572"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Should Be Equal</arg>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:16:05.626" endtime="20210408 19:16:05.626"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:05.624" endtime="20210408 19:16:05.626"></status>
</kw>
<msg timestamp="20210408 19:16:05.627" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:16:05.623" endtime="20210408 19:16:05.627"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>"${Value_fromExcel}" - data retrieved from Excel Sheet MATCHES "${Value_fromUI}" - the data displayed in the UI/application</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>"${Value_fromExcel}" - data retrieved from Excel Sheet DOES NOT MATCH "${Value_fromUI}" - the data displayed in the UI/application</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"${Value_fromExcel}" - data retrieved from Excel Sheet MATCHES "${Value_fromUI}" - the data displayed in the UI/application</arg>
</arguments>
<msg timestamp="20210408 19:16:05.680" level="INFO">"Libor Option" - data retrieved from Excel Sheet MATCHES "Libor Option" - the data displayed in the UI/application</msg>
<status status="PASS" starttime="20210408 19:16:05.679" endtime="20210408 19:16:05.680"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:05.677" endtime="20210408 19:16:05.680"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:05.278" endtime="20210408 19:16:05.680"></status>
</kw>
<kw name="Validate Loan IQ Details" library="GenericKeywords">
<doc>This keyword validates the displayed Loan IQ details in the application vs the data in excel
@author: jcdelacruz/ghabal
@update: bernchua Added property 'value' in Mx LoanIQ Get Data keyword.
@update: jdelacru 13DEC2019 - Changed the argument in getting value for UI</doc>
<arguments>
<arg>${Interest_RateBasis}</arg>
<arg>${LIQ_FacilityPricing_Interest_OptionCondition_RateBasis_Combobox}</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Get Data</arg>
<arg>${Value_fromUI}</arg>
<arg>value%Value_fromUI</arg>
</arguments>
<assign>
<var>${Value_fromUI}</var>
</assign>
<kw name="Mx LoanIQ Get Data" library="LoanIQ">
<doc>| Usage |
Used to returns the text of object identified by `locator'</doc>
<arguments>
<arg>${Value_fromUI}</arg>
<arg>value%Value_fromUI</arg>
</arguments>
<msg timestamp="20210408 19:16:05.855" level="INFO">Fetching value from object: JavaWindow("title:=Option Condition").JavaList("attached text:=Rate Basis:") 
 Value = : Actual/360</msg>
<msg timestamp="20210408 19:16:05.856" level="INFO">${Value_fromUI} = Actual/360</msg>
<status status="PASS" starttime="20210408 19:16:05.787" endtime="20210408 19:16:05.856"></status>
</kw>
<msg timestamp="20210408 19:16:05.856" level="INFO">${Value_fromUI} = Actual/360</msg>
<status status="PASS" starttime="20210408 19:16:05.785" endtime="20210408 19:16:05.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Value_fromExcel} - This is the data retrieved from Excel Sheet</arg>
</arguments>
<msg timestamp="20210408 19:16:05.911" level="INFO">Actual/360 - This is the data retrieved from Excel Sheet</msg>
<status status="PASS" starttime="20210408 19:16:05.910" endtime="20210408 19:16:05.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Value_fromUI} - This is the data displayed in the UI/application</arg>
</arguments>
<msg timestamp="20210408 19:16:05.963" level="INFO">Actual/360 - This is the data displayed in the UI/application</msg>
<status status="PASS" starttime="20210408 19:16:05.962" endtime="20210408 19:16:05.963"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:16:06.016" endtime="20210408 19:16:06.017"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:06.014" endtime="20210408 19:16:06.017"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Should Be Equal</arg>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:16:06.070" endtime="20210408 19:16:06.071"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:06.069" endtime="20210408 19:16:06.071"></status>
</kw>
<msg timestamp="20210408 19:16:06.071" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:16:06.067" endtime="20210408 19:16:06.071"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>"${Value_fromExcel}" - data retrieved from Excel Sheet MATCHES "${Value_fromUI}" - the data displayed in the UI/application</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>"${Value_fromExcel}" - data retrieved from Excel Sheet DOES NOT MATCH "${Value_fromUI}" - the data displayed in the UI/application</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"${Value_fromExcel}" - data retrieved from Excel Sheet MATCHES "${Value_fromUI}" - the data displayed in the UI/application</arg>
</arguments>
<msg timestamp="20210408 19:16:06.123" level="INFO">"Actual/360" - data retrieved from Excel Sheet MATCHES "Actual/360" - the data displayed in the UI/application</msg>
<status status="PASS" starttime="20210408 19:16:06.123" endtime="20210408 19:16:06.123"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:06.121" endtime="20210408 19:16:06.123"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:05.734" endtime="20210408 19:16:06.124"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_FacilityPricing_Interest_OptionCondition_OK_Button}</arg>
</arguments>
<msg timestamp="20210408 19:16:07.724" level="INFO">JavaWindow("title:=Option Condition").JavaButton("attached text:=OK") is clicked.</msg>
<status status="PASS" starttime="20210408 19:16:06.287" endtime="20210408 19:16:07.724"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:04.894" endtime="20210408 19:16:07.725"></status>
</kw>
<kw name="Set Formula Category For Interest" library="Facility_Notebook">
<doc>Sets the details in the Formula Category for the Interest Pricing under the Facility Notebook's Pricing tab.
@author: bernchua DDMMMYYYY - initial create
@update: bernchua DDMMMYYYY - Added new arguments 'RateFormula', 'RateFormulaUsage' with default values 
@update: sahalder DDMMMYYYY - Added code to handle warning windows
@update: hstone 22OCT2020 - Replaced 'Mx LoanIQ Select Or DoubleClick In Javatree' with 'Mx LoanIQ Select Or Doubleclick In Tree By Text'
@update: jloretiz 11FEB2021 - added condition for empty data
@update: mangeles 26FEB2021 - updated logical operator of Formula Category Spread Value from '==' to '!='</doc>
<arguments>
<arg>${Interest_SpreadType}</arg>
<arg>${Interest_SpreadValue}</arg>
<arg>${Interest_BaseRateCode}</arg>
<arg>${RateFormula}</arg>
<arg>${RateFormulaUsage}</arg>
</arguments>
<kw name="Mx LoanIQ Set" library="LoanIQ">
<doc>|Usage|</doc>
<arguments>
<arg>JavaWindow("title:=Formula Category").JavaRadioButton("attached text:=${FormulaCategory_SpreadType}")</arg>
<arg>${ON}</arg>
</arguments>
<msg timestamp="20210408 19:16:08.017" level="INFO">Object = 'JavaWindow("title:=Formula Category").JavaRadioButton("attached text:=Percent")' is set.</msg>
<status status="PASS" starttime="20210408 19:16:07.868" endtime="20210408 19:16:08.017"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${FormulaCategory_SpreadValue}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Enter</arg>
<arg>${LIQ_FormulaCategory_Spread_Textfield}</arg>
<arg>${FormulaCategory_SpreadValue}</arg>
</arguments>
<kw name="Mx LoanIQ Enter" library="LoanIQ">
<doc>| Usage |
To enter the data to the element specified by 'locator'.</doc>
<arguments>
<arg>${LIQ_FormulaCategory_Spread_Textfield}</arg>
<arg>${FormulaCategory_SpreadValue}</arg>
</arguments>
<msg timestamp="20210408 19:16:08.335" level="INFO">Input= 1.8 is entered in element= JavaWindow("title:=Formula Category").JavaTab("tagname:=X").JavaEdit("tagname:=X")</msg>
<status status="PASS" starttime="20210408 19:16:08.077" endtime="20210408 19:16:08.335"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:08.075" endtime="20210408 19:16:08.336"></status>
</kw>
<kw name="Mx LoanIQ Get Data" library="LoanIQ">
<doc>| Usage |
Used to returns the text of object identified by `locator'</doc>
<arguments>
<arg>${LIQ_FormulaCategory_FormulaText_Textfield}</arg>
<arg>value%code</arg>
</arguments>
<assign>
<var>${Get_InterestBaseRateCode}</var>
</assign>
<msg timestamp="20210408 19:16:08.510" level="INFO">Fetching value from object: JavaWindow("title:=Formula Category").JavaObject("text:=Type in Formula Text").JavaEdit("tagname:=Text") 
 Value = : LIBO</msg>
<msg timestamp="20210408 19:16:08.574" level="INFO">${code} = LIBO</msg>
<msg timestamp="20210408 19:16:08.575" level="INFO">${Get_InterestBaseRateCode} = LIBO</msg>
<status status="PASS" starttime="20210408 19:16:08.399" endtime="20210408 19:16:08.575"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Get_InterestBaseRateCode}'=='${EMPTY}'</arg>
<arg>Mx LoanIQ Doubleclick</arg>
<arg>${LIQ_FormulaCategory_Tree}</arg>
<arg>${BaseRateCode}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:16:08.629" endtime="20210408 19:16:08.629"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${RateFormula}'!='${EMPTY}'</arg>
<arg>Run Keywords</arg>
<arg>Mx LoanIQ Enter</arg>
<arg>${LIQ_FormulaCategory_PercentOfRateFormula_Textfield}</arg>
<arg>${RateFormula}</arg>
<arg>AND</arg>
<arg>Mx LoanIQ Select Combo Box Value</arg>
<arg>${LIQ_FormulaCategory_PercentOfRateFormulaUsage_List}</arg>
<arg>${RateFormulaUsage}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:16:08.682" endtime="20210408 19:16:08.683"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_FormulaCategory_OK_Button}</arg>
</arguments>
<msg timestamp="20210408 19:16:09.851" level="INFO">JavaWindow("title:=Formula Category").JavaButton("attached text:=OK") is clicked.</msg>
<status status="PASS" starttime="20210408 19:16:08.750" endtime="20210408 19:16:09.855"></status>
</kw>
<kw name="Mx LoanIQ Click Element If Present" library="LoanIQ">
<doc>| Usage |
Click on element identified by `locator` only if that element is present.
It passes if the element is not present.</doc>
<arguments>
<arg>${LIQ_Warning_Yes_Button}</arg>
</arguments>
<msg timestamp="20210408 19:16:18.321" level="INFO">JavaWindow("title:=Warning.*", "displayed:=1").JavaButton("label:=Yes"): is clicked, or skipped if not present.</msg>
<status status="PASS" starttime="20210408 19:16:09.972" endtime="20210408 19:16:18.322"></status>
</kw>
<kw name="Mx LoanIQ Click Element If Present" library="LoanIQ">
<doc>| Usage |
Click on element identified by `locator` only if that element is present.
It passes if the element is not present.</doc>
<arguments>
<arg>${LIQ_PleaseConfirm_Yes_Button}</arg>
</arguments>
<msg timestamp="20210408 19:16:26.748" level="INFO">JavaWindow("title:=Please confirm","displayed:=1").JavaButton("label:=Yes"): is clicked, or skipped if not present.</msg>
<status status="PASS" starttime="20210408 19:16:18.381" endtime="20210408 19:16:26.748"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:07.811" endtime="20210408 19:16:26.748"></status>
</kw>
<kw name="Validate Facility Pricing Items" library="Facility_Notebook">
<doc>This keyword validates the added Ongoing Fee or Interest Pricing items in the Facility Notebook.</doc>
<arguments>
<arg>${Interest_OptionName}</arg>
</arguments>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sItemToBeValidated}</arg>
</arguments>
<assign>
<var>${ItemToBeValidated}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:16:27.018" endtime="20210408 19:16:27.018"></status>
</kw>
<msg timestamp="20210408 19:16:27.018" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:16:27.016" endtime="20210408 19:16:27.018"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:16:27.223" level="INFO">${List_Argument_Excel_Value} = ['Libor Option']</msg>
<status status="PASS" starttime="20210408 19:16:27.223" endtime="20210408 19:16:27.223"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:16:27.276" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:16:27.276" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:16:27.275" endtime="20210408 19:16:27.276"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:16:27.349" level="INFO">${Arg_User_Input} = LIBOR OPTION</msg>
<status status="PASS" starttime="20210408 19:16:27.348" endtime="20210408 19:16:27.349"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:16:27.423" level="INFO">${Arg_User_Input} = LIBOR OPTION</msg>
<status status="PASS" starttime="20210408 19:16:27.423" endtime="20210408 19:16:27.423"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:16:27.487" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:16:27.486" endtime="20210408 19:16:27.488"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:16:27.540" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:16:27.539" endtime="20210408 19:16:27.541"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:16:27.595" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:16:27.594" endtime="20210408 19:16:27.595"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:16:27.653" endtime="20210408 19:16:27.654"></status>
</kw>
<msg timestamp="20210408 19:16:27.654" level="INFO">${Extracted_Argument_Value} = Libor Option</msg>
<status status="PASS" starttime="20210408 19:16:27.650" endtime="20210408 19:16:27.654"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:27.170" endtime="20210408 19:16:27.654"></status>
</kw>
<msg timestamp="20210408 19:16:27.654" level="INFO">${Extracted_Argument_Value} = Libor Option</msg>
<status status="PASS" starttime="20210408 19:16:27.068" endtime="20210408 19:16:27.655"></status>
</kw>
<msg timestamp="20210408 19:16:27.655" level="INFO">${ItemToBeValidated} = Libor Option</msg>
<status status="PASS" starttime="20210408 19:16:26.963" endtime="20210408 19:16:27.655"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sSpreadType}</arg>
</arguments>
<assign>
<var>${SpreadType}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:16:27.870" endtime="20210408 19:16:27.871"></status>
</kw>
<msg timestamp="20210408 19:16:27.871" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:16:27.868" endtime="20210408 19:16:27.871"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:16:28.079" level="INFO">${List_Argument_Excel_Value} = ['null']</msg>
<status status="PASS" starttime="20210408 19:16:28.078" endtime="20210408 19:16:28.079"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:16:28.133" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:16:28.134" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:16:28.133" endtime="20210408 19:16:28.134"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:16:28.185" level="INFO">${Arg_User_Input} = NULL</msg>
<status status="PASS" starttime="20210408 19:16:28.184" endtime="20210408 19:16:28.185"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:16:28.236" level="INFO">${Arg_User_Input} = NULL</msg>
<status status="PASS" starttime="20210408 19:16:28.236" endtime="20210408 19:16:28.236"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:16:28.288" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:16:28.287" endtime="20210408 19:16:28.288"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:16:28.340" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:16:28.339" endtime="20210408 19:16:28.340"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:16:28.389" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:16:28.389" endtime="20210408 19:16:28.389"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:16:28.442" endtime="20210408 19:16:28.442"></status>
</kw>
<msg timestamp="20210408 19:16:28.442" level="INFO">${Extracted_Argument_Value} = null</msg>
<status status="PASS" starttime="20210408 19:16:28.440" endtime="20210408 19:16:28.442"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:28.027" endtime="20210408 19:16:28.443"></status>
</kw>
<msg timestamp="20210408 19:16:28.443" level="INFO">${Extracted_Argument_Value} = null</msg>
<status status="PASS" starttime="20210408 19:16:27.920" endtime="20210408 19:16:28.443"></status>
</kw>
<msg timestamp="20210408 19:16:28.443" level="INFO">${SpreadType} = null</msg>
<status status="PASS" starttime="20210408 19:16:27.814" endtime="20210408 19:16:28.443"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sBaseRateCode}</arg>
</arguments>
<assign>
<var>${BaseRateCode}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:16:28.649" endtime="20210408 19:16:28.650"></status>
</kw>
<msg timestamp="20210408 19:16:28.650" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:16:28.648" endtime="20210408 19:16:28.650"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:16:28.862" level="INFO">${List_Argument_Excel_Value} = ['null']</msg>
<status status="PASS" starttime="20210408 19:16:28.862" endtime="20210408 19:16:28.862"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:16:28.913" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:16:28.913" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:16:28.912" endtime="20210408 19:16:28.913"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:16:28.964" level="INFO">${Arg_User_Input} = NULL</msg>
<status status="PASS" starttime="20210408 19:16:28.964" endtime="20210408 19:16:28.964"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:16:29.014" level="INFO">${Arg_User_Input} = NULL</msg>
<status status="PASS" starttime="20210408 19:16:29.014" endtime="20210408 19:16:29.014"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:16:29.065" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:16:29.065" endtime="20210408 19:16:29.065"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:16:29.117" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:16:29.116" endtime="20210408 19:16:29.117"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:16:29.168" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:16:29.167" endtime="20210408 19:16:29.168"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:16:29.219" endtime="20210408 19:16:29.220"></status>
</kw>
<msg timestamp="20210408 19:16:29.220" level="INFO">${Extracted_Argument_Value} = null</msg>
<status status="PASS" starttime="20210408 19:16:29.217" endtime="20210408 19:16:29.220"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:28.811" endtime="20210408 19:16:29.221"></status>
</kw>
<msg timestamp="20210408 19:16:29.221" level="INFO">${Extracted_Argument_Value} = null</msg>
<status status="PASS" starttime="20210408 19:16:28.702" endtime="20210408 19:16:29.221"></status>
</kw>
<msg timestamp="20210408 19:16:29.221" level="INFO">${BaseRateCode} = null</msg>
<status status="PASS" starttime="20210408 19:16:28.595" endtime="20210408 19:16:29.221"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Not Be Equal</arg>
<arg>${SpreadType}</arg>
<arg>null</arg>
</arguments>
<assign>
<var>${ValidateForSpread}</var>
</assign>
<kw name="Should Not Be Equal" library="BuiltIn">
<doc>Fails if the given objects are equal.</doc>
<arguments>
<arg>${SpreadType}</arg>
<arg>null</arg>
</arguments>
<msg timestamp="20210408 19:16:29.383" level="FAIL">null == null</msg>
<status status="FAIL" starttime="20210408 19:16:29.382" endtime="20210408 19:16:29.432"></status>
</kw>
<msg timestamp="20210408 19:16:29.432" level="INFO">${ValidateForSpread} = False</msg>
<status status="PASS" starttime="20210408 19:16:29.380" endtime="20210408 19:16:29.432"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Not Be Equal</arg>
<arg>${BaseRateCode}</arg>
<arg>null</arg>
</arguments>
<assign>
<var>${ValidateForInterest}</var>
</assign>
<kw name="Should Not Be Equal" library="BuiltIn">
<doc>Fails if the given objects are equal.</doc>
<arguments>
<arg>${BaseRateCode}</arg>
<arg>null</arg>
</arguments>
<msg timestamp="20210408 19:16:29.484" level="FAIL">null == null</msg>
<status status="FAIL" starttime="20210408 19:16:29.484" endtime="20210408 19:16:29.542"></status>
</kw>
<msg timestamp="20210408 19:16:29.542" level="INFO">${ValidateForInterest} = False</msg>
<status status="PASS" starttime="20210408 19:16:29.482" endtime="20210408 19:16:29.542"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${ValidateForSpread}==False</arg>
<arg>Run Keyword</arg>
<arg>Validate Facility Pricing First Item</arg>
<arg>${ItemToBeValidated}</arg>
<arg>ELSE IF</arg>
<arg>${ValidateForSpread}==True and ${ValidateForInterest}==False</arg>
<arg>Run Keyword</arg>
<arg>Validate Facility Pricing Ongoing Fee Item Spread</arg>
<arg>${ItemToBeValidated}</arg>
<arg>${SpreadType}</arg>
<arg>ELSE IF</arg>
<arg>${ValidateForSpread}==True and ${ValidateForInterest}==True</arg>
<arg>Run Keyword</arg>
<arg>Validate Facility Pricing Interest Item Spread</arg>
<arg>${ItemToBeValidated}</arg>
<arg>${SpreadType}</arg>
<arg>${BaseRateCode}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Validate Facility Pricing First Item</arg>
<arg>${ItemToBeValidated}</arg>
</arguments>
<kw name="Validate Facility Pricing First Item" library="Facility_Notebook">
<doc>This validates the actual name of the Fee or Interest.
@author: bernchua</doc>
<arguments>
<arg>${ItemToBeValidated}</arg>
</arguments>
<kw name="Regexp Escape" library="BuiltIn">
<doc>Returns each argument string escaped for use as a regular expression.</doc>
<arguments>
<arg>${ItemToBeValidated}</arg>
</arguments>
<assign>
<var>${ValidatedItem}</var>
</assign>
<msg timestamp="20210408 19:16:29.647" level="INFO">${ValidatedItem} = Libor\ Option</msg>
<status status="PASS" starttime="20210408 19:16:29.646" endtime="20210408 19:16:29.647"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_FacilityPricing_OngoingFeeInterest_Window}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<assign>
<var>${FacilityPricingNotebook_Exist}</var>
</assign>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_FacilityPricing_OngoingFeeInterest_Window}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:16:29.754" level="INFO">Locator = 'JavaWindow("title:=Facility.*Pricing")' exists.</msg>
<status status="PASS" starttime="20210408 19:16:29.699" endtime="20210408 19:16:29.755"></status>
</kw>
<msg timestamp="20210408 19:16:29.755" level="INFO">${FacilityPricingNotebook_Exist} = True</msg>
<status status="PASS" starttime="20210408 19:16:29.697" endtime="20210408 19:16:29.755"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FacilityPricingNotebook_Exist}==True</arg>
<arg>Run Keyword And Return Status</arg>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>JavaWindow("title:=Facility.*Pricing").JavaTree("developer name:=.*${ValidatedItem}.*")</arg>
<arg>VerificationData="Yes"</arg>
<arg>ELSE</arg>
<arg>Run Keyword And Return Status</arg>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>JavaWindow("title:=Facility -.*").JavaTree("developer name:=.*${ValidatedItem}.*")</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<assign>
<var>${ItemExist}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>JavaWindow("title:=Facility.*Pricing").JavaTree("developer name:=.*${ValidatedItem}.*")</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>JavaWindow("title:=Facility.*Pricing").JavaTree("developer name:=.*${ValidatedItem}.*")</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:16:29.934" level="INFO">Locator = 'JavaWindow("title:=Facility.*Pricing").JavaTree("developer name:=.*Libor\ Option.*")' exists.</msg>
<status status="PASS" starttime="20210408 19:16:29.823" endtime="20210408 19:16:29.934"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:29.821" endtime="20210408 19:16:29.935"></status>
</kw>
<msg timestamp="20210408 19:16:29.935" level="INFO">${ItemExist} = True</msg>
<status status="PASS" starttime="20210408 19:16:29.820" endtime="20210408 19:16:29.935"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${ItemExist}==True</arg>
<arg>Log</arg>
<arg>${ItemToBeValidated} is listed.</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${ItemToBeValidated} is listed.</arg>
</arguments>
<msg timestamp="20210408 19:16:30.011" level="INFO">Libor Option is listed.</msg>
<status status="PASS" starttime="20210408 19:16:30.011" endtime="20210408 19:16:30.012"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:30.009" endtime="20210408 19:16:30.012"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:29.595" endtime="20210408 19:16:30.013"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:29.593" endtime="20210408 19:16:30.013"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:29.591" endtime="20210408 19:16:30.013"></status>
</kw>
<kw name="Take Screenshot with text into Test Document" library="ReportMaker_Keywords">
<doc>This keyword is used to add screenshot with image filename as description into test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Facility Notebook - Facility Pricing Items</arg>
</arguments>
<kw name="Take Screenshot" library="Screenshot">
<doc>Takes a screenshot in JPEG format and embeds it into the log file.</doc>
<arguments>
<arg>${imageName}</arg>
</arguments>
<msg timestamp="20210408 19:16:30.237" level="INFO" html="yes">&lt;a href="Results/LoanIQ/TC02%20-%20Validate%20ARR%20Interest%20Pricing%20Option%20at%20Facility%20Level%20-%20Term___2021-04-08%2019-11-32.788/Facility%20Notebook%20-%20Facility%20Pricing%20Items_1.jpg"&gt;&lt;img src="Results/LoanIQ/TC02%20-%20Validate%20ARR%20Interest%20Pricing%20Option%20at%20Facility%20Level%20-%20Term___2021-04-08%2019-11-32.788/Facility%20Notebook%20-%20Facility%20Pricing%20Items_1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210408 19:16:30.128" endtime="20210408 19:16:30.237"></status>
</kw>
<kw name="Get Latest File" library="ReportMaker">
<arguments>
<arg>${getfilePath}</arg>
</arguments>
<assign>
<var>${imagePath}</var>
</assign>
<msg timestamp="20210408 19:16:30.295" level="INFO">${imagePath} = C:\Git_Evergreen\transform_arr\Results\LoanIQ\TC02 - Validate ARR Interest Pricing Option at Facility Level - Term___2021-04-08 19-11-32.788\Facility Notebook - Facility Pricing Items_1.jpg</msg>
<status status="PASS" starttime="20210408 19:16:30.293" endtime="20210408 19:16:30.295"></status>
</kw>
<kw name="Put Screenshot With Text" library="ReportMaker">
<arguments>
<arg>${imagePath}</arg>
<arg>${imageName}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:16:30.347" endtime="20210408 19:16:30.360"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:30.073" endtime="20210408 19:16:30.360"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:26.801" endtime="20210408 19:16:30.360"></status>
</kw>
<kw name="Validate Facility Pricing Items" library="Facility_Notebook">
<doc>This keyword validates the added Ongoing Fee or Interest Pricing items in the Facility Notebook.</doc>
<arguments>
<arg>${Interest_SpreadValue}</arg>
<arg>${Interest_SpreadType}</arg>
<arg>${Interest_BaseRateCode}</arg>
</arguments>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sItemToBeValidated}</arg>
</arguments>
<assign>
<var>${ItemToBeValidated}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:16:30.634" endtime="20210408 19:16:30.634"></status>
</kw>
<msg timestamp="20210408 19:16:30.634" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:16:30.632" endtime="20210408 19:16:30.635"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:16:30.848" level="INFO">${List_Argument_Excel_Value} = ['1.8']</msg>
<status status="PASS" starttime="20210408 19:16:30.848" endtime="20210408 19:16:30.849"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:16:30.921" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:16:30.921" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:16:30.920" endtime="20210408 19:16:30.921"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:16:30.996" level="INFO">${Arg_User_Input} = 1.8</msg>
<status status="PASS" starttime="20210408 19:16:30.995" endtime="20210408 19:16:30.996"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:16:31.047" level="INFO">${Arg_User_Input} = 1.8</msg>
<status status="PASS" starttime="20210408 19:16:31.046" endtime="20210408 19:16:31.047"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:16:31.096" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:16:31.096" endtime="20210408 19:16:31.097"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:16:31.147" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:16:31.147" endtime="20210408 19:16:31.147"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:16:31.220" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:16:31.219" endtime="20210408 19:16:31.220"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:16:31.295" endtime="20210408 19:16:31.296"></status>
</kw>
<msg timestamp="20210408 19:16:31.296" level="INFO">${Extracted_Argument_Value} = 1.8</msg>
<status status="PASS" starttime="20210408 19:16:31.293" endtime="20210408 19:16:31.296"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:30.796" endtime="20210408 19:16:31.297"></status>
</kw>
<msg timestamp="20210408 19:16:31.297" level="INFO">${Extracted_Argument_Value} = 1.8</msg>
<status status="PASS" starttime="20210408 19:16:30.685" endtime="20210408 19:16:31.297"></status>
</kw>
<msg timestamp="20210408 19:16:31.297" level="INFO">${ItemToBeValidated} = 1.8</msg>
<status status="PASS" starttime="20210408 19:16:30.576" endtime="20210408 19:16:31.297"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sSpreadType}</arg>
</arguments>
<assign>
<var>${SpreadType}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:16:31.595" endtime="20210408 19:16:31.595"></status>
</kw>
<msg timestamp="20210408 19:16:31.596" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:16:31.593" endtime="20210408 19:16:31.596"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:16:31.887" level="INFO">${List_Argument_Excel_Value} = ['Percent']</msg>
<status status="PASS" starttime="20210408 19:16:31.886" endtime="20210408 19:16:31.887"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:16:31.964" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:16:31.964" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:16:31.963" endtime="20210408 19:16:31.964"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:16:32.040" level="INFO">${Arg_User_Input} = PERCENT</msg>
<status status="PASS" starttime="20210408 19:16:32.040" endtime="20210408 19:16:32.040"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:16:32.115" level="INFO">${Arg_User_Input} = PERCENT</msg>
<status status="PASS" starttime="20210408 19:16:32.114" endtime="20210408 19:16:32.115"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:16:32.189" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:16:32.189" endtime="20210408 19:16:32.190"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:16:32.266" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:16:32.266" endtime="20210408 19:16:32.267"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:16:32.319" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:16:32.318" endtime="20210408 19:16:32.319"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:16:32.372" endtime="20210408 19:16:32.373"></status>
</kw>
<msg timestamp="20210408 19:16:32.373" level="INFO">${Extracted_Argument_Value} = Percent</msg>
<status status="PASS" starttime="20210408 19:16:32.370" endtime="20210408 19:16:32.373"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:31.813" endtime="20210408 19:16:32.373"></status>
</kw>
<msg timestamp="20210408 19:16:32.374" level="INFO">${Extracted_Argument_Value} = Percent</msg>
<status status="PASS" starttime="20210408 19:16:31.668" endtime="20210408 19:16:32.374"></status>
</kw>
<msg timestamp="20210408 19:16:32.374" level="INFO">${SpreadType} = Percent</msg>
<status status="PASS" starttime="20210408 19:16:31.517" endtime="20210408 19:16:32.374"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sBaseRateCode}</arg>
</arguments>
<assign>
<var>${BaseRateCode}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:16:32.693" endtime="20210408 19:16:32.694"></status>
</kw>
<msg timestamp="20210408 19:16:32.694" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:16:32.691" endtime="20210408 19:16:32.694"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:16:32.903" level="INFO">${List_Argument_Excel_Value} = ['SOFR']</msg>
<status status="PASS" starttime="20210408 19:16:32.902" endtime="20210408 19:16:32.903"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:16:32.953" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:16:32.953" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:16:32.953" endtime="20210408 19:16:32.954"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:16:33.004" level="INFO">${Arg_User_Input} = SOFR</msg>
<status status="PASS" starttime="20210408 19:16:33.003" endtime="20210408 19:16:33.004"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:16:33.054" level="INFO">${Arg_User_Input} = SOFR</msg>
<status status="PASS" starttime="20210408 19:16:33.054" endtime="20210408 19:16:33.054"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:16:33.105" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:16:33.104" endtime="20210408 19:16:33.105"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:16:33.155" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:16:33.155" endtime="20210408 19:16:33.155"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:16:33.206" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:16:33.205" endtime="20210408 19:16:33.206"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:16:33.259" endtime="20210408 19:16:33.259"></status>
</kw>
<msg timestamp="20210408 19:16:33.259" level="INFO">${Extracted_Argument_Value} = SOFR</msg>
<status status="PASS" starttime="20210408 19:16:33.256" endtime="20210408 19:16:33.259"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:32.851" endtime="20210408 19:16:33.260"></status>
</kw>
<msg timestamp="20210408 19:16:33.260" level="INFO">${Extracted_Argument_Value} = SOFR</msg>
<status status="PASS" starttime="20210408 19:16:32.748" endtime="20210408 19:16:33.260"></status>
</kw>
<msg timestamp="20210408 19:16:33.260" level="INFO">${BaseRateCode} = SOFR</msg>
<status status="PASS" starttime="20210408 19:16:32.639" endtime="20210408 19:16:33.260"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Not Be Equal</arg>
<arg>${SpreadType}</arg>
<arg>null</arg>
</arguments>
<assign>
<var>${ValidateForSpread}</var>
</assign>
<kw name="Should Not Be Equal" library="BuiltIn">
<doc>Fails if the given objects are equal.</doc>
<arguments>
<arg>${SpreadType}</arg>
<arg>null</arg>
</arguments>
<status status="PASS" starttime="20210408 19:16:33.313" endtime="20210408 19:16:33.313"></status>
</kw>
<msg timestamp="20210408 19:16:33.313" level="INFO">${ValidateForSpread} = True</msg>
<status status="PASS" starttime="20210408 19:16:33.312" endtime="20210408 19:16:33.313"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Not Be Equal</arg>
<arg>${BaseRateCode}</arg>
<arg>null</arg>
</arguments>
<assign>
<var>${ValidateForInterest}</var>
</assign>
<kw name="Should Not Be Equal" library="BuiltIn">
<doc>Fails if the given objects are equal.</doc>
<arguments>
<arg>${BaseRateCode}</arg>
<arg>null</arg>
</arguments>
<status status="PASS" starttime="20210408 19:16:33.366" endtime="20210408 19:16:33.366"></status>
</kw>
<msg timestamp="20210408 19:16:33.366" level="INFO">${ValidateForInterest} = True</msg>
<status status="PASS" starttime="20210408 19:16:33.364" endtime="20210408 19:16:33.366"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${ValidateForSpread}==False</arg>
<arg>Run Keyword</arg>
<arg>Validate Facility Pricing First Item</arg>
<arg>${ItemToBeValidated}</arg>
<arg>ELSE IF</arg>
<arg>${ValidateForSpread}==True and ${ValidateForInterest}==False</arg>
<arg>Run Keyword</arg>
<arg>Validate Facility Pricing Ongoing Fee Item Spread</arg>
<arg>${ItemToBeValidated}</arg>
<arg>${SpreadType}</arg>
<arg>ELSE IF</arg>
<arg>${ValidateForSpread}==True and ${ValidateForInterest}==True</arg>
<arg>Run Keyword</arg>
<arg>Validate Facility Pricing Interest Item Spread</arg>
<arg>${ItemToBeValidated}</arg>
<arg>${SpreadType}</arg>
<arg>${BaseRateCode}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Validate Facility Pricing Interest Item Spread</arg>
<arg>${ItemToBeValidated}</arg>
<arg>${SpreadType}</arg>
<arg>${BaseRateCode}</arg>
</arguments>
<kw name="Validate Facility Pricing Interest Item Spread" library="Facility_Notebook">
<doc>This validates the actual Interest amount or percentage.
@author: bernchua</doc>
<arguments>
<arg>${ItemToBeValidated}</arg>
<arg>${SpreadType}</arg>
<arg>${BaseRateCode}</arg>
</arguments>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${SpreadType}</arg>
<arg>Basis Points</arg>
</arguments>
<assign>
<var>${BasisPoints}</var>
</assign>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${SpreadType}</arg>
<arg>Basis Points</arg>
</arguments>
<msg timestamp="20210408 19:16:33.482" level="FAIL">Percent != Basis Points</msg>
<status status="FAIL" starttime="20210408 19:16:33.481" endtime="20210408 19:16:33.531"></status>
</kw>
<msg timestamp="20210408 19:16:33.531" level="INFO">${BasisPoints} = False</msg>
<status status="PASS" starttime="20210408 19:16:33.479" endtime="20210408 19:16:33.531"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${SpreadType}</arg>
<arg>Percent</arg>
</arguments>
<assign>
<var>${Percent}</var>
</assign>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${SpreadType}</arg>
<arg>Percent</arg>
</arguments>
<status status="PASS" starttime="20210408 19:16:33.584" endtime="20210408 19:16:33.585"></status>
</kw>
<msg timestamp="20210408 19:16:33.585" level="INFO">${Percent} = True</msg>
<status status="PASS" starttime="20210408 19:16:33.583" endtime="20210408 19:16:33.585"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${BasisPoints}==True</arg>
<arg>BP</arg>
<arg>${Percent}==True</arg>
<arg>%</arg>
</arguments>
<assign>
<var>${SpreadType}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${Percent}==True</arg>
<arg>%</arg>
</arguments>
<status status="PASS" starttime="20210408 19:16:33.637" endtime="20210408 19:16:33.638"></status>
</kw>
<msg timestamp="20210408 19:16:33.638" level="INFO">${SpreadType} = %</msg>
<status status="PASS" starttime="20210408 19:16:33.636" endtime="20210408 19:16:33.638"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_FacilityPricing_OngoingFeeInterest_Window}</arg>
<arg>Processtimeout=3</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<assign>
<var>${FacilityPricingNotebook_Exist}</var>
</assign>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_FacilityPricing_OngoingFeeInterest_Window}</arg>
<arg>Processtimeout=3</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:16:33.733" level="INFO">Locator = 'JavaWindow("title:=Facility.*Pricing")' exists.</msg>
<status status="PASS" starttime="20210408 19:16:33.688" endtime="20210408 19:16:33.734"></status>
</kw>
<msg timestamp="20210408 19:16:33.734" level="INFO">${FacilityPricingNotebook_Exist} = True</msg>
<status status="PASS" starttime="20210408 19:16:33.687" endtime="20210408 19:16:33.734"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FacilityPricingNotebook_Exist}==True</arg>
<arg>Run Keyword And Return Status</arg>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>JavaWindow("title:=Facility.*Pricing").JavaTree("developer name:=.*${BaseRateCode}.*${SpreadValue}${SpreadType}.*")</arg>
<arg>VerificationData="Yes"</arg>
<arg>ELSE</arg>
<arg>Run Keyword And Return Status</arg>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>JavaWindow("title:=Facility -.*").JavaTree("developer name:=.*${BaseRateCode}.*${SpreadValue}${SpreadType}.*")</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<assign>
<var>${ItemExist}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>JavaWindow("title:=Facility.*Pricing").JavaTree("developer name:=.*${BaseRateCode}.*${SpreadValue}${SpreadType}.*")</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>JavaWindow("title:=Facility.*Pricing").JavaTree("developer name:=.*${BaseRateCode}.*${SpreadValue}${SpreadType}.*")</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:16:39.316" level="INFO" html="yes">&lt;a href="screenshot_36.jpg"&gt;&lt;img src="screenshot_36.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20210408 19:16:39.317" level="INFO">Keyword Details-------------------------------------------------
Action = VERIFYOBJECTEXIST
Input = None
Object = JavaWindow("title:=Facility.*Pricing").JavaTree("developer name:=.*SOFR.*1.8%.*")
Verification Data = Y</msg>
<msg timestamp="20210408 19:16:39.317" level="FAIL">Error Number: -110037 Error Description: Object doesnot Exist. JavaVerifyObjectExist. Retried for:  0 times. </msg>
<status status="FAIL" starttime="20210408 19:16:33.793" endtime="20210408 19:16:39.382"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:33.791" endtime="20210408 19:16:39.383"></status>
</kw>
<msg timestamp="20210408 19:16:39.383" level="INFO">${ItemExist} = False</msg>
<status status="PASS" starttime="20210408 19:16:33.790" endtime="20210408 19:16:39.383"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${ItemExist}==True</arg>
<arg>Log</arg>
<arg>${BaseRateCode} + Spread (${SpreadValue}${SpreadType}) X PCT (1) is listed.</arg>
</arguments>
<status status="PASS" starttime="20210408 19:16:39.450" endtime="20210408 19:16:39.451"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:33.429" endtime="20210408 19:16:39.451"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:33.427" endtime="20210408 19:16:39.451"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:33.426" endtime="20210408 19:16:39.451"></status>
</kw>
<kw name="Take Screenshot with text into Test Document" library="ReportMaker_Keywords">
<doc>This keyword is used to add screenshot with image filename as description into test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Facility Notebook - Facility Pricing Items</arg>
</arguments>
<kw name="Take Screenshot" library="Screenshot">
<doc>Takes a screenshot in JPEG format and embeds it into the log file.</doc>
<arguments>
<arg>${imageName}</arg>
</arguments>
<msg timestamp="20210408 19:16:39.682" level="INFO" html="yes">&lt;a href="Results/LoanIQ/TC02%20-%20Validate%20ARR%20Interest%20Pricing%20Option%20at%20Facility%20Level%20-%20Term___2021-04-08%2019-11-32.788/Facility%20Notebook%20-%20Facility%20Pricing%20Items_2.jpg"&gt;&lt;img src="Results/LoanIQ/TC02%20-%20Validate%20ARR%20Interest%20Pricing%20Option%20at%20Facility%20Level%20-%20Term___2021-04-08%2019-11-32.788/Facility%20Notebook%20-%20Facility%20Pricing%20Items_2.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210408 19:16:39.584" endtime="20210408 19:16:39.682"></status>
</kw>
<kw name="Get Latest File" library="ReportMaker">
<arguments>
<arg>${getfilePath}</arg>
</arguments>
<assign>
<var>${imagePath}</var>
</assign>
<msg timestamp="20210408 19:16:39.753" level="INFO">${imagePath} = C:\Git_Evergreen\transform_arr\Results\LoanIQ\TC02 - Validate ARR Interest Pricing Option at Facility Level - Term___2021-04-08 19-11-32.788\Facility Notebook - Facility Pricing Items_2.jpg</msg>
<status status="PASS" starttime="20210408 19:16:39.751" endtime="20210408 19:16:39.753"></status>
</kw>
<kw name="Put Screenshot With Text" library="ReportMaker">
<arguments>
<arg>${imagePath}</arg>
<arg>${imageName}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:16:39.810" endtime="20210408 19:16:39.823"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:39.507" endtime="20210408 19:16:39.823"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:30.412" endtime="20210408 19:16:39.823"></status>
</kw>
<kw name="Take Screenshot with text into Test Document" library="ReportMaker_Keywords">
<doc>This keyword is used to add screenshot with image filename as description into test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Facility Notebook - Add Facility Interest</arg>
</arguments>
<kw name="Take Screenshot" library="Screenshot">
<doc>Takes a screenshot in JPEG format and embeds it into the log file.</doc>
<arguments>
<arg>${imageName}</arg>
</arguments>
<msg timestamp="20210408 19:16:40.026" level="INFO" html="yes">&lt;a href="Results/LoanIQ/TC02%20-%20Validate%20ARR%20Interest%20Pricing%20Option%20at%20Facility%20Level%20-%20Term___2021-04-08%2019-11-32.788/Facility%20Notebook%20-%20Add%20Facility%20Interest_1.jpg"&gt;&lt;img src="Results/LoanIQ/TC02%20-%20Validate%20ARR%20Interest%20Pricing%20Option%20at%20Facility%20Level%20-%20Term___2021-04-08%2019-11-32.788/Facility%20Notebook%20-%20Add%20Facility%20Interest_1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210408 19:16:39.924" endtime="20210408 19:16:40.027"></status>
</kw>
<kw name="Get Latest File" library="ReportMaker">
<arguments>
<arg>${getfilePath}</arg>
</arguments>
<assign>
<var>${imagePath}</var>
</assign>
<msg timestamp="20210408 19:16:40.081" level="INFO">${imagePath} = C:\Git_Evergreen\transform_arr\Results\LoanIQ\TC02 - Validate ARR Interest Pricing Option at Facility Level - Term___2021-04-08 19-11-32.788\Facility Notebook - Add Facility Interest_1.jpg</msg>
<status status="PASS" starttime="20210408 19:16:40.079" endtime="20210408 19:16:40.081"></status>
</kw>
<kw name="Put Screenshot With Text" library="ReportMaker">
<arguments>
<arg>${imagePath}</arg>
<arg>${imageName}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:16:40.133" endtime="20210408 19:16:40.147"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:39.873" endtime="20210408 19:16:40.147"></status>
</kw>
<status status="PASS" starttime="20210408 19:15:36.049" endtime="20210408 19:16:40.148"></status>
</kw>
<status status="PASS" starttime="20210408 19:15:35.860" endtime="20210408 19:16:40.148"></status>
</kw>
<msg timestamp="20210408 19:16:40.148" level="INFO">Mx Execute Template With Multiple Data keyword passed for all the data</msg>
<status status="PASS" starttime="20210408 19:15:35.833" endtime="20210408 19:16:40.148"></status>
</kw>
<kw name="Mx Execute Template With Multiple Data" library="GenericLib">
<doc>| Usage |
 This keyword is used to run template with multiple data.</doc>
<arguments>
<arg>Add Facility Interest Pricing</arg>
<arg>${ExcelPath}</arg>
<arg>${Facility_1}</arg>
<arg>CRED08_OngoingFeeSetup</arg>
</arguments>
<kw name="Add Facility Interest Pricing" library="CRED08_OngoingFeeSetup">
<doc>This keyword is used to Setup Interest Pricing Interest
@author: hstone 25NOV2020 - initial create</doc>
<arguments>
<arg>OrderedDict([('rowid', '1'), ('Test_Case', 'ARR_Scenario3'), ('Interest_AddItem', 'Option'), ('Interest_OptionName', 'SOFR Daily Compounding W OPS Not Overridable'), ('Interest_RateBasis', 'Actual/360'), ('Interest_SpreadType', 'Percent'), ('Interest_SpreadValue', '2.5'), ('Interest_BaseRateCode', 'SOFR')])</arg>
</arguments>
<kw name="Report Sub Header" library="ReportMaker_Keywords">
<doc>This keyword is used to add given argument as sub header in test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Add Facility Interest Pricing</arg>
</arguments>
<kw name="Set Report Sub Header" library="ReportMaker">
<arguments>
<arg>${SubHeader}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:16:40.328" endtime="20210408 19:16:40.330"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:40.270" endtime="20210408 19:16:40.331"></status>
</kw>
<kw name="Add Facility Interest" library="Facility_Notebook">
<doc>Set ups the Interest Pricing of the Facility Notebook.
@author: bernchua</doc>
<arguments>
<arg>&amp;{ExcelPath}[Interest_AddItem]</arg>
<arg>&amp;{ExcelPath}[Interest_OptionName]</arg>
<arg>&amp;{ExcelPath}[Interest_RateBasis]</arg>
<arg>&amp;{ExcelPath}[Interest_SpreadType]</arg>
<arg>&amp;{ExcelPath}[Interest_SpreadValue]</arg>
<arg>&amp;{ExcelPath}[Interest_BaseRateCode]</arg>
</arguments>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sInterest_Category}</arg>
</arguments>
<assign>
<var>${Interest_Category}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:16:40.589" endtime="20210408 19:16:40.590"></status>
</kw>
<msg timestamp="20210408 19:16:40.590" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:16:40.588" endtime="20210408 19:16:40.590"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:16:40.919" level="INFO">${List_Argument_Excel_Value} = ['Option']</msg>
<status status="PASS" starttime="20210408 19:16:40.918" endtime="20210408 19:16:40.919"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:16:40.976" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:16:40.976" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:16:40.975" endtime="20210408 19:16:40.976"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:16:41.030" level="INFO">${Arg_User_Input} = OPTION</msg>
<status status="PASS" starttime="20210408 19:16:41.030" endtime="20210408 19:16:41.030"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:16:41.083" level="INFO">${Arg_User_Input} = OPTION</msg>
<status status="PASS" starttime="20210408 19:16:41.082" endtime="20210408 19:16:41.083"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:16:41.137" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:16:41.136" endtime="20210408 19:16:41.137"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:16:41.208" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:16:41.207" endtime="20210408 19:16:41.208"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:16:41.286" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:16:41.285" endtime="20210408 19:16:41.286"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:16:41.363" endtime="20210408 19:16:41.363"></status>
</kw>
<msg timestamp="20210408 19:16:41.363" level="INFO">${Extracted_Argument_Value} = Option</msg>
<status status="PASS" starttime="20210408 19:16:41.361" endtime="20210408 19:16:41.363"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:40.866" endtime="20210408 19:16:41.364"></status>
</kw>
<msg timestamp="20210408 19:16:41.364" level="INFO">${Extracted_Argument_Value} = Option</msg>
<status status="PASS" starttime="20210408 19:16:40.765" endtime="20210408 19:16:41.364"></status>
</kw>
<msg timestamp="20210408 19:16:41.364" level="INFO">${Interest_Category} = Option</msg>
<status status="PASS" starttime="20210408 19:16:40.537" endtime="20210408 19:16:41.364"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sInterest_OptionName}</arg>
</arguments>
<assign>
<var>${Interest_OptionName}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:16:41.649" endtime="20210408 19:16:41.649"></status>
</kw>
<msg timestamp="20210408 19:16:41.649" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:16:41.647" endtime="20210408 19:16:41.649"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:16:41.866" level="INFO">${List_Argument_Excel_Value} = ['SOFR Daily Compounding W OPS Not Overridable']</msg>
<status status="PASS" starttime="20210408 19:16:41.866" endtime="20210408 19:16:41.866"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:16:41.921" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:16:41.922" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:16:41.921" endtime="20210408 19:16:41.922"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:16:41.983" level="INFO">${Arg_User_Input} = SOFR DAILY COMPOUNDING W OPS NOT OVERRIDABLE</msg>
<status status="PASS" starttime="20210408 19:16:41.983" endtime="20210408 19:16:41.983"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:16:42.036" level="INFO">${Arg_User_Input} = SOFR DAILY COMPOUNDING W OPS NOT OVERRIDABLE</msg>
<status status="PASS" starttime="20210408 19:16:42.035" endtime="20210408 19:16:42.036"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:16:42.088" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:16:42.087" endtime="20210408 19:16:42.088"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:16:42.141" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:16:42.141" endtime="20210408 19:16:42.142"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:16:42.194" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:16:42.193" endtime="20210408 19:16:42.194"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:16:42.247" endtime="20210408 19:16:42.248"></status>
</kw>
<msg timestamp="20210408 19:16:42.248" level="INFO">${Extracted_Argument_Value} = SOFR Daily Compounding W OPS Not Overridable</msg>
<status status="PASS" starttime="20210408 19:16:42.245" endtime="20210408 19:16:42.248"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:41.811" endtime="20210408 19:16:42.249"></status>
</kw>
<msg timestamp="20210408 19:16:42.249" level="INFO">${Extracted_Argument_Value} = SOFR Daily Compounding W OPS Not Overridable</msg>
<status status="PASS" starttime="20210408 19:16:41.699" endtime="20210408 19:16:42.249"></status>
</kw>
<msg timestamp="20210408 19:16:42.249" level="INFO">${Interest_OptionName} = SOFR Daily Compounding W OPS Not Overridable</msg>
<status status="PASS" starttime="20210408 19:16:41.594" endtime="20210408 19:16:42.250"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sInterest_RateBasis}</arg>
</arguments>
<assign>
<var>${Interest_RateBasis}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:16:42.457" endtime="20210408 19:16:42.457"></status>
</kw>
<msg timestamp="20210408 19:16:42.458" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:16:42.455" endtime="20210408 19:16:42.458"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:16:42.666" level="INFO">${List_Argument_Excel_Value} = ['Actual/360']</msg>
<status status="PASS" starttime="20210408 19:16:42.664" endtime="20210408 19:16:42.666"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:16:42.723" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:16:42.723" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:16:42.722" endtime="20210408 19:16:42.723"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:16:42.777" level="INFO">${Arg_User_Input} = ACTUAL/360</msg>
<status status="PASS" starttime="20210408 19:16:42.776" endtime="20210408 19:16:42.777"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:16:42.827" level="INFO">${Arg_User_Input} = ACTUAL/360</msg>
<status status="PASS" starttime="20210408 19:16:42.826" endtime="20210408 19:16:42.827"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:16:42.878" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:16:42.877" endtime="20210408 19:16:42.878"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:16:42.939" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:16:42.938" endtime="20210408 19:16:42.939"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:16:42.991" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:16:42.990" endtime="20210408 19:16:42.991"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:16:43.044" endtime="20210408 19:16:43.044"></status>
</kw>
<msg timestamp="20210408 19:16:43.044" level="INFO">${Extracted_Argument_Value} = Actual/360</msg>
<status status="PASS" starttime="20210408 19:16:43.042" endtime="20210408 19:16:43.044"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:42.613" endtime="20210408 19:16:43.045"></status>
</kw>
<msg timestamp="20210408 19:16:43.045" level="INFO">${Extracted_Argument_Value} = Actual/360</msg>
<status status="PASS" starttime="20210408 19:16:42.509" endtime="20210408 19:16:43.045"></status>
</kw>
<msg timestamp="20210408 19:16:43.045" level="INFO">${Interest_RateBasis} = Actual/360</msg>
<status status="PASS" starttime="20210408 19:16:42.404" endtime="20210408 19:16:43.045"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sInterest_SpreadType}</arg>
</arguments>
<assign>
<var>${Interest_SpreadType}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:16:43.359" endtime="20210408 19:16:43.360"></status>
</kw>
<msg timestamp="20210408 19:16:43.360" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:16:43.358" endtime="20210408 19:16:43.360"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:16:43.567" level="INFO">${List_Argument_Excel_Value} = ['Percent']</msg>
<status status="PASS" starttime="20210408 19:16:43.567" endtime="20210408 19:16:43.567"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:16:43.618" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:16:43.618" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:16:43.617" endtime="20210408 19:16:43.618"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:16:43.670" level="INFO">${Arg_User_Input} = PERCENT</msg>
<status status="PASS" starttime="20210408 19:16:43.669" endtime="20210408 19:16:43.670"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:16:43.721" level="INFO">${Arg_User_Input} = PERCENT</msg>
<status status="PASS" starttime="20210408 19:16:43.721" endtime="20210408 19:16:43.721"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:16:43.772" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:16:43.771" endtime="20210408 19:16:43.772"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:16:43.823" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:16:43.822" endtime="20210408 19:16:43.823"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:16:43.874" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:16:43.874" endtime="20210408 19:16:43.874"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:16:43.925" endtime="20210408 19:16:43.926"></status>
</kw>
<msg timestamp="20210408 19:16:43.926" level="INFO">${Extracted_Argument_Value} = Percent</msg>
<status status="PASS" starttime="20210408 19:16:43.923" endtime="20210408 19:16:43.926"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:43.515" endtime="20210408 19:16:43.926"></status>
</kw>
<msg timestamp="20210408 19:16:43.927" level="INFO">${Extracted_Argument_Value} = Percent</msg>
<status status="PASS" starttime="20210408 19:16:43.417" endtime="20210408 19:16:43.927"></status>
</kw>
<msg timestamp="20210408 19:16:43.927" level="INFO">${Interest_SpreadType} = Percent</msg>
<status status="PASS" starttime="20210408 19:16:43.306" endtime="20210408 19:16:43.927"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sInterest_SpreadValue}</arg>
</arguments>
<assign>
<var>${Interest_SpreadValue}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:16:44.133" endtime="20210408 19:16:44.133"></status>
</kw>
<msg timestamp="20210408 19:16:44.134" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:16:44.131" endtime="20210408 19:16:44.134"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:16:44.335" level="INFO">${List_Argument_Excel_Value} = ['2.5']</msg>
<status status="PASS" starttime="20210408 19:16:44.334" endtime="20210408 19:16:44.335"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:16:44.385" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:16:44.385" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:16:44.385" endtime="20210408 19:16:44.385"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:16:44.437" level="INFO">${Arg_User_Input} = 2.5</msg>
<status status="PASS" starttime="20210408 19:16:44.436" endtime="20210408 19:16:44.437"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:16:44.488" level="INFO">${Arg_User_Input} = 2.5</msg>
<status status="PASS" starttime="20210408 19:16:44.488" endtime="20210408 19:16:44.488"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:16:44.539" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:16:44.538" endtime="20210408 19:16:44.539"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:16:44.591" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:16:44.590" endtime="20210408 19:16:44.591"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:16:44.644" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:16:44.642" endtime="20210408 19:16:44.644"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:16:44.695" endtime="20210408 19:16:44.695"></status>
</kw>
<msg timestamp="20210408 19:16:44.696" level="INFO">${Extracted_Argument_Value} = 2.5</msg>
<status status="PASS" starttime="20210408 19:16:44.693" endtime="20210408 19:16:44.696"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:44.283" endtime="20210408 19:16:44.696"></status>
</kw>
<msg timestamp="20210408 19:16:44.696" level="INFO">${Extracted_Argument_Value} = 2.5</msg>
<status status="PASS" starttime="20210408 19:16:44.184" endtime="20210408 19:16:44.696"></status>
</kw>
<msg timestamp="20210408 19:16:44.697" level="INFO">${Interest_SpreadValue} = 2.5</msg>
<status status="PASS" starttime="20210408 19:16:44.079" endtime="20210408 19:16:44.697"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sInterest_BaseRateCode}</arg>
</arguments>
<assign>
<var>${Interest_BaseRateCode}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:16:44.920" endtime="20210408 19:16:44.921"></status>
</kw>
<msg timestamp="20210408 19:16:44.921" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:16:44.918" endtime="20210408 19:16:44.921"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:16:45.140" level="INFO">${List_Argument_Excel_Value} = ['SOFR']</msg>
<status status="PASS" starttime="20210408 19:16:45.140" endtime="20210408 19:16:45.141"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:16:45.195" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:16:45.195" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:16:45.194" endtime="20210408 19:16:45.195"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:16:45.253" level="INFO">${Arg_User_Input} = SOFR</msg>
<status status="PASS" starttime="20210408 19:16:45.253" endtime="20210408 19:16:45.254"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:16:45.309" level="INFO">${Arg_User_Input} = SOFR</msg>
<status status="PASS" starttime="20210408 19:16:45.309" endtime="20210408 19:16:45.310"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:16:45.366" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:16:45.365" endtime="20210408 19:16:45.366"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:16:45.421" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:16:45.420" endtime="20210408 19:16:45.421"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:16:45.474" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:16:45.473" endtime="20210408 19:16:45.474"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:16:45.531" endtime="20210408 19:16:45.532"></status>
</kw>
<msg timestamp="20210408 19:16:45.532" level="INFO">${Extracted_Argument_Value} = SOFR</msg>
<status status="PASS" starttime="20210408 19:16:45.529" endtime="20210408 19:16:45.532"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:45.085" endtime="20210408 19:16:45.532"></status>
</kw>
<msg timestamp="20210408 19:16:45.533" level="INFO">${Extracted_Argument_Value} = SOFR</msg>
<status status="PASS" starttime="20210408 19:16:44.976" endtime="20210408 19:16:45.533"></status>
</kw>
<msg timestamp="20210408 19:16:45.533" level="INFO">${Interest_BaseRateCode} = SOFR</msg>
<status status="PASS" starttime="20210408 19:16:44.862" endtime="20210408 19:16:45.533"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sRateFormula}</arg>
</arguments>
<assign>
<var>${RateFormula}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:16:45.753" endtime="20210408 19:16:45.753"></status>
</kw>
<msg timestamp="20210408 19:16:45.754" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:16:45.752" endtime="20210408 19:16:45.754"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:16:45.965" level="INFO">${List_Argument_Excel_Value} = ['']</msg>
<status status="PASS" starttime="20210408 19:16:45.965" endtime="20210408 19:16:45.965"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:16:46.017" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:16:46.017" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:16:46.016" endtime="20210408 19:16:46.017"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:16:46.071" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:16:46.071" endtime="20210408 19:16:46.071"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:16:46.122" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:16:46.121" endtime="20210408 19:16:46.122"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:16:46.172" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:16:46.171" endtime="20210408 19:16:46.172"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:16:46.333" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:16:46.332" endtime="20210408 19:16:46.333"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:16:46.384" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:16:46.384" endtime="20210408 19:16:46.385"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:16:46.437" endtime="20210408 19:16:46.438"></status>
</kw>
<msg timestamp="20210408 19:16:46.438" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:16:46.436" endtime="20210408 19:16:46.438"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:45.913" endtime="20210408 19:16:46.438"></status>
</kw>
<msg timestamp="20210408 19:16:46.439" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:16:45.814" endtime="20210408 19:16:46.439"></status>
</kw>
<msg timestamp="20210408 19:16:46.439" level="INFO">${RateFormula} = </msg>
<status status="PASS" starttime="20210408 19:16:45.696" endtime="20210408 19:16:46.439"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sRateFormulaUsage}</arg>
</arguments>
<assign>
<var>${RateFormulaUsage}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:16:46.648" endtime="20210408 19:16:46.649"></status>
</kw>
<msg timestamp="20210408 19:16:46.649" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:16:46.647" endtime="20210408 19:16:46.649"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:16:46.858" level="INFO">${List_Argument_Excel_Value} = ['']</msg>
<status status="PASS" starttime="20210408 19:16:46.858" endtime="20210408 19:16:46.858"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:16:46.910" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:16:46.910" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:16:46.909" endtime="20210408 19:16:46.910"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:16:46.963" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:16:46.962" endtime="20210408 19:16:46.963"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:16:47.014" level="INFO">${Arg_User_Input} = </msg>
<status status="PASS" starttime="20210408 19:16:47.014" endtime="20210408 19:16:47.014"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:16:47.066" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:16:47.065" endtime="20210408 19:16:47.066"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:16:47.118" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:16:47.117" endtime="20210408 19:16:47.118"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:16:47.168" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:16:47.168" endtime="20210408 19:16:47.169"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:16:47.221" endtime="20210408 19:16:47.222"></status>
</kw>
<msg timestamp="20210408 19:16:47.222" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:16:47.219" endtime="20210408 19:16:47.222"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:46.806" endtime="20210408 19:16:47.222"></status>
</kw>
<msg timestamp="20210408 19:16:47.223" level="INFO">${Extracted_Argument_Value} = </msg>
<status status="PASS" starttime="20210408 19:16:46.703" endtime="20210408 19:16:47.223"></status>
</kw>
<msg timestamp="20210408 19:16:47.223" level="INFO">${RateFormulaUsage} = </msg>
<status status="PASS" starttime="20210408 19:16:46.596" endtime="20210408 19:16:47.223"></status>
</kw>
<kw name="Mx LoanIQ Activate" library="LoanIQ">
<doc>|Usage|</doc>
<arguments>
<arg>${LIQ_FacilityPricing_OngoingFeeInterest_Window}</arg>
</arguments>
<msg timestamp="20210408 19:16:48.569" level="INFO">Object = 'JavaWindow("title:=Facility.*Pricing")' is activated</msg>
<status status="PASS" starttime="20210408 19:16:47.287" endtime="20210408 19:16:48.569"></status>
</kw>
<kw name="Validate Interest Pricing Window for Add" library="Facility_Notebook">
<doc>This keyword validates if a previously added item is existing in the Facility Interest Pricing window, and if the "Option Condition" window exists.
@author: bernchua</doc>
<assign>
<var>${AddStatus}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>JavaWindow("title:=Facility.*Pricing").JavaTree("items count:=2")</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<assign>
<var>${JavaTree_ValueExist}</var>
</assign>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>JavaWindow("title:=Facility.*Pricing").JavaTree("items count:=2")</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:16:48.802" level="INFO">Locator = 'JavaWindow("title:=Facility.*Pricing").JavaTree("items count:=2")' exists.</msg>
<status status="PASS" starttime="20210408 19:16:48.694" endtime="20210408 19:16:48.803"></status>
</kw>
<msg timestamp="20210408 19:16:48.803" level="INFO">${JavaTree_ValueExist} = True</msg>
<status status="PASS" starttime="20210408 19:16:48.693" endtime="20210408 19:16:48.804"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Validate if Option Condition Window Exist</arg>
</arguments>
<assign>
<var>${OptionCondition_WindowExists}</var>
</assign>
<kw name="Validate if Option Condition Window Exist" library="GenericKeywords">
<doc>This keyword checks if the Option Condition window exists.
@author: bernchua</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_FacilityPricing_Interest_OptionCondition_Window}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_FacilityPricing_Interest_OptionCondition_Window}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:16:48.999" level="INFO">Locator = 'JavaWindow("title:=Option Condition")' exists.</msg>
<status status="PASS" starttime="20210408 19:16:48.953" endtime="20210408 19:16:48.999"></status>
</kw>
<msg timestamp="20210408 19:16:48.999" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20210408 19:16:48.950" endtime="20210408 19:16:49.000"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<msg timestamp="20210408 19:16:49.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210408 19:16:49.066" endtime="20210408 19:16:49.116"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:48.876" endtime="20210408 19:16:49.117"></status>
</kw>
<msg timestamp="20210408 19:16:49.117" level="INFO">${OptionCondition_WindowExists} = True</msg>
<status status="PASS" starttime="20210408 19:16:48.872" endtime="20210408 19:16:49.117"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>${JavaTree_ValueExist} == False and ${OptionCondition_WindowExists} == False</arg>
<arg>Initial Add</arg>
</arguments>
<status status="PASS" starttime="20210408 19:16:49.168" endtime="20210408 19:16:49.168"></status>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>${JavaTree_ValueExist} == True and ${OptionCondition_WindowExists} == True</arg>
<arg>Next Add</arg>
</arguments>
<msg timestamp="20210408 19:16:49.219" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210408 19:16:49.219" endtime="20210408 19:16:49.267"></status>
</kw>
<msg timestamp="20210408 19:16:49.267" level="INFO">${AddStatus} = Next Add</msg>
<status status="PASS" starttime="20210408 19:16:48.636" endtime="20210408 19:16:49.267"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${AddStatus}</arg>
<arg>Initial Add</arg>
</arguments>
<assign>
<var>${InitialAdd}</var>
</assign>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${AddStatus}</arg>
<arg>Initial Add</arg>
</arguments>
<msg timestamp="20210408 19:16:49.325" level="FAIL">Next Add != Initial Add</msg>
<status status="FAIL" starttime="20210408 19:16:49.324" endtime="20210408 19:16:49.375"></status>
</kw>
<msg timestamp="20210408 19:16:49.375" level="INFO">${InitialAdd} = False</msg>
<status status="PASS" starttime="20210408 19:16:49.322" endtime="20210408 19:16:49.375"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${AddStatus}</arg>
<arg>Next Add</arg>
</arguments>
<assign>
<var>${NextAdd}</var>
</assign>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${AddStatus}</arg>
<arg>Next Add</arg>
</arguments>
<status status="PASS" starttime="20210408 19:16:49.426" endtime="20210408 19:16:49.426"></status>
</kw>
<msg timestamp="20210408 19:16:49.427" level="INFO">${NextAdd} = True</msg>
<status status="PASS" starttime="20210408 19:16:49.424" endtime="20210408 19:16:49.427"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${AddStatus}</arg>
<arg>New Add From Pricing</arg>
</arguments>
<assign>
<var>${NewAddFromPricing}</var>
</assign>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${AddStatus}</arg>
<arg>New Add From Pricing</arg>
</arguments>
<msg timestamp="20210408 19:16:49.478" level="FAIL">Next Add != New Add From Pricing</msg>
<status status="FAIL" starttime="20210408 19:16:49.478" endtime="20210408 19:16:49.527"></status>
</kw>
<msg timestamp="20210408 19:16:49.527" level="INFO">${NewAddFromPricing} = False</msg>
<status status="PASS" starttime="20210408 19:16:49.476" endtime="20210408 19:16:49.528"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${InitialAdd} == True or ${NewAddFromPricing} == True</arg>
<arg>Add Item to Facility Ongoing Fee or Interest</arg>
<arg>${Interest_Category}</arg>
<arg>${Interest_OptionName}</arg>
<arg>ELSE IF</arg>
<arg>${NextAdd} == True</arg>
<arg>mx LoanIQ activate</arg>
<arg>${LIQ_FacilityPricing_Interest_OptionCondition_Window}</arg>
</arguments>
<kw name="Mx LoanIQ Activate" library="LoanIQ">
<doc>|Usage|</doc>
<arguments>
<arg>${LIQ_FacilityPricing_Interest_OptionCondition_Window}</arg>
</arguments>
<msg timestamp="20210408 19:16:50.933" level="INFO">Object = 'JavaWindow("title:=Option Condition")' is activated</msg>
<status status="PASS" starttime="20210408 19:16:49.589" endtime="20210408 19:16:50.933"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:49.587" endtime="20210408 19:16:50.934"></status>
</kw>
<kw name="Set Option Condition Details" library="GenericKeywords">
<doc>Sets the details in the Option Condition window.
@author: bernchua DDMMMYYYY - initial create
@update: jloretiz 11FEB2021 - added condition for empty data</doc>
<arguments>
<arg>${Interest_OptionName}</arg>
<arg>${Interest_RateBasis}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Interest_OptionName}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Select Combo Box Value</arg>
<arg>${LIQ_FacilityPricing_Interest_OptionCondition_OptionName_Combobox}</arg>
<arg>${Interest_OptionName}</arg>
</arguments>
<kw name="Mx LoanIQ Select Combo Box Value" library="LoanIQ">
<doc>| Usage |
Used to select data in JavaList</doc>
<arguments>
<arg>${LIQ_FacilityPricing_Interest_OptionCondition_OptionName_Combobox}</arg>
<arg>${Interest_OptionName}</arg>
</arguments>
<msg timestamp="20210408 19:16:51.138" level="INFO">Selected value = 'SOFR Daily Compounding W OPS Not Overridable' from Combo box object = 'JavaWindow("title:=Option Condition").JavaList("attached text:=Option Name:")'.</msg>
<status status="PASS" starttime="20210408 19:16:51.045" endtime="20210408 19:16:51.138"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:51.043" endtime="20210408 19:16:51.139"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Interest_RateBasis}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Select Combo Box Value</arg>
<arg>${LIQ_FacilityPricing_Interest_OptionCondition_RateBasis_Combobox}</arg>
<arg>${Interest_RateBasis}</arg>
</arguments>
<kw name="Mx LoanIQ Select Combo Box Value" library="LoanIQ">
<doc>| Usage |
Used to select data in JavaList</doc>
<arguments>
<arg>${LIQ_FacilityPricing_Interest_OptionCondition_RateBasis_Combobox}</arg>
<arg>${Interest_RateBasis}</arg>
</arguments>
<msg timestamp="20210408 19:16:51.295" level="INFO">Selected value = 'Actual/360' from Combo box object = 'JavaWindow("title:=Option Condition").JavaList("attached text:=Rate Basis:")'.</msg>
<status status="PASS" starttime="20210408 19:16:51.204" endtime="20210408 19:16:51.295"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:51.202" endtime="20210408 19:16:51.295"></status>
</kw>
<kw name="Validate Loan IQ Details" library="GenericKeywords">
<doc>This keyword validates the displayed Loan IQ details in the application vs the data in excel
@author: jcdelacruz/ghabal
@update: bernchua Added property 'value' in Mx LoanIQ Get Data keyword.
@update: jdelacru 13DEC2019 - Changed the argument in getting value for UI</doc>
<arguments>
<arg>${Interest_OptionName}</arg>
<arg>${LIQ_FacilityPricing_Interest_OptionCondition_OptionName_Combobox}</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Get Data</arg>
<arg>${Value_fromUI}</arg>
<arg>value%Value_fromUI</arg>
</arguments>
<assign>
<var>${Value_fromUI}</var>
</assign>
<kw name="Mx LoanIQ Get Data" library="LoanIQ">
<doc>| Usage |
Used to returns the text of object identified by `locator'</doc>
<arguments>
<arg>${Value_fromUI}</arg>
<arg>value%Value_fromUI</arg>
</arguments>
<msg timestamp="20210408 19:16:51.455" level="INFO">Fetching value from object: JavaWindow("title:=Option Condition").JavaList("attached text:=Option Name:") 
 Value = : SOFR Daily Compounding W OPS Not Overridable</msg>
<msg timestamp="20210408 19:16:51.456" level="INFO">${Value_fromUI} = SOFR Daily Compounding W OPS Not Overridable</msg>
<status status="PASS" starttime="20210408 19:16:51.404" endtime="20210408 19:16:51.456"></status>
</kw>
<msg timestamp="20210408 19:16:51.456" level="INFO">${Value_fromUI} = SOFR Daily Compounding W OPS Not Overridable</msg>
<status status="PASS" starttime="20210408 19:16:51.402" endtime="20210408 19:16:51.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Value_fromExcel} - This is the data retrieved from Excel Sheet</arg>
</arguments>
<msg timestamp="20210408 19:16:51.520" level="INFO">SOFR Daily Compounding W OPS Not Overridable - This is the data retrieved from Excel Sheet</msg>
<status status="PASS" starttime="20210408 19:16:51.520" endtime="20210408 19:16:51.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Value_fromUI} - This is the data displayed in the UI/application</arg>
</arguments>
<msg timestamp="20210408 19:16:51.571" level="INFO">SOFR Daily Compounding W OPS Not Overridable - This is the data displayed in the UI/application</msg>
<status status="PASS" starttime="20210408 19:16:51.570" endtime="20210408 19:16:51.571"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:16:51.624" endtime="20210408 19:16:51.624"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:51.622" endtime="20210408 19:16:51.624"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Should Be Equal</arg>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:16:51.677" endtime="20210408 19:16:51.677"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:51.675" endtime="20210408 19:16:51.677"></status>
</kw>
<msg timestamp="20210408 19:16:51.677" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:16:51.674" endtime="20210408 19:16:51.678"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>"${Value_fromExcel}" - data retrieved from Excel Sheet MATCHES "${Value_fromUI}" - the data displayed in the UI/application</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>"${Value_fromExcel}" - data retrieved from Excel Sheet DOES NOT MATCH "${Value_fromUI}" - the data displayed in the UI/application</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"${Value_fromExcel}" - data retrieved from Excel Sheet MATCHES "${Value_fromUI}" - the data displayed in the UI/application</arg>
</arguments>
<msg timestamp="20210408 19:16:51.730" level="INFO">"SOFR Daily Compounding W OPS Not Overridable" - data retrieved from Excel Sheet MATCHES "SOFR Daily Compounding W OPS Not Overridable" - the data displayed in the UI/application</msg>
<status status="PASS" starttime="20210408 19:16:51.729" endtime="20210408 19:16:51.730"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:51.727" endtime="20210408 19:16:51.730"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:51.351" endtime="20210408 19:16:51.731"></status>
</kw>
<kw name="Validate Loan IQ Details" library="GenericKeywords">
<doc>This keyword validates the displayed Loan IQ details in the application vs the data in excel
@author: jcdelacruz/ghabal
@update: bernchua Added property 'value' in Mx LoanIQ Get Data keyword.
@update: jdelacru 13DEC2019 - Changed the argument in getting value for UI</doc>
<arguments>
<arg>${Interest_RateBasis}</arg>
<arg>${LIQ_FacilityPricing_Interest_OptionCondition_RateBasis_Combobox}</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Get Data</arg>
<arg>${Value_fromUI}</arg>
<arg>value%Value_fromUI</arg>
</arguments>
<assign>
<var>${Value_fromUI}</var>
</assign>
<kw name="Mx LoanIQ Get Data" library="LoanIQ">
<doc>| Usage |
Used to returns the text of object identified by `locator'</doc>
<arguments>
<arg>${Value_fromUI}</arg>
<arg>value%Value_fromUI</arg>
</arguments>
<msg timestamp="20210408 19:16:52.008" level="INFO">Fetching value from object: JavaWindow("title:=Option Condition").JavaList("attached text:=Rate Basis:") 
 Value = : Actual/360</msg>
<msg timestamp="20210408 19:16:52.008" level="INFO">${Value_fromUI} = Actual/360</msg>
<status status="PASS" starttime="20210408 19:16:51.939" endtime="20210408 19:16:52.008"></status>
</kw>
<msg timestamp="20210408 19:16:52.009" level="INFO">${Value_fromUI} = Actual/360</msg>
<status status="PASS" starttime="20210408 19:16:51.938" endtime="20210408 19:16:52.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Value_fromExcel} - This is the data retrieved from Excel Sheet</arg>
</arguments>
<msg timestamp="20210408 19:16:52.062" level="INFO">Actual/360 - This is the data retrieved from Excel Sheet</msg>
<status status="PASS" starttime="20210408 19:16:52.061" endtime="20210408 19:16:52.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Value_fromUI} - This is the data displayed in the UI/application</arg>
</arguments>
<msg timestamp="20210408 19:16:52.123" level="INFO">Actual/360 - This is the data displayed in the UI/application</msg>
<status status="PASS" starttime="20210408 19:16:52.123" endtime="20210408 19:16:52.123"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:16:52.176" endtime="20210408 19:16:52.177"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:52.175" endtime="20210408 19:16:52.177"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Should Be Equal</arg>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${Value_fromUI}</arg>
<arg>${Value_fromExcel}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:16:52.230" endtime="20210408 19:16:52.230"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:52.228" endtime="20210408 19:16:52.230"></status>
</kw>
<msg timestamp="20210408 19:16:52.230" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20210408 19:16:52.227" endtime="20210408 19:16:52.230"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='True'</arg>
<arg>Log</arg>
<arg>"${Value_fromExcel}" - data retrieved from Excel Sheet MATCHES "${Value_fromUI}" - the data displayed in the UI/application</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>"${Value_fromExcel}" - data retrieved from Excel Sheet DOES NOT MATCH "${Value_fromUI}" - the data displayed in the UI/application</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"${Value_fromExcel}" - data retrieved from Excel Sheet MATCHES "${Value_fromUI}" - the data displayed in the UI/application</arg>
</arguments>
<msg timestamp="20210408 19:16:52.284" level="INFO">"Actual/360" - data retrieved from Excel Sheet MATCHES "Actual/360" - the data displayed in the UI/application</msg>
<status status="PASS" starttime="20210408 19:16:52.283" endtime="20210408 19:16:52.284"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:52.282" endtime="20210408 19:16:52.284"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:51.782" endtime="20210408 19:16:52.284"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_FacilityPricing_Interest_OptionCondition_OK_Button}</arg>
</arguments>
<msg timestamp="20210408 19:16:53.211" level="INFO">JavaWindow("title:=Option Condition").JavaButton("attached text:=OK") is clicked.</msg>
<status status="PASS" starttime="20210408 19:16:52.335" endtime="20210408 19:16:53.211"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:50.987" endtime="20210408 19:16:53.212"></status>
</kw>
<kw name="Set Formula Category For Interest" library="Facility_Notebook">
<doc>Sets the details in the Formula Category for the Interest Pricing under the Facility Notebook's Pricing tab.
@author: bernchua DDMMMYYYY - initial create
@update: bernchua DDMMMYYYY - Added new arguments 'RateFormula', 'RateFormulaUsage' with default values 
@update: sahalder DDMMMYYYY - Added code to handle warning windows
@update: hstone 22OCT2020 - Replaced 'Mx LoanIQ Select Or DoubleClick In Javatree' with 'Mx LoanIQ Select Or Doubleclick In Tree By Text'
@update: jloretiz 11FEB2021 - added condition for empty data
@update: mangeles 26FEB2021 - updated logical operator of Formula Category Spread Value from '==' to '!='</doc>
<arguments>
<arg>${Interest_SpreadType}</arg>
<arg>${Interest_SpreadValue}</arg>
<arg>${Interest_BaseRateCode}</arg>
<arg>${RateFormula}</arg>
<arg>${RateFormulaUsage}</arg>
</arguments>
<kw name="Mx LoanIQ Set" library="LoanIQ">
<doc>|Usage|</doc>
<arguments>
<arg>JavaWindow("title:=Formula Category").JavaRadioButton("attached text:=${FormulaCategory_SpreadType}")</arg>
<arg>${ON}</arg>
</arguments>
<msg timestamp="20210408 19:16:53.510" level="INFO">Object = 'JavaWindow("title:=Formula Category").JavaRadioButton("attached text:=Percent")' is set.</msg>
<status status="PASS" starttime="20210408 19:16:53.372" endtime="20210408 19:16:53.510"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${FormulaCategory_SpreadValue}'!='${EMPTY}'</arg>
<arg>Mx LoanIQ Enter</arg>
<arg>${LIQ_FormulaCategory_Spread_Textfield}</arg>
<arg>${FormulaCategory_SpreadValue}</arg>
</arguments>
<kw name="Mx LoanIQ Enter" library="LoanIQ">
<doc>| Usage |
To enter the data to the element specified by 'locator'.</doc>
<arguments>
<arg>${LIQ_FormulaCategory_Spread_Textfield}</arg>
<arg>${FormulaCategory_SpreadValue}</arg>
</arguments>
<msg timestamp="20210408 19:16:53.805" level="INFO">Input= 2.5 is entered in element= JavaWindow("title:=Formula Category").JavaTab("tagname:=X").JavaEdit("tagname:=X")</msg>
<status status="PASS" starttime="20210408 19:16:53.575" endtime="20210408 19:16:53.805"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:53.572" endtime="20210408 19:16:53.805"></status>
</kw>
<kw name="Mx LoanIQ Get Data" library="LoanIQ">
<doc>| Usage |
Used to returns the text of object identified by `locator'</doc>
<arguments>
<arg>${LIQ_FormulaCategory_FormulaText_Textfield}</arg>
<arg>value%code</arg>
</arguments>
<assign>
<var>${Get_InterestBaseRateCode}</var>
</assign>
<msg timestamp="20210408 19:16:53.957" level="INFO">Fetching value from object: JavaWindow("title:=Formula Category").JavaObject("text:=Type in Formula Text").JavaEdit("tagname:=Text") 
 Value = : SOFR</msg>
<msg timestamp="20210408 19:16:53.958" level="INFO">${code} = SOFR</msg>
<msg timestamp="20210408 19:16:53.958" level="INFO">${Get_InterestBaseRateCode} = SOFR</msg>
<status status="PASS" starttime="20210408 19:16:53.860" endtime="20210408 19:16:53.958"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Get_InterestBaseRateCode}'=='${EMPTY}'</arg>
<arg>Mx LoanIQ Doubleclick</arg>
<arg>${LIQ_FormulaCategory_Tree}</arg>
<arg>${BaseRateCode}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:16:54.014" endtime="20210408 19:16:54.015"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${RateFormula}'!='${EMPTY}'</arg>
<arg>Run Keywords</arg>
<arg>Mx LoanIQ Enter</arg>
<arg>${LIQ_FormulaCategory_PercentOfRateFormula_Textfield}</arg>
<arg>${RateFormula}</arg>
<arg>AND</arg>
<arg>Mx LoanIQ Select Combo Box Value</arg>
<arg>${LIQ_FormulaCategory_PercentOfRateFormulaUsage_List}</arg>
<arg>${RateFormulaUsage}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:16:54.067" endtime="20210408 19:16:54.068"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_FormulaCategory_OK_Button}</arg>
</arguments>
<msg timestamp="20210408 19:16:54.504" level="INFO">JavaWindow("title:=Formula Category").JavaButton("attached text:=OK") is clicked.</msg>
<status status="PASS" starttime="20210408 19:16:54.119" endtime="20210408 19:16:54.505"></status>
</kw>
<kw name="Mx LoanIQ Click Element If Present" library="LoanIQ">
<doc>| Usage |
Click on element identified by `locator` only if that element is present.
It passes if the element is not present.</doc>
<arguments>
<arg>${LIQ_Warning_Yes_Button}</arg>
</arguments>
<msg timestamp="20210408 19:17:03.044" level="INFO">JavaWindow("title:=Warning.*", "displayed:=1").JavaButton("label:=Yes"): is clicked, or skipped if not present.</msg>
<status status="PASS" starttime="20210408 19:16:54.625" endtime="20210408 19:17:03.045"></status>
</kw>
<kw name="Mx LoanIQ Click Element If Present" library="LoanIQ">
<doc>| Usage |
Click on element identified by `locator` only if that element is present.
It passes if the element is not present.</doc>
<arguments>
<arg>${LIQ_PleaseConfirm_Yes_Button}</arg>
</arguments>
<msg timestamp="20210408 19:17:11.581" level="INFO">JavaWindow("title:=Please confirm","displayed:=1").JavaButton("label:=Yes"): is clicked, or skipped if not present.</msg>
<status status="PASS" starttime="20210408 19:17:03.116" endtime="20210408 19:17:11.582"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:53.301" endtime="20210408 19:17:11.582"></status>
</kw>
<kw name="Validate Facility Pricing Items" library="Facility_Notebook">
<doc>This keyword validates the added Ongoing Fee or Interest Pricing items in the Facility Notebook.</doc>
<arguments>
<arg>${Interest_OptionName}</arg>
</arguments>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sItemToBeValidated}</arg>
</arguments>
<assign>
<var>${ItemToBeValidated}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:17:11.853" endtime="20210408 19:17:11.854"></status>
</kw>
<msg timestamp="20210408 19:17:11.854" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:17:11.852" endtime="20210408 19:17:11.854"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:17:12.063" level="INFO">${List_Argument_Excel_Value} = ['SOFR Daily Compounding W OPS Not Overridable']</msg>
<status status="PASS" starttime="20210408 19:17:12.062" endtime="20210408 19:17:12.063"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:17:12.113" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:17:12.114" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:17:12.113" endtime="20210408 19:17:12.114"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:17:12.166" level="INFO">${Arg_User_Input} = SOFR DAILY COMPOUNDING W OPS NOT OVERRIDABLE</msg>
<status status="PASS" starttime="20210408 19:17:12.166" endtime="20210408 19:17:12.167"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:17:12.219" level="INFO">${Arg_User_Input} = SOFR DAILY COMPOUNDING W OPS NOT OVERRIDABLE</msg>
<status status="PASS" starttime="20210408 19:17:12.218" endtime="20210408 19:17:12.219"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:17:12.271" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:17:12.270" endtime="20210408 19:17:12.271"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:17:12.330" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:17:12.329" endtime="20210408 19:17:12.330"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:17:12.383" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:17:12.382" endtime="20210408 19:17:12.383"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:17:12.437" endtime="20210408 19:17:12.438"></status>
</kw>
<msg timestamp="20210408 19:17:12.438" level="INFO">${Extracted_Argument_Value} = SOFR Daily Compounding W OPS Not Overridable</msg>
<status status="PASS" starttime="20210408 19:17:12.435" endtime="20210408 19:17:12.438"></status>
</kw>
<status status="PASS" starttime="20210408 19:17:12.009" endtime="20210408 19:17:12.438"></status>
</kw>
<msg timestamp="20210408 19:17:12.438" level="INFO">${Extracted_Argument_Value} = SOFR Daily Compounding W OPS Not Overridable</msg>
<status status="PASS" starttime="20210408 19:17:11.905" endtime="20210408 19:17:12.438"></status>
</kw>
<msg timestamp="20210408 19:17:12.439" level="INFO">${ItemToBeValidated} = SOFR Daily Compounding W OPS Not Overridable</msg>
<status status="PASS" starttime="20210408 19:17:11.798" endtime="20210408 19:17:12.439"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sSpreadType}</arg>
</arguments>
<assign>
<var>${SpreadType}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:17:12.654" endtime="20210408 19:17:12.654"></status>
</kw>
<msg timestamp="20210408 19:17:12.656" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:17:12.654" endtime="20210408 19:17:12.656"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:17:12.863" level="INFO">${List_Argument_Excel_Value} = ['null']</msg>
<status status="PASS" starttime="20210408 19:17:12.862" endtime="20210408 19:17:12.863"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:17:12.913" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:17:12.914" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:17:12.913" endtime="20210408 19:17:12.914"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:17:13.069" level="INFO">${Arg_User_Input} = NULL</msg>
<status status="PASS" starttime="20210408 19:17:13.068" endtime="20210408 19:17:13.069"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:17:13.121" level="INFO">${Arg_User_Input} = NULL</msg>
<status status="PASS" starttime="20210408 19:17:13.120" endtime="20210408 19:17:13.121"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:17:13.174" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:17:13.173" endtime="20210408 19:17:13.174"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:17:13.225" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:17:13.224" endtime="20210408 19:17:13.225"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:17:13.280" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:17:13.280" endtime="20210408 19:17:13.280"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:17:13.342" endtime="20210408 19:17:13.342"></status>
</kw>
<msg timestamp="20210408 19:17:13.342" level="INFO">${Extracted_Argument_Value} = null</msg>
<status status="PASS" starttime="20210408 19:17:13.340" endtime="20210408 19:17:13.343"></status>
</kw>
<status status="PASS" starttime="20210408 19:17:12.808" endtime="20210408 19:17:13.343"></status>
</kw>
<msg timestamp="20210408 19:17:13.343" level="INFO">${Extracted_Argument_Value} = null</msg>
<status status="PASS" starttime="20210408 19:17:12.705" endtime="20210408 19:17:13.343"></status>
</kw>
<msg timestamp="20210408 19:17:13.343" level="INFO">${SpreadType} = null</msg>
<status status="PASS" starttime="20210408 19:17:12.594" endtime="20210408 19:17:13.344"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sBaseRateCode}</arg>
</arguments>
<assign>
<var>${BaseRateCode}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:17:13.555" endtime="20210408 19:17:13.556"></status>
</kw>
<msg timestamp="20210408 19:17:13.556" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:17:13.554" endtime="20210408 19:17:13.556"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:17:13.763" level="INFO">${List_Argument_Excel_Value} = ['null']</msg>
<status status="PASS" starttime="20210408 19:17:13.762" endtime="20210408 19:17:13.763"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:17:13.813" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:17:13.813" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:17:13.813" endtime="20210408 19:17:13.813"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:17:13.869" level="INFO">${Arg_User_Input} = NULL</msg>
<status status="PASS" starttime="20210408 19:17:13.868" endtime="20210408 19:17:13.869"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:17:13.918" level="INFO">${Arg_User_Input} = NULL</msg>
<status status="PASS" starttime="20210408 19:17:13.918" endtime="20210408 19:17:13.918"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:17:13.972" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:17:13.972" endtime="20210408 19:17:13.973"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:17:14.029" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:17:14.028" endtime="20210408 19:17:14.029"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:17:14.085" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:17:14.085" endtime="20210408 19:17:14.085"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:17:14.137" endtime="20210408 19:17:14.137"></status>
</kw>
<msg timestamp="20210408 19:17:14.137" level="INFO">${Extracted_Argument_Value} = null</msg>
<status status="PASS" starttime="20210408 19:17:14.135" endtime="20210408 19:17:14.138"></status>
</kw>
<status status="PASS" starttime="20210408 19:17:13.710" endtime="20210408 19:17:14.138"></status>
</kw>
<msg timestamp="20210408 19:17:14.138" level="INFO">${Extracted_Argument_Value} = null</msg>
<status status="PASS" starttime="20210408 19:17:13.609" endtime="20210408 19:17:14.138"></status>
</kw>
<msg timestamp="20210408 19:17:14.139" level="INFO">${BaseRateCode} = null</msg>
<status status="PASS" starttime="20210408 19:17:13.502" endtime="20210408 19:17:14.139"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Not Be Equal</arg>
<arg>${SpreadType}</arg>
<arg>null</arg>
</arguments>
<assign>
<var>${ValidateForSpread}</var>
</assign>
<kw name="Should Not Be Equal" library="BuiltIn">
<doc>Fails if the given objects are equal.</doc>
<arguments>
<arg>${SpreadType}</arg>
<arg>null</arg>
</arguments>
<msg timestamp="20210408 19:17:14.190" level="FAIL">null == null</msg>
<status status="FAIL" starttime="20210408 19:17:14.189" endtime="20210408 19:17:14.239"></status>
</kw>
<msg timestamp="20210408 19:17:14.239" level="INFO">${ValidateForSpread} = False</msg>
<status status="PASS" starttime="20210408 19:17:14.188" endtime="20210408 19:17:14.240"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Not Be Equal</arg>
<arg>${BaseRateCode}</arg>
<arg>null</arg>
</arguments>
<assign>
<var>${ValidateForInterest}</var>
</assign>
<kw name="Should Not Be Equal" library="BuiltIn">
<doc>Fails if the given objects are equal.</doc>
<arguments>
<arg>${BaseRateCode}</arg>
<arg>null</arg>
</arguments>
<msg timestamp="20210408 19:17:14.295" level="FAIL">null == null</msg>
<status status="FAIL" starttime="20210408 19:17:14.294" endtime="20210408 19:17:14.343"></status>
</kw>
<msg timestamp="20210408 19:17:14.344" level="INFO">${ValidateForInterest} = False</msg>
<status status="PASS" starttime="20210408 19:17:14.293" endtime="20210408 19:17:14.344"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${ValidateForSpread}==False</arg>
<arg>Run Keyword</arg>
<arg>Validate Facility Pricing First Item</arg>
<arg>${ItemToBeValidated}</arg>
<arg>ELSE IF</arg>
<arg>${ValidateForSpread}==True and ${ValidateForInterest}==False</arg>
<arg>Run Keyword</arg>
<arg>Validate Facility Pricing Ongoing Fee Item Spread</arg>
<arg>${ItemToBeValidated}</arg>
<arg>${SpreadType}</arg>
<arg>ELSE IF</arg>
<arg>${ValidateForSpread}==True and ${ValidateForInterest}==True</arg>
<arg>Run Keyword</arg>
<arg>Validate Facility Pricing Interest Item Spread</arg>
<arg>${ItemToBeValidated}</arg>
<arg>${SpreadType}</arg>
<arg>${BaseRateCode}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Validate Facility Pricing First Item</arg>
<arg>${ItemToBeValidated}</arg>
</arguments>
<kw name="Validate Facility Pricing First Item" library="Facility_Notebook">
<doc>This validates the actual name of the Fee or Interest.
@author: bernchua</doc>
<arguments>
<arg>${ItemToBeValidated}</arg>
</arguments>
<kw name="Regexp Escape" library="BuiltIn">
<doc>Returns each argument string escaped for use as a regular expression.</doc>
<arguments>
<arg>${ItemToBeValidated}</arg>
</arguments>
<assign>
<var>${ValidatedItem}</var>
</assign>
<msg timestamp="20210408 19:17:14.454" level="INFO">${ValidatedItem} = SOFR\ Daily\ Compounding\ W\ OPS\ Not\ Overridable</msg>
<status status="PASS" starttime="20210408 19:17:14.454" endtime="20210408 19:17:14.454"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_FacilityPricing_OngoingFeeInterest_Window}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<assign>
<var>${FacilityPricingNotebook_Exist}</var>
</assign>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_FacilityPricing_OngoingFeeInterest_Window}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:17:14.556" level="INFO">Locator = 'JavaWindow("title:=Facility.*Pricing")' exists.</msg>
<status status="PASS" starttime="20210408 19:17:14.512" endtime="20210408 19:17:14.557"></status>
</kw>
<msg timestamp="20210408 19:17:14.557" level="INFO">${FacilityPricingNotebook_Exist} = True</msg>
<status status="PASS" starttime="20210408 19:17:14.510" endtime="20210408 19:17:14.557"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FacilityPricingNotebook_Exist}==True</arg>
<arg>Run Keyword And Return Status</arg>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>JavaWindow("title:=Facility.*Pricing").JavaTree("developer name:=.*${ValidatedItem}.*")</arg>
<arg>VerificationData="Yes"</arg>
<arg>ELSE</arg>
<arg>Run Keyword And Return Status</arg>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>JavaWindow("title:=Facility -.*").JavaTree("developer name:=.*${ValidatedItem}.*")</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<assign>
<var>${ItemExist}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>JavaWindow("title:=Facility.*Pricing").JavaTree("developer name:=.*${ValidatedItem}.*")</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>JavaWindow("title:=Facility.*Pricing").JavaTree("developer name:=.*${ValidatedItem}.*")</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:17:14.733" level="INFO">Locator = 'JavaWindow("title:=Facility.*Pricing").JavaTree("developer name:=.*SOFR\ Daily\ Compounding\ W\ OPS\ Not\ Overridable.*")' exists.</msg>
<status status="PASS" starttime="20210408 19:17:14.624" endtime="20210408 19:17:14.733"></status>
</kw>
<status status="PASS" starttime="20210408 19:17:14.622" endtime="20210408 19:17:14.733"></status>
</kw>
<msg timestamp="20210408 19:17:14.734" level="INFO">${ItemExist} = True</msg>
<status status="PASS" starttime="20210408 19:17:14.620" endtime="20210408 19:17:14.734"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${ItemExist}==True</arg>
<arg>Log</arg>
<arg>${ItemToBeValidated} is listed.</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${ItemToBeValidated} is listed.</arg>
</arguments>
<msg timestamp="20210408 19:17:14.790" level="INFO">SOFR Daily Compounding W OPS Not Overridable is listed.</msg>
<status status="PASS" starttime="20210408 19:17:14.790" endtime="20210408 19:17:14.790"></status>
</kw>
<status status="PASS" starttime="20210408 19:17:14.788" endtime="20210408 19:17:14.791"></status>
</kw>
<status status="PASS" starttime="20210408 19:17:14.398" endtime="20210408 19:17:14.791"></status>
</kw>
<status status="PASS" starttime="20210408 19:17:14.397" endtime="20210408 19:17:14.791"></status>
</kw>
<status status="PASS" starttime="20210408 19:17:14.395" endtime="20210408 19:17:14.791"></status>
</kw>
<kw name="Take Screenshot with text into Test Document" library="ReportMaker_Keywords">
<doc>This keyword is used to add screenshot with image filename as description into test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Facility Notebook - Facility Pricing Items</arg>
</arguments>
<kw name="Take Screenshot" library="Screenshot">
<doc>Takes a screenshot in JPEG format and embeds it into the log file.</doc>
<arguments>
<arg>${imageName}</arg>
</arguments>
<msg timestamp="20210408 19:17:14.989" level="INFO" html="yes">&lt;a href="Results/LoanIQ/TC02%20-%20Validate%20ARR%20Interest%20Pricing%20Option%20at%20Facility%20Level%20-%20Term___2021-04-08%2019-11-32.788/Facility%20Notebook%20-%20Facility%20Pricing%20Items_3.jpg"&gt;&lt;img src="Results/LoanIQ/TC02%20-%20Validate%20ARR%20Interest%20Pricing%20Option%20at%20Facility%20Level%20-%20Term___2021-04-08%2019-11-32.788/Facility%20Notebook%20-%20Facility%20Pricing%20Items_3.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210408 19:17:14.893" endtime="20210408 19:17:14.990"></status>
</kw>
<kw name="Get Latest File" library="ReportMaker">
<arguments>
<arg>${getfilePath}</arg>
</arguments>
<assign>
<var>${imagePath}</var>
</assign>
<msg timestamp="20210408 19:17:15.049" level="INFO">${imagePath} = C:\Git_Evergreen\transform_arr\Results\LoanIQ\TC02 - Validate ARR Interest Pricing Option at Facility Level - Term___2021-04-08 19-11-32.788\Facility Notebook - Facility Pricing Items_3.jpg</msg>
<status status="PASS" starttime="20210408 19:17:15.047" endtime="20210408 19:17:15.049"></status>
</kw>
<kw name="Put Screenshot With Text" library="ReportMaker">
<arguments>
<arg>${imagePath}</arg>
<arg>${imageName}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:17:15.099" endtime="20210408 19:17:15.114"></status>
</kw>
<status status="PASS" starttime="20210408 19:17:14.843" endtime="20210408 19:17:15.114"></status>
</kw>
<status status="PASS" starttime="20210408 19:17:11.638" endtime="20210408 19:17:15.114"></status>
</kw>
<kw name="Validate Facility Pricing Items" library="Facility_Notebook">
<doc>This keyword validates the added Ongoing Fee or Interest Pricing items in the Facility Notebook.</doc>
<arguments>
<arg>${Interest_SpreadValue}</arg>
<arg>${Interest_SpreadType}</arg>
<arg>${Interest_BaseRateCode}</arg>
</arguments>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sItemToBeValidated}</arg>
</arguments>
<assign>
<var>${ItemToBeValidated}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:17:15.373" endtime="20210408 19:17:15.374"></status>
</kw>
<msg timestamp="20210408 19:17:15.374" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:17:15.372" endtime="20210408 19:17:15.374"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:17:15.576" level="INFO">${List_Argument_Excel_Value} = ['2.5']</msg>
<status status="PASS" starttime="20210408 19:17:15.576" endtime="20210408 19:17:15.576"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:17:15.628" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:17:15.628" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:17:15.627" endtime="20210408 19:17:15.628"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:17:15.679" level="INFO">${Arg_User_Input} = 2.5</msg>
<status status="PASS" starttime="20210408 19:17:15.678" endtime="20210408 19:17:15.679"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:17:15.730" level="INFO">${Arg_User_Input} = 2.5</msg>
<status status="PASS" starttime="20210408 19:17:15.729" endtime="20210408 19:17:15.730"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:17:15.782" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:17:15.782" endtime="20210408 19:17:15.782"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:17:15.834" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:17:15.833" endtime="20210408 19:17:15.834"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:17:15.885" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:17:15.884" endtime="20210408 19:17:15.885"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:17:15.937" endtime="20210408 19:17:15.937"></status>
</kw>
<msg timestamp="20210408 19:17:15.937" level="INFO">${Extracted_Argument_Value} = 2.5</msg>
<status status="PASS" starttime="20210408 19:17:15.935" endtime="20210408 19:17:15.937"></status>
</kw>
<status status="PASS" starttime="20210408 19:17:15.523" endtime="20210408 19:17:15.938"></status>
</kw>
<msg timestamp="20210408 19:17:15.938" level="INFO">${Extracted_Argument_Value} = 2.5</msg>
<status status="PASS" starttime="20210408 19:17:15.423" endtime="20210408 19:17:15.938"></status>
</kw>
<msg timestamp="20210408 19:17:15.938" level="INFO">${ItemToBeValidated} = 2.5</msg>
<status status="PASS" starttime="20210408 19:17:15.319" endtime="20210408 19:17:15.938"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sSpreadType}</arg>
</arguments>
<assign>
<var>${SpreadType}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:17:16.144" endtime="20210408 19:17:16.144"></status>
</kw>
<msg timestamp="20210408 19:17:16.144" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:17:16.142" endtime="20210408 19:17:16.144"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:17:16.462" level="INFO">${List_Argument_Excel_Value} = ['Percent']</msg>
<status status="PASS" starttime="20210408 19:17:16.461" endtime="20210408 19:17:16.462"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:17:16.516" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:17:16.516" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:17:16.515" endtime="20210408 19:17:16.516"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:17:16.568" level="INFO">${Arg_User_Input} = PERCENT</msg>
<status status="PASS" starttime="20210408 19:17:16.567" endtime="20210408 19:17:16.568"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:17:16.621" level="INFO">${Arg_User_Input} = PERCENT</msg>
<status status="PASS" starttime="20210408 19:17:16.620" endtime="20210408 19:17:16.621"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:17:16.674" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:17:16.673" endtime="20210408 19:17:16.674"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:17:16.725" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:17:16.724" endtime="20210408 19:17:16.725"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:17:16.778" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:17:16.778" endtime="20210408 19:17:16.778"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:17:16.832" endtime="20210408 19:17:16.832"></status>
</kw>
<msg timestamp="20210408 19:17:16.832" level="INFO">${Extracted_Argument_Value} = Percent</msg>
<status status="PASS" starttime="20210408 19:17:16.830" endtime="20210408 19:17:16.832"></status>
</kw>
<status status="PASS" starttime="20210408 19:17:16.301" endtime="20210408 19:17:16.833"></status>
</kw>
<msg timestamp="20210408 19:17:16.833" level="INFO">${Extracted_Argument_Value} = Percent</msg>
<status status="PASS" starttime="20210408 19:17:16.195" endtime="20210408 19:17:16.833"></status>
</kw>
<msg timestamp="20210408 19:17:16.833" level="INFO">${SpreadType} = Percent</msg>
<status status="PASS" starttime="20210408 19:17:16.090" endtime="20210408 19:17:16.833"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sBaseRateCode}</arg>
</arguments>
<assign>
<var>${BaseRateCode}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:17:17.045" endtime="20210408 19:17:17.046"></status>
</kw>
<msg timestamp="20210408 19:17:17.046" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:17:17.044" endtime="20210408 19:17:17.046"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:17:17.262" level="INFO">${List_Argument_Excel_Value} = ['SOFR']</msg>
<status status="PASS" starttime="20210408 19:17:17.261" endtime="20210408 19:17:17.262"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:17:17.319" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:17:17.319" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:17:17.318" endtime="20210408 19:17:17.319"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:17:17.372" level="INFO">${Arg_User_Input} = SOFR</msg>
<status status="PASS" starttime="20210408 19:17:17.371" endtime="20210408 19:17:17.372"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:17:17.422" level="INFO">${Arg_User_Input} = SOFR</msg>
<status status="PASS" starttime="20210408 19:17:17.422" endtime="20210408 19:17:17.423"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:17:17.475" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:17:17.474" endtime="20210408 19:17:17.475"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:17:17.525" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:17:17.524" endtime="20210408 19:17:17.525"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:17:17.577" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:17:17.576" endtime="20210408 19:17:17.577"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:17:17.632" endtime="20210408 19:17:17.632"></status>
</kw>
<msg timestamp="20210408 19:17:17.633" level="INFO">${Extracted_Argument_Value} = SOFR</msg>
<status status="PASS" starttime="20210408 19:17:17.630" endtime="20210408 19:17:17.633"></status>
</kw>
<status status="PASS" starttime="20210408 19:17:17.206" endtime="20210408 19:17:17.633"></status>
</kw>
<msg timestamp="20210408 19:17:17.633" level="INFO">${Extracted_Argument_Value} = SOFR</msg>
<status status="PASS" starttime="20210408 19:17:17.097" endtime="20210408 19:17:17.633"></status>
</kw>
<msg timestamp="20210408 19:17:17.633" level="INFO">${BaseRateCode} = SOFR</msg>
<status status="PASS" starttime="20210408 19:17:16.989" endtime="20210408 19:17:17.634"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Not Be Equal</arg>
<arg>${SpreadType}</arg>
<arg>null</arg>
</arguments>
<assign>
<var>${ValidateForSpread}</var>
</assign>
<kw name="Should Not Be Equal" library="BuiltIn">
<doc>Fails if the given objects are equal.</doc>
<arguments>
<arg>${SpreadType}</arg>
<arg>null</arg>
</arguments>
<status status="PASS" starttime="20210408 19:17:17.686" endtime="20210408 19:17:17.687"></status>
</kw>
<msg timestamp="20210408 19:17:17.687" level="INFO">${ValidateForSpread} = True</msg>
<status status="PASS" starttime="20210408 19:17:17.685" endtime="20210408 19:17:17.687"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Not Be Equal</arg>
<arg>${BaseRateCode}</arg>
<arg>null</arg>
</arguments>
<assign>
<var>${ValidateForInterest}</var>
</assign>
<kw name="Should Not Be Equal" library="BuiltIn">
<doc>Fails if the given objects are equal.</doc>
<arguments>
<arg>${BaseRateCode}</arg>
<arg>null</arg>
</arguments>
<status status="PASS" starttime="20210408 19:17:17.742" endtime="20210408 19:17:17.743"></status>
</kw>
<msg timestamp="20210408 19:17:17.743" level="INFO">${ValidateForInterest} = True</msg>
<status status="PASS" starttime="20210408 19:17:17.740" endtime="20210408 19:17:17.743"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${ValidateForSpread}==False</arg>
<arg>Run Keyword</arg>
<arg>Validate Facility Pricing First Item</arg>
<arg>${ItemToBeValidated}</arg>
<arg>ELSE IF</arg>
<arg>${ValidateForSpread}==True and ${ValidateForInterest}==False</arg>
<arg>Run Keyword</arg>
<arg>Validate Facility Pricing Ongoing Fee Item Spread</arg>
<arg>${ItemToBeValidated}</arg>
<arg>${SpreadType}</arg>
<arg>ELSE IF</arg>
<arg>${ValidateForSpread}==True and ${ValidateForInterest}==True</arg>
<arg>Run Keyword</arg>
<arg>Validate Facility Pricing Interest Item Spread</arg>
<arg>${ItemToBeValidated}</arg>
<arg>${SpreadType}</arg>
<arg>${BaseRateCode}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Validate Facility Pricing Interest Item Spread</arg>
<arg>${ItemToBeValidated}</arg>
<arg>${SpreadType}</arg>
<arg>${BaseRateCode}</arg>
</arguments>
<kw name="Validate Facility Pricing Interest Item Spread" library="Facility_Notebook">
<doc>This validates the actual Interest amount or percentage.
@author: bernchua</doc>
<arguments>
<arg>${ItemToBeValidated}</arg>
<arg>${SpreadType}</arg>
<arg>${BaseRateCode}</arg>
</arguments>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${SpreadType}</arg>
<arg>Basis Points</arg>
</arguments>
<assign>
<var>${BasisPoints}</var>
</assign>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${SpreadType}</arg>
<arg>Basis Points</arg>
</arguments>
<msg timestamp="20210408 19:17:17.854" level="FAIL">Percent != Basis Points</msg>
<status status="FAIL" starttime="20210408 19:17:17.853" endtime="20210408 19:17:17.902"></status>
</kw>
<msg timestamp="20210408 19:17:17.902" level="INFO">${BasisPoints} = False</msg>
<status status="PASS" starttime="20210408 19:17:17.852" endtime="20210408 19:17:17.902"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${SpreadType}</arg>
<arg>Percent</arg>
</arguments>
<assign>
<var>${Percent}</var>
</assign>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${SpreadType}</arg>
<arg>Percent</arg>
</arguments>
<status status="PASS" starttime="20210408 19:17:17.955" endtime="20210408 19:17:17.955"></status>
</kw>
<msg timestamp="20210408 19:17:17.956" level="INFO">${Percent} = True</msg>
<status status="PASS" starttime="20210408 19:17:17.953" endtime="20210408 19:17:17.956"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${BasisPoints}==True</arg>
<arg>BP</arg>
<arg>${Percent}==True</arg>
<arg>%</arg>
</arguments>
<assign>
<var>${SpreadType}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${Percent}==True</arg>
<arg>%</arg>
</arguments>
<status status="PASS" starttime="20210408 19:17:18.010" endtime="20210408 19:17:18.011"></status>
</kw>
<msg timestamp="20210408 19:17:18.011" level="INFO">${SpreadType} = %</msg>
<status status="PASS" starttime="20210408 19:17:18.009" endtime="20210408 19:17:18.011"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_FacilityPricing_OngoingFeeInterest_Window}</arg>
<arg>Processtimeout=3</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<assign>
<var>${FacilityPricingNotebook_Exist}</var>
</assign>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_FacilityPricing_OngoingFeeInterest_Window}</arg>
<arg>Processtimeout=3</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:17:18.100" level="INFO">Locator = 'JavaWindow("title:=Facility.*Pricing")' exists.</msg>
<status status="PASS" starttime="20210408 19:17:18.064" endtime="20210408 19:17:18.100"></status>
</kw>
<msg timestamp="20210408 19:17:18.100" level="INFO">${FacilityPricingNotebook_Exist} = True</msg>
<status status="PASS" starttime="20210408 19:17:18.062" endtime="20210408 19:17:18.101"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FacilityPricingNotebook_Exist}==True</arg>
<arg>Run Keyword And Return Status</arg>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>JavaWindow("title:=Facility.*Pricing").JavaTree("developer name:=.*${BaseRateCode}.*${SpreadValue}${SpreadType}.*")</arg>
<arg>VerificationData="Yes"</arg>
<arg>ELSE</arg>
<arg>Run Keyword And Return Status</arg>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>JavaWindow("title:=Facility -.*").JavaTree("developer name:=.*${BaseRateCode}.*${SpreadValue}${SpreadType}.*")</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<assign>
<var>${ItemExist}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>JavaWindow("title:=Facility.*Pricing").JavaTree("developer name:=.*${BaseRateCode}.*${SpreadValue}${SpreadType}.*")</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>JavaWindow("title:=Facility.*Pricing").JavaTree("developer name:=.*${BaseRateCode}.*${SpreadValue}${SpreadType}.*")</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:17:18.269" level="INFO">Locator = 'JavaWindow("title:=Facility.*Pricing").JavaTree("developer name:=.*SOFR.*2.5%.*")' exists.</msg>
<status status="PASS" starttime="20210408 19:17:18.162" endtime="20210408 19:17:18.269"></status>
</kw>
<status status="PASS" starttime="20210408 19:17:18.160" endtime="20210408 19:17:18.269"></status>
</kw>
<msg timestamp="20210408 19:17:18.269" level="INFO">${ItemExist} = True</msg>
<status status="PASS" starttime="20210408 19:17:18.158" endtime="20210408 19:17:18.269"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${ItemExist}==True</arg>
<arg>Log</arg>
<arg>${BaseRateCode} + Spread (${SpreadValue}${SpreadType}) X PCT (1) is listed.</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${BaseRateCode} + Spread (${SpreadValue}${SpreadType}) X PCT (1) is listed.</arg>
</arguments>
<msg timestamp="20210408 19:17:18.332" level="INFO">SOFR + Spread (2.5%) X PCT (1) is listed.</msg>
<status status="PASS" starttime="20210408 19:17:18.331" endtime="20210408 19:17:18.332"></status>
</kw>
<status status="PASS" starttime="20210408 19:17:18.330" endtime="20210408 19:17:18.332"></status>
</kw>
<status status="PASS" starttime="20210408 19:17:17.799" endtime="20210408 19:17:18.332"></status>
</kw>
<status status="PASS" starttime="20210408 19:17:17.797" endtime="20210408 19:17:18.332"></status>
</kw>
<status status="PASS" starttime="20210408 19:17:17.795" endtime="20210408 19:17:18.333"></status>
</kw>
<kw name="Take Screenshot with text into Test Document" library="ReportMaker_Keywords">
<doc>This keyword is used to add screenshot with image filename as description into test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Facility Notebook - Facility Pricing Items</arg>
</arguments>
<kw name="Take Screenshot" library="Screenshot">
<doc>Takes a screenshot in JPEG format and embeds it into the log file.</doc>
<arguments>
<arg>${imageName}</arg>
</arguments>
<msg timestamp="20210408 19:17:18.538" level="INFO" html="yes">&lt;a href="Results/LoanIQ/TC02%20-%20Validate%20ARR%20Interest%20Pricing%20Option%20at%20Facility%20Level%20-%20Term___2021-04-08%2019-11-32.788/Facility%20Notebook%20-%20Facility%20Pricing%20Items_4.jpg"&gt;&lt;img src="Results/LoanIQ/TC02%20-%20Validate%20ARR%20Interest%20Pricing%20Option%20at%20Facility%20Level%20-%20Term___2021-04-08%2019-11-32.788/Facility%20Notebook%20-%20Facility%20Pricing%20Items_4.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210408 19:17:18.437" endtime="20210408 19:17:18.538"></status>
</kw>
<kw name="Get Latest File" library="ReportMaker">
<arguments>
<arg>${getfilePath}</arg>
</arguments>
<assign>
<var>${imagePath}</var>
</assign>
<msg timestamp="20210408 19:17:18.594" level="INFO">${imagePath} = C:\Git_Evergreen\transform_arr\Results\LoanIQ\TC02 - Validate ARR Interest Pricing Option at Facility Level - Term___2021-04-08 19-11-32.788\Facility Notebook - Facility Pricing Items_4.jpg</msg>
<status status="PASS" starttime="20210408 19:17:18.593" endtime="20210408 19:17:18.595"></status>
</kw>
<kw name="Put Screenshot With Text" library="ReportMaker">
<arguments>
<arg>${imagePath}</arg>
<arg>${imageName}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:17:18.652" endtime="20210408 19:17:18.667"></status>
</kw>
<status status="PASS" starttime="20210408 19:17:18.385" endtime="20210408 19:17:18.668"></status>
</kw>
<status status="PASS" starttime="20210408 19:17:15.167" endtime="20210408 19:17:18.668"></status>
</kw>
<kw name="Take Screenshot with text into Test Document" library="ReportMaker_Keywords">
<doc>This keyword is used to add screenshot with image filename as description into test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Facility Notebook - Add Facility Interest</arg>
</arguments>
<kw name="Take Screenshot" library="Screenshot">
<doc>Takes a screenshot in JPEG format and embeds it into the log file.</doc>
<arguments>
<arg>${imageName}</arg>
</arguments>
<msg timestamp="20210408 19:17:18.870" level="INFO" html="yes">&lt;a href="Results/LoanIQ/TC02%20-%20Validate%20ARR%20Interest%20Pricing%20Option%20at%20Facility%20Level%20-%20Term___2021-04-08%2019-11-32.788/Facility%20Notebook%20-%20Add%20Facility%20Interest_2.jpg"&gt;&lt;img src="Results/LoanIQ/TC02%20-%20Validate%20ARR%20Interest%20Pricing%20Option%20at%20Facility%20Level%20-%20Term___2021-04-08%2019-11-32.788/Facility%20Notebook%20-%20Add%20Facility%20Interest_2.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210408 19:17:18.771" endtime="20210408 19:17:18.870"></status>
</kw>
<kw name="Get Latest File" library="ReportMaker">
<arguments>
<arg>${getfilePath}</arg>
</arguments>
<assign>
<var>${imagePath}</var>
</assign>
<msg timestamp="20210408 19:17:18.930" level="INFO">${imagePath} = C:\Git_Evergreen\transform_arr\Results\LoanIQ\TC02 - Validate ARR Interest Pricing Option at Facility Level - Term___2021-04-08 19-11-32.788\Facility Notebook - Add Facility Interest_2.jpg</msg>
<status status="PASS" starttime="20210408 19:17:18.929" endtime="20210408 19:17:18.931"></status>
</kw>
<kw name="Put Screenshot With Text" library="ReportMaker">
<arguments>
<arg>${imagePath}</arg>
<arg>${imageName}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:17:18.983" endtime="20210408 19:17:19.000"></status>
</kw>
<status status="PASS" starttime="20210408 19:17:18.718" endtime="20210408 19:17:19.000"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:40.381" endtime="20210408 19:17:19.000"></status>
</kw>
<status status="PASS" starttime="20210408 19:16:40.219" endtime="20210408 19:17:19.001"></status>
</kw>
<msg timestamp="20210408 19:17:19.001" level="INFO">Mx Execute Template With Multiple Data keyword passed for all the data</msg>
<status status="PASS" starttime="20210408 19:16:40.198" endtime="20210408 19:17:19.001"></status>
</kw>
<kw name="Mx Execute Template With Multiple Data" library="GenericLib">
<doc>| Usage |
 This keyword is used to run template with multiple data.</doc>
<arguments>
<arg>Complete Pricing Setup</arg>
<arg>${ExcelPath}</arg>
<arg>${Facility_2}</arg>
<arg>CRED08_OngoingFeeSetup</arg>
</arguments>
<kw name="Complete Pricing Setup" library="CRED08_OngoingFeeSetup">
<doc>This keyword is used to Complete Interest Pricing Setup
@author: hstone 25NOV2020 - initial create</doc>
<arguments>
<arg>OrderedDict([('rowid', '2'), ('Test_Case', 'ARR_Scenario3'), ('Interest_AddItem', 'Option'), ('Interest_OptionName', 'Libor Option'), ('Interest_RateBasis', 'Actual/360'), ('Interest_SpreadType', 'Percent'), ('Interest_SpreadValue', '1.8'), ('Interest_BaseRateCode', 'SOFR')])</arg>
</arguments>
<kw name="Report Sub Header" library="ReportMaker_Keywords">
<doc>This keyword is used to add given argument as sub header in test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Complete Pricing Setup</arg>
</arguments>
<kw name="Set Report Sub Header" library="ReportMaker">
<arguments>
<arg>${SubHeader}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:17:19.194" endtime="20210408 19:17:19.196"></status>
</kw>
<status status="PASS" starttime="20210408 19:17:19.132" endtime="20210408 19:17:19.197"></status>
</kw>
<kw name="Validate Ongoing Fee or Interest" library="Facility_Notebook">
<doc>This keyword clicks the 'Validate' button and verifies if added fees are complete.
@author: bernchua DDMMMYYYY - Initial Create
@update: rtarayao 04MAR2019 - - Added an action to Click on OK button to close the window.
@update: bernchua 20AUG2019 Added click element if present for warning message
@update: dahijara 26JUN2020 - added keyword for screenshot</doc>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_FacilityPricing_OngoingFeeInterest_Validate_Button}</arg>
</arguments>
<msg timestamp="20210408 19:17:19.676" level="INFO">JavaWindow("title:=Facility.*Pricing").JavaButton("label:=Validate") is clicked.</msg>
<status status="PASS" starttime="20210408 19:17:19.342" endtime="20210408 19:17:19.676"></status>
</kw>
<kw name="Mx LoanIQ Activate" library="LoanIQ">
<doc>|Usage|</doc>
<arguments>
<arg>${LIQ_Congratulations_Window}</arg>
</arguments>
<msg timestamp="20210408 19:17:22.280" level="INFO">Object = 'JavaWindow("title:=Congratulations","displayed:=1")' is activated</msg>
<status status="PASS" starttime="20210408 19:17:19.903" endtime="20210408 19:17:22.280"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_Congratulations_Window}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_Congratulations_Window}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:17:22.402" level="INFO">Locator = 'JavaWindow("title:=Congratulations","displayed:=1")' exists.</msg>
<status status="PASS" starttime="20210408 19:17:22.344" endtime="20210408 19:17:22.403"></status>
</kw>
<status status="PASS" starttime="20210408 19:17:22.343" endtime="20210408 19:17:22.403"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${LIQ_Congratulations_MessageBox}</arg>
<arg>value%Validation completed successfully.</arg>
</arguments>
<assign>
<var>${OngoingFee_ValidationPassed}</var>
</assign>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${LIQ_Congratulations_MessageBox}</arg>
<arg>value%Validation completed successfully.</arg>
</arguments>
<msg timestamp="20210408 19:17:22.589" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:17:22.474" endtime="20210408 19:17:22.590"></status>
</kw>
<msg timestamp="20210408 19:17:22.590" level="INFO">${OngoingFee_ValidationPassed} = True</msg>
<status status="PASS" starttime="20210408 19:17:22.472" endtime="20210408 19:17:22.590"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${OngoingFee_ValidationPassed}==True</arg>
<arg>Run Keywords</arg>
<arg>Log</arg>
<arg>Ongoing Fee Validation Passed.</arg>
<arg>AND</arg>
<arg>Mx LoanIQ Click Element If Present</arg>
<arg>${LIQ_Congratulations_OK_Button}</arg>
<arg>AND</arg>
<arg>Mx LoanIQ click</arg>
<arg>${LIQ_FacilityPricing_OngoingFees_OK_Button}</arg>
<arg>AND</arg>
<arg>Mx LoanIQ Click Element If Present</arg>
<arg>${LIQ_Warning_Yes_Button}</arg>
</arguments>
<kw name="Run Keywords" library="BuiltIn">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>Log</arg>
<arg>Ongoing Fee Validation Passed.</arg>
<arg>AND</arg>
<arg>Mx LoanIQ Click Element If Present</arg>
<arg>${LIQ_Congratulations_OK_Button}</arg>
<arg>AND</arg>
<arg>Mx LoanIQ click</arg>
<arg>${LIQ_FacilityPricing_OngoingFees_OK_Button}</arg>
<arg>AND</arg>
<arg>Mx LoanIQ Click Element If Present</arg>
<arg>${LIQ_Warning_Yes_Button}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Ongoing Fee Validation Passed.</arg>
</arguments>
<msg timestamp="20210408 19:17:22.653" level="INFO">Ongoing Fee Validation Passed.</msg>
<status status="PASS" starttime="20210408 19:17:22.653" endtime="20210408 19:17:22.654"></status>
</kw>
<kw name="Mx LoanIQ Click Element If Present" library="LoanIQ">
<doc>| Usage |
Click on element identified by `locator` only if that element is present.
It passes if the element is not present.</doc>
<arguments>
<arg>${LIQ_Congratulations_OK_Button}</arg>
</arguments>
<msg timestamp="20210408 19:17:26.065" level="INFO">JavaWindow("title:=Congratulations.*","displayed:=1").JavaButton("label:=OK"): is clicked, or skipped if not present.</msg>
<status status="PASS" starttime="20210408 19:17:22.655" endtime="20210408 19:17:26.066"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_FacilityPricing_OngoingFees_OK_Button}</arg>
</arguments>
<msg timestamp="20210408 19:17:26.390" level="INFO">JavaWindow("title:=Facility:.*").JavaButton("attached text:=OK") is clicked.</msg>
<status status="PASS" starttime="20210408 19:17:26.067" endtime="20210408 19:17:26.391"></status>
</kw>
<kw name="Mx LoanIQ Click Element If Present" library="LoanIQ">
<doc>| Usage |
Click on element identified by `locator` only if that element is present.
It passes if the element is not present.</doc>
<arguments>
<arg>${LIQ_Warning_Yes_Button}</arg>
</arguments>
<msg timestamp="20210408 19:17:39.837" level="INFO">JavaWindow("title:=Warning.*", "displayed:=1").JavaButton("label:=Yes"): is clicked, or skipped if not present.</msg>
<status status="PASS" starttime="20210408 19:17:26.394" endtime="20210408 19:17:39.838"></status>
</kw>
<status status="PASS" starttime="20210408 19:17:22.652" endtime="20210408 19:17:39.838"></status>
</kw>
<status status="PASS" starttime="20210408 19:17:22.649" endtime="20210408 19:17:39.838"></status>
</kw>
<kw name="Mx LoanIQ Click Element If Present" library="LoanIQ">
<doc>| Usage |
Click on element identified by `locator` only if that element is present.
It passes if the element is not present.</doc>
<arguments>
<arg>${LIQ_FacilityPricing_OngoingFeeInterest_OK_Button}</arg>
</arguments>
<msg timestamp="20210408 19:17:48.297" level="INFO">JavaWindow("title:=Facility.*Pricing").JavaButton("attached text:=OK"): is clicked, or skipped if not present.</msg>
<status status="PASS" starttime="20210408 19:17:39.894" endtime="20210408 19:17:48.297"></status>
</kw>
<kw name="Take Screenshot with text into Test Document" library="ReportMaker_Keywords">
<doc>This keyword is used to add screenshot with image filename as description into test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Facility Notebook - Interest Pricing</arg>
</arguments>
<kw name="Take Screenshot" library="Screenshot">
<doc>Takes a screenshot in JPEG format and embeds it into the log file.</doc>
<arguments>
<arg>${imageName}</arg>
</arguments>
<msg timestamp="20210408 19:17:48.516" level="INFO" html="yes">&lt;a href="Results/LoanIQ/TC02%20-%20Validate%20ARR%20Interest%20Pricing%20Option%20at%20Facility%20Level%20-%20Term___2021-04-08%2019-11-32.788/Facility%20Notebook%20-%20Interest%20Pricing_1.jpg"&gt;&lt;img src="Results/LoanIQ/TC02%20-%20Validate%20ARR%20Interest%20Pricing%20Option%20at%20Facility%20Level%20-%20Term___2021-04-08%2019-11-32.788/Facility%20Notebook%20-%20Interest%20Pricing_1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210408 19:17:48.407" endtime="20210408 19:17:48.517"></status>
</kw>
<kw name="Get Latest File" library="ReportMaker">
<arguments>
<arg>${getfilePath}</arg>
</arguments>
<assign>
<var>${imagePath}</var>
</assign>
<msg timestamp="20210408 19:17:48.574" level="INFO">${imagePath} = C:\Git_Evergreen\transform_arr\Results\LoanIQ\TC02 - Validate ARR Interest Pricing Option at Facility Level - Term___2021-04-08 19-11-32.788\Facility Notebook - Interest Pricing_1.jpg</msg>
<status status="PASS" starttime="20210408 19:17:48.571" endtime="20210408 19:17:48.574"></status>
</kw>
<kw name="Put Screenshot With Text" library="ReportMaker">
<arguments>
<arg>${imagePath}</arg>
<arg>${imageName}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:17:48.625" endtime="20210408 19:17:48.640"></status>
</kw>
<status status="PASS" starttime="20210408 19:17:48.353" endtime="20210408 19:17:48.640"></status>
</kw>
<status status="PASS" starttime="20210408 19:17:19.268" endtime="20210408 19:17:48.641"></status>
</kw>
<status status="PASS" starttime="20210408 19:17:19.080" endtime="20210408 19:17:48.641"></status>
</kw>
<msg timestamp="20210408 19:17:48.641" level="INFO">Mx Execute Template With Multiple Data keyword passed for all the data</msg>
<status status="PASS" starttime="20210408 19:17:19.059" endtime="20210408 19:17:48.641"></status>
</kw>
<kw name="Mx Execute Template With Multiple Data" library="GenericLib">
<doc>| Usage |
 This keyword is used to run template with multiple data.</doc>
<arguments>
<arg>Proceed with Facility Interest Pricing Setup</arg>
<arg>${ExcelPath}</arg>
<arg>${Facility_1}</arg>
<arg>CRED08_OngoingFeeSetup</arg>
</arguments>
<kw name="Proceed with Facility Interest Pricing Setup" library="CRED08_OngoingFeeSetup">
<doc>This keyword is used to Proceed with Facility Interest Pricing Setup
@author: hstone 25NOV2020 - initial create</doc>
<arguments>
<arg>OrderedDict([('rowid', '1'), ('Test_Case', 'ARR_Scenario3'), ('Interest_AddItem', 'Option'), ('Interest_OptionName', 'SOFR Daily Compounding W OPS Not Overridable'), ('Interest_RateBasis', 'Actual/360'), ('Interest_SpreadType', 'Percent'), ('Interest_SpreadValue', '2.5'), ('Interest_BaseRateCode', 'SOFR')])</arg>
</arguments>
<kw name="Report Sub Header" library="ReportMaker_Keywords">
<doc>This keyword is used to add given argument as sub header in test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Proceed with Facility Interest Pricing Setup</arg>
</arguments>
<kw name="Set Report Sub Header" library="ReportMaker">
<arguments>
<arg>${SubHeader}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:17:48.822" endtime="20210408 19:17:48.824"></status>
</kw>
<status status="PASS" starttime="20210408 19:17:48.770" endtime="20210408 19:17:48.824"></status>
</kw>
<kw name="Navigate to Interest Pricing Window" library="Facility_Notebook">
<doc>This keyword is used to Navigate to Interest Pricing Window
@author: hstone 25NOV2020 - initial create</doc>
<kw name="Mx LoanIQ Activate" library="LoanIQ">
<doc>|Usage|</doc>
<arguments>
<arg>${LIQ_FacilityNotebook_Window}</arg>
</arguments>
<msg timestamp="20210408 19:17:50.205" level="INFO">Object = 'JavaWindow("title:=Facility -.*","displayed:=1")' is activated</msg>
<status status="PASS" starttime="20210408 19:17:48.928" endtime="20210408 19:17:50.206"></status>
</kw>
<kw name="Mx LoanIQ Select Window Tab" library="LoanIQ">
<doc>| Usage |
Used to select the Java window tab</doc>
<arguments>
<arg>${LIQ_FacilityNotebook_Tab}</arg>
<arg>${TAB_PRICING}</arg>
</arguments>
<msg timestamp="20210408 19:17:55.258" level="INFO">Window Tab = 'Pricing' is selected from the element = 'JavaWindow("title:=Facility -.*").JavaTab("tagname:=TabFolder")'</msg>
<status status="PASS" starttime="20210408 19:17:50.275" endtime="20210408 19:17:55.259"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_FacilityPricing_ModifyInterestPricing_Button}</arg>
</arguments>
<msg timestamp="20210408 19:17:56.025" level="INFO">JavaWindow("title:=Facility -.*").JavaButton("attached text:=Modify Interest Pricing.*") is clicked.</msg>
<status status="PASS" starttime="20210408 19:17:55.344" endtime="20210408 19:17:56.025"></status>
</kw>
<kw name="Mx LoanIQ Click Element If Present" library="LoanIQ">
<doc>| Usage |
Click on element identified by `locator` only if that element is present.
It passes if the element is not present.</doc>
<arguments>
<arg>${LIQ_Warning_Yes_Button}</arg>
</arguments>
<msg timestamp="20210408 19:18:04.855" level="INFO">JavaWindow("title:=Warning.*", "displayed:=1").JavaButton("label:=Yes"): is clicked, or skipped if not present.</msg>
<status status="PASS" starttime="20210408 19:17:56.120" endtime="20210408 19:18:04.856"></status>
</kw>
<kw name="Take Screenshot with text into Test Document" library="ReportMaker_Keywords">
<doc>This keyword is used to add screenshot with image filename as description into test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Facility Notebook - Interest Pricing Window</arg>
</arguments>
<kw name="Take Screenshot" library="Screenshot">
<doc>Takes a screenshot in JPEG format and embeds it into the log file.</doc>
<arguments>
<arg>${imageName}</arg>
</arguments>
<msg timestamp="20210408 19:18:05.072" level="INFO" html="yes">&lt;a href="Results/LoanIQ/TC02%20-%20Validate%20ARR%20Interest%20Pricing%20Option%20at%20Facility%20Level%20-%20Term___2021-04-08%2019-11-32.788/Facility%20Notebook%20-%20Interest%20Pricing%20Window_2.jpg"&gt;&lt;img src="Results/LoanIQ/TC02%20-%20Validate%20ARR%20Interest%20Pricing%20Option%20at%20Facility%20Level%20-%20Term___2021-04-08%2019-11-32.788/Facility%20Notebook%20-%20Interest%20Pricing%20Window_2.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210408 19:18:04.967" endtime="20210408 19:18:05.073"></status>
</kw>
<kw name="Get Latest File" library="ReportMaker">
<arguments>
<arg>${getfilePath}</arg>
</arguments>
<assign>
<var>${imagePath}</var>
</assign>
<msg timestamp="20210408 19:18:05.129" level="INFO">${imagePath} = C:\Git_Evergreen\transform_arr\Results\LoanIQ\TC02 - Validate ARR Interest Pricing Option at Facility Level - Term___2021-04-08 19-11-32.788\Facility Notebook - Interest Pricing Window_2.jpg</msg>
<status status="PASS" starttime="20210408 19:18:05.127" endtime="20210408 19:18:05.129"></status>
</kw>
<kw name="Put Screenshot With Text" library="ReportMaker">
<arguments>
<arg>${imagePath}</arg>
<arg>${imageName}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:18:05.196" endtime="20210408 19:18:05.213"></status>
</kw>
<status status="PASS" starttime="20210408 19:18:04.912" endtime="20210408 19:18:05.214"></status>
</kw>
<status status="PASS" starttime="20210408 19:17:48.875" endtime="20210408 19:18:05.214"></status>
</kw>
<status status="PASS" starttime="20210408 19:17:48.719" endtime="20210408 19:18:05.215"></status>
</kw>
<msg timestamp="20210408 19:18:05.215" level="INFO">Mx Execute Template With Multiple Data keyword passed for all the data</msg>
<status status="PASS" starttime="20210408 19:17:48.698" endtime="20210408 19:18:05.215"></status>
</kw>
<kw name="Mx Execute Template With Multiple Data" library="GenericLib">
<doc>| Usage |
 This keyword is used to run template with multiple data.</doc>
<arguments>
<arg>Complete Pricing Setup</arg>
<arg>${ExcelPath}</arg>
<arg>${Facility_1}</arg>
<arg>CRED08_OngoingFeeSetup</arg>
</arguments>
<kw name="Complete Pricing Setup" library="CRED08_OngoingFeeSetup">
<doc>This keyword is used to Complete Interest Pricing Setup
@author: hstone 25NOV2020 - initial create</doc>
<arguments>
<arg>OrderedDict([('rowid', '1'), ('Test_Case', 'ARR_Scenario3'), ('Interest_AddItem', 'Option'), ('Interest_OptionName', 'SOFR Daily Compounding W OPS Not Overridable'), ('Interest_RateBasis', 'Actual/360'), ('Interest_SpreadType', 'Percent'), ('Interest_SpreadValue', '2.5'), ('Interest_BaseRateCode', 'SOFR')])</arg>
</arguments>
<kw name="Report Sub Header" library="ReportMaker_Keywords">
<doc>This keyword is used to add given argument as sub header in test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Complete Pricing Setup</arg>
</arguments>
<kw name="Set Report Sub Header" library="ReportMaker">
<arguments>
<arg>${SubHeader}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:18:05.391" endtime="20210408 19:18:05.393"></status>
</kw>
<status status="PASS" starttime="20210408 19:18:05.339" endtime="20210408 19:18:05.393"></status>
</kw>
<kw name="Validate Ongoing Fee or Interest" library="Facility_Notebook">
<doc>This keyword clicks the 'Validate' button and verifies if added fees are complete.
@author: bernchua DDMMMYYYY - Initial Create
@update: rtarayao 04MAR2019 - - Added an action to Click on OK button to close the window.
@update: bernchua 20AUG2019 Added click element if present for warning message
@update: dahijara 26JUN2020 - added keyword for screenshot</doc>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_FacilityPricing_OngoingFeeInterest_Validate_Button}</arg>
</arguments>
<msg timestamp="20210408 19:18:05.836" level="INFO">JavaWindow("title:=Facility.*Pricing").JavaButton("label:=Validate") is clicked.</msg>
<status status="PASS" starttime="20210408 19:18:05.527" endtime="20210408 19:18:05.837"></status>
</kw>
<kw name="Mx LoanIQ Activate" library="LoanIQ">
<doc>|Usage|</doc>
<arguments>
<arg>${LIQ_Congratulations_Window}</arg>
</arguments>
<msg timestamp="20210408 19:18:08.237" level="INFO">Object = 'JavaWindow("title:=Congratulations","displayed:=1")' is activated</msg>
<status status="PASS" starttime="20210408 19:18:05.943" endtime="20210408 19:18:08.237"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Mx LoanIQ Verify Object Exist</arg>
<arg>${LIQ_Congratulations_Window}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<kw name="Mx LoanIQ Verify Object Exist" library="LoanIQ">
<doc>| Usage |
Used to check if object is present or not.</doc>
<arguments>
<arg>${LIQ_Congratulations_Window}</arg>
<arg>VerificationData="Yes"</arg>
</arguments>
<msg timestamp="20210408 19:18:08.369" level="INFO">Locator = 'JavaWindow("title:=Congratulations","displayed:=1")' exists.</msg>
<status status="PASS" starttime="20210408 19:18:08.316" endtime="20210408 19:18:08.370"></status>
</kw>
<status status="PASS" starttime="20210408 19:18:08.313" endtime="20210408 19:18:08.370"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${LIQ_Congratulations_MessageBox}</arg>
<arg>value%Validation completed successfully.</arg>
</arguments>
<assign>
<var>${OngoingFee_ValidationPassed}</var>
</assign>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${LIQ_Congratulations_MessageBox}</arg>
<arg>value%Validation completed successfully.</arg>
</arguments>
<msg timestamp="20210408 19:18:08.531" level="INFO">run time property verified successfully for the specified object</msg>
<status status="PASS" starttime="20210408 19:18:08.435" endtime="20210408 19:18:08.531"></status>
</kw>
<msg timestamp="20210408 19:18:08.532" level="INFO">${OngoingFee_ValidationPassed} = True</msg>
<status status="PASS" starttime="20210408 19:18:08.434" endtime="20210408 19:18:08.532"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${OngoingFee_ValidationPassed}==True</arg>
<arg>Run Keywords</arg>
<arg>Log</arg>
<arg>Ongoing Fee Validation Passed.</arg>
<arg>AND</arg>
<arg>Mx LoanIQ Click Element If Present</arg>
<arg>${LIQ_Congratulations_OK_Button}</arg>
<arg>AND</arg>
<arg>Mx LoanIQ click</arg>
<arg>${LIQ_FacilityPricing_OngoingFees_OK_Button}</arg>
<arg>AND</arg>
<arg>Mx LoanIQ Click Element If Present</arg>
<arg>${LIQ_Warning_Yes_Button}</arg>
</arguments>
<kw name="Run Keywords" library="BuiltIn">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>Log</arg>
<arg>Ongoing Fee Validation Passed.</arg>
<arg>AND</arg>
<arg>Mx LoanIQ Click Element If Present</arg>
<arg>${LIQ_Congratulations_OK_Button}</arg>
<arg>AND</arg>
<arg>Mx LoanIQ click</arg>
<arg>${LIQ_FacilityPricing_OngoingFees_OK_Button}</arg>
<arg>AND</arg>
<arg>Mx LoanIQ Click Element If Present</arg>
<arg>${LIQ_Warning_Yes_Button}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Ongoing Fee Validation Passed.</arg>
</arguments>
<msg timestamp="20210408 19:18:08.591" level="INFO">Ongoing Fee Validation Passed.</msg>
<status status="PASS" starttime="20210408 19:18:08.591" endtime="20210408 19:18:08.592"></status>
</kw>
<kw name="Mx LoanIQ Click Element If Present" library="LoanIQ">
<doc>| Usage |
Click on element identified by `locator` only if that element is present.
It passes if the element is not present.</doc>
<arguments>
<arg>${LIQ_Congratulations_OK_Button}</arg>
</arguments>
<msg timestamp="20210408 19:18:11.961" level="INFO">JavaWindow("title:=Congratulations.*","displayed:=1").JavaButton("label:=OK"): is clicked, or skipped if not present.</msg>
<status status="PASS" starttime="20210408 19:18:08.593" endtime="20210408 19:18:11.962"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_FacilityPricing_OngoingFees_OK_Button}</arg>
</arguments>
<msg timestamp="20210408 19:18:12.538" level="INFO">JavaWindow("title:=Facility:.*").JavaButton("attached text:=OK") is clicked.</msg>
<status status="PASS" starttime="20210408 19:18:11.965" endtime="20210408 19:18:12.538"></status>
</kw>
<kw name="Mx LoanIQ Click Element If Present" library="LoanIQ">
<doc>| Usage |
Click on element identified by `locator` only if that element is present.
It passes if the element is not present.</doc>
<arguments>
<arg>${LIQ_Warning_Yes_Button}</arg>
</arguments>
<msg timestamp="20210408 19:18:20.927" level="INFO">JavaWindow("title:=Warning.*", "displayed:=1").JavaButton("label:=Yes"): is clicked, or skipped if not present.</msg>
<status status="PASS" starttime="20210408 19:18:12.541" endtime="20210408 19:18:20.928"></status>
</kw>
<status status="PASS" starttime="20210408 19:18:08.589" endtime="20210408 19:18:20.928"></status>
</kw>
<status status="PASS" starttime="20210408 19:18:08.586" endtime="20210408 19:18:20.928"></status>
</kw>
<kw name="Mx LoanIQ Click Element If Present" library="LoanIQ">
<doc>| Usage |
Click on element identified by `locator` only if that element is present.
It passes if the element is not present.</doc>
<arguments>
<arg>${LIQ_FacilityPricing_OngoingFeeInterest_OK_Button}</arg>
</arguments>
<msg timestamp="20210408 19:18:29.394" level="INFO">JavaWindow("title:=Facility.*Pricing").JavaButton("attached text:=OK"): is clicked, or skipped if not present.</msg>
<status status="PASS" starttime="20210408 19:18:21.014" endtime="20210408 19:18:29.395"></status>
</kw>
<kw name="Take Screenshot with text into Test Document" library="ReportMaker_Keywords">
<doc>This keyword is used to add screenshot with image filename as description into test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Facility Notebook - Interest Pricing</arg>
</arguments>
<kw name="Take Screenshot" library="Screenshot">
<doc>Takes a screenshot in JPEG format and embeds it into the log file.</doc>
<arguments>
<arg>${imageName}</arg>
</arguments>
<msg timestamp="20210408 19:18:29.612" level="INFO" html="yes">&lt;a href="Results/LoanIQ/TC02%20-%20Validate%20ARR%20Interest%20Pricing%20Option%20at%20Facility%20Level%20-%20Term___2021-04-08%2019-11-32.788/Facility%20Notebook%20-%20Interest%20Pricing_2.jpg"&gt;&lt;img src="Results/LoanIQ/TC02%20-%20Validate%20ARR%20Interest%20Pricing%20Option%20at%20Facility%20Level%20-%20Term___2021-04-08%2019-11-32.788/Facility%20Notebook%20-%20Interest%20Pricing_2.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210408 19:18:29.507" endtime="20210408 19:18:29.612"></status>
</kw>
<kw name="Get Latest File" library="ReportMaker">
<arguments>
<arg>${getfilePath}</arg>
</arguments>
<assign>
<var>${imagePath}</var>
</assign>
<msg timestamp="20210408 19:18:29.669" level="INFO">${imagePath} = C:\Git_Evergreen\transform_arr\Results\LoanIQ\TC02 - Validate ARR Interest Pricing Option at Facility Level - Term___2021-04-08 19-11-32.788\Facility Notebook - Interest Pricing_2.jpg</msg>
<status status="PASS" starttime="20210408 19:18:29.667" endtime="20210408 19:18:29.670"></status>
</kw>
<kw name="Put Screenshot With Text" library="ReportMaker">
<arguments>
<arg>${imagePath}</arg>
<arg>${imageName}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:18:29.720" endtime="20210408 19:18:29.737"></status>
</kw>
<status status="PASS" starttime="20210408 19:18:29.447" endtime="20210408 19:18:29.738"></status>
</kw>
<status status="PASS" starttime="20210408 19:18:05.455" endtime="20210408 19:18:29.738"></status>
</kw>
<status status="PASS" starttime="20210408 19:18:05.287" endtime="20210408 19:18:29.738"></status>
</kw>
<msg timestamp="20210408 19:18:29.739" level="INFO">Mx Execute Template With Multiple Data keyword passed for all the data</msg>
<status status="PASS" starttime="20210408 19:18:05.265" endtime="20210408 19:18:29.739"></status>
</kw>
<kw name="Mx Execute Template With Multiple Data" library="GenericLib">
<doc>| Usage |
 This keyword is used to run template with multiple data.</doc>
<arguments>
<arg>Complete Facility Setup</arg>
<arg>${ExcelPath}</arg>
<arg>${Facility_1}</arg>
<arg>CRED02_FacilitySetup</arg>
</arguments>
<kw name="Complete Facility Setup" library="CRED01_DealSetUpWithoutOrigination">
<doc>This keyword is used to Complete Facility Setup
@author: hstone 25NOV2020 - initial create</doc>
<arguments>
<arg>OrderedDict([('rowid', '1'), ('Test_Case', 'ARR_Scenario3'), ('Facility_NamePrefix', 'ARR_TERM'), ('Deal_Name', ''), ('Facility_Name', 'ARR_TERM08042021191133'), ('Facility_AgreementDate', '26-Oct-2016'), ('Facility_EffectiveDate', '26-Oct-2016'), ('Facility_ExpiryDate', '26-Oct-2019'), ('Facility_MaturityDate', '26-Oct-2019'), ('Facility_Currency', 'USD'), ('Facility_Type', 'Term Loan'), ('Facility_ProposedCmtAmt', '300,000,000.00'), ('Facility_SubType', 'Committed'), ('Facility_ANSIID', ''), ('Facility_ServicingGroup', 'CANADA CORPORATE BANKING'), ('Facility_Customer', 'BNS CANADA CORPORATE BANKING'), ('Facility_SGLocation', 'Toronto, Canada'), ('Facility_AdjustmentSettings', 'Present'), ('Facility_AgreementDateAdjustment', '30'), ('Facility_EffectiveDateAdjustment', '30'), ('Facility_ExpiryDateAdjustment', '1095'), ('Facility_MaturityDateAdjustment', '1095'), ('Facility_RiskType', 'Demand Loan'), ('Facility_RiskTypeLimit', 'FLOAT'), ('Facility_LoanPurposeType', 'General'), ('Facility_GlobalLimit', 'FLOAT'), ('Facility_PricingOption', 'SOFR Daily Compounding W OPS Not Overridable'), ('Facility_ARRObservationPeriod', 'ON'), ('Facility_LookbackDays', '5'), ('Facility_LockoutDays', '0'), ('Facility_RateBasis', 'Actual/360'), ('Facility_CalculationMethod', 'Daily Rate With Compounding'), ('MIS_Code', 'Origination Type'), ('MIS_Value', 'Syndication- BNS Agent')])</arg>
</arguments>
<kw name="Report Sub Header" library="ReportMaker_Keywords">
<doc>This keyword is used to add given argument as sub header in test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Complete Facility Setup</arg>
</arguments>
<kw name="Set Report Sub Header" library="ReportMaker">
<arguments>
<arg>${SubHeader}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:18:29.917" endtime="20210408 19:18:29.920"></status>
</kw>
<status status="PASS" starttime="20210408 19:18:29.865" endtime="20210408 19:18:29.920"></status>
</kw>
<kw name="Validate Multi CCY Facility" library="Facility_Notebook">
<doc>Validates the Facility for Multi-Currency.
@author: bernchua DDMMMYYYY - Initial Create
@update: ehugo 29MAY2020 - added screenshot</doc>
<kw name="Mx LoanIQ Select Window Tab" library="LoanIQ">
<doc>| Usage |
Used to select the Java window tab</doc>
<arguments>
<arg>${LIQ_FacilityNotebook_Tab}</arg>
<arg>${TAB_SUMMARY}</arg>
</arguments>
<msg timestamp="20210408 19:18:35.002" level="INFO">Window Tab = 'Summary' is selected from the element = 'JavaWindow("title:=Facility -.*").JavaTab("tagname:=TabFolder")'</msg>
<status status="PASS" starttime="20210408 19:18:30.021" endtime="20210408 19:18:35.003"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Mx LoanIQ Verify Runtime Property</arg>
<arg>${LIQ_FacilitySummary_MultiCurrencyFacility_Checkbox}</arg>
<arg>value%1</arg>
</arguments>
<assign>
<var>${Status}</var>
</assign>
<kw name="Mx LoanIQ Verify Runtime Property" library="LoanIQ">
<doc>| Usage |
This keyword checks wheather the given propery value pair using object method present in the specified Java Object
 Note: It calls 'DOUBLECLICKCELLWITHTREEPATHINTABLE' action from 'Libraries\Utilities\Integration\UFT\UFT_Libraries'.</doc>
<arguments>
<arg>${LIQ_FacilitySummary_MultiCurrencyFacility_Checkbox}</arg>
<arg>value%1</arg>
</arguments>
<msg timestamp="20210408 19:18:35.599" level="INFO" html="yes">&lt;a href="screenshot_37.jpg"&gt;&lt;img src="screenshot_37.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20210408 19:18:35.599" level="INFO">Keyword Details-------------------------------------------------
Action = VERIFYRUNTIMEPROPERTY
Input = None
Object = JavaWindow("title:=Facility - .*").JavaCheckBox("attached text:=Multi-Currency Facility")
Verification Data = value%1</msg>
<msg timestamp="20210408 19:18:35.599" level="FAIL">Error Number: -110037 Error Description: Value mismatch: Actual Value:0 and the Expected Value:1. VerifyRuntimeProperty. Retried for:  0 times. </msg>
<status status="FAIL" starttime="20210408 19:18:35.060" endtime="20210408 19:18:35.666"></status>
</kw>
<msg timestamp="20210408 19:18:35.667" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20210408 19:18:35.058" endtime="20210408 19:18:35.667"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Status}'==${TRUE}</arg>
<arg>Log</arg>
<arg>Facility is Multi-currency.</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>Facility is not Multi-currency.</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Facility is not Multi-currency.</arg>
</arguments>
<msg timestamp="20210408 19:18:35.750" level="INFO">Facility is not Multi-currency.</msg>
<status status="PASS" starttime="20210408 19:18:35.750" endtime="20210408 19:18:35.750"></status>
</kw>
<status status="PASS" starttime="20210408 19:18:35.748" endtime="20210408 19:18:35.751"></status>
</kw>
<kw name="Take Screenshot with text into Test Document" library="ReportMaker_Keywords">
<doc>This keyword is used to add screenshot with image filename as description into test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Facility Notebook - Summary Tab - Multi Currency Facility</arg>
</arguments>
<kw name="Take Screenshot" library="Screenshot">
<doc>Takes a screenshot in JPEG format and embeds it into the log file.</doc>
<arguments>
<arg>${imageName}</arg>
</arguments>
<msg timestamp="20210408 19:18:36.000" level="INFO" html="yes">&lt;a href="Results/LoanIQ/TC02%20-%20Validate%20ARR%20Interest%20Pricing%20Option%20at%20Facility%20Level%20-%20Term___2021-04-08%2019-11-32.788/Facility%20Notebook%20-%20Summary%20Tab%20-%20Multi%20Currency%20Facility_1.jpg"&gt;&lt;img src="Results/LoanIQ/TC02%20-%20Validate%20ARR%20Interest%20Pricing%20Option%20at%20Facility%20Level%20-%20Term___2021-04-08%2019-11-32.788/Facility%20Notebook%20-%20Summary%20Tab%20-%20Multi%20Currency%20Facility_1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210408 19:18:35.880" endtime="20210408 19:18:36.000"></status>
</kw>
<kw name="Get Latest File" library="ReportMaker">
<arguments>
<arg>${getfilePath}</arg>
</arguments>
<assign>
<var>${imagePath}</var>
</assign>
<msg timestamp="20210408 19:18:36.081" level="INFO">${imagePath} = C:\Git_Evergreen\transform_arr\Results\LoanIQ\TC02 - Validate ARR Interest Pricing Option at Facility Level - Term___2021-04-08 19-11-32.788\Facility Notebook - Summary Tab - Multi Currency Facility_1...</msg>
<status status="PASS" starttime="20210408 19:18:36.078" endtime="20210408 19:18:36.081"></status>
</kw>
<kw name="Put Screenshot With Text" library="ReportMaker">
<arguments>
<arg>${imagePath}</arg>
<arg>${imageName}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:18:36.156" endtime="20210408 19:18:36.172"></status>
</kw>
<status status="PASS" starttime="20210408 19:18:35.815" endtime="20210408 19:18:36.172"></status>
</kw>
<status status="PASS" starttime="20210408 19:18:29.970" endtime="20210408 19:18:36.173"></status>
</kw>
<kw name="Close Facility Notebook and Navigator Windows" library="Facility_Notebook">
<doc>This keyword is used to close the Facility Notebook and Navigtor windows when a user tries to add another Facility to a Deal.
@author: rtarayao 07MAR2019 Initial create</doc>
<kw name="Mx LoanIQ Close Window" library="LoanIQ">
<doc>| Usage |
To close the specified window.</doc>
<arguments>
<arg>${LIQ_FacilityNotebook_Window}</arg>
</arguments>
<msg timestamp="20210408 19:18:36.412" level="INFO"> Window: JavaWindow("title:=Facility -.*","displayed:=1") is closed.</msg>
<status status="PASS" starttime="20210408 19:18:36.281" endtime="20210408 19:18:36.413"></status>
</kw>
<kw name="Mx LoanIQ Close Window" library="LoanIQ">
<doc>| Usage |
To close the specified window.</doc>
<arguments>
<arg>${LIQ_FacilityNavigator_Window}</arg>
</arguments>
<msg timestamp="20210408 19:18:37.215" level="INFO"> Window: JavaWindow("title:=Facility Navigator -.*") is closed.</msg>
<status status="PASS" starttime="20210408 19:18:36.499" endtime="20210408 19:18:37.215"></status>
</kw>
<status status="PASS" starttime="20210408 19:18:36.228" endtime="20210408 19:18:37.216"></status>
</kw>
<status status="PASS" starttime="20210408 19:18:29.811" endtime="20210408 19:18:37.216"></status>
</kw>
<msg timestamp="20210408 19:18:37.216" level="INFO">Mx Execute Template With Multiple Data keyword passed for all the data</msg>
<status status="PASS" starttime="20210408 19:18:29.788" endtime="20210408 19:18:37.216"></status>
</kw>
<kw name="Mx Execute Template With Multiple Data" library="GenericLib">
<doc>| Usage |
 This keyword is used to run template with multiple data.</doc>
<arguments>
<arg>Proceed with Deal Primaries Setup</arg>
<arg>${ExcelPath}</arg>
<arg>${Primaries_1}</arg>
<arg>SYND02_PrimaryAllocation</arg>
</arguments>
<kw name="Proceed with Deal Primaries Setup" library="SYND02_PrimaryAllocation">
<doc>This keyword is used to Proceed with Deal Primaries Setup
@author: hstone 27NOV2020 - Initial create</doc>
<arguments>
<arg>OrderedDict([('rowid', '1'), ('Test_Case', 'ARR_Scenario3'), ('Primary_IsHostBank', 'YES'), ('Primary_Lender', 'BNS CANADA CORPORATE BANKING'), ('Primary_LenderLocation', 'Toronto, Canada'), ('Primary_RiskBook', 'US_Automotive'), ('Primaries_TransactionType', 'Origination'), ('Primary_PctOfDeal', '60'), ('Primary_BuySellPrice', '100'), ('Primary_Comment', 'ARR Scenario 1 Primaries 1'), ('Primary_Contact', 'Pinkman,  Jesse'), ('Primary_SGAlias1', 'LENDING'), ('Primary_SGMembers', 'Canada Corporate Banking,  BNS'), ('Primary_SGAlias', 'BC'), ('Primary_AddPortfolioExpireDate', '1095'), ('Primary_Portfolio', 'Hold for Investment'), ('Primary_PortfolioBranch', 'BNS Canada Corporate Banking'), ('Primary_Allocation', '180,000,000.00'), ('Primary_ExpenseCode', '0394703947'), ('Primary_ExpenseCodeDescription', 'US_Automotive'), ('FundReceiverDetailCustomer', 'BNS CANADA CORPORATE BANKING'), ('Primary_AdjustmentSettings', 'Present'), ('Primary_DateAdjustment', '30')])</arg>
</arguments>
<kw name="Report Sub Header" library="ReportMaker_Keywords">
<doc>This keyword is used to add given argument as sub header in test execution document.
@author: cmcordero 15MAR2021 - initial create</doc>
<arguments>
<arg>Proceed with Deal Primaries Setup</arg>
</arguments>
<kw name="Set Report Sub Header" library="ReportMaker">
<arguments>
<arg>${SubHeader}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:18:37.438" endtime="20210408 19:18:37.440"></status>
</kw>
<status status="PASS" starttime="20210408 19:18:37.382" endtime="20210408 19:18:37.440"></status>
</kw>
<kw name="Read Data From Excel" library="GenericKeywords">
<doc>This keyword will be used for dynamically reading of Excel File supported by Python 3
@author: ritragel 25OCT2019 Initial Create
@update: hstone 16MAR2020 Code Optimization: Replaced Keyw</doc>
<arguments>
<arg>CRED01_DealSetup</arg>
<arg>Deal_Name</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${Deal_Name}</var>
</assign>
<kw name="Open Excel Document" library="ExcelLibrary">
<doc>Opens xlsx document file.</doc>
<arguments>
<arg>${sFilePath}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20210408 19:18:37.555" endtime="20210408 19:18:37.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>(Read Data From Excel) sTestCaseColReference = '${sTestCaseColReference}'</arg>
</arguments>
<msg timestamp="20210408 19:18:37.649" level="INFO">(Read Data From Excel) sTestCaseColReference = 'rowid'</msg>
<status status="PASS" starttime="20210408 19:18:37.648" endtime="20210408 19:18:37.649"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${readAllData}'=='Y'</arg>
<arg>Read Data From All Column Rows</arg>
<arg>${sSheetName}</arg>
<arg>${sColumnName}</arg>
<arg>ELSE IF</arg>
<arg>'${readAllData}'=='N'</arg>
<arg>Read Data From Cell</arg>
<arg>${sSheetName}</arg>
<arg>${sColumnName}</arg>
<arg>${rowid}</arg>
<arg>${bTestCaseColumn}</arg>
<arg>${sTestCaseColReference}</arg>
</arguments>
<assign>
<var>${sData}</var>
</assign>
<kw name="Read Data From Cell" library="GenericKeywords">
<doc>This keyword will be used for reading data from single excel cell.
@author: hstone 16MAR2020 Initial Create</doc>
<arguments>
<arg>${sSheetName}</arg>
<arg>${sColumnName}</arg>
<arg>${rowid}</arg>
<arg>${bTestCaseColumn}</arg>
<arg>${sTestCaseColReference}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>(Read Data From Cell) sTestCaseColReference = '${sTestCaseColReference}'</arg>
</arguments>
<msg timestamp="20210408 19:18:37.876" level="INFO">(Read Data From Cell) sTestCaseColReference = 'rowid'</msg>
<status status="PASS" starttime="20210408 19:18:37.875" endtime="20210408 19:18:37.876"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${sTestCaseColReference}'=='None'</arg>
<arg>Get Column Header Index</arg>
<arg>${sSheetName}</arg>
<arg>${sColumnName}</arg>
<arg>${bTestCaseColumn}</arg>
<arg>ELSE</arg>
<arg>Get Column Header Index</arg>
<arg>${sSheetName}</arg>
<arg>${sColumnName}</arg>
<arg>${bTestCaseColumn}</arg>
<arg>${sTestCaseColReference}</arg>
</arguments>
<assign>
<var>${TestCaseHeader_Index}</var>
<var>${ColumnHeader_Index}</var>
</assign>
<kw name="Get Column Header Index" library="GenericKeywords">
<doc>This keyword is used to get the Column Header Index of Test_Case and given Column Name at the Excel Sheet.
@author: hstone 19FEB2020 Initial Create</doc>
<arguments>
<arg>${sSheetName}</arg>
<arg>${sColumnName}</arg>
<arg>${bTestCaseColumn}</arg>
<arg>${sTestCaseColReference}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>(Get Column Header Index) sTestCaseColReference = '${sTestCaseColReference}'</arg>
</arguments>
<msg timestamp="20210408 19:18:38.002" level="INFO">(Get Column Header Index) sTestCaseColReference = 'rowid'</msg>
<status status="PASS" starttime="20210408 19:18:38.001" endtime="20210408 19:18:38.002"></status>
</kw>
<kw name="Read Excel Row" library="ExcelLibrary">
<doc>Returns content of a row from the current sheet of the document.</doc>
<arguments>
<arg>1</arg>
<arg>sheet_name=${sSheetName}</arg>
</arguments>
<assign>
<var>${DataColumn_List}</var>
</assign>
<msg timestamp="20210408 19:18:38.061" level="INFO">${DataColumn_List} = ['rowid', 'Test_Case', 'Deal_NamePrefix', 'Deal_AliasPrefix', 'Deal_Name', 'Deal_Alias', 'Deal_EffectiveDate', 'Deal_AgreementDate', 'Deal_AdjustmentSettings', 'Deal_AgreementDateAdjustment', 'Deal_Ef...</msg>
<status status="PASS" starttime="20210408 19:18:38.060" endtime="20210408 19:18:38.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Data Set Sheet Name: '${sSheetName}'</arg>
</arguments>
<msg timestamp="20210408 19:18:38.113" level="INFO">Data Set Sheet Name: 'CRED01_DealSetup'</msg>
<status status="PASS" starttime="20210408 19:18:38.112" endtime="20210408 19:18:38.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Data Set Sheet Column Names: '${DataColumn_List}'</arg>
</arguments>
<msg timestamp="20210408 19:18:38.170" level="INFO">Data Set Sheet Column Names: '['rowid', 'Test_Case', 'Deal_NamePrefix', 'Deal_AliasPrefix', 'Deal_Name', 'Deal_Alias', 'Deal_EffectiveDate', 'Deal_AgreementDate', 'Deal_AdjustmentSettings', 'Deal_AgreementDateAdjustment', 'Deal_EffectiveDateAdjustment', 'Deal_Currency', 'Deal_DepartmentCode', 'Deal_Department', 'Deal_SalesGroup', 'Deal_AternateID', 'Deal_ANSIID', 'Deal_IsSoleLender', 'Deal_ClassificationCode', 'Deal_ClassificationDesc', 'Deal_AdminAgent', 'Deal_AdminAgentLocation', 'DealAdminAgent_SGAlias', 'DealAdminAgent_PreferredRI', 'DealAdminAgent_ServicingGroup', 'Deal_ProposedCmt', 'Deal_EarlyDiscussion', 'Deal_ExpenseCode', 'Deal_HolidayCalendarRemove', 'Deal_HolidayCalendarAdd', 'Deal_IsPricingOptionARR', 'Deal_PricingOption_CCY', 'Deal_PricingOption', 'PricingOption_IsARR', 'PricingOption_InitialFractionRate', 'PricingOption_RoundingDecimal', 'PricingOption_NonBusinessDayRule', 'PricingOption_BillNoOfDays', 'PricingOption_MatrixChangeAppMthd', 'PricingOption_RateChangeAppMthd', 'PricingOption_RACInitialFractionRate', 'PricingOption_RACRoundingDecimal', 'PricingOption_RACRoundingMethod', 'PricingOption_PercentOfRateFormulaUsage', 'PricingOption_RepricingNonBusinessDayRule', 'PricingOption_FeeOnLenderShareFunding', 'PricingOption_InterestDueUponPrincipalPayment', 'PricingOption_InterestDueUponRepricing', 'PricingOption_ReferenceBanksApply', 'PricingOption_IntentNoticeDaysInAdvance', 'PricingOption_IntentNoticeTime', 'PricingOption_12HrPeriodOption', 'PricingOption_MaximumDrawAmount', 'PricingOption_MinimumDrawAmount', 'PricingOption_MinimumPaymentAmount', 'PricingOption_MinimumAmountMultiples', 'PricingOption_BillBorrower', 'PricingOption_ARRObservationPeriod', 'PricingOption_LookbackDays', 'PricingOption_LockoutDays', 'PricingOption_RateBasis', 'PricingOption_CalculationMethod']'</msg>
<status status="PASS" starttime="20210408 19:18:38.169" endtime="20210408 19:18:38.170"></status>
</kw>
<kw name="Get Index From List" library="Collections">
<doc>Returns the index of the first occurrence of the ``value`` on the list.</doc>
<arguments>
<arg>${DataColumn_List}</arg>
<arg>${sTestCaseColReference}</arg>
</arguments>
<assign>
<var>${TestCaseHeaderName_Index}</var>
</assign>
<msg timestamp="20210408 19:18:38.228" level="INFO">${TestCaseHeaderName_Index} = 0</msg>
<status status="PASS" starttime="20210408 19:18:38.228" endtime="20210408 19:18:38.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Fetched Test Case Column Index : '${TestCaseHeaderName_Index}'</arg>
</arguments>
<msg timestamp="20210408 19:18:38.283" level="INFO">Fetched Test Case Column Index : '0'</msg>
<status status="PASS" starttime="20210408 19:18:38.283" endtime="20210408 19:18:38.283"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${TestCaseHeaderName_Index}&lt;0 and '${bTestCaseColumn}'=='False'</arg>
<arg>Set Variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>Evaluate</arg>
<arg>${TestCaseHeaderName_Index}+1</arg>
</arguments>
<assign>
<var>${TestCaseHeaderName_Index}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${TestCaseHeaderName_Index}+1</arg>
</arguments>
<status status="PASS" starttime="20210408 19:18:38.343" endtime="20210408 19:18:38.344"></status>
</kw>
<msg timestamp="20210408 19:18:38.344" level="INFO">${TestCaseHeaderName_Index} = 1</msg>
<status status="PASS" starttime="20210408 19:18:38.342" endtime="20210408 19:18:38.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Evaluated Test Case Column Index : '${TestCaseHeaderName_Index}'</arg>
</arguments>
<msg timestamp="20210408 19:18:38.397" level="INFO">Evaluated Test Case Column Index : '1'</msg>
<status status="PASS" starttime="20210408 19:18:38.397" endtime="20210408 19:18:38.398"></status>
</kw>
<kw name="Get Index From List" library="Collections">
<doc>Returns the index of the first occurrence of the ``value`` on the list.</doc>
<arguments>
<arg>${DataColumn_List}</arg>
<arg>${sColumnName}</arg>
</arguments>
<assign>
<var>${ColumnName_Index}</var>
</assign>
<msg timestamp="20210408 19:18:38.451" level="INFO">${ColumnName_Index} = 4</msg>
<status status="PASS" starttime="20210408 19:18:38.450" endtime="20210408 19:18:38.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Column Name Index : '${ColumnName_Index}'</arg>
</arguments>
<msg timestamp="20210408 19:18:38.504" level="INFO">Column Name Index : '4'</msg>
<status status="PASS" starttime="20210408 19:18:38.503" endtime="20210408 19:18:38.504"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${ColumnName_Index}&lt;0</arg>
<arg>Fail</arg>
<arg>'${sColumnName}' is not found at '${DataColumn_List}' Data Column Values.</arg>
</arguments>
<status status="PASS" starttime="20210408 19:18:38.555" endtime="20210408 19:18:38.556"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ColumnName_Index}+1</arg>
</arguments>
<assign>
<var>${ColumnName_Index}</var>
</assign>
<msg timestamp="20210408 19:18:38.610" level="INFO">${ColumnName_Index} = 5</msg>
<status status="PASS" starttime="20210408 19:18:38.609" endtime="20210408 19:18:38.610"></status>
</kw>
<status status="PASS" starttime="20210408 19:18:37.935" endtime="20210408 19:18:38.610"></status>
</kw>
<msg timestamp="20210408 19:18:38.611" level="INFO">${TestCaseHeader_Index} = 1</msg>
<msg timestamp="20210408 19:18:38.611" level="INFO">${ColumnHeader_Index} = 5</msg>
<status status="PASS" starttime="20210408 19:18:37.931" endtime="20210408 19:18:38.611"></status>
</kw>
<kw name="Get Index of a Row Value using a Reference Header Index" library="GenericKeywords">
<doc>This keyword is used to get index of a row value using a reference header index
@author: hstone 19FEB2020 Initial Create</doc>
<arguments>
<arg>${sSheetName}</arg>
<arg>${rowid}</arg>
<arg>${TestCaseHeader_Index}</arg>
</arguments>
<assign>
<var>${RowId_Index}</var>
</assign>
<kw name="Read Excel Column" library="ExcelLibrary">
<doc>Returns content of a column from the current sheet of the document.</doc>
<arguments>
<arg>${sReferenceHeader_Index}</arg>
<arg>sheet_name=${sSheetName}</arg>
</arguments>
<assign>
<var>${DataRow_List}</var>
</assign>
<msg timestamp="20210408 19:18:38.716" level="INFO">${DataRow_List} = ['rowid', '1', '2']</msg>
<status status="PASS" starttime="20210408 19:18:38.715" endtime="20210408 19:18:38.716"></status>
</kw>
<kw name="Read Excel Column" library="ExcelLibrary">
<doc>Returns content of a column from the current sheet of the document.</doc>
<arguments>
<arg>1</arg>
<arg>sheet_name=${sSheetName}</arg>
</arguments>
<assign>
<var>${DataRowId_List}</var>
</assign>
<msg timestamp="20210408 19:18:38.768" level="INFO">${DataRowId_List} = ['rowid', '1', '2']</msg>
<status status="PASS" starttime="20210408 19:18:38.767" endtime="20210408 19:18:38.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Row Names Under Reference Header with Index '${sReferenceHeader_Index}' : '${DataRow_List}'</arg>
</arguments>
<msg timestamp="20210408 19:18:38.821" level="INFO">Row Names Under Reference Header with Index '1' : '['rowid', '1', '2']'</msg>
<status status="PASS" starttime="20210408 19:18:38.820" endtime="20210408 19:18:38.821"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>List Should Contain Value</arg>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<assign>
<var>${IsPresentInList}</var>
</assign>
<kw name="List Should Contain Value" library="Collections">
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<arguments>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:18:38.873" endtime="20210408 19:18:38.874"></status>
</kw>
<msg timestamp="20210408 19:18:38.874" level="INFO">${IsPresentInList} = True</msg>
<status status="PASS" starttime="20210408 19:18:38.872" endtime="20210408 19:18:38.874"></status>
</kw>
<kw name="Check if Row Value Exists on List as Int" library="GenericKeywords">
<doc>This keyword is used to check if value exists on a list as a string
@author: hstone 13APR2020 Initial Create</doc>
<arguments>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<assign>
<var>${IsPresentInList_As_Int}</var>
<var>${RowValue_Int}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${False}</arg>
</arguments>
<assign>
<var>${IsPresentInList}</var>
</assign>
<msg timestamp="20210408 19:18:38.978" level="INFO">${IsPresentInList} = False</msg>
<status status="PASS" starttime="20210408 19:18:38.978" endtime="20210408 19:18:38.978"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Convert To Integer</arg>
<arg>${sValue}</arg>
</arguments>
<assign>
<var>${IsIntConvPassed}</var>
</assign>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${sValue}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:18:39.032" endtime="20210408 19:18:39.032"></status>
</kw>
<msg timestamp="20210408 19:18:39.032" level="INFO">${IsIntConvPassed} = True</msg>
<status status="PASS" starttime="20210408 19:18:39.030" endtime="20210408 19:18:39.032"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${IsIntConvPassed}==${True}</arg>
<arg>Check if a String Exists as Int on a List</arg>
<arg>${lTarget_List}</arg>
<arg>${sValue}</arg>
</arguments>
<assign>
<var>${IsPresentInList}</var>
<var>${RowValue_Int}</var>
</assign>
<kw name="Check if a String Exists as Int on a List" library="GenericKeywords">
<doc>This keyword is used to check if a string exists as an integer on a list.
@author: hstone 13APR2020 Initial Create</doc>
<arguments>
<arg>${lTarget_List}</arg>
<arg>${sValue}</arg>
</arguments>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${sValue}</arg>
</arguments>
<assign>
<var>${Value_Int}</var>
</assign>
<msg timestamp="20210408 19:18:39.137" level="INFO">${Value_Int} = 1</msg>
<status status="PASS" starttime="20210408 19:18:39.137" endtime="20210408 19:18:39.137"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>List Should Contain Value</arg>
<arg>${lTarget_List}</arg>
<arg>${Value_Int}</arg>
</arguments>
<assign>
<var>${IsPresentInList}</var>
</assign>
<kw name="List Should Contain Value" library="Collections">
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<arguments>
<arg>${lTarget_List}</arg>
<arg>${Value_Int}</arg>
</arguments>
<msg timestamp="20210408 19:18:39.193" level="FAIL">[ rowid | 1 | 2 ] does not contain value '1'.</msg>
<status status="FAIL" starttime="20210408 19:18:39.193" endtime="20210408 19:18:39.246"></status>
</kw>
<msg timestamp="20210408 19:18:39.246" level="INFO">${IsPresentInList} = False</msg>
<status status="PASS" starttime="20210408 19:18:39.191" endtime="20210408 19:18:39.247"></status>
</kw>
<status status="PASS" starttime="20210408 19:18:39.086" endtime="20210408 19:18:39.247"></status>
</kw>
<msg timestamp="20210408 19:18:39.247" level="INFO">${IsPresentInList} = False</msg>
<msg timestamp="20210408 19:18:39.247" level="INFO">${RowValue_Int} = 1</msg>
<status status="PASS" starttime="20210408 19:18:39.084" endtime="20210408 19:18:39.247"></status>
</kw>
<msg timestamp="20210408 19:18:39.248" level="INFO">${IsPresentInList_As_Int} = False</msg>
<msg timestamp="20210408 19:18:39.248" level="INFO">${RowValue_Int} = 1</msg>
<status status="PASS" starttime="20210408 19:18:38.926" endtime="20210408 19:18:39.248"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${IsPresentInList}==${True}</arg>
<arg>Get Index From List</arg>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
<arg>ELSE IF</arg>
<arg>${IsPresentInList_As_Int}==${True}</arg>
<arg>Get Index From List</arg>
<arg>${DataRow_List}</arg>
<arg>${RowValue_Int}</arg>
<arg>ELSE</arg>
<arg>Get Index From List</arg>
<arg>${DataRowId_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<assign>
<var>${DataRowName_Index}</var>
</assign>
<kw name="Get Index From List" library="Collections">
<doc>Returns the index of the first occurrence of the ``value`` on the list.</doc>
<arguments>
<arg>${DataRow_List}</arg>
<arg>${sRowValue}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:18:39.301" endtime="20210408 19:18:39.301"></status>
</kw>
<msg timestamp="20210408 19:18:39.301" level="INFO">${DataRowName_Index} = 1</msg>
<status status="PASS" starttime="20210408 19:18:39.299" endtime="20210408 19:18:39.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Row Name Index for '${sRowValue}' : '${DataRowName_Index}'</arg>
</arguments>
<msg timestamp="20210408 19:18:39.352" level="INFO">Row Name Index for '1' : '1'</msg>
<status status="PASS" starttime="20210408 19:18:39.351" endtime="20210408 19:18:39.352"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${DataRowName_Index}&lt;0</arg>
<arg>Fail</arg>
<arg>'${sRowValue}' is not found at '${DataRow_List}' Data Row Values.</arg>
</arguments>
<status status="PASS" starttime="20210408 19:18:39.403" endtime="20210408 19:18:39.404"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${DataRowName_Index}+1</arg>
</arguments>
<assign>
<var>${DataRowValue_Index}</var>
</assign>
<msg timestamp="20210408 19:18:39.456" level="INFO">${DataRowValue_Index} = 2</msg>
<status status="PASS" starttime="20210408 19:18:39.456" endtime="20210408 19:18:39.457"></status>
</kw>
<msg timestamp="20210408 19:18:39.457" level="INFO">${RowId_Index} = 2</msg>
<status status="PASS" starttime="20210408 19:18:38.662" endtime="20210408 19:18:39.457"></status>
</kw>
<kw name="Read Excel Cell" library="ExcelLibrary">
<doc>Returns content of a cell.</doc>
<arguments>
<arg>${RowId_Index}</arg>
<arg>${ColumnHeader_Index}</arg>
<arg>${sSheetName}</arg>
</arguments>
<assign>
<var>${Cell_Data}</var>
</assign>
<msg timestamp="20210408 19:18:39.508" level="INFO">${Cell_Data} = ARR_LIBORSC308042021190438PNT</msg>
<status status="PASS" starttime="20210408 19:18:39.508" endtime="20210408 19:18:39.508"></status>
</kw>
<status status="PASS" starttime="20210408 19:18:37.822" endtime="20210408 19:18:39.508"></status>
</kw>
<msg timestamp="20210408 19:18:39.508" level="INFO">${sData} = ARR_LIBORSC308042021190438PNT</msg>
<status status="PASS" starttime="20210408 19:18:37.820" endtime="20210408 19:18:39.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Excel Date Read from Excel : '${sData}'</arg>
</arguments>
<msg timestamp="20210408 19:18:39.563" level="INFO">Excel Date Read from Excel : 'ARR_LIBORSC308042021190438PNT'</msg>
<status status="PASS" starttime="20210408 19:18:39.562" endtime="20210408 19:18:39.563"></status>
</kw>
<kw name="Close Current Excel Document" library="ExcelLibrary">
<doc>Closes current document.</doc>
<status status="PASS" starttime="20210408 19:18:39.615" endtime="20210408 19:18:39.616"></status>
</kw>
<msg timestamp="20210408 19:18:39.616" level="INFO">${Deal_Name} = ARR_LIBORSC308042021190438PNT</msg>
<status status="PASS" starttime="20210408 19:18:37.498" endtime="20210408 19:18:39.616"></status>
</kw>
<kw name="Add Lender and Location" library="Circle_Notebook">
<doc>This keyword adds a Primary Lender to the Deal Notebook via Distribution &gt; Primaries
@author: bernchua DDMMMYYYY - Added condition to select a Lender Location if combox box is blank.
- Removed the setting of transaction type from the conditions.
- Removed 1 line of writing to Excel with an undeclared variable 
@update: mgaling DDMMMYYYY - Updated JavaWindow("title:=Deal Notebook -.*","displayed:=1") (does not exist in Deal Locators) into JavaWindow("title:=Deal Notebook -.*","displayed:=1")
@update: ritragel 30APR2019 - Removed verification. Verification is not really necessary
@update: bernchua 21AUG2019 - Created new keyword for setting Risk Book, that returns a Expense Code Description
- Added returning of ExpCode Description to be used in Portfolio Allocation
- Updated RiskBook variable name
@update: amansuet 23APR2020 - Updated to align with automation standards and added keyword pre processing
@update: dahijara 01JUL2020 - added keyword processing.
@update: dahijara 08JUL2020 - Added optional argument for runtime variable
@update: jloretiz 10JUL2020 - Need to Uncheck Ticket Mode, by default it is checked
@update: hstone 23OCT2020 - Fixed Argument Variables used on the keyword processing
@update: jloretiz 11FEB2021 - added condition for empty data</doc>
<arguments>
<arg>${Deal_Name}</arg>
<arg>&amp;{ExcelPath}[Primary_Lender]</arg>
<arg>&amp;{ExcelPath}[Primary_LenderLocation]</arg>
<arg>&amp;{ExcelPath}[Primary_RiskBook]</arg>
<arg>&amp;{ExcelPath}[Primaries_TransactionType]</arg>
</arguments>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sDeal_Name}</arg>
</arguments>
<assign>
<var>${Deal_Name}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:18:39.883" endtime="20210408 19:18:39.883"></status>
</kw>
<msg timestamp="20210408 19:18:39.883" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:18:39.880" endtime="20210408 19:18:39.883"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:18:40.094" level="INFO">${List_Argument_Excel_Value} = ['ARR_LIBORSC308042021190438PNT']</msg>
<status status="PASS" starttime="20210408 19:18:40.094" endtime="20210408 19:18:40.094"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:18:40.145" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:18:40.145" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:18:40.144" endtime="20210408 19:18:40.145"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:18:40.197" level="INFO">${Arg_User_Input} = ARR_LIBORSC308042021190438PNT</msg>
<status status="PASS" starttime="20210408 19:18:40.196" endtime="20210408 19:18:40.197"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:18:40.254" level="INFO">${Arg_User_Input} = ARR_LIBORSC308042021190438PNT</msg>
<status status="PASS" starttime="20210408 19:18:40.253" endtime="20210408 19:18:40.254"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:18:40.305" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:18:40.304" endtime="20210408 19:18:40.305"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:18:40.361" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:18:40.360" endtime="20210408 19:18:40.361"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:18:40.415" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:18:40.414" endtime="20210408 19:18:40.415"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:18:40.469" endtime="20210408 19:18:40.469"></status>
</kw>
<msg timestamp="20210408 19:18:40.469" level="INFO">${Extracted_Argument_Value} = ARR_LIBORSC308042021190438PNT</msg>
<status status="PASS" starttime="20210408 19:18:40.467" endtime="20210408 19:18:40.470"></status>
</kw>
<status status="PASS" starttime="20210408 19:18:40.040" endtime="20210408 19:18:40.470"></status>
</kw>
<msg timestamp="20210408 19:18:40.470" level="INFO">${Extracted_Argument_Value} = ARR_LIBORSC308042021190438PNT</msg>
<status status="PASS" starttime="20210408 19:18:39.937" endtime="20210408 19:18:40.470"></status>
</kw>
<msg timestamp="20210408 19:18:40.470" level="INFO">${Deal_Name} = ARR_LIBORSC308042021190438PNT</msg>
<status status="PASS" starttime="20210408 19:18:39.827" endtime="20210408 19:18:40.470"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sLender_Name}</arg>
</arguments>
<assign>
<var>${Lender_Name}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:18:40.678" endtime="20210408 19:18:40.678"></status>
</kw>
<msg timestamp="20210408 19:18:40.678" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:18:40.676" endtime="20210408 19:18:40.678"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:18:40.994" level="INFO">${List_Argument_Excel_Value} = ['BNS CANADA CORPORATE BANKING']</msg>
<status status="PASS" starttime="20210408 19:18:40.994" endtime="20210408 19:18:40.995"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:18:41.046" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:18:41.046" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:18:41.045" endtime="20210408 19:18:41.046"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:18:41.099" level="INFO">${Arg_User_Input} = BNS CANADA CORPORATE BANKING</msg>
<status status="PASS" starttime="20210408 19:18:41.099" endtime="20210408 19:18:41.100"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:18:41.151" level="INFO">${Arg_User_Input} = BNS CANADA CORPORATE BANKING</msg>
<status status="PASS" starttime="20210408 19:18:41.150" endtime="20210408 19:18:41.151"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:18:41.203" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:18:41.202" endtime="20210408 19:18:41.203"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:18:41.256" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:18:41.255" endtime="20210408 19:18:41.256"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:18:41.307" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:18:41.306" endtime="20210408 19:18:41.309"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:18:41.363" endtime="20210408 19:18:41.363"></status>
</kw>
<msg timestamp="20210408 19:18:41.363" level="INFO">${Extracted_Argument_Value} = BNS CANADA CORPORATE BANKING</msg>
<status status="PASS" starttime="20210408 19:18:41.361" endtime="20210408 19:18:41.363"></status>
</kw>
<status status="PASS" starttime="20210408 19:18:40.831" endtime="20210408 19:18:41.363"></status>
</kw>
<msg timestamp="20210408 19:18:41.364" level="INFO">${Extracted_Argument_Value} = BNS CANADA CORPORATE BANKING</msg>
<status status="PASS" starttime="20210408 19:18:40.729" endtime="20210408 19:18:41.364"></status>
</kw>
<msg timestamp="20210408 19:18:41.364" level="INFO">${Lender_Name} = BNS CANADA CORPORATE BANKING</msg>
<status status="PASS" starttime="20210408 19:18:40.625" endtime="20210408 19:18:41.364"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sLenderLocation}</arg>
</arguments>
<assign>
<var>${LenderLocation}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:18:41.585" endtime="20210408 19:18:41.585"></status>
</kw>
<msg timestamp="20210408 19:18:41.586" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:18:41.584" endtime="20210408 19:18:41.586"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:18:41.790" level="INFO">${List_Argument_Excel_Value} = ['Toronto, Canada']</msg>
<status status="PASS" starttime="20210408 19:18:41.789" endtime="20210408 19:18:41.790"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:18:41.840" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:18:41.840" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:18:41.839" endtime="20210408 19:18:41.840"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:18:41.894" level="INFO">${Arg_User_Input} = TORONTO, CANADA</msg>
<status status="PASS" starttime="20210408 19:18:41.894" endtime="20210408 19:18:41.895"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:18:41.945" level="INFO">${Arg_User_Input} = TORONTO, CANADA</msg>
<status status="PASS" starttime="20210408 19:18:41.944" endtime="20210408 19:18:41.945"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:18:41.996" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:18:41.995" endtime="20210408 19:18:41.996"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:18:42.047" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:18:42.047" endtime="20210408 19:18:42.047"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:18:42.100" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:18:42.099" endtime="20210408 19:18:42.100"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:18:42.153" endtime="20210408 19:18:42.154"></status>
</kw>
<msg timestamp="20210408 19:18:42.154" level="INFO">${Extracted_Argument_Value} = Toronto, Canada</msg>
<status status="PASS" starttime="20210408 19:18:42.151" endtime="20210408 19:18:42.154"></status>
</kw>
<status status="PASS" starttime="20210408 19:18:41.737" endtime="20210408 19:18:42.155"></status>
</kw>
<msg timestamp="20210408 19:18:42.155" level="INFO">${Extracted_Argument_Value} = Toronto, Canada</msg>
<status status="PASS" starttime="20210408 19:18:41.637" endtime="20210408 19:18:42.155"></status>
</kw>
<msg timestamp="20210408 19:18:42.155" level="INFO">${LenderLocation} = Toronto, Canada</msg>
<status status="PASS" starttime="20210408 19:18:41.529" endtime="20210408 19:18:42.155"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sRiskBook_ExpenseCode}</arg>
</arguments>
<assign>
<var>${RiskBook_ExpenseCode}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:18:42.385" endtime="20210408 19:18:42.385"></status>
</kw>
<msg timestamp="20210408 19:18:42.385" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:18:42.383" endtime="20210408 19:18:42.385"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:18:42.598" level="INFO">${List_Argument_Excel_Value} = ['US_Automotive']</msg>
<status status="PASS" starttime="20210408 19:18:42.597" endtime="20210408 19:18:42.598"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:18:42.650" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:18:42.650" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:18:42.650" endtime="20210408 19:18:42.650"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:18:42.701" level="INFO">${Arg_User_Input} = US_AUTOMOTIVE</msg>
<status status="PASS" starttime="20210408 19:18:42.701" endtime="20210408 19:18:42.701"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:18:42.752" level="INFO">${Arg_User_Input} = US_AUTOMOTIVE</msg>
<status status="PASS" starttime="20210408 19:18:42.752" endtime="20210408 19:18:42.752"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:18:42.803" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:18:42.802" endtime="20210408 19:18:42.803"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:18:42.853" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:18:42.853" endtime="20210408 19:18:42.854"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:18:42.905" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:18:42.904" endtime="20210408 19:18:42.905"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:18:42.957" endtime="20210408 19:18:42.957"></status>
</kw>
<msg timestamp="20210408 19:18:42.957" level="INFO">${Extracted_Argument_Value} = US_Automotive</msg>
<status status="PASS" starttime="20210408 19:18:42.955" endtime="20210408 19:18:42.958"></status>
</kw>
<status status="PASS" starttime="20210408 19:18:42.533" endtime="20210408 19:18:42.958"></status>
</kw>
<msg timestamp="20210408 19:18:42.958" level="INFO">${Extracted_Argument_Value} = US_Automotive</msg>
<status status="PASS" starttime="20210408 19:18:42.436" endtime="20210408 19:18:42.958"></status>
</kw>
<msg timestamp="20210408 19:18:42.958" level="INFO">${RiskBook_ExpenseCode} = US_Automotive</msg>
<status status="PASS" starttime="20210408 19:18:42.332" endtime="20210408 19:18:42.958"></status>
</kw>
<kw name="Acquire Argument Value" library="GenericKeywords">
<doc>This keyword is used to acquire arguments value based on the 'sArgument_Excel_Value' input and return the extracted value.
@author: amansuet 31MAR2020 - initial create
@update: amansuet 14APR2020 - updated arguments on the updated keywords and optimize script
@update: amansuet 14APR2020 - added optional argument ${sArugment_Type} used in Set Runtime Execution Value only.
@update: hstone 04MAY2020 - Replaced Fail Statement with 'Set Variable ${sArgument_Excel_Value}' at Else Condition on 'Extract Argument Values' Block
@update: hstone 11MAY2020 - Added a condition for handling integer values and floats from the old framework</doc>
<arguments>
<arg>${sPrimaries_TransactionType}</arg>
</arguments>
<assign>
<var>${Primaries_TransactionType}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Split String</arg>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${SplitStringStatus}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>:</arg>
</arguments>
<status status="PASS" starttime="20210408 19:18:43.163" endtime="20210408 19:18:43.163"></status>
</kw>
<msg timestamp="20210408 19:18:43.163" level="INFO">${SplitStringStatus} = True</msg>
<status status="PASS" starttime="20210408 19:18:43.161" endtime="20210408 19:18:43.163"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${SplitStringStatus}==${True}</arg>
<arg>Extract Argument From String</arg>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Extract Argument From String" library="GenericKeywords">
<doc>This keyword is used to extract argument value from a string origin.
@author: hstone 31MAR2020 - initial create
@update: hstone 10JUN2020 - Added '${Arg_User_Input} Remove String ${Arg_User_Input} ''</doc>
<arguments>
<arg>${sArgument_Value}</arg>
<arg>${sArgument_Type}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${List_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:18:43.479" level="INFO">${List_Argument_Excel_Value} = ['Origination']</msg>
<status status="PASS" starttime="20210408 19:18:43.478" endtime="20210408 19:18:43.479"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${List_Argument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Length_Argument_Excel_Value}</var>
</assign>
<msg timestamp="20210408 19:18:43.530" level="INFO">Length is 1</msg>
<msg timestamp="20210408 19:18:43.530" level="INFO">${Length_Argument_Excel_Value} = 1</msg>
<status status="PASS" starttime="20210408 19:18:43.529" endtime="20210408 19:18:43.530"></status>
</kw>
<kw name="Convert To Uppercase" library="String">
<doc>Converts string to uppercase.</doc>
<arguments>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_USER_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:18:43.582" level="INFO">${Arg_User_Input} = ORIGINATION</msg>
<status status="PASS" starttime="20210408 19:18:43.581" endtime="20210408 19:18:43.582"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${Arg_User_Input}</arg>
<arg>'</arg>
</arguments>
<assign>
<var>${Arg_User_Input}</var>
</assign>
<msg timestamp="20210408 19:18:43.632" level="INFO">${Arg_User_Input} = ORIGINATION</msg>
<status status="PASS" starttime="20210408 19:18:43.632" endtime="20210408 19:18:43.632"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${RUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_PREFIX_INPUT}]</arg>
</arguments>
<assign>
<var>${Arg_Prefix_Input}</var>
</assign>
<msg timestamp="20210408 19:18:43.684" level="INFO">${Arg_Prefix_Input} = None</msg>
<status status="PASS" starttime="20210408 19:18:43.684" endtime="20210408 19:18:43.684"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_TestCase_Input}</var>
</assign>
<msg timestamp="20210408 19:18:43.736" level="INFO">${Variable_TestCase_Input} = None</msg>
<status status="PASS" starttime="20210408 19:18:43.735" endtime="20210408 19:18:43.736"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Length_Argument_Excel_Value}==3 and '${Arg_User_Input}'=='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>@{List_Argument_Excel_Value}[${ARGUMENT_SECOND_VARIABLE_INPUT}]</arg>
</arguments>
<assign>
<var>${Variable_Name_Input}</var>
</assign>
<msg timestamp="20210408 19:18:43.787" level="INFO">${Variable_Name_Input} = None</msg>
<status status="PASS" starttime="20210408 19:18:43.786" endtime="20210408 19:18:43.787"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Arg_User_Input}'=='${RUNTIME}' and '${sArgument_Type}'!='None'</arg>
<arg>Set Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Arg_Prefix_Input}</arg>
<arg>${sArgument_Type}</arg>
<arg>ELSE IF</arg>
<arg>'${Arg_User_Input}'=='${GETRUNTIME}' and '${sArgument_Type}'=='None'</arg>
<arg>Get Runtime Execution Value</arg>
<arg>${Length_Argument_Excel_Value}</arg>
<arg>${Variable_TestCase_Input}</arg>
<arg>${Variable_Name_Input}</arg>
<arg>ELSE IF</arg>
<arg>${Length_Argument_Excel_Value}==1 and '${Arg_User_Input}'!='${RUNTIME}' and '${Arg_User_Input}'!='${GETRUNTIME}'</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<assign>
<var>${Extracted_Argument_Value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${sArgument_Excel_Value}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:18:43.841" endtime="20210408 19:18:43.841"></status>
</kw>
<msg timestamp="20210408 19:18:43.842" level="INFO">${Extracted_Argument_Value} = Origination</msg>
<status status="PASS" starttime="20210408 19:18:43.839" endtime="20210408 19:18:43.842"></status>
</kw>
<status status="PASS" starttime="20210408 19:18:43.319" endtime="20210408 19:18:43.842"></status>
</kw>
<msg timestamp="20210408 19:18:43.842" level="INFO">${Extracted_Argument_Value} = Origination</msg>
<status status="PASS" starttime="20210408 19:18:43.213" endtime="20210408 19:18:43.842"></status>
</kw>
<msg timestamp="20210408 19:18:43.843" level="INFO">${Primaries_TransactionType} = Origination</msg>
<status status="PASS" starttime="20210408 19:18:43.110" endtime="20210408 19:18:43.843"></status>
</kw>
<kw name="Mx LoanIQ Activate Window" library="LoanIQ">
<doc>| Usage |
To activate existing window if present.</doc>
<arguments>
<arg>${LIQ_DealNotebook_Window}</arg>
</arguments>
<msg timestamp="20210408 19:18:43.981" level="INFO">Window : JavaWindow("title:=Deal Notebook -.*","displayed:=1") is activated</msg>
<status status="PASS" starttime="20210408 19:18:43.892" endtime="20210408 19:18:43.981"></status>
</kw>
<kw name="Mx LoanIQ Click Element If Present" library="LoanIQ">
<doc>| Usage |
Click on element identified by `locator` only if that element is present.
It passes if the element is not present.</doc>
<arguments>
<arg>${LIQ_InquiryMode_Button}</arg>
</arguments>
<msg timestamp="20210408 19:18:52.439" level="INFO">JavaWindow("title:=Deal.*").JavaButton("attached text:=Notebook in Inquiry Mode.*"): is clicked, or skipped if not present.</msg>
<status status="PASS" starttime="20210408 19:18:44.030" endtime="20210408 19:18:52.439"></status>
</kw>
<kw name="Mx LoanIQ Click Element If Present" library="LoanIQ">
<doc>| Usage |
Click on element identified by `locator` only if that element is present.
It passes if the element is not present.</doc>
<arguments>
<arg>${LIQ_Information_OK_Button}</arg>
</arguments>
<msg timestamp="20210408 19:18:57.637" level="INFO">JavaWindow("title:=Informational Message.*","displayed:=1").JavaButton("label:=OK"): is clicked, or skipped if not present.</msg>
<status status="PASS" starttime="20210408 19:18:52.492" endtime="20210408 19:18:57.638"></status>
</kw>
<kw name="Mx LoanIQ Select" library="LoanIQ">
<doc>| Usage |
Used to select the element.</doc>
<arguments>
<arg>${LIQ_DealNotebook_DistributionPrimaries_Menu}</arg>
</arguments>
<msg timestamp="20210408 19:18:58.210" level="INFO">JavaWindow("title:=Deal Notebook.*").JavaMenu("label:=Distribution").JavaMenu("label:=Primaries...") is selected with data: NONE</msg>
<status status="PASS" starttime="20210408 19:18:57.706" endtime="20210408 19:18:58.210"></status>
</kw>
<kw name="Mx LoanIQ Activate Window" library="LoanIQ">
<doc>| Usage |
To activate existing window if present.</doc>
<arguments>
<arg>${LIQ_PrimariesList_Window}</arg>
</arguments>
<msg timestamp="20210408 19:19:03.447" level="INFO">Window : JavaWindow("title:=Primaries List .*") is activated</msg>
<status status="PASS" starttime="20210408 19:18:58.274" endtime="20210408 19:19:03.447"></status>
</kw>
<kw name="Mx LoanIQ Click" library="LoanIQ">
<doc>| Usage |
 Click on element identified by `locator`.</doc>
<arguments>
<arg>${LIQ_PrimariesList_AddButton}</arg>
</arguments>
<msg timestamp="20210408 19:19:51.571" level="INFO" html="yes">&lt;a href="screenshot_38.jpg"&gt;&lt;img src="screenshot_38.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20210408 19:19:51.572" level="INFO">Keyword Details-------------------------------------------------
Action = CLICK
Input = None
Object = JavaWindow("title:=Primaries List.*").JavaButton("attached text:=Add")
Verification Data = None</msg>
<msg timestamp="20210408 19:19:51.573" level="FAIL">Error Number: -2147220990 Error Description: Cannot find the "[ JavaButton ]" object's parent "[ JavaWindow ]" (class JavaWindow). Verify that parent properties match an object currently displayed in your application.. Retried for:  1 times. </msg>
<status status="FAIL" starttime="20210408 19:19:03.501" endtime="20210408 19:19:51.643"></status>
</kw>
<status status="FAIL" starttime="20210408 19:18:39.668" endtime="20210408 19:19:51.792"></status>
</kw>
<status status="FAIL" starttime="20210408 19:18:37.315" endtime="20210408 19:19:51.953"></status>
</kw>
<msg timestamp="20210408 19:19:51.964" level="FAIL">Mx Execute Template With Multiple Data keyword failed for some data</msg>
<status status="FAIL" starttime="20210408 19:18:37.286" endtime="20210408 19:19:52.046"></status>
</kw>
<kw name="Handle Teardown" library="ReportMaker_Keywords" type="teardown">
<doc>This keyword is used to save the test execution document and concatenate test result to filename.
@author: cmcordero 15MAR2021 - initial create</doc>
<kw name="Save Document" library="ReportMaker">
<arguments>
<arg>${getFilePath}\\</arg>
<arg>${TESTNAME}_${TEST STATUS}</arg>
</arguments>
<status status="PASS" starttime="20210408 19:19:52.153" endtime="20210408 19:19:52.294"></status>
</kw>
<status status="PASS" starttime="20210408 19:19:52.101" endtime="20210408 19:19:52.295"></status>
</kw>
<doc>This test case validates ARR Interest Pricing Option at Facility Level - Term.
AAR Parameters should not be overridable</doc>
<tags>
<tag>ARR Deal Setup - CRED01</tag>
<tag>SC03_TC02</tag>
</tags>
<status status="FAIL" starttime="20210408 19:11:32.438" endtime="20210408 19:19:52.295" critical="yes">Mx Execute Template With Multiple Data keyword failed for some data</status>
</test>
<status status="FAIL" starttime="20210408 19:04:27.645" endtime="20210408 19:19:52.297"></status>
</suite>
<status status="FAIL" starttime="20210408 19:04:27.642" endtime="20210408 19:19:52.301"></status>
</suite>
<status status="FAIL" starttime="20210408 19:04:27.638" endtime="20210408 19:19:52.304"></status>
</suite>
<status status="FAIL" starttime="20210408 19:04:27.634" endtime="20210408 19:19:52.306"></status>
</suite>
<status status="FAIL" starttime="20210408 19:04:27.611" endtime="20210408 19:19:52.308"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="1">Critical Tests</stat>
<stat pass="1" fail="1">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="1">ARR Deal Setup - CRED01</stat>
<stat pass="1" fail="0">SC03_TC01</stat>
<stat pass="0" fail="1">SC03_TC02</stat>
</tag>
<suite>
<stat pass="1" fail="1" id="s1" name="Transform Arr">Transform Arr</stat>
<stat pass="1" fail="1" id="s1-s1" name="TestSuite">Transform Arr.TestSuite</stat>
<stat pass="1" fail="1" id="s1-s1-s1" name="01 EndToEnd">Transform Arr.TestSuite.01 EndToEnd</stat>
<stat pass="1" fail="1" id="s1-s1-s1-s1" name="ARR">Transform Arr.TestSuite.01 EndToEnd.ARR</stat>
<stat pass="1" fail="1" id="s1-s1-s1-s1-s1" name="SC03 ARR LiborConversion">Transform Arr.TestSuite.01 EndToEnd.ARR.SC03 ARR LiborConversion</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
